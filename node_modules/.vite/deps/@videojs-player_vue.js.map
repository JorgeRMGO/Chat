{
  "version": 3,
  "sources": ["../../global/window.js", "browser-external:min-document", "../../global/document.js", "../../keycode/index.js", "../../safe-json-parse/tuple.js", "../../@babel/runtime/helpers/extends.js", "../../is-function/index.js", "../../@videojs/xhr/lib/http-handler.js", "../../@videojs/xhr/lib/index.js", "../../videojs-vtt.js/lib/vtt.js", "../../videojs-vtt.js/lib/vttcue.js", "../../videojs-vtt.js/lib/vttregion.js", "../../videojs-vtt.js/lib/browser-index.js", "../../url-toolkit/src/url-toolkit.js", "../../@xmldom/xmldom/lib/conventions.js", "../../@xmldom/xmldom/lib/dom.js", "../../@xmldom/xmldom/lib/entities.js", "../../@xmldom/xmldom/lib/sax.js", "../../@xmldom/xmldom/lib/dom-parser.js", "../../@xmldom/xmldom/lib/index.js", "../../mux.js/lib/utils/numbers.js", "../../mux.js/lib/tools/parse-sidx.js", "../../mux.js/lib/utils/clock.js", "../../video.js/dist/video.es.js", "../../@babel/runtime/helpers/esm/extends.js", "../../@babel/runtime/helpers/esm/assertThisInitialized.js", "../../@babel/runtime/helpers/esm/setPrototypeOf.js", "../../@babel/runtime/helpers/esm/inheritsLoose.js", "../../@babel/runtime/helpers/esm/isNativeReflectConstruct.js", "../../@babel/runtime/helpers/esm/construct.js", "../../@babel/runtime/helpers/esm/inherits.js", "../../@videojs/vhs-utils/es/resolve-url.js", "../../@videojs/vhs-utils/es/stream.js", "../../@videojs/vhs-utils/es/decode-b64-to-uint8-array.js", "../../m3u8-parser/dist/m3u8-parser.es.js", "../../@videojs/vhs-utils/es/codecs.js", "../../@videojs/vhs-utils/es/media-types.js", "../../@videojs/vhs-utils/es/byte-helpers.js", "../../mpd-parser/dist/mpd-parser.es.js", "../../@videojs/vhs-utils/es/media-groups.js", "../../@videojs/vhs-utils/es/id3-helpers.js", "../../@videojs/vhs-utils/es/opus-helpers.js", "../../@videojs/vhs-utils/es/mp4-helpers.js", "../../@videojs/vhs-utils/es/ebml-helpers.js", "../../@videojs/vhs-utils/es/nal-helpers.js", "../../@videojs/vhs-utils/es/containers.js", "../../@babel/runtime/helpers/esm/getPrototypeOf.js", "../../@babel/runtime/helpers/esm/isNativeFunction.js", "../../@babel/runtime/helpers/esm/wrapNativeSuper.js", "../../player/props.ts", "../../player/events.ts", "../../player/player.ts", "../../player/state.ts", "../../@videojs-player/vue/src/helper.ts", "../../@videojs-player/vue/src/component.ts", "../../@videojs-player/vue/src/index.ts"],
  "sourcesContent": ["var win;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    win = window;\r\n} else if (typeof global !== \"undefined\") {\r\n    win = global;\r\n} else if (typeof self !== \"undefined\"){\r\n    win = self;\r\n} else {\r\n    win = {};\r\n}\r\n\r\nmodule.exports = win;\r\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"min-document\" has been externalized for browser compatibility. Cannot access \"min-document.${key}\" in client code.`)\n    }\n  }\n}))", "var topLevel = typeof global !== 'undefined' ? global :\r\n    typeof window !== 'undefined' ? window : {}\r\nvar minDoc = require('min-document');\r\n\r\nvar doccy;\r\n\r\nif (typeof document !== 'undefined') {\r\n    doccy = document;\r\n} else {\r\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\r\n\r\n    if (!doccy) {\r\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\r\n    }\r\n}\r\n\r\nmodule.exports = doccy;\r\n", "// Source: http://jsfiddle.net/vWx8V/\r\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\r\n\r\n/**\r\n * Conenience method returns corresponding value for given keyName or keyCode.\r\n *\r\n * @param {Mixed} keyCode {Number} or keyName {String}\r\n * @return {Mixed}\r\n * @api public\r\n */\r\n\r\nfunction keyCode(searchInput) {\r\n  // Keyboard Events\r\n  if (searchInput && 'object' === typeof searchInput) {\r\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\r\n    if (hasKeyCode) searchInput = hasKeyCode\r\n  }\r\n\r\n  // Numbers\r\n  if ('number' === typeof searchInput) return names[searchInput]\r\n\r\n  // Everything else (cast to string)\r\n  var search = String(searchInput)\r\n\r\n  // check codes\r\n  var foundNamedKey = codes[search.toLowerCase()]\r\n  if (foundNamedKey) return foundNamedKey\r\n\r\n  // check aliases\r\n  var foundNamedKey = aliases[search.toLowerCase()]\r\n  if (foundNamedKey) return foundNamedKey\r\n\r\n  // weird character?\r\n  if (search.length === 1) return search.charCodeAt(0)\r\n\r\n  return undefined\r\n}\r\n\r\n/**\r\n * Compares a keyboard event with a given keyCode or keyName.\r\n *\r\n * @param {Event} event Keyboard event that should be tested\r\n * @param {Mixed} keyCode {Number} or keyName {String}\r\n * @return {Boolean}\r\n * @api public\r\n */\r\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\r\n  if (event && 'object' === typeof event) {\r\n    var keyCode = event.which || event.keyCode || event.charCode\r\n    if (keyCode === null || keyCode === undefined) { return false; }\r\n    if (typeof nameOrCode === 'string') {\r\n      // check codes\r\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n    \r\n      // check aliases\r\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n    } else if (typeof nameOrCode === 'number') {\r\n      return nameOrCode === keyCode;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexports = module.exports = keyCode;\r\n\r\n/**\r\n * Get by name\r\n *\r\n *   exports.code['enter'] // => 13\r\n */\r\n\r\nvar codes = exports.code = exports.codes = {\r\n  'backspace': 8,\r\n  'tab': 9,\r\n  'enter': 13,\r\n  'shift': 16,\r\n  'ctrl': 17,\r\n  'alt': 18,\r\n  'pause/break': 19,\r\n  'caps lock': 20,\r\n  'esc': 27,\r\n  'space': 32,\r\n  'page up': 33,\r\n  'page down': 34,\r\n  'end': 35,\r\n  'home': 36,\r\n  'left': 37,\r\n  'up': 38,\r\n  'right': 39,\r\n  'down': 40,\r\n  'insert': 45,\r\n  'delete': 46,\r\n  'command': 91,\r\n  'left command': 91,\r\n  'right command': 93,\r\n  'numpad *': 106,\r\n  'numpad +': 107,\r\n  'numpad -': 109,\r\n  'numpad .': 110,\r\n  'numpad /': 111,\r\n  'num lock': 144,\r\n  'scroll lock': 145,\r\n  'my computer': 182,\r\n  'my calculator': 183,\r\n  ';': 186,\r\n  '=': 187,\r\n  ',': 188,\r\n  '-': 189,\r\n  '.': 190,\r\n  '/': 191,\r\n  '`': 192,\r\n  '[': 219,\r\n  '\\\\': 220,\r\n  ']': 221,\r\n  \"'\": 222\r\n}\r\n\r\n// Helper aliases\r\n\r\nvar aliases = exports.aliases = {\r\n  'windows': 91,\r\n  '\u21E7': 16,\r\n  '\u2325': 18,\r\n  '\u2303': 17,\r\n  '\u2318': 91,\r\n  'ctl': 17,\r\n  'control': 17,\r\n  'option': 18,\r\n  'pause': 19,\r\n  'break': 19,\r\n  'caps': 20,\r\n  'return': 13,\r\n  'escape': 27,\r\n  'spc': 32,\r\n  'spacebar': 32,\r\n  'pgup': 33,\r\n  'pgdn': 34,\r\n  'ins': 45,\r\n  'del': 46,\r\n  'cmd': 91\r\n}\r\n\r\n/*!\r\n * Programatically add the following\r\n */\r\n\r\n// lower case chars\r\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\r\n\r\n// numbers\r\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\r\n\r\n// function keys\r\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\r\n\r\n// numpad keys\r\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\r\n\r\n/**\r\n * Get by code\r\n *\r\n *   exports.name[13] // => 'Enter'\r\n */\r\n\r\nvar names = exports.names = exports.title = {} // title for backward compat\r\n\r\n// Create reverse mapping\r\nfor (i in codes) names[codes[i]] = i\r\n\r\n// Add aliases\r\nfor (var alias in aliases) {\r\n  codes[alias] = aliases[alias]\r\n}\r\n", "module.exports = SafeParseTuple\r\n\r\nfunction SafeParseTuple(obj, reviver) {\r\n    var json\r\n    var error = null\r\n\r\n    try {\r\n        json = JSON.parse(obj, reviver)\r\n    } catch (err) {\r\n        error = err\r\n    }\r\n\r\n    return [error, json]\r\n}\r\n", "function _extends() {\r\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\r\n  return _extends.apply(this, arguments);\r\n}\r\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "module.exports = isFunction\r\n\r\nvar toString = Object.prototype.toString\r\n\r\nfunction isFunction (fn) {\r\n  if (!fn) {\r\n    return false\r\n  }\r\n  var string = toString.call(fn)\r\n  return string === '[object Function]' ||\r\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\r\n    (typeof window !== 'undefined' &&\r\n     // IE8 and below\r\n     (fn === window.setTimeout ||\r\n      fn === window.alert ||\r\n      fn === window.confirm ||\r\n      fn === window.prompt))\r\n};\r\n", "\"use strict\";\r\n\r\nvar window = require('global/window');\r\n\r\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\r\n  if (decodeResponseBody === void 0) {\r\n    decodeResponseBody = false;\r\n  }\r\n\r\n  return function (err, response, responseBody) {\r\n    // if the XHR failed, return that error\r\n    if (err) {\r\n      callback(err);\r\n      return;\r\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\r\n\r\n\r\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\r\n      var cause = responseBody;\r\n\r\n      if (decodeResponseBody) {\r\n        if (window.TextDecoder) {\r\n          var charset = getCharset(response.headers && response.headers['content-type']);\r\n\r\n          try {\r\n            cause = new TextDecoder(charset).decode(responseBody);\r\n          } catch (e) {}\r\n        } else {\r\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\r\n        }\r\n      }\r\n\r\n      callback({\r\n        cause: cause\r\n      });\r\n      return;\r\n    } // otherwise, request succeeded\r\n\r\n\r\n    callback(null, responseBody);\r\n  };\r\n};\r\n\r\nfunction getCharset(contentTypeHeader) {\r\n  if (contentTypeHeader === void 0) {\r\n    contentTypeHeader = '';\r\n  }\r\n\r\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\r\n    var _contentType$split = contentType.split('='),\r\n        type = _contentType$split[0],\r\n        value = _contentType$split[1];\r\n\r\n    if (type.trim() === 'charset') {\r\n      return value.trim();\r\n    }\r\n\r\n    return charset;\r\n  }, 'utf-8');\r\n}\r\n\r\nmodule.exports = httpResponseHandler;", "\"use strict\";\r\n\r\nvar window = require(\"global/window\");\r\n\r\nvar _extends = require(\"@babel/runtime/helpers/extends\");\r\n\r\nvar isFunction = require('is-function');\r\n\r\ncreateXHR.httpHandler = require('./http-handler.js');\r\n/**\r\n * @license\r\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\r\n * Copyright (c) 2014 David Bj\u00F6rklund\r\n * Available under the MIT license\r\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\r\n */\r\n\r\nvar parseHeaders = function parseHeaders(headers) {\r\n  var result = {};\r\n\r\n  if (!headers) {\r\n    return result;\r\n  }\r\n\r\n  headers.trim().split('\\n').forEach(function (row) {\r\n    var index = row.indexOf(':');\r\n    var key = row.slice(0, index).trim().toLowerCase();\r\n    var value = row.slice(index + 1).trim();\r\n\r\n    if (typeof result[key] === 'undefined') {\r\n      result[key] = value;\r\n    } else if (Array.isArray(result[key])) {\r\n      result[key].push(value);\r\n    } else {\r\n      result[key] = [result[key], value];\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\r\n\r\nmodule.exports.default = createXHR;\r\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\r\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\r\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\r\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\r\n    options = initParams(uri, options, callback);\r\n    options.method = method.toUpperCase();\r\n    return _createXHR(options);\r\n  };\r\n});\r\n\r\nfunction forEachArray(array, iterator) {\r\n  for (var i = 0; i < array.length; i++) {\r\n    iterator(array[i]);\r\n  }\r\n}\r\n\r\nfunction isEmpty(obj) {\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction initParams(uri, options, callback) {\r\n  var params = uri;\r\n\r\n  if (isFunction(options)) {\r\n    callback = options;\r\n\r\n    if (typeof uri === \"string\") {\r\n      params = {\r\n        uri: uri\r\n      };\r\n    }\r\n  } else {\r\n    params = _extends({}, options, {\r\n      uri: uri\r\n    });\r\n  }\r\n\r\n  params.callback = callback;\r\n  return params;\r\n}\r\n\r\nfunction createXHR(uri, options, callback) {\r\n  options = initParams(uri, options, callback);\r\n  return _createXHR(options);\r\n}\r\n\r\nfunction _createXHR(options) {\r\n  if (typeof options.callback === \"undefined\") {\r\n    throw new Error(\"callback argument missing\");\r\n  }\r\n\r\n  var called = false;\r\n\r\n  var callback = function cbOnce(err, response, body) {\r\n    if (!called) {\r\n      called = true;\r\n      options.callback(err, response, body);\r\n    }\r\n  };\r\n\r\n  function readystatechange() {\r\n    if (xhr.readyState === 4) {\r\n      setTimeout(loadFunc, 0);\r\n    }\r\n  }\r\n\r\n  function getBody() {\r\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n    var body = undefined;\r\n\r\n    if (xhr.response) {\r\n      body = xhr.response;\r\n    } else {\r\n      body = xhr.responseText || getXml(xhr);\r\n    }\r\n\r\n    if (isJson) {\r\n      try {\r\n        body = JSON.parse(body);\r\n      } catch (e) {}\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  function errorFunc(evt) {\r\n    clearTimeout(timeoutTimer);\r\n\r\n    if (!(evt instanceof Error)) {\r\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\r\n    }\r\n\r\n    evt.statusCode = 0;\r\n    return callback(evt, failureResponse);\r\n  } // will load the data & process the response in a special response object\r\n\r\n\r\n  function loadFunc() {\r\n    if (aborted) return;\r\n    var status;\r\n    clearTimeout(timeoutTimer);\r\n\r\n    if (options.useXDR && xhr.status === undefined) {\r\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n      status = 200;\r\n    } else {\r\n      status = xhr.status === 1223 ? 204 : xhr.status;\r\n    }\r\n\r\n    var response = failureResponse;\r\n    var err = null;\r\n\r\n    if (status !== 0) {\r\n      response = {\r\n        body: getBody(),\r\n        statusCode: status,\r\n        method: method,\r\n        headers: {},\r\n        url: uri,\r\n        rawRequest: xhr\r\n      };\r\n\r\n      if (xhr.getAllResponseHeaders) {\r\n        //remember xhr can in fact be XDR for CORS in IE\r\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\r\n      }\r\n    } else {\r\n      err = new Error(\"Internal XMLHttpRequest Error\");\r\n    }\r\n\r\n    return callback(err, response, response.body);\r\n  }\r\n\r\n  var xhr = options.xhr || null;\r\n\r\n  if (!xhr) {\r\n    if (options.cors || options.useXDR) {\r\n      xhr = new createXHR.XDomainRequest();\r\n    } else {\r\n      xhr = new createXHR.XMLHttpRequest();\r\n    }\r\n  }\r\n\r\n  var key;\r\n  var aborted;\r\n  var uri = xhr.url = options.uri || options.url;\r\n  var method = xhr.method = options.method || \"GET\";\r\n  var body = options.body || options.data;\r\n  var headers = xhr.headers = options.headers || {};\r\n  var sync = !!options.sync;\r\n  var isJson = false;\r\n  var timeoutTimer;\r\n  var failureResponse = {\r\n    body: undefined,\r\n    headers: {},\r\n    statusCode: 0,\r\n    method: method,\r\n    url: uri,\r\n    rawRequest: xhr\r\n  };\r\n\r\n  if (\"json\" in options && options.json !== false) {\r\n    isJson = true;\r\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\r\n\r\n    if (method !== \"GET\" && method !== \"HEAD\") {\r\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\r\n\r\n      body = JSON.stringify(options.json === true ? body : options.json);\r\n    }\r\n  }\r\n\r\n  xhr.onreadystatechange = readystatechange;\r\n  xhr.onload = loadFunc;\r\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\r\n\r\n  xhr.onprogress = function () {// IE must die\r\n  };\r\n\r\n  xhr.onabort = function () {\r\n    aborted = true;\r\n  };\r\n\r\n  xhr.ontimeout = errorFunc;\r\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\r\n\r\n  if (!sync) {\r\n    xhr.withCredentials = !!options.withCredentials;\r\n  } // Cannot set timeout with sync request\r\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n\r\n\r\n  if (!sync && options.timeout > 0) {\r\n    timeoutTimer = setTimeout(function () {\r\n      if (aborted) return;\r\n      aborted = true; //IE9 may still call readystatechange\r\n\r\n      xhr.abort(\"timeout\");\r\n      var e = new Error(\"XMLHttpRequest timeout\");\r\n      e.code = \"ETIMEDOUT\";\r\n      errorFunc(e);\r\n    }, options.timeout);\r\n  }\r\n\r\n  if (xhr.setRequestHeader) {\r\n    for (key in headers) {\r\n      if (headers.hasOwnProperty(key)) {\r\n        xhr.setRequestHeader(key, headers[key]);\r\n      }\r\n    }\r\n  } else if (options.headers && !isEmpty(options.headers)) {\r\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\r\n  }\r\n\r\n  if (\"responseType\" in options) {\r\n    xhr.responseType = options.responseType;\r\n  }\r\n\r\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\r\n    options.beforeSend(xhr);\r\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n  // XMLHttpRequest spec says to pass null as body to indicate no body\r\n  // See https://github.com/naugtur/xhr/issues/100.\r\n\r\n\r\n  xhr.send(body || null);\r\n  return xhr;\r\n}\r\n\r\nfunction getXml(xhr) {\r\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\r\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\r\n  try {\r\n    if (xhr.responseType === \"document\") {\r\n      return xhr.responseXML;\r\n    }\r\n\r\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\r\n\r\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n      return xhr.responseXML;\r\n    }\r\n  } catch (e) {}\r\n\r\n  return null;\r\n}\r\n\r\nfunction noop() {}", "/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\r\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\r\nvar document = require('global/document');\r\n\r\nvar _objCreate = Object.create || (function() {\r\n  function F() {}\r\n  return function(o) {\r\n    if (arguments.length !== 1) {\r\n      throw new Error('Object.create shim only accepts one parameter.');\r\n    }\r\n    F.prototype = o;\r\n    return new F();\r\n  };\r\n})();\r\n\r\n// Creates a new ParserError object from an errorData object. The errorData\r\n// object should have default code and message properties. The default message\r\n// property can be overriden by passing in a message parameter.\r\n// See ParsingError.Errors below for acceptable errors.\r\nfunction ParsingError(errorData, message) {\r\n  this.name = \"ParsingError\";\r\n  this.code = errorData.code;\r\n  this.message = message || errorData.message;\r\n}\r\nParsingError.prototype = _objCreate(Error.prototype);\r\nParsingError.prototype.constructor = ParsingError;\r\n\r\n// ParsingError metadata for acceptable ParsingErrors.\r\nParsingError.Errors = {\r\n  BadSignature: {\r\n    code: 0,\r\n    message: \"Malformed WebVTT signature.\"\r\n  },\r\n  BadTimeStamp: {\r\n    code: 1,\r\n    message: \"Malformed time stamp.\"\r\n  }\r\n};\r\n\r\n// Try to parse input as a time stamp.\r\nfunction parseTimeStamp(input) {\r\n\r\n  function computeSeconds(h, m, s, f) {\r\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\r\n  }\r\n\r\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\r\n  if (!m) {\r\n    return null;\r\n  }\r\n\r\n  if (m[3]) {\r\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\r\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\r\n  } else if (m[1] > 59) {\r\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\r\n    // First position is hours as it's over 59.\r\n    return computeSeconds(m[1], m[2], 0,  m[4]);\r\n  } else {\r\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\r\n    return computeSeconds(0, m[1], m[2], m[4]);\r\n  }\r\n}\r\n\r\n// A settings object holds key/value pairs and will ignore anything but the first\r\n// assignment to a specific key.\r\nfunction Settings() {\r\n  this.values = _objCreate(null);\r\n}\r\n\r\nSettings.prototype = {\r\n  // Only accept the first assignment to any key.\r\n  set: function(k, v) {\r\n    if (!this.get(k) && v !== \"\") {\r\n      this.values[k] = v;\r\n    }\r\n  },\r\n  // Return the value for a key, or a default value.\r\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\r\n  // a number of possible default values as properties where 'defaultKey' is\r\n  // the key of the property that will be chosen; otherwise it's assumed to be\r\n  // a single value.\r\n  get: function(k, dflt, defaultKey) {\r\n    if (defaultKey) {\r\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\r\n    }\r\n    return this.has(k) ? this.values[k] : dflt;\r\n  },\r\n  // Check whether we have a value for a key.\r\n  has: function(k) {\r\n    return k in this.values;\r\n  },\r\n  // Accept a setting if its one of the given alternatives.\r\n  alt: function(k, v, a) {\r\n    for (var n = 0; n < a.length; ++n) {\r\n      if (v === a[n]) {\r\n        this.set(k, v);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  // Accept a setting if its a valid (signed) integer.\r\n  integer: function(k, v) {\r\n    if (/^-?\\d+$/.test(v)) { // integer\r\n      this.set(k, parseInt(v, 10));\r\n    }\r\n  },\r\n  // Accept a setting if its a valid percentage.\r\n  percent: function(k, v) {\r\n    var m;\r\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\r\n      v = parseFloat(v);\r\n      if (v >= 0 && v <= 100) {\r\n        this.set(k, v);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\n// Helper function to parse input into groups separated by 'groupDelim', and\r\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\r\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\r\n  var groups = groupDelim ? input.split(groupDelim) : [input];\r\n  for (var i in groups) {\r\n    if (typeof groups[i] !== \"string\") {\r\n      continue;\r\n    }\r\n    var kv = groups[i].split(keyValueDelim);\r\n    if (kv.length !== 2) {\r\n      continue;\r\n    }\r\n    var k = kv[0].trim();\r\n    var v = kv[1].trim();\r\n    callback(k, v);\r\n  }\r\n}\r\n\r\nfunction parseCue(input, cue, regionList) {\r\n  // Remember the original input if we need to throw an error.\r\n  var oInput = input;\r\n  // 4.1 WebVTT timestamp\r\n  function consumeTimeStamp() {\r\n    var ts = parseTimeStamp(input);\r\n    if (ts === null) {\r\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\r\n                            \"Malformed timestamp: \" + oInput);\r\n    }\r\n    // Remove time stamp from input.\r\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\r\n    return ts;\r\n  }\r\n\r\n  // 4.4.2 WebVTT cue settings\r\n  function consumeCueSettings(input, cue) {\r\n    var settings = new Settings();\r\n\r\n    parseOptions(input, function (k, v) {\r\n      switch (k) {\r\n      case \"region\":\r\n        // Find the last region we parsed with the same region id.\r\n        for (var i = regionList.length - 1; i >= 0; i--) {\r\n          if (regionList[i].id === v) {\r\n            settings.set(k, regionList[i].region);\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      case \"vertical\":\r\n        settings.alt(k, v, [\"rl\", \"lr\"]);\r\n        break;\r\n      case \"line\":\r\n        var vals = v.split(\",\"),\r\n            vals0 = vals[0];\r\n        settings.integer(k, vals0);\r\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\r\n        settings.alt(k, vals0, [\"auto\"]);\r\n        if (vals.length === 2) {\r\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\r\n        }\r\n        break;\r\n      case \"position\":\r\n        vals = v.split(\",\");\r\n        settings.percent(k, vals[0]);\r\n        if (vals.length === 2) {\r\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\r\n        }\r\n        break;\r\n      case \"size\":\r\n        settings.percent(k, v);\r\n        break;\r\n      case \"align\":\r\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\r\n        break;\r\n      }\r\n    }, /:/, /\\s/);\r\n\r\n    // Apply default values for any missing fields.\r\n    cue.region = settings.get(\"region\", null);\r\n    cue.vertical = settings.get(\"vertical\", \"\");\r\n    try {\r\n      cue.line = settings.get(\"line\", \"auto\");\r\n    } catch (e) {}\r\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\r\n    cue.snapToLines = settings.get(\"snapToLines\", true);\r\n    cue.size = settings.get(\"size\", 100);\r\n    // Safari still uses the old middle value and won't accept center\r\n    try {\r\n      cue.align = settings.get(\"align\", \"center\");\r\n    } catch (e) {\r\n      cue.align = settings.get(\"align\", \"middle\");\r\n    }\r\n    try {\r\n      cue.position = settings.get(\"position\", \"auto\");\r\n    } catch (e) {\r\n      cue.position = settings.get(\"position\", {\r\n        start: 0,\r\n        left: 0,\r\n        center: 50,\r\n        middle: 50,\r\n        end: 100,\r\n        right: 100\r\n      }, cue.align);\r\n    }\r\n\r\n\r\n    cue.positionAlign = settings.get(\"positionAlign\", {\r\n      start: \"start\",\r\n      left: \"start\",\r\n      center: \"center\",\r\n      middle: \"center\",\r\n      end: \"end\",\r\n      right: \"end\"\r\n    }, cue.align);\r\n  }\r\n\r\n  function skipWhitespace() {\r\n    input = input.replace(/^\\s+/, \"\");\r\n  }\r\n\r\n  // 4.1 WebVTT cue timings.\r\n  skipWhitespace();\r\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\r\n  skipWhitespace();\r\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\r\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\r\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\r\n                           oInput);\r\n  }\r\n  input = input.substr(3);\r\n  skipWhitespace();\r\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\r\n\r\n  // 4.1 WebVTT cue settings list.\r\n  skipWhitespace();\r\n  consumeCueSettings(input, cue);\r\n}\r\n\r\n// When evaluating this file as part of a Webpack bundle for server\r\n// side rendering, `document` is an empty object.\r\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\r\n\r\nvar TAG_NAME = {\r\n  c: \"span\",\r\n  i: \"i\",\r\n  b: \"b\",\r\n  u: \"u\",\r\n  ruby: \"ruby\",\r\n  rt: \"rt\",\r\n  v: \"span\",\r\n  lang: \"span\"\r\n};\r\n\r\n// 5.1 default text color\r\n// 5.2 default text background color is equivalent to text color with bg_ prefix\r\nvar DEFAULT_COLOR_CLASS = {\r\n  white: 'rgba(255,255,255,1)',\r\n  lime: 'rgba(0,255,0,1)',\r\n  cyan: 'rgba(0,255,255,1)',\r\n  red: 'rgba(255,0,0,1)',\r\n  yellow: 'rgba(255,255,0,1)',\r\n  magenta: 'rgba(255,0,255,1)',\r\n  blue: 'rgba(0,0,255,1)',\r\n  black: 'rgba(0,0,0,1)'\r\n};\r\n\r\nvar TAG_ANNOTATION = {\r\n  v: \"title\",\r\n  lang: \"lang\"\r\n};\r\n\r\nvar NEEDS_PARENT = {\r\n  rt: \"ruby\"\r\n};\r\n\r\n// Parse content into a document fragment.\r\nfunction parseContent(window, input) {\r\n  function nextToken() {\r\n    // Check for end-of-string.\r\n    if (!input) {\r\n      return null;\r\n    }\r\n\r\n    // Consume 'n' characters from the input.\r\n    function consume(result) {\r\n      input = input.substr(result.length);\r\n      return result;\r\n    }\r\n\r\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\r\n    // If there is some text before the next tag, return it, otherwise return\r\n    // the tag.\r\n    return consume(m[1] ? m[1] : m[2]);\r\n  }\r\n\r\n  function unescape(s) {\r\n    TEXTAREA_ELEMENT.innerHTML = s;\r\n    s = TEXTAREA_ELEMENT.textContent;\r\n    TEXTAREA_ELEMENT.textContent = \"\";\r\n    return s;\r\n  }\r\n\r\n  function shouldAdd(current, element) {\r\n    return !NEEDS_PARENT[element.localName] ||\r\n           NEEDS_PARENT[element.localName] === current.localName;\r\n  }\r\n\r\n  // Create an element for this tag.\r\n  function createElement(type, annotation) {\r\n    var tagName = TAG_NAME[type];\r\n    if (!tagName) {\r\n      return null;\r\n    }\r\n    var element = window.document.createElement(tagName);\r\n    var name = TAG_ANNOTATION[type];\r\n    if (name && annotation) {\r\n      element[name] = annotation.trim();\r\n    }\r\n    return element;\r\n  }\r\n\r\n  var rootDiv = window.document.createElement(\"div\"),\r\n      current = rootDiv,\r\n      t,\r\n      tagStack = [];\r\n\r\n  while ((t = nextToken()) !== null) {\r\n    if (t[0] === '<') {\r\n      if (t[1] === \"/\") {\r\n        // If the closing tag matches, move back up to the parent node.\r\n        if (tagStack.length &&\r\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\r\n          tagStack.pop();\r\n          current = current.parentNode;\r\n        }\r\n        // Otherwise just ignore the end tag.\r\n        continue;\r\n      }\r\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\r\n      var node;\r\n      if (ts) {\r\n        // Timestamps are lead nodes as well.\r\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\r\n        current.appendChild(node);\r\n        continue;\r\n      }\r\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\r\n      // If we can't parse the tag, skip to the next tag.\r\n      if (!m) {\r\n        continue;\r\n      }\r\n      // Try to construct an element, and ignore the tag if we couldn't.\r\n      node = createElement(m[1], m[3]);\r\n      if (!node) {\r\n        continue;\r\n      }\r\n      // Determine if the tag should be added based on the context of where it\r\n      // is placed in the cuetext.\r\n      if (!shouldAdd(current, node)) {\r\n        continue;\r\n      }\r\n      // Set the class list (as a list of classes, separated by space).\r\n      if (m[2]) {\r\n        var classes = m[2].split('.');\r\n\r\n        classes.forEach(function(cl) {\r\n          var bgColor = /^bg_/.test(cl);\r\n          // slice out `bg_` if it's a background color\r\n          var colorName = bgColor ? cl.slice(3) : cl;\r\n\r\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\r\n            var propName = bgColor ? 'background-color' : 'color';\r\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\r\n\r\n            node.style[propName] = propValue;\r\n          }\r\n        });\r\n\r\n        node.className = classes.join(' ');\r\n      }\r\n      // Append the node to the current node, and enter the scope of the new\r\n      // node.\r\n      tagStack.push(m[1]);\r\n      current.appendChild(node);\r\n      current = node;\r\n      continue;\r\n    }\r\n\r\n    // Text nodes are leaf nodes.\r\n    current.appendChild(window.document.createTextNode(unescape(t)));\r\n  }\r\n\r\n  return rootDiv;\r\n}\r\n\r\n// This is a list of all the Unicode characters that have a strong\r\n// right-to-left category. What this means is that these characters are\r\n// written right-to-left for sure. It was generated by pulling all the strong\r\n// right-to-left characters out of the Unicode data table. That table can\r\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\r\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\r\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\r\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\r\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\r\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\r\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\r\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\r\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\r\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\r\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\r\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\r\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\r\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\r\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\r\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\r\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\r\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\r\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\r\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\r\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\r\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\r\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\r\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\r\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\r\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\r\n\r\nfunction isStrongRTLChar(charCode) {\r\n  for (var i = 0; i < strongRTLRanges.length; i++) {\r\n    var currentRange = strongRTLRanges[i];\r\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction determineBidi(cueDiv) {\r\n  var nodeStack = [],\r\n      text = \"\",\r\n      charCode;\r\n\r\n  if (!cueDiv || !cueDiv.childNodes) {\r\n    return \"ltr\";\r\n  }\r\n\r\n  function pushNodes(nodeStack, node) {\r\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\r\n      nodeStack.push(node.childNodes[i]);\r\n    }\r\n  }\r\n\r\n  function nextTextNode(nodeStack) {\r\n    if (!nodeStack || !nodeStack.length) {\r\n      return null;\r\n    }\r\n\r\n    var node = nodeStack.pop(),\r\n        text = node.textContent || node.innerText;\r\n    if (text) {\r\n      // TODO: This should match all unicode type B characters (paragraph\r\n      // separator characters). See issue #115.\r\n      var m = text.match(/^.*(\\n|\\r)/);\r\n      if (m) {\r\n        nodeStack.length = 0;\r\n        return m[0];\r\n      }\r\n      return text;\r\n    }\r\n    if (node.tagName === \"ruby\") {\r\n      return nextTextNode(nodeStack);\r\n    }\r\n    if (node.childNodes) {\r\n      pushNodes(nodeStack, node);\r\n      return nextTextNode(nodeStack);\r\n    }\r\n  }\r\n\r\n  pushNodes(nodeStack, cueDiv);\r\n  while ((text = nextTextNode(nodeStack))) {\r\n    for (var i = 0; i < text.length; i++) {\r\n      charCode = text.charCodeAt(i);\r\n      if (isStrongRTLChar(charCode)) {\r\n        return \"rtl\";\r\n      }\r\n    }\r\n  }\r\n  return \"ltr\";\r\n}\r\n\r\nfunction computeLinePos(cue) {\r\n  if (typeof cue.line === \"number\" &&\r\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\r\n    return cue.line;\r\n  }\r\n  if (!cue.track || !cue.track.textTrackList ||\r\n      !cue.track.textTrackList.mediaElement) {\r\n    return -1;\r\n  }\r\n  var track = cue.track,\r\n      trackList = track.textTrackList,\r\n      count = 0;\r\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\r\n    if (trackList[i].mode === \"showing\") {\r\n      count++;\r\n    }\r\n  }\r\n  return ++count * -1;\r\n}\r\n\r\nfunction StyleBox() {\r\n}\r\n\r\n// Apply styles to a div. If there is no div passed then it defaults to the\r\n// div on 'this'.\r\nStyleBox.prototype.applyStyles = function(styles, div) {\r\n  div = div || this.div;\r\n  for (var prop in styles) {\r\n    if (styles.hasOwnProperty(prop)) {\r\n      div.style[prop] = styles[prop];\r\n    }\r\n  }\r\n};\r\n\r\nStyleBox.prototype.formatStyle = function(val, unit) {\r\n  return val === 0 ? 0 : val + unit;\r\n};\r\n\r\n// Constructs the computed display state of the cue (a div). Places the div\r\n// into the overlay which should be a block level element (usually a div).\r\nfunction CueStyleBox(window, cue, styleOptions) {\r\n  StyleBox.call(this);\r\n  this.cue = cue;\r\n\r\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\r\n  // have inline positioning and will function as the cue background box.\r\n  this.cueDiv = parseContent(window, cue.text);\r\n  var styles = {\r\n    color: \"rgba(255, 255, 255, 1)\",\r\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"relative\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"inline\",\r\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\r\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\r\n                                                             : \"vertical-rl\",\r\n    unicodeBidi: \"plaintext\"\r\n  };\r\n\r\n  this.applyStyles(styles, this.cueDiv);\r\n\r\n  // Create an absolutely positioned div that will be used to position the cue\r\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\r\n  // mirrors of them except middle instead of center on Safari.\r\n  this.div = window.document.createElement(\"div\");\r\n  styles = {\r\n    direction: determineBidi(this.cueDiv),\r\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\r\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\r\n                                                             : \"vertical-rl\",\r\n    unicodeBidi: \"plaintext\",\r\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\r\n    font: styleOptions.font,\r\n    whiteSpace: \"pre-line\",\r\n    position: \"absolute\"\r\n  };\r\n\r\n  this.applyStyles(styles);\r\n  this.div.appendChild(this.cueDiv);\r\n\r\n  // Calculate the distance from the reference edge of the viewport to the text\r\n  // position of the cue box. The reference edge will be resolved later when\r\n  // the box orientation styles are applied.\r\n  var textPos = 0;\r\n  switch (cue.positionAlign) {\r\n  case \"start\":\r\n  case \"line-left\":\r\n    textPos = cue.position;\r\n    break;\r\n  case \"center\":\r\n    textPos = cue.position - (cue.size / 2);\r\n    break;\r\n  case \"end\":\r\n  case \"line-right\":\r\n    textPos = cue.position - cue.size;\r\n    break;\r\n  }\r\n\r\n  // Horizontal box orientation; textPos is the distance from the left edge of the\r\n  // area to the left edge of the box and cue.size is the distance extending to\r\n  // the right from there.\r\n  if (cue.vertical === \"\") {\r\n    this.applyStyles({\r\n      left:  this.formatStyle(textPos, \"%\"),\r\n      width: this.formatStyle(cue.size, \"%\")\r\n    });\r\n  // Vertical box orientation; textPos is the distance from the top edge of the\r\n  // area to the top edge of the box and cue.size is the height extending\r\n  // downwards from there.\r\n  } else {\r\n    this.applyStyles({\r\n      top: this.formatStyle(textPos, \"%\"),\r\n      height: this.formatStyle(cue.size, \"%\")\r\n    });\r\n  }\r\n\r\n  this.move = function(box) {\r\n    this.applyStyles({\r\n      top: this.formatStyle(box.top, \"px\"),\r\n      bottom: this.formatStyle(box.bottom, \"px\"),\r\n      left: this.formatStyle(box.left, \"px\"),\r\n      right: this.formatStyle(box.right, \"px\"),\r\n      height: this.formatStyle(box.height, \"px\"),\r\n      width: this.formatStyle(box.width, \"px\")\r\n    });\r\n  };\r\n}\r\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\r\nCueStyleBox.prototype.constructor = CueStyleBox;\r\n\r\n// Represents the co-ordinates of an Element in a way that we can easily\r\n// compute things with such as if it overlaps or intersects with another Element.\r\n// Can initialize it with either a StyleBox or another BoxPosition.\r\nfunction BoxPosition(obj) {\r\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\r\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\r\n  // as the object returned is readonly. All co-ordinate values are in reference\r\n  // to the viewport origin (top left).\r\n  var lh, height, width, top;\r\n  if (obj.div) {\r\n    height = obj.div.offsetHeight;\r\n    width = obj.div.offsetWidth;\r\n    top = obj.div.offsetTop;\r\n\r\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\r\n                rects.getClientRects && rects.getClientRects();\r\n    obj = obj.div.getBoundingClientRect();\r\n    // In certain cases the outter div will be slightly larger then the sum of\r\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\r\n    // In this case we should get the average line height and use that. This will\r\n    // result in the desired behaviour.\r\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\r\n               : 0;\r\n\r\n  }\r\n  this.left = obj.left;\r\n  this.right = obj.right;\r\n  this.top = obj.top || top;\r\n  this.height = obj.height || height;\r\n  this.bottom = obj.bottom || (top + (obj.height || height));\r\n  this.width = obj.width || width;\r\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\r\n}\r\n\r\n// Move the box along a particular axis. Optionally pass in an amount to move\r\n// the box. If no amount is passed then the default is the line height of the\r\n// box.\r\nBoxPosition.prototype.move = function(axis, toMove) {\r\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\r\n  switch (axis) {\r\n  case \"+x\":\r\n    this.left += toMove;\r\n    this.right += toMove;\r\n    break;\r\n  case \"-x\":\r\n    this.left -= toMove;\r\n    this.right -= toMove;\r\n    break;\r\n  case \"+y\":\r\n    this.top += toMove;\r\n    this.bottom += toMove;\r\n    break;\r\n  case \"-y\":\r\n    this.top -= toMove;\r\n    this.bottom -= toMove;\r\n    break;\r\n  }\r\n};\r\n\r\n// Check if this box overlaps another box, b2.\r\nBoxPosition.prototype.overlaps = function(b2) {\r\n  return this.left < b2.right &&\r\n         this.right > b2.left &&\r\n         this.top < b2.bottom &&\r\n         this.bottom > b2.top;\r\n};\r\n\r\n// Check if this box overlaps any other boxes in boxes.\r\nBoxPosition.prototype.overlapsAny = function(boxes) {\r\n  for (var i = 0; i < boxes.length; i++) {\r\n    if (this.overlaps(boxes[i])) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// Check if this box is within another box.\r\nBoxPosition.prototype.within = function(container) {\r\n  return this.top >= container.top &&\r\n         this.bottom <= container.bottom &&\r\n         this.left >= container.left &&\r\n         this.right <= container.right;\r\n};\r\n\r\n// Check if this box is entirely within the container or it is overlapping\r\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\r\n// passed and the box is overlapping on the left edge of the container, then\r\n// return true.\r\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\r\n  switch (axis) {\r\n  case \"+x\":\r\n    return this.left < container.left;\r\n  case \"-x\":\r\n    return this.right > container.right;\r\n  case \"+y\":\r\n    return this.top < container.top;\r\n  case \"-y\":\r\n    return this.bottom > container.bottom;\r\n  }\r\n};\r\n\r\n// Find the percentage of the area that this box is overlapping with another\r\n// box.\r\nBoxPosition.prototype.intersectPercentage = function(b2) {\r\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\r\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\r\n      intersectArea = x * y;\r\n  return intersectArea / (this.height * this.width);\r\n};\r\n\r\n// Convert the positions from this box to CSS compatible positions using\r\n// the reference container's positions. This has to be done because this\r\n// box's positions are in reference to the viewport origin, whereas, CSS\r\n// values are in referecne to their respective edges.\r\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\r\n  return {\r\n    top: this.top - reference.top,\r\n    bottom: reference.bottom - this.bottom,\r\n    left: this.left - reference.left,\r\n    right: reference.right - this.right,\r\n    height: this.height,\r\n    width: this.width\r\n  };\r\n};\r\n\r\n// Get an object that represents the box's position without anything extra.\r\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\r\nBoxPosition.getSimpleBoxPosition = function(obj) {\r\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\r\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\r\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\r\n\r\n  obj = obj.div ? obj.div.getBoundingClientRect() :\r\n                obj.tagName ? obj.getBoundingClientRect() : obj;\r\n  var ret = {\r\n    left: obj.left,\r\n    right: obj.right,\r\n    top: obj.top || top,\r\n    height: obj.height || height,\r\n    bottom: obj.bottom || (top + (obj.height || height)),\r\n    width: obj.width || width\r\n  };\r\n  return ret;\r\n};\r\n\r\n// Move a StyleBox to its specified, or next best, position. The containerBox\r\n// is the box that contains the StyleBox, such as a div. boxPositions are\r\n// a list of other boxes that the styleBox can't overlap with.\r\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\r\n\r\n  // Find the best position for a cue box, b, on the video. The axis parameter\r\n  // is a list of axis, the order of which, it will move the box along. For example:\r\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\r\n  // direction. If it doesn't find a good position for it there it will then move\r\n  // it along the x axis in the negative direction.\r\n  function findBestPosition(b, axis) {\r\n    var bestPosition,\r\n        specifiedPosition = new BoxPosition(b),\r\n        percentage = 1; // Highest possible so the first thing we get is better.\r\n\r\n    for (var i = 0; i < axis.length; i++) {\r\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\r\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\r\n        b.move(axis[i]);\r\n      }\r\n      // We found a spot where we aren't overlapping anything. This is our\r\n      // best position.\r\n      if (b.within(containerBox)) {\r\n        return b;\r\n      }\r\n      var p = b.intersectPercentage(containerBox);\r\n      // If we're outside the container box less then we were on our last try\r\n      // then remember this position as the best position.\r\n      if (percentage > p) {\r\n        bestPosition = new BoxPosition(b);\r\n        percentage = p;\r\n      }\r\n      // Reset the box position to the specified position.\r\n      b = new BoxPosition(specifiedPosition);\r\n    }\r\n    return bestPosition || specifiedPosition;\r\n  }\r\n\r\n  var boxPosition = new BoxPosition(styleBox),\r\n      cue = styleBox.cue,\r\n      linePos = computeLinePos(cue),\r\n      axis = [];\r\n\r\n  // If we have a line number to align the cue to.\r\n  if (cue.snapToLines) {\r\n    var size;\r\n    switch (cue.vertical) {\r\n    case \"\":\r\n      axis = [ \"+y\", \"-y\" ];\r\n      size = \"height\";\r\n      break;\r\n    case \"rl\":\r\n      axis = [ \"+x\", \"-x\" ];\r\n      size = \"width\";\r\n      break;\r\n    case \"lr\":\r\n      axis = [ \"-x\", \"+x\" ];\r\n      size = \"width\";\r\n      break;\r\n    }\r\n\r\n    var step = boxPosition.lineHeight,\r\n        position = step * Math.round(linePos),\r\n        maxPosition = containerBox[size] + step,\r\n        initialAxis = axis[0];\r\n\r\n    // If the specified intial position is greater then the max position then\r\n    // clamp the box to the amount of steps it would take for the box to\r\n    // reach the max position.\r\n    if (Math.abs(position) > maxPosition) {\r\n      position = position < 0 ? -1 : 1;\r\n      position *= Math.ceil(maxPosition / step) * step;\r\n    }\r\n\r\n    // If computed line position returns negative then line numbers are\r\n    // relative to the bottom of the video instead of the top. Therefore, we\r\n    // need to increase our initial position by the length or width of the\r\n    // video, depending on the writing direction, and reverse our axis directions.\r\n    if (linePos < 0) {\r\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\r\n      axis = axis.reverse();\r\n    }\r\n\r\n    // Move the box to the specified position. This may not be its best\r\n    // position.\r\n    boxPosition.move(initialAxis, position);\r\n\r\n  } else {\r\n    // If we have a percentage line value for the cue.\r\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\r\n\r\n    switch (cue.lineAlign) {\r\n    case \"center\":\r\n      linePos -= (calculatedPercentage / 2);\r\n      break;\r\n    case \"end\":\r\n      linePos -= calculatedPercentage;\r\n      break;\r\n    }\r\n\r\n    // Apply initial line position to the cue box.\r\n    switch (cue.vertical) {\r\n    case \"\":\r\n      styleBox.applyStyles({\r\n        top: styleBox.formatStyle(linePos, \"%\")\r\n      });\r\n      break;\r\n    case \"rl\":\r\n      styleBox.applyStyles({\r\n        left: styleBox.formatStyle(linePos, \"%\")\r\n      });\r\n      break;\r\n    case \"lr\":\r\n      styleBox.applyStyles({\r\n        right: styleBox.formatStyle(linePos, \"%\")\r\n      });\r\n      break;\r\n    }\r\n\r\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\r\n\r\n    // Get the box position again after we've applied the specified positioning\r\n    // to it.\r\n    boxPosition = new BoxPosition(styleBox);\r\n  }\r\n\r\n  var bestPosition = findBestPosition(boxPosition, axis);\r\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\r\n}\r\n\r\nfunction WebVTT() {\r\n  // Nothing\r\n}\r\n\r\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\r\nWebVTT.StringDecoder = function() {\r\n  return {\r\n    decode: function(data) {\r\n      if (!data) {\r\n        return \"\";\r\n      }\r\n      if (typeof data !== \"string\") {\r\n        throw new Error(\"Error - expected string data.\");\r\n      }\r\n      return decodeURIComponent(encodeURIComponent(data));\r\n    }\r\n  };\r\n};\r\n\r\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\r\n  if (!window || !cuetext) {\r\n    return null;\r\n  }\r\n  return parseContent(window, cuetext);\r\n};\r\n\r\nvar FONT_SIZE_PERCENT = 0.05;\r\nvar FONT_STYLE = \"sans-serif\";\r\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\r\n\r\n// Runs the processing model over the cues and regions passed to it.\r\n// @param overlay A block level element (usually a div) that the computed cues\r\n//                and regions will be placed into.\r\nWebVTT.processCues = function(window, cues, overlay) {\r\n  if (!window || !cues || !overlay) {\r\n    return null;\r\n  }\r\n\r\n  // Remove all previous children.\r\n  while (overlay.firstChild) {\r\n    overlay.removeChild(overlay.firstChild);\r\n  }\r\n\r\n  var paddedOverlay = window.document.createElement(\"div\");\r\n  paddedOverlay.style.position = \"absolute\";\r\n  paddedOverlay.style.left = \"0\";\r\n  paddedOverlay.style.right = \"0\";\r\n  paddedOverlay.style.top = \"0\";\r\n  paddedOverlay.style.bottom = \"0\";\r\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\r\n  overlay.appendChild(paddedOverlay);\r\n\r\n  // Determine if we need to compute the display states of the cues. This could\r\n  // be the case if a cue's state has been changed since the last computation or\r\n  // if it has not been computed yet.\r\n  function shouldCompute(cues) {\r\n    for (var i = 0; i < cues.length; i++) {\r\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // We don't need to recompute the cues' display states. Just reuse them.\r\n  if (!shouldCompute(cues)) {\r\n    for (var i = 0; i < cues.length; i++) {\r\n      paddedOverlay.appendChild(cues[i].displayState);\r\n    }\r\n    return;\r\n  }\r\n\r\n  var boxPositions = [],\r\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\r\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\r\n  var styleOptions = {\r\n    font: fontSize + \"px \" + FONT_STYLE\r\n  };\r\n\r\n  (function() {\r\n    var styleBox, cue;\r\n\r\n    for (var i = 0; i < cues.length; i++) {\r\n      cue = cues[i];\r\n\r\n      // Compute the intial position and styles of the cue div.\r\n      styleBox = new CueStyleBox(window, cue, styleOptions);\r\n      paddedOverlay.appendChild(styleBox.div);\r\n\r\n      // Move the cue div to it's correct line position.\r\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\r\n\r\n      // Remember the computed div so that we don't have to recompute it later\r\n      // if we don't have too.\r\n      cue.displayState = styleBox.div;\r\n\r\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\r\n    }\r\n  })();\r\n};\r\n\r\nWebVTT.Parser = function(window, vttjs, decoder) {\r\n  if (!decoder) {\r\n    decoder = vttjs;\r\n    vttjs = {};\r\n  }\r\n  if (!vttjs) {\r\n    vttjs = {};\r\n  }\r\n\r\n  this.window = window;\r\n  this.vttjs = vttjs;\r\n  this.state = \"INITIAL\";\r\n  this.buffer = \"\";\r\n  this.decoder = decoder || new TextDecoder(\"utf8\");\r\n  this.regionList = [];\r\n};\r\n\r\nWebVTT.Parser.prototype = {\r\n  // If the error is a ParsingError then report it to the consumer if\r\n  // possible. If it's not a ParsingError then throw it like normal.\r\n  reportOrThrowError: function(e) {\r\n    if (e instanceof ParsingError) {\r\n      this.onparsingerror && this.onparsingerror(e);\r\n    } else {\r\n      throw e;\r\n    }\r\n  },\r\n  parse: function (data) {\r\n    var self = this;\r\n\r\n    // If there is no data then we won't decode it, but will just try to parse\r\n    // whatever is in buffer already. This may occur in circumstances, for\r\n    // example when flush() is called.\r\n    if (data) {\r\n      // Try to decode the data that we received.\r\n      self.buffer += self.decoder.decode(data, {stream: true});\r\n    }\r\n\r\n    function collectNextLine() {\r\n      var buffer = self.buffer;\r\n      var pos = 0;\r\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\r\n        ++pos;\r\n      }\r\n      var line = buffer.substr(0, pos);\r\n      // Advance the buffer early in case we fail below.\r\n      if (buffer[pos] === '\\r') {\r\n        ++pos;\r\n      }\r\n      if (buffer[pos] === '\\n') {\r\n        ++pos;\r\n      }\r\n      self.buffer = buffer.substr(pos);\r\n      return line;\r\n    }\r\n\r\n    // 3.4 WebVTT region and WebVTT region settings syntax\r\n    function parseRegion(input) {\r\n      var settings = new Settings();\r\n\r\n      parseOptions(input, function (k, v) {\r\n        switch (k) {\r\n        case \"id\":\r\n          settings.set(k, v);\r\n          break;\r\n        case \"width\":\r\n          settings.percent(k, v);\r\n          break;\r\n        case \"lines\":\r\n          settings.integer(k, v);\r\n          break;\r\n        case \"regionanchor\":\r\n        case \"viewportanchor\":\r\n          var xy = v.split(',');\r\n          if (xy.length !== 2) {\r\n            break;\r\n          }\r\n          // We have to make sure both x and y parse, so use a temporary\r\n          // settings object here.\r\n          var anchor = new Settings();\r\n          anchor.percent(\"x\", xy[0]);\r\n          anchor.percent(\"y\", xy[1]);\r\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\r\n            break;\r\n          }\r\n          settings.set(k + \"X\", anchor.get(\"x\"));\r\n          settings.set(k + \"Y\", anchor.get(\"y\"));\r\n          break;\r\n        case \"scroll\":\r\n          settings.alt(k, v, [\"up\"]);\r\n          break;\r\n        }\r\n      }, /=/, /\\s/);\r\n\r\n      // Create the region, using default values for any values that were not\r\n      // specified.\r\n      if (settings.has(\"id\")) {\r\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\r\n        region.width = settings.get(\"width\", 100);\r\n        region.lines = settings.get(\"lines\", 3);\r\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\r\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\r\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\r\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\r\n        region.scroll = settings.get(\"scroll\", \"\");\r\n        // Register the region.\r\n        self.onregion && self.onregion(region);\r\n        // Remember the VTTRegion for later in case we parse any VTTCues that\r\n        // reference it.\r\n        self.regionList.push({\r\n          id: settings.get(\"id\"),\r\n          region: region\r\n        });\r\n      }\r\n    }\r\n\r\n    // draft-pantos-http-live-streaming-20\r\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\r\n    // 3.5 WebVTT\r\n    function parseTimestampMap(input) {\r\n      var settings = new Settings();\r\n\r\n      parseOptions(input, function(k, v) {\r\n        switch(k) {\r\n        case \"MPEGT\":\r\n          settings.integer(k + 'S', v);\r\n          break;\r\n        case \"LOCA\":\r\n          settings.set(k + 'L', parseTimeStamp(v));\r\n          break;\r\n        }\r\n      }, /[^\\d]:/, /,/);\r\n\r\n      self.ontimestampmap && self.ontimestampmap({\r\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\r\n        \"LOCAL\": settings.get(\"LOCAL\")\r\n      });\r\n    }\r\n\r\n    // 3.2 WebVTT metadata header syntax\r\n    function parseHeader(input) {\r\n      if (input.match(/X-TIMESTAMP-MAP/)) {\r\n        // This line contains HLS X-TIMESTAMP-MAP metadata\r\n        parseOptions(input, function(k, v) {\r\n          switch(k) {\r\n          case \"X-TIMESTAMP-MAP\":\r\n            parseTimestampMap(v);\r\n            break;\r\n          }\r\n        }, /=/);\r\n      } else {\r\n        parseOptions(input, function (k, v) {\r\n          switch (k) {\r\n          case \"Region\":\r\n            // 3.3 WebVTT region metadata header syntax\r\n            parseRegion(v);\r\n            break;\r\n          }\r\n        }, /:/);\r\n      }\r\n\r\n    }\r\n\r\n    // 5.1 WebVTT file parsing.\r\n    try {\r\n      var line;\r\n      if (self.state === \"INITIAL\") {\r\n        // We can't start parsing until we have the first line.\r\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\r\n          return this;\r\n        }\r\n\r\n        line = collectNextLine();\r\n\r\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\r\n        if (!m || !m[0]) {\r\n          throw new ParsingError(ParsingError.Errors.BadSignature);\r\n        }\r\n\r\n        self.state = \"HEADER\";\r\n      }\r\n\r\n      var alreadyCollectedLine = false;\r\n      while (self.buffer) {\r\n        // We can't parse a line until we have the full line.\r\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\r\n          return this;\r\n        }\r\n\r\n        if (!alreadyCollectedLine) {\r\n          line = collectNextLine();\r\n        } else {\r\n          alreadyCollectedLine = false;\r\n        }\r\n\r\n        switch (self.state) {\r\n        case \"HEADER\":\r\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\r\n          if (/:/.test(line)) {\r\n            parseHeader(line);\r\n          } else if (!line) {\r\n            // An empty line terminates the header and starts the body (cues).\r\n            self.state = \"ID\";\r\n          }\r\n          continue;\r\n        case \"NOTE\":\r\n          // Ignore NOTE blocks.\r\n          if (!line) {\r\n            self.state = \"ID\";\r\n          }\r\n          continue;\r\n        case \"ID\":\r\n          // Check for the start of NOTE blocks.\r\n          if (/^NOTE($|[ \\t])/.test(line)) {\r\n            self.state = \"NOTE\";\r\n            break;\r\n          }\r\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\r\n          if (!line) {\r\n            continue;\r\n          }\r\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\r\n          // Safari still uses the old middle value and won't accept center\r\n          try {\r\n            self.cue.align = \"center\";\r\n          } catch (e) {\r\n            self.cue.align = \"middle\";\r\n          }\r\n          self.state = \"CUE\";\r\n          // 30-39 - Check if self line contains an optional identifier or timing data.\r\n          if (line.indexOf(\"-->\") === -1) {\r\n            self.cue.id = line;\r\n            continue;\r\n          }\r\n          // Process line as start of a cue.\r\n          /*falls through*/\r\n        case \"CUE\":\r\n          // 40 - Collect cue timings and settings.\r\n          try {\r\n            parseCue(line, self.cue, self.regionList);\r\n          } catch (e) {\r\n            self.reportOrThrowError(e);\r\n            // In case of an error ignore rest of the cue.\r\n            self.cue = null;\r\n            self.state = \"BADCUE\";\r\n            continue;\r\n          }\r\n          self.state = \"CUETEXT\";\r\n          continue;\r\n        case \"CUETEXT\":\r\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\r\n          // 34 - If we have an empty line then report the cue.\r\n          // 35 - If we have the special substring '-->' then report the cue,\r\n          // but do not collect the line as we need to process the current\r\n          // one as a new cue.\r\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\r\n            // We are done parsing self cue.\r\n            self.oncue && self.oncue(self.cue);\r\n            self.cue = null;\r\n            self.state = \"ID\";\r\n            continue;\r\n          }\r\n          if (self.cue.text) {\r\n            self.cue.text += \"\\n\";\r\n          }\r\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\r\n          continue;\r\n        case \"BADCUE\": // BADCUE\r\n          // 54-62 - Collect and discard the remaining cue.\r\n          if (!line) {\r\n            self.state = \"ID\";\r\n          }\r\n          continue;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      self.reportOrThrowError(e);\r\n\r\n      // If we are currently parsing a cue, report what we have.\r\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\r\n        self.oncue(self.cue);\r\n      }\r\n      self.cue = null;\r\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\r\n      // another exception occurred so enter BADCUE state.\r\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\r\n    }\r\n    return this;\r\n  },\r\n  flush: function () {\r\n    var self = this;\r\n    try {\r\n      // Finish decoding the stream.\r\n      self.buffer += self.decoder.decode();\r\n      // Synthesize the end of the current cue or region.\r\n      if (self.cue || self.state === \"HEADER\") {\r\n        self.buffer += \"\\n\\n\";\r\n        self.parse();\r\n      }\r\n      // If we've flushed, parsed, and we're still on the INITIAL state then\r\n      // that means we don't have enough of the stream to parse the first\r\n      // line.\r\n      if (self.state === \"INITIAL\") {\r\n        throw new ParsingError(ParsingError.Errors.BadSignature);\r\n      }\r\n    } catch(e) {\r\n      self.reportOrThrowError(e);\r\n    }\r\n    self.onflush && self.onflush();\r\n    return this;\r\n  }\r\n};\r\n\r\nmodule.exports = WebVTT;\r\n", "/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nvar autoKeyword = \"auto\";\r\nvar directionSetting = {\r\n  \"\": 1,\r\n  \"lr\": 1,\r\n  \"rl\": 1\r\n};\r\nvar alignSetting = {\r\n  \"start\": 1,\r\n  \"center\": 1,\r\n  \"end\": 1,\r\n  \"left\": 1,\r\n  \"right\": 1,\r\n  \"auto\": 1,\r\n  \"line-left\": 1,\r\n  \"line-right\": 1\r\n};\r\n\r\nfunction findDirectionSetting(value) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  var dir = directionSetting[value.toLowerCase()];\r\n  return dir ? value.toLowerCase() : false;\r\n}\r\n\r\nfunction findAlignSetting(value) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  var align = alignSetting[value.toLowerCase()];\r\n  return align ? value.toLowerCase() : false;\r\n}\r\n\r\nfunction VTTCue(startTime, endTime, text) {\r\n  /**\r\n   * Shim implementation specific properties. These properties are not in\r\n   * the spec.\r\n   */\r\n\r\n  // Lets us know when the VTTCue's data has changed in such a way that we need\r\n  // to recompute its display state. This lets us compute its display state\r\n  // lazily.\r\n  this.hasBeenReset = false;\r\n\r\n  /**\r\n   * VTTCue and TextTrackCue properties\r\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\r\n   */\r\n\r\n  var _id = \"\";\r\n  var _pauseOnExit = false;\r\n  var _startTime = startTime;\r\n  var _endTime = endTime;\r\n  var _text = text;\r\n  var _region = null;\r\n  var _vertical = \"\";\r\n  var _snapToLines = true;\r\n  var _line = \"auto\";\r\n  var _lineAlign = \"start\";\r\n  var _position = \"auto\";\r\n  var _positionAlign = \"auto\";\r\n  var _size = 100;\r\n  var _align = \"center\";\r\n\r\n  Object.defineProperties(this, {\r\n    \"id\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _id;\r\n      },\r\n      set: function(value) {\r\n        _id = \"\" + value;\r\n      }\r\n    },\r\n\r\n    \"pauseOnExit\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _pauseOnExit;\r\n      },\r\n      set: function(value) {\r\n        _pauseOnExit = !!value;\r\n      }\r\n    },\r\n\r\n    \"startTime\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _startTime;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\") {\r\n          throw new TypeError(\"Start time must be set to a number.\");\r\n        }\r\n        _startTime = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"endTime\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _endTime;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\") {\r\n          throw new TypeError(\"End time must be set to a number.\");\r\n        }\r\n        _endTime = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"text\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _text;\r\n      },\r\n      set: function(value) {\r\n        _text = \"\" + value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"region\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _region;\r\n      },\r\n      set: function(value) {\r\n        _region = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"vertical\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _vertical;\r\n      },\r\n      set: function(value) {\r\n        var setting = findDirectionSetting(value);\r\n        // Have to check for false because the setting an be an empty string.\r\n        if (setting === false) {\r\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\r\n        }\r\n        _vertical = setting;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"snapToLines\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _snapToLines;\r\n      },\r\n      set: function(value) {\r\n        _snapToLines = !!value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"line\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _line;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\" && value !== autoKeyword) {\r\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\r\n        }\r\n        _line = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"lineAlign\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _lineAlign;\r\n      },\r\n      set: function(value) {\r\n        var setting = findAlignSetting(value);\r\n        if (!setting) {\r\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\r\n        } else {\r\n          _lineAlign = setting;\r\n          this.hasBeenReset = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    \"position\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _position;\r\n      },\r\n      set: function(value) {\r\n        if (value < 0 || value > 100) {\r\n          throw new Error(\"Position must be between 0 and 100.\");\r\n        }\r\n        _position = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"positionAlign\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _positionAlign;\r\n      },\r\n      set: function(value) {\r\n        var setting = findAlignSetting(value);\r\n        if (!setting) {\r\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\r\n        } else {\r\n          _positionAlign = setting;\r\n          this.hasBeenReset = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    \"size\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _size;\r\n      },\r\n      set: function(value) {\r\n        if (value < 0 || value > 100) {\r\n          throw new Error(\"Size must be between 0 and 100.\");\r\n        }\r\n        _size = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    },\r\n\r\n    \"align\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _align;\r\n      },\r\n      set: function(value) {\r\n        var setting = findAlignSetting(value);\r\n        if (!setting) {\r\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\r\n        }\r\n        _align = setting;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Other <track> spec defined properties\r\n   */\r\n\r\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\r\n  this.displayState = undefined;\r\n}\r\n\r\n/**\r\n * VTTCue methods\r\n */\r\n\r\nVTTCue.prototype.getCueAsHTML = function() {\r\n  // Assume WebVTT.convertCueToDOMTree is on the global.\r\n  return WebVTT.convertCueToDOMTree(window, this.text);\r\n};\r\n\r\nmodule.exports = VTTCue;\r\n", "/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nvar scrollSetting = {\r\n  \"\": true,\r\n  \"up\": true\r\n};\r\n\r\nfunction findScrollSetting(value) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  var scroll = scrollSetting[value.toLowerCase()];\r\n  return scroll ? value.toLowerCase() : false;\r\n}\r\n\r\nfunction isValidPercentValue(value) {\r\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\r\n}\r\n\r\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\r\nfunction VTTRegion() {\r\n  var _width = 100;\r\n  var _lines = 3;\r\n  var _regionAnchorX = 0;\r\n  var _regionAnchorY = 100;\r\n  var _viewportAnchorX = 0;\r\n  var _viewportAnchorY = 100;\r\n  var _scroll = \"\";\r\n\r\n  Object.defineProperties(this, {\r\n    \"width\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _width;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"Width must be between 0 and 100.\");\r\n        }\r\n        _width = value;\r\n      }\r\n    },\r\n    \"lines\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _lines;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\") {\r\n          throw new TypeError(\"Lines must be set to a number.\");\r\n        }\r\n        _lines = value;\r\n      }\r\n    },\r\n    \"regionAnchorY\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _regionAnchorY;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\r\n        }\r\n        _regionAnchorY = value;\r\n      }\r\n    },\r\n    \"regionAnchorX\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _regionAnchorX;\r\n      },\r\n      set: function(value) {\r\n        if(!isValidPercentValue(value)) {\r\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\r\n        }\r\n        _regionAnchorX = value;\r\n      }\r\n    },\r\n    \"viewportAnchorY\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _viewportAnchorY;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\r\n        }\r\n        _viewportAnchorY = value;\r\n      }\r\n    },\r\n    \"viewportAnchorX\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _viewportAnchorX;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\r\n        }\r\n        _viewportAnchorX = value;\r\n      }\r\n    },\r\n    \"scroll\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _scroll;\r\n      },\r\n      set: function(value) {\r\n        var setting = findScrollSetting(value);\r\n        // Have to check for false as an empty string is a legal value.\r\n        if (setting === false) {\r\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\r\n        } else {\r\n          _scroll = setting;\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = VTTRegion;\r\n", "/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Default exports for Node. Export the extended versions of VTTCue and\r\n// VTTRegion in Node since we likely want the capability to convert back and\r\n// forth between JSON. If we don't then it's not that big of a deal since we're\r\n// off browser.\r\n\r\nvar window = require('global/window');\r\n\r\nvar vttjs = module.exports = {\r\n  WebVTT: require(\"./vtt.js\"),\r\n  VTTCue: require(\"./vttcue.js\"),\r\n  VTTRegion: require(\"./vttregion.js\")\r\n};\r\n\r\nwindow.vttjs = vttjs;\r\nwindow.WebVTT = vttjs.WebVTT;\r\n\r\nvar cueShim = vttjs.VTTCue;\r\nvar regionShim = vttjs.VTTRegion;\r\nvar nativeVTTCue = window.VTTCue;\r\nvar nativeVTTRegion = window.VTTRegion;\r\n\r\nvttjs.shim = function() {\r\n  window.VTTCue = cueShim;\r\n  window.VTTRegion = regionShim;\r\n};\r\n\r\nvttjs.restore = function() {\r\n  window.VTTCue = nativeVTTCue;\r\n  window.VTTRegion = nativeVTTRegion;\r\n};\r\n\r\nif (!window.VTTCue) {\r\n  vttjs.shim();\r\n}\r\n", "// see https://tools.ietf.org/html/rfc1808\r\n\r\n(function (root) {\r\n  var URL_REGEX =\r\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\r\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\r\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\r\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\r\n\r\n  var URLToolkit = {\r\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\r\n    // E.g\r\n    // With opts.alwaysNormalize = false (default, spec compliant)\r\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\r\n    // With opts.alwaysNormalize = true (not spec compliant)\r\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\r\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\r\n      opts = opts || {};\r\n      // remove any remaining space and CRLF\r\n      baseURL = baseURL.trim();\r\n      relativeURL = relativeURL.trim();\r\n      if (!relativeURL) {\r\n        // 2a) If the embedded URL is entirely empty, it inherits the\r\n        // entire base URL (i.e., is set equal to the base URL)\r\n        // and we are done.\r\n        if (!opts.alwaysNormalize) {\r\n          return baseURL;\r\n        }\r\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\r\n        if (!basePartsForNormalise) {\r\n          throw new Error('Error trying to parse base URL.');\r\n        }\r\n        basePartsForNormalise.path = URLToolkit.normalizePath(\r\n          basePartsForNormalise.path\r\n        );\r\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\r\n      }\r\n      var relativeParts = URLToolkit.parseURL(relativeURL);\r\n      if (!relativeParts) {\r\n        throw new Error('Error trying to parse relative URL.');\r\n      }\r\n      if (relativeParts.scheme) {\r\n        // 2b) If the embedded URL starts with a scheme name, it is\r\n        // interpreted as an absolute URL and we are done.\r\n        if (!opts.alwaysNormalize) {\r\n          return relativeURL;\r\n        }\r\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\r\n        return URLToolkit.buildURLFromParts(relativeParts);\r\n      }\r\n      var baseParts = URLToolkit.parseURL(baseURL);\r\n      if (!baseParts) {\r\n        throw new Error('Error trying to parse base URL.');\r\n      }\r\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\r\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\r\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\r\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\r\n        baseParts.netLoc = pathParts[1];\r\n        baseParts.path = pathParts[2];\r\n      }\r\n      if (baseParts.netLoc && !baseParts.path) {\r\n        baseParts.path = '/';\r\n      }\r\n      var builtParts = {\r\n        // 2c) Otherwise, the embedded URL inherits the scheme of\r\n        // the base URL.\r\n        scheme: baseParts.scheme,\r\n        netLoc: relativeParts.netLoc,\r\n        path: null,\r\n        params: relativeParts.params,\r\n        query: relativeParts.query,\r\n        fragment: relativeParts.fragment,\r\n      };\r\n      if (!relativeParts.netLoc) {\r\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\r\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\r\n        // (if any) of the base URL.\r\n        builtParts.netLoc = baseParts.netLoc;\r\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\r\n        // path is not relative and we skip to Step 7.\r\n        if (relativeParts.path[0] !== '/') {\r\n          if (!relativeParts.path) {\r\n            // 5) If the embedded URL path is empty (and not preceded by a\r\n            // slash), then the embedded URL inherits the base URL path\r\n            builtParts.path = baseParts.path;\r\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\r\n            // step 7; otherwise, it inherits the <params> of the base\r\n            // URL (if any) and\r\n            if (!relativeParts.params) {\r\n              builtParts.params = baseParts.params;\r\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\r\n              // step 7; otherwise, it inherits the <query> of the base\r\n              // URL (if any) and we skip to step 7.\r\n              if (!relativeParts.query) {\r\n                builtParts.query = baseParts.query;\r\n              }\r\n            }\r\n          } else {\r\n            // 6) The last segment of the base URL's path (anything\r\n            // following the rightmost slash \"/\", or the entire path if no\r\n            // slash is present) is removed and the embedded URL's path is\r\n            // appended in its place.\r\n            var baseURLPath = baseParts.path;\r\n            var newPath =\r\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\r\n              relativeParts.path;\r\n            builtParts.path = URLToolkit.normalizePath(newPath);\r\n          }\r\n        }\r\n      }\r\n      if (builtParts.path === null) {\r\n        builtParts.path = opts.alwaysNormalize\r\n          ? URLToolkit.normalizePath(relativeParts.path)\r\n          : relativeParts.path;\r\n      }\r\n      return URLToolkit.buildURLFromParts(builtParts);\r\n    },\r\n    parseURL: function (url) {\r\n      var parts = URL_REGEX.exec(url);\r\n      if (!parts) {\r\n        return null;\r\n      }\r\n      return {\r\n        scheme: parts[1] || '',\r\n        netLoc: parts[2] || '',\r\n        path: parts[3] || '',\r\n        params: parts[4] || '',\r\n        query: parts[5] || '',\r\n        fragment: parts[6] || '',\r\n      };\r\n    },\r\n    normalizePath: function (path) {\r\n      // The following operations are\r\n      // then applied, in order, to the new path:\r\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\r\n      // segment, are removed.\r\n      // 6b) If the path ends with \".\" as a complete path segment,\r\n      // that \".\" is removed.\r\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\r\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\r\n      // complete path segment not equal to \"..\", are removed.\r\n      // Removal of these path segments is performed iteratively,\r\n      // removing the leftmost matching pattern on each iteration,\r\n      // until no matching pattern remains.\r\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\r\n      // complete path segment not equal to \"..\", that\r\n      // \"<segment>/..\" is removed.\r\n      while (\r\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\r\n      ) {}\r\n      return path.split('').reverse().join('');\r\n    },\r\n    buildURLFromParts: function (parts) {\r\n      return (\r\n        parts.scheme +\r\n        parts.netLoc +\r\n        parts.path +\r\n        parts.params +\r\n        parts.query +\r\n        parts.fragment\r\n      );\r\n    },\r\n  };\r\n\r\n  if (typeof exports === 'object' && typeof module === 'object')\r\n    module.exports = URLToolkit;\r\n  else if (typeof define === 'function' && define.amd)\r\n    define([], function () {\r\n      return URLToolkit;\r\n    });\r\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\r\n  else root['URLToolkit'] = URLToolkit;\r\n})(this);\r\n", "'use strict'\r\n\r\n/**\r\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\r\n *\r\n * Works with anything that has a `length` property and index access properties, including NodeList.\r\n *\r\n * @template {unknown} T\r\n * @param {Array<T> | ({length:number, [number]: T})} list\r\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\r\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\r\n * \t\t\t\tallows injecting a custom implementation in tests\r\n * @returns {T | undefined}\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\r\n */\r\nfunction find(list, predicate, ac) {\r\n\tif (ac === undefined) {\r\n\t\tac = Array.prototype;\r\n\t}\r\n\tif (list && typeof ac.find === 'function') {\r\n\t\treturn ac.find.call(list, predicate);\r\n\t}\r\n\tfor (var i = 0; i < list.length; i++) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tif (predicate.call(undefined, item, i, list)) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * \"Shallow freezes\" an object to render it immutable.\r\n * Uses `Object.freeze` if available,\r\n * otherwise the immutability is only in the type.\r\n *\r\n * Is used to create \"enum like\" objects.\r\n *\r\n * @template T\r\n * @param {T} object the object to freeze\r\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\r\n * \t\t\t\tallows to inject custom object constructor for tests\r\n * @returns {Readonly<T>}\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n */\r\nfunction freeze(object, oc) {\r\n\tif (oc === undefined) {\r\n\t\toc = Object\r\n\t}\r\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\r\n}\r\n\r\n/**\r\n * Since we can not rely on `Object.assign` we provide a simplified version\r\n * that is sufficient for our needs.\r\n *\r\n * @param {Object} target\r\n * @param {Object | null | undefined} source\r\n *\r\n * @returns {Object} target\r\n * @throws TypeError if target is not an object\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\r\n */\r\nfunction assign(target, source) {\r\n\tif (target === null || typeof target !== 'object') {\r\n\t\tthrow new TypeError('target is not an object')\r\n\t}\r\n\tfor (var key in source) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\r\n\t\t\ttarget[key] = source[key]\r\n\t\t}\r\n\t}\r\n\treturn target\r\n}\r\n\r\n/**\r\n * All mime types that are allowed as input to `DOMParser.parseFromString`\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\r\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\r\n * @see DOMParser.prototype.parseFromString\r\n */\r\nvar MIME_TYPE = freeze({\r\n\t/**\r\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\r\n\t *\r\n\t * @see DOMParser.SupportedType.isHTML\r\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\r\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\r\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\r\n\t */\r\n\tHTML: 'text/html',\r\n\r\n\t/**\r\n\t * Helper method to check a mime type if it indicates an HTML document\r\n\t *\r\n\t * @param {string} [value]\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\r\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\r\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\r\n\tisHTML: function (value) {\r\n\t\treturn value === MIME_TYPE.HTML\r\n\t},\r\n\r\n\t/**\r\n\t * `application/xml`, the standard mime type for XML documents.\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\r\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\r\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\r\n\t */\r\n\tXML_APPLICATION: 'application/xml',\r\n\r\n\t/**\r\n\t * `text/html`, an alias for `application/xml`.\r\n\t *\r\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\r\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\r\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\r\n\t */\r\n\tXML_TEXT: 'text/xml',\r\n\r\n\t/**\r\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\r\n\t * but is parsed as an XML document.\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\r\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\r\n\t */\r\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\r\n\r\n\t/**\r\n\t * `image/svg+xml`,\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\r\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\r\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\r\n\t */\r\n\tXML_SVG_IMAGE: 'image/svg+xml',\r\n})\r\n\r\n/**\r\n * Namespaces that are used in this code base.\r\n *\r\n * @see http://www.w3.org/TR/REC-xml-names\r\n */\r\nvar NAMESPACE = freeze({\r\n\t/**\r\n\t * The XHTML namespace.\r\n\t *\r\n\t * @see http://www.w3.org/1999/xhtml\r\n\t */\r\n\tHTML: 'http://www.w3.org/1999/xhtml',\r\n\r\n\t/**\r\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\r\n\t *\r\n\t * @param {string} [uri]\r\n\t *\r\n\t * @see NAMESPACE.HTML\r\n\t */\r\n\tisHTML: function (uri) {\r\n\t\treturn uri === NAMESPACE.HTML\r\n\t},\r\n\r\n\t/**\r\n\t * The SVG namespace.\r\n\t *\r\n\t * @see http://www.w3.org/2000/svg\r\n\t */\r\n\tSVG: 'http://www.w3.org/2000/svg',\r\n\r\n\t/**\r\n\t * The `xml:` namespace.\r\n\t *\r\n\t * @see http://www.w3.org/XML/1998/namespace\r\n\t */\r\n\tXML: 'http://www.w3.org/XML/1998/namespace',\r\n\r\n\t/**\r\n\t * The `xmlns:` namespace\r\n\t *\r\n\t * @see https://www.w3.org/2000/xmlns/\r\n\t */\r\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\r\n})\r\n\r\nexports.assign = assign;\r\nexports.find = find;\r\nexports.freeze = freeze;\r\nexports.MIME_TYPE = MIME_TYPE;\r\nexports.NAMESPACE = NAMESPACE;\r\n", "var conventions = require(\"./conventions\");\r\n\r\nvar find = conventions.find;\r\nvar NAMESPACE = conventions.NAMESPACE;\r\n\r\n/**\r\n * A prerequisite for `[].filter`, to drop elements that are empty\r\n * @param {string} input\r\n * @returns {boolean}\r\n */\r\nfunction notEmptyString (input) {\r\n\treturn input !== ''\r\n}\r\n/**\r\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\r\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\r\n *\r\n * @param {string} input\r\n * @returns {string[]} (can be empty)\r\n */\r\nfunction splitOnASCIIWhitespace(input) {\r\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\r\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\r\n}\r\n\r\n/**\r\n * Adds element as a key to current if it is not already present.\r\n *\r\n * @param {Record<string, boolean | undefined>} current\r\n * @param {string} element\r\n * @returns {Record<string, boolean | undefined>}\r\n */\r\nfunction orderedSetReducer (current, element) {\r\n\tif (!current.hasOwnProperty(element)) {\r\n\t\tcurrent[element] = true;\r\n\t}\r\n\treturn current;\r\n}\r\n\r\n/**\r\n * @see https://infra.spec.whatwg.org/#ordered-set\r\n * @param {string} input\r\n * @returns {string[]}\r\n */\r\nfunction toOrderedSet(input) {\r\n\tif (!input) return [];\r\n\tvar list = splitOnASCIIWhitespace(input);\r\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\r\n}\r\n\r\n/**\r\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\r\n * which we can not rely on being available.\r\n *\r\n * @param {any[]} list\r\n * @returns {function(any): boolean}\r\n */\r\nfunction arrayIncludes (list) {\r\n\treturn function(element) {\r\n\t\treturn list && list.indexOf(element) !== -1;\r\n\t}\r\n}\r\n\r\nfunction copy(src,dest){\r\n\tfor(var p in src){\r\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\r\n\t\t\tdest[p] = src[p];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\r\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\r\n */\r\nfunction _extends(Class,Super){\r\n\tvar pt = Class.prototype;\r\n\tif(!(pt instanceof Super)){\r\n\t\tfunction t(){};\r\n\t\tt.prototype = Super.prototype;\r\n\t\tt = new t();\r\n\t\tcopy(pt,t);\r\n\t\tClass.prototype = pt = t;\r\n\t}\r\n\tif(pt.constructor != Class){\r\n\t\tif(typeof Class != 'function'){\r\n\t\t\tconsole.error(\"unknown Class:\"+Class)\r\n\t\t}\r\n\t\tpt.constructor = Class\r\n\t}\r\n}\r\n\r\n// Node Types\r\nvar NodeType = {}\r\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\r\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\r\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\r\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\r\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\r\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\r\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\r\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\r\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\r\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\r\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\r\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\r\n\r\n// ExceptionCode\r\nvar ExceptionCode = {}\r\nvar ExceptionMessage = {};\r\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\r\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\r\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\r\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\r\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\r\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\r\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\r\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\r\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\r\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\r\n//level2\r\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\r\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\r\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\r\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\r\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\r\n\r\n/**\r\n * DOM Level 2\r\n * Object DOMException\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\r\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\r\n */\r\nfunction DOMException(code, message) {\r\n\tif(message instanceof Error){\r\n\t\tvar error = message;\r\n\t}else{\r\n\t\terror = this;\r\n\t\tError.call(this, ExceptionMessage[code]);\r\n\t\tthis.message = ExceptionMessage[code];\r\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\r\n\t}\r\n\terror.code = code;\r\n\tif(message) this.message = this.message + \": \" + message;\r\n\treturn error;\r\n};\r\nDOMException.prototype = Error.prototype;\r\ncopy(ExceptionCode,DOMException)\r\n\r\n/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\r\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\r\n * The items in the NodeList are accessible via an integral index, starting from 0.\r\n */\r\nfunction NodeList() {\r\n};\r\nNodeList.prototype = {\r\n\t/**\r\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\r\n\t * @standard level1\r\n\t */\r\n\tlength:0,\r\n\t/**\r\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\r\n\t * @standard level1\r\n\t * @param index  unsigned long\r\n\t *   Index into the collection.\r\n\t * @return Node\r\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\r\n\t */\r\n\titem: function(index) {\r\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\r\n\t},\r\n\ttoString:function(isHTML,nodeFilter){\r\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\r\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\r\n\t\t}\r\n\t\treturn buf.join('');\r\n\t},\r\n\t/**\r\n\t * @private\r\n\t * @param {function (Node):boolean} predicate\r\n\t * @returns {Node[]}\r\n\t */\r\n\tfilter: function (predicate) {\r\n\t\treturn Array.prototype.filter.call(this, predicate);\r\n\t},\r\n\t/**\r\n\t * @private\r\n\t * @param {Node} item\r\n\t * @returns {number}\r\n\t */\r\n\tindexOf: function (item) {\r\n\t\treturn Array.prototype.indexOf.call(this, item);\r\n\t},\r\n};\r\n\r\nfunction LiveNodeList(node,refresh){\r\n\tthis._node = node;\r\n\tthis._refresh = refresh\r\n\t_updateLiveList(this);\r\n}\r\nfunction _updateLiveList(list){\r\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\r\n\tif (list._inc !== inc) {\r\n\t\tvar ls = list._refresh(list._node);\r\n\t\t__set__(list,'length',ls.length);\r\n\t\tif (!list.$$length || ls.length < list.$$length) {\r\n\t\t\tfor (var i = ls.length; i in list; i++) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\r\n\t\t\t\t\tdelete list[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcopy(ls,list);\r\n\t\tlist._inc = inc;\r\n\t}\r\n}\r\nLiveNodeList.prototype.item = function(i){\r\n\t_updateLiveList(this);\r\n\treturn this[i] || null;\r\n}\r\n\r\n_extends(LiveNodeList,NodeList);\r\n\r\n/**\r\n * Objects implementing the NamedNodeMap interface are used\r\n * to represent collections of nodes that can be accessed by name.\r\n * Note that NamedNodeMap does not inherit from NodeList;\r\n * NamedNodeMaps are not maintained in any particular order.\r\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\r\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\r\n * and does not imply that the DOM specifies an order to these Nodes.\r\n * NamedNodeMap objects in the DOM are live.\r\n * used for attributes or DocumentType entities\r\n */\r\nfunction NamedNodeMap() {\r\n};\r\n\r\nfunction _findNodeIndex(list,node){\r\n\tvar i = list.length;\r\n\twhile(i--){\r\n\t\tif(list[i] === node){return i}\r\n\t}\r\n}\r\n\r\nfunction _addNamedNode(el,list,newAttr,oldAttr){\r\n\tif(oldAttr){\r\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\r\n\t}else{\r\n\t\tlist[list.length++] = newAttr;\r\n\t}\r\n\tif(el){\r\n\t\tnewAttr.ownerElement = el;\r\n\t\tvar doc = el.ownerDocument;\r\n\t\tif(doc){\r\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\r\n\t\t\t_onAddAttribute(doc,el,newAttr);\r\n\t\t}\r\n\t}\r\n}\r\nfunction _removeNamedNode(el,list,attr){\r\n\t//console.log('remove attr:'+attr)\r\n\tvar i = _findNodeIndex(list,attr);\r\n\tif(i>=0){\r\n\t\tvar lastIndex = list.length-1\r\n\t\twhile(i<lastIndex){\r\n\t\t\tlist[i] = list[++i]\r\n\t\t}\r\n\t\tlist.length = lastIndex;\r\n\t\tif(el){\r\n\t\t\tvar doc = el.ownerDocument;\r\n\t\t\tif(doc){\r\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\r\n\t\t\t\tattr.ownerElement = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\r\n\t}\r\n}\r\nNamedNodeMap.prototype = {\r\n\tlength:0,\r\n\titem:NodeList.prototype.item,\r\n\tgetNamedItem: function(key) {\r\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\r\n//\t\t\treturn null;\r\n//\t\t}\r\n\t\t//console.log()\r\n\t\tvar i = this.length;\r\n\t\twhile(i--){\r\n\t\t\tvar attr = this[i];\r\n\t\t\t//console.log(attr.nodeName,key)\r\n\t\t\tif(attr.nodeName == key){\r\n\t\t\t\treturn attr;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tsetNamedItem: function(attr) {\r\n\t\tvar el = attr.ownerElement;\r\n\t\tif(el && el!=this._ownerElement){\r\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\r\n\t\t}\r\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\r\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\r\n\t\treturn oldAttr;\r\n\t},\r\n\t/* returns Node */\r\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\r\n\t\tvar el = attr.ownerElement, oldAttr;\r\n\t\tif(el && el!=this._ownerElement){\r\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\r\n\t\t}\r\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\r\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\r\n\t\treturn oldAttr;\r\n\t},\r\n\r\n\t/* returns Node */\r\n\tremoveNamedItem: function(key) {\r\n\t\tvar attr = this.getNamedItem(key);\r\n\t\t_removeNamedNode(this._ownerElement,this,attr);\r\n\t\treturn attr;\r\n\r\n\r\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\r\n\r\n\t//for level2\r\n\tremoveNamedItemNS:function(namespaceURI,localName){\r\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\r\n\t\t_removeNamedNode(this._ownerElement,this,attr);\r\n\t\treturn attr;\r\n\t},\r\n\tgetNamedItemNS: function(namespaceURI, localName) {\r\n\t\tvar i = this.length;\r\n\t\twhile(i--){\r\n\t\t\tvar node = this[i];\r\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * The DOMImplementation interface represents an object providing methods\r\n * which are not dependent on any particular document.\r\n * Such an object is returned by the `Document.implementation` property.\r\n *\r\n * __The individual methods describe the differences compared to the specs.__\r\n *\r\n * @constructor\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\r\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\r\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\r\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\r\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\r\n */\r\nfunction DOMImplementation() {\r\n}\r\n\r\nDOMImplementation.prototype = {\r\n\t/**\r\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\r\n\t * The different implementations fairly diverged in what kind of features were reported.\r\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\r\n\t *\r\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\r\n\t *\r\n\t * @param {string} feature\r\n\t * @param {string} [version]\r\n\t * @returns {boolean} always true\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\r\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\r\n\t */\r\n\thasFeature: function(feature, version) {\r\n\t\t\treturn true;\r\n\t},\r\n\t/**\r\n\t * Creates an XML Document object of the specified type with its document element.\r\n\t *\r\n\t * __It behaves slightly different from the description in the living standard__:\r\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\r\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\r\n\t * - this implementation is not validating names or qualified names\r\n\t *   (when parsing XML strings, the SAX parser takes care of that)\r\n\t *\r\n\t * @param {string|null} namespaceURI\r\n\t * @param {string} qualifiedName\r\n\t * @param {DocumentType=null} doctype\r\n\t * @returns {Document}\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\r\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\r\n\t *\r\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\r\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\r\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\r\n\t */\r\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\r\n\t\tvar doc = new Document();\r\n\t\tdoc.implementation = this;\r\n\t\tdoc.childNodes = new NodeList();\r\n\t\tdoc.doctype = doctype || null;\r\n\t\tif (doctype){\r\n\t\t\tdoc.appendChild(doctype);\r\n\t\t}\r\n\t\tif (qualifiedName){\r\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\r\n\t\t\tdoc.appendChild(root);\r\n\t\t}\r\n\t\treturn doc;\r\n\t},\r\n\t/**\r\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\r\n\t *\r\n\t * __This behavior is slightly different from the in the specs__:\r\n\t * - this implementation is not validating names or qualified names\r\n\t *   (when parsing XML strings, the SAX parser takes care of that)\r\n\t *\r\n\t * @param {string} qualifiedName\r\n\t * @param {string} [publicId]\r\n\t * @param {string} [systemId]\r\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\r\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\r\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\r\n\t *\r\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\r\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\r\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\r\n\t */\r\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\r\n\t\tvar node = new DocumentType();\r\n\t\tnode.name = qualifiedName;\r\n\t\tnode.nodeName = qualifiedName;\r\n\t\tnode.publicId = publicId || '';\r\n\t\tnode.systemId = systemId || '';\r\n\r\n\t\treturn node;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\r\n */\r\n\r\nfunction Node() {\r\n};\r\n\r\nNode.prototype = {\r\n\tfirstChild : null,\r\n\tlastChild : null,\r\n\tpreviousSibling : null,\r\n\tnextSibling : null,\r\n\tattributes : null,\r\n\tparentNode : null,\r\n\tchildNodes : null,\r\n\townerDocument : null,\r\n\tnodeValue : null,\r\n\tnamespaceURI : null,\r\n\tprefix : null,\r\n\tlocalName : null,\r\n\t// Modified in DOM Level 2:\r\n\tinsertBefore:function(newChild, refChild){//raises\r\n\t\treturn _insertBefore(this,newChild,refChild);\r\n\t},\r\n\treplaceChild:function(newChild, oldChild){//raises\r\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\r\n\t\tif(oldChild){\r\n\t\t\tthis.removeChild(oldChild);\r\n\t\t}\r\n\t},\r\n\tremoveChild:function(oldChild){\r\n\t\treturn _removeChild(this,oldChild);\r\n\t},\r\n\tappendChild:function(newChild){\r\n\t\treturn this.insertBefore(newChild,null);\r\n\t},\r\n\thasChildNodes:function(){\r\n\t\treturn this.firstChild != null;\r\n\t},\r\n\tcloneNode:function(deep){\r\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\r\n\t},\r\n\t// Modified in DOM Level 2:\r\n\tnormalize:function(){\r\n\t\tvar child = this.firstChild;\r\n\t\twhile(child){\r\n\t\t\tvar next = child.nextSibling;\r\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\r\n\t\t\t\tthis.removeChild(next);\r\n\t\t\t\tchild.appendData(next.data);\r\n\t\t\t}else{\r\n\t\t\t\tchild.normalize();\r\n\t\t\t\tchild = next;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n  \t// Introduced in DOM Level 2:\r\n\tisSupported:function(feature, version){\r\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\r\n\t},\r\n    // Introduced in DOM Level 2:\r\n    hasAttributes:function(){\r\n    \treturn this.attributes.length>0;\r\n    },\r\n\t/**\r\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\r\n\t * **The default namespace declarations are ignored by this method.**\r\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\r\n\t *\r\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\r\n\t *\r\n\t * @param {string | null} namespaceURI\r\n\t * @returns {string | null}\r\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\r\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\r\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\r\n\t * @see https://github.com/xmldom/xmldom/issues/322\r\n\t */\r\n    lookupPrefix:function(namespaceURI){\r\n    \tvar el = this;\r\n    \twhile(el){\r\n    \t\tvar map = el._nsMap;\r\n    \t\t//console.dir(map)\r\n    \t\tif(map){\r\n    \t\t\tfor(var n in map){\r\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\r\n\t\t\t\t\t\t\treturn n;\r\n\t\t\t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\r\n    \t}\r\n    \treturn null;\r\n    },\r\n    // Introduced in DOM Level 3:\r\n    lookupNamespaceURI:function(prefix){\r\n    \tvar el = this;\r\n    \twhile(el){\r\n    \t\tvar map = el._nsMap;\r\n    \t\t//console.dir(map)\r\n    \t\tif(map){\r\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\r\n    \t\t\t\treturn map[prefix] ;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\r\n    \t}\r\n    \treturn null;\r\n    },\r\n    // Introduced in DOM Level 3:\r\n    isDefaultNamespace:function(namespaceURI){\r\n    \tvar prefix = this.lookupPrefix(namespaceURI);\r\n    \treturn prefix == null;\r\n    }\r\n};\r\n\r\n\r\nfunction _xmlEncoder(c){\r\n\treturn c == '<' && '&lt;' ||\r\n         c == '>' && '&gt;' ||\r\n         c == '&' && '&amp;' ||\r\n         c == '\"' && '&quot;' ||\r\n         '&#'+c.charCodeAt()+';'\r\n}\r\n\r\n\r\ncopy(NodeType,Node);\r\ncopy(NodeType,Node.prototype);\r\n\r\n/**\r\n * @param callback return true for continue,false for break\r\n * @return boolean true: break visit;\r\n */\r\nfunction _visitNode(node,callback){\r\n\tif(callback(node)){\r\n\t\treturn true;\r\n\t}\r\n\tif(node = node.firstChild){\r\n\t\tdo{\r\n\t\t\tif(_visitNode(node,callback)){return true}\r\n        }while(node=node.nextSibling)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Document(){\r\n\tthis.ownerDocument = this;\r\n}\r\n\r\nfunction _onAddAttribute(doc,el,newAttr){\r\n\tdoc && doc._inc++;\r\n\tvar ns = newAttr.namespaceURI ;\r\n\tif(ns === NAMESPACE.XMLNS){\r\n\t\t//update namespace\r\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\r\n\t}\r\n}\r\n\r\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\r\n\tdoc && doc._inc++;\r\n\tvar ns = newAttr.namespaceURI ;\r\n\tif(ns === NAMESPACE.XMLNS){\r\n\t\t//update namespace\r\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\r\n\t}\r\n}\r\n\r\n/**\r\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\r\n * Passing `newChild` means it will be appended.\r\n * Otherwise it's assumed that an item has been removed,\r\n * and `el.firstNode` and it's `.nextSibling` are used\r\n * to walk the current list of child nodes.\r\n *\r\n * @param {Document} doc\r\n * @param {Node} el\r\n * @param {Node} [newChild]\r\n * @private\r\n */\r\nfunction _onUpdateChild (doc, el, newChild) {\r\n\tif(doc && doc._inc){\r\n\t\tdoc._inc++;\r\n\t\t//update childNodes\r\n\t\tvar cs = el.childNodes;\r\n\t\tif (newChild) {\r\n\t\t\tcs[cs.length++] = newChild;\r\n\t\t} else {\r\n\t\t\tvar child = el.firstChild;\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (child) {\r\n\t\t\t\tcs[i++] = child;\r\n\t\t\t\tchild = child.nextSibling;\r\n\t\t\t}\r\n\t\t\tcs.length = i;\r\n\t\t\tdelete cs[cs.length];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes the connections between `parentNode` and `child`\r\n * and any existing `child.previousSibling` or `child.nextSibling`.\r\n *\r\n * @see https://github.com/xmldom/xmldom/issues/135\r\n * @see https://github.com/xmldom/xmldom/issues/145\r\n *\r\n * @param {Node} parentNode\r\n * @param {Node} child\r\n * @returns {Node} the child that was removed.\r\n * @private\r\n */\r\nfunction _removeChild (parentNode, child) {\r\n\tvar previous = child.previousSibling;\r\n\tvar next = child.nextSibling;\r\n\tif (previous) {\r\n\t\tprevious.nextSibling = next;\r\n\t} else {\r\n\t\tparentNode.firstChild = next;\r\n\t}\r\n\tif (next) {\r\n\t\tnext.previousSibling = previous;\r\n\t} else {\r\n\t\tparentNode.lastChild = previous;\r\n\t}\r\n\tchild.parentNode = null;\r\n\tchild.previousSibling = null;\r\n\tchild.nextSibling = null;\r\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\r\n\treturn child;\r\n}\r\n\r\n/**\r\n * Returns `true` if `node` can be a parent for insertion.\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction hasValidParentNodeType(node) {\r\n\treturn (\r\n\t\tnode &&\r\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\r\n\t);\r\n}\r\n\r\n/**\r\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction hasInsertableNodeType(node) {\r\n\treturn (\r\n\t\tnode &&\r\n\t\t(isElementNode(node) ||\r\n\t\t\tisTextNode(node) ||\r\n\t\t\tisDocTypeNode(node) ||\r\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\r\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\r\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\r\n\t);\r\n}\r\n\r\n/**\r\n * Returns true if `node` is a DOCTYPE node\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction isDocTypeNode(node) {\r\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\r\n}\r\n\r\n/**\r\n * Returns true if the node is an element\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction isElementNode(node) {\r\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\r\n}\r\n/**\r\n * Returns true if `node` is a text node\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction isTextNode(node) {\r\n\treturn node && node.nodeType === Node.TEXT_NODE;\r\n}\r\n\r\n/**\r\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\r\n * according to the presence and position of a doctype node on the same level.\r\n *\r\n * @param {Document} doc The document node\r\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\r\n * @returns {boolean} `true` if an element can be inserted before child\r\n * @private\r\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\r\nfunction isElementInsertionPossible(doc, child) {\r\n\tvar parentChildNodes = doc.childNodes || [];\r\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\r\n\t\treturn false;\r\n\t}\r\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\r\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\r\n}\r\n\r\n/**\r\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\r\n * according to the presence and position of a doctype node on the same level.\r\n *\r\n * @param {Node} doc The document node\r\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\r\n * @returns {boolean} `true` if an element can be inserted before child\r\n * @private\r\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\r\nfunction isElementReplacementPossible(doc, child) {\r\n\tvar parentChildNodes = doc.childNodes || [];\r\n\r\n\tfunction hasElementChildThatIsNotChild(node) {\r\n\t\treturn isElementNode(node) && node !== child;\r\n\t}\r\n\r\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\r\n\t\treturn false;\r\n\t}\r\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\r\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\r\n}\r\n\r\n/**\r\n * @private\r\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\r\n *\r\n * @param {Node} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node=} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\r\nfunction assertPreInsertionValidity1to5(parent, node, child) {\r\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\r\n\tif (!hasValidParentNodeType(parent)) {\r\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\r\n\t}\r\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\r\n\t// not implemented!\r\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\r\n\tif (child && child.parentNode !== parent) {\r\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\r\n\t}\r\n\tif (\r\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\r\n\t\t!hasInsertableNodeType(node) ||\r\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\r\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\r\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\r\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\r\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\r\n\t) {\r\n\t\tthrow new DOMException(\r\n\t\t\tHIERARCHY_REQUEST_ERR,\r\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n * Step 6 of the checks before inserting and before replacing a child are different.\r\n *\r\n * @param {Document} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\r\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\r\n\tvar parentChildNodes = parent.childNodes || [];\r\n\tvar nodeChildNodes = node.childNodes || [];\r\n\r\n\t// DocumentFragment\r\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\r\n\t\t// If node has more than one element child or has a Text node child.\r\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\r\n\t\t}\r\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\r\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\r\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\r\n\t\t}\r\n\t}\r\n\t// Element\r\n\tif (isElementNode(node)) {\r\n\t\t// `parent` has an element child, `child` is a doctype,\r\n\t\t// or `child` is non-null and a doctype is following `child`.\r\n\t\tif (!isElementInsertionPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\r\n\t\t}\r\n\t}\r\n\t// DocumentType\r\n\tif (isDocTypeNode(node)) {\r\n\t\t// `parent` has a doctype child,\r\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\r\n\t\t}\r\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\r\n\t\t// `child` is non-null and an element is preceding `child`,\r\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\r\n\t\t}\r\n\t\t// or `child` is null and `parent` has an element child.\r\n\t\tif (!child && parentElementChild) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n * Step 6 of the checks before inserting and before replacing a child are different.\r\n *\r\n * @param {Document} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\r\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\r\n\tvar parentChildNodes = parent.childNodes || [];\r\n\tvar nodeChildNodes = node.childNodes || [];\r\n\r\n\t// DocumentFragment\r\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\r\n\t\t// If `node` has more than one element child or has a Text node child.\r\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\r\n\t\t}\r\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\r\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\r\n\t\t}\r\n\t}\r\n\t// Element\r\n\tif (isElementNode(node)) {\r\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\r\n\t\tif (!isElementReplacementPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\r\n\t\t}\r\n\t}\r\n\t// DocumentType\r\n\tif (isDocTypeNode(node)) {\r\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\r\n\t\t\treturn isDocTypeNode(node) && node !== child;\r\n\t\t}\r\n\r\n\t\t// `parent` has a doctype child that is not `child`,\r\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\r\n\t\t}\r\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\r\n\t\t// or an element is preceding `child`.\r\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {Node} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node=} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\r\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\r\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\r\n\tassertPreInsertionValidity1to5(parent, node, child);\r\n\r\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\r\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\r\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\r\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\r\n\t}\r\n\r\n\tvar cp = node.parentNode;\r\n\tif(cp){\r\n\t\tcp.removeChild(node);//remove and update\r\n\t}\r\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\r\n\t\tvar newFirst = node.firstChild;\r\n\t\tif (newFirst == null) {\r\n\t\t\treturn node;\r\n\t\t}\r\n\t\tvar newLast = node.lastChild;\r\n\t}else{\r\n\t\tnewFirst = newLast = node;\r\n\t}\r\n\tvar pre = child ? child.previousSibling : parent.lastChild;\r\n\r\n\tnewFirst.previousSibling = pre;\r\n\tnewLast.nextSibling = child;\r\n\r\n\r\n\tif(pre){\r\n\t\tpre.nextSibling = newFirst;\r\n\t}else{\r\n\t\tparent.firstChild = newFirst;\r\n\t}\r\n\tif(child == null){\r\n\t\tparent.lastChild = newLast;\r\n\t}else{\r\n\t\tchild.previousSibling = newLast;\r\n\t}\r\n\tdo{\r\n\t\tnewFirst.parentNode = parent;\r\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\r\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\r\n\t//console.log(parent.lastChild.nextSibling == null)\r\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\r\n\t\tnode.firstChild = node.lastChild = null;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\n/**\r\n * Appends `newChild` to `parentNode`.\r\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\r\n *\r\n * @see https://github.com/xmldom/xmldom/issues/135\r\n * @see https://github.com/xmldom/xmldom/issues/145\r\n * @param {Node} parentNode\r\n * @param {Node} newChild\r\n * @returns {Node}\r\n * @private\r\n */\r\nfunction _appendSingleChild (parentNode, newChild) {\r\n\tif (newChild.parentNode) {\r\n\t\tnewChild.parentNode.removeChild(newChild);\r\n\t}\r\n\tnewChild.parentNode = parentNode;\r\n\tnewChild.previousSibling = parentNode.lastChild;\r\n\tnewChild.nextSibling = null;\r\n\tif (newChild.previousSibling) {\r\n\t\tnewChild.previousSibling.nextSibling = newChild;\r\n\t} else {\r\n\t\tparentNode.firstChild = newChild;\r\n\t}\r\n\tparentNode.lastChild = newChild;\r\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\r\n\treturn newChild;\r\n}\r\n\r\nDocument.prototype = {\r\n\t//implementation : null,\r\n\tnodeName :  '#document',\r\n\tnodeType :  DOCUMENT_NODE,\r\n\t/**\r\n\t * The DocumentType node of the document.\r\n\t *\r\n\t * @readonly\r\n\t * @type DocumentType\r\n\t */\r\n\tdoctype :  null,\r\n\tdocumentElement :  null,\r\n\t_inc : 1,\r\n\r\n\tinsertBefore :  function(newChild, refChild){//raises\r\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\r\n\t\t\tvar child = newChild.firstChild;\r\n\t\t\twhile(child){\r\n\t\t\t\tvar next = child.nextSibling;\r\n\t\t\t\tthis.insertBefore(child,refChild);\r\n\t\t\t\tchild = next;\r\n\t\t\t}\r\n\t\t\treturn newChild;\r\n\t\t}\r\n\t\t_insertBefore(this, newChild, refChild);\r\n\t\tnewChild.ownerDocument = this;\r\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\r\n\t\t\tthis.documentElement = newChild;\r\n\t\t}\r\n\r\n\t\treturn newChild;\r\n\t},\r\n\tremoveChild :  function(oldChild){\r\n\t\tif(this.documentElement == oldChild){\r\n\t\t\tthis.documentElement = null;\r\n\t\t}\r\n\t\treturn _removeChild(this,oldChild);\r\n\t},\r\n\treplaceChild: function (newChild, oldChild) {\r\n\t\t//raises\r\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\r\n\t\tnewChild.ownerDocument = this;\r\n\t\tif (oldChild) {\r\n\t\t\tthis.removeChild(oldChild);\r\n\t\t}\r\n\t\tif (isElementNode(newChild)) {\r\n\t\t\tthis.documentElement = newChild;\r\n\t\t}\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\timportNode : function(importedNode,deep){\r\n\t\treturn importNode(this,importedNode,deep);\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\tgetElementById :\tfunction(id){\r\n\t\tvar rtv = null;\r\n\t\t_visitNode(this.documentElement,function(node){\r\n\t\t\tif(node.nodeType == ELEMENT_NODE){\r\n\t\t\t\tif(node.getAttribute('id') == id){\r\n\t\t\t\t\trtv = node;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn rtv;\r\n\t},\r\n\r\n\t/**\r\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\r\n\t * of all child elements which have **all** of the given class name(s).\r\n\t *\r\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\r\n\t *\r\n\t *\r\n\t * Warning: This is a live LiveNodeList.\r\n\t * Changes in the DOM will reflect in the array as the changes occur.\r\n\t * If an element selected by this array no longer qualifies for the selector,\r\n\t * it will automatically be removed. Be aware of this for iteration purposes.\r\n\t *\r\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\r\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\r\n\t */\r\n\tgetElementsByClassName: function(classNames) {\r\n\t\tvar classNamesSet = toOrderedSet(classNames)\r\n\t\treturn new LiveNodeList(this, function(base) {\r\n\t\t\tvar ls = [];\r\n\t\t\tif (classNamesSet.length > 0) {\r\n\t\t\t\t_visitNode(base.documentElement, function(node) {\r\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\r\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\r\n\t\t\t\t\t\t// can be null if the attribute does not exist\r\n\t\t\t\t\t\tif (nodeClassNames) {\r\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\r\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\r\n\t\t\t\t\t\t\tif (!matches) {\r\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\r\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(matches) {\r\n\t\t\t\t\t\t\t\tls.push(node);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn ls;\r\n\t\t});\r\n\t},\r\n\r\n\t//document factory method:\r\n\tcreateElement :\tfunction(tagName){\r\n\t\tvar node = new Element();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.nodeName = tagName;\r\n\t\tnode.tagName = tagName;\r\n\t\tnode.localName = tagName;\r\n\t\tnode.childNodes = new NodeList();\r\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\r\n\t\tattrs._ownerElement = node;\r\n\t\treturn node;\r\n\t},\r\n\tcreateDocumentFragment :\tfunction(){\r\n\t\tvar node = new DocumentFragment();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.childNodes = new NodeList();\r\n\t\treturn node;\r\n\t},\r\n\tcreateTextNode :\tfunction(data){\r\n\t\tvar node = new Text();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.appendData(data)\r\n\t\treturn node;\r\n\t},\r\n\tcreateComment :\tfunction(data){\r\n\t\tvar node = new Comment();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.appendData(data)\r\n\t\treturn node;\r\n\t},\r\n\tcreateCDATASection :\tfunction(data){\r\n\t\tvar node = new CDATASection();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.appendData(data)\r\n\t\treturn node;\r\n\t},\r\n\tcreateProcessingInstruction :\tfunction(target,data){\r\n\t\tvar node = new ProcessingInstruction();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.tagName = node.nodeName = node.target = target;\r\n\t\tnode.nodeValue = node.data = data;\r\n\t\treturn node;\r\n\t},\r\n\tcreateAttribute :\tfunction(name){\r\n\t\tvar node = new Attr();\r\n\t\tnode.ownerDocument\t= this;\r\n\t\tnode.name = name;\r\n\t\tnode.nodeName\t= name;\r\n\t\tnode.localName = name;\r\n\t\tnode.specified = true;\r\n\t\treturn node;\r\n\t},\r\n\tcreateEntityReference :\tfunction(name){\r\n\t\tvar node = new EntityReference();\r\n\t\tnode.ownerDocument\t= this;\r\n\t\tnode.nodeName\t= name;\r\n\t\treturn node;\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\r\n\t\tvar node = new Element();\r\n\t\tvar pl = qualifiedName.split(':');\r\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\r\n\t\tnode.childNodes = new NodeList();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.nodeName = qualifiedName;\r\n\t\tnode.tagName = qualifiedName;\r\n\t\tnode.namespaceURI = namespaceURI;\r\n\t\tif(pl.length == 2){\r\n\t\t\tnode.prefix = pl[0];\r\n\t\t\tnode.localName = pl[1];\r\n\t\t}else{\r\n\t\t\t//el.prefix = null;\r\n\t\t\tnode.localName = qualifiedName;\r\n\t\t}\r\n\t\tattrs._ownerElement = node;\r\n\t\treturn node;\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\r\n\t\tvar node = new Attr();\r\n\t\tvar pl = qualifiedName.split(':');\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.nodeName = qualifiedName;\r\n\t\tnode.name = qualifiedName;\r\n\t\tnode.namespaceURI = namespaceURI;\r\n\t\tnode.specified = true;\r\n\t\tif(pl.length == 2){\r\n\t\t\tnode.prefix = pl[0];\r\n\t\t\tnode.localName = pl[1];\r\n\t\t}else{\r\n\t\t\t//el.prefix = null;\r\n\t\t\tnode.localName = qualifiedName;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n};\r\n_extends(Document,Node);\r\n\r\n\r\nfunction Element() {\r\n\tthis._nsMap = {};\r\n};\r\nElement.prototype = {\r\n\tnodeType : ELEMENT_NODE,\r\n\thasAttribute : function(name){\r\n\t\treturn this.getAttributeNode(name)!=null;\r\n\t},\r\n\tgetAttribute : function(name){\r\n\t\tvar attr = this.getAttributeNode(name);\r\n\t\treturn attr && attr.value || '';\r\n\t},\r\n\tgetAttributeNode : function(name){\r\n\t\treturn this.attributes.getNamedItem(name);\r\n\t},\r\n\tsetAttribute : function(name, value){\r\n\t\tvar attr = this.ownerDocument.createAttribute(name);\r\n\t\tattr.value = attr.nodeValue = \"\" + value;\r\n\t\tthis.setAttributeNode(attr)\r\n\t},\r\n\tremoveAttribute : function(name){\r\n\t\tvar attr = this.getAttributeNode(name)\r\n\t\tattr && this.removeAttributeNode(attr);\r\n\t},\r\n\r\n\t//four real opeartion method\r\n\tappendChild:function(newChild){\r\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\r\n\t\t\treturn this.insertBefore(newChild,null);\r\n\t\t}else{\r\n\t\t\treturn _appendSingleChild(this,newChild);\r\n\t\t}\r\n\t},\r\n\tsetAttributeNode : function(newAttr){\r\n\t\treturn this.attributes.setNamedItem(newAttr);\r\n\t},\r\n\tsetAttributeNodeNS : function(newAttr){\r\n\t\treturn this.attributes.setNamedItemNS(newAttr);\r\n\t},\r\n\tremoveAttributeNode : function(oldAttr){\r\n\t\t//console.log(this == oldAttr.ownerElement)\r\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\r\n\t},\r\n\t//get real attribute name,and remove it by removeAttributeNode\r\n\tremoveAttributeNS : function(namespaceURI, localName){\r\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\r\n\t\told && this.removeAttributeNode(old);\r\n\t},\r\n\r\n\thasAttributeNS : function(namespaceURI, localName){\r\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\r\n\t},\r\n\tgetAttributeNS : function(namespaceURI, localName){\r\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\r\n\t\treturn attr && attr.value || '';\r\n\t},\r\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\r\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\r\n\t\tattr.value = attr.nodeValue = \"\" + value;\r\n\t\tthis.setAttributeNode(attr)\r\n\t},\r\n\tgetAttributeNodeNS : function(namespaceURI, localName){\r\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\r\n\t},\r\n\r\n\tgetElementsByTagName : function(tagName){\r\n\t\treturn new LiveNodeList(this,function(base){\r\n\t\t\tvar ls = [];\r\n\t\t\t_visitNode(base,function(node){\r\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\r\n\t\t\t\t\tls.push(node);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ls;\r\n\t\t});\r\n\t},\r\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\r\n\t\treturn new LiveNodeList(this,function(base){\r\n\t\t\tvar ls = [];\r\n\t\t\t_visitNode(base,function(node){\r\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\r\n\t\t\t\t\tls.push(node);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ls;\r\n\r\n\t\t});\r\n\t}\r\n};\r\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\r\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\r\n\r\n\r\n_extends(Element,Node);\r\nfunction Attr() {\r\n};\r\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\r\n_extends(Attr,Node);\r\n\r\n\r\nfunction CharacterData() {\r\n};\r\nCharacterData.prototype = {\r\n\tdata : '',\r\n\tsubstringData : function(offset, count) {\r\n\t\treturn this.data.substring(offset, offset+count);\r\n\t},\r\n\tappendData: function(text) {\r\n\t\ttext = this.data+text;\r\n\t\tthis.nodeValue = this.data = text;\r\n\t\tthis.length = text.length;\r\n\t},\r\n\tinsertData: function(offset,text) {\r\n\t\tthis.replaceData(offset,0,text);\r\n\r\n\t},\r\n\tappendChild:function(newChild){\r\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\r\n\t},\r\n\tdeleteData: function(offset, count) {\r\n\t\tthis.replaceData(offset,count,\"\");\r\n\t},\r\n\treplaceData: function(offset, count, text) {\r\n\t\tvar start = this.data.substring(0,offset);\r\n\t\tvar end = this.data.substring(offset+count);\r\n\t\ttext = start + text + end;\r\n\t\tthis.nodeValue = this.data = text;\r\n\t\tthis.length = text.length;\r\n\t}\r\n}\r\n_extends(CharacterData,Node);\r\nfunction Text() {\r\n};\r\nText.prototype = {\r\n\tnodeName : \"#text\",\r\n\tnodeType : TEXT_NODE,\r\n\tsplitText : function(offset) {\r\n\t\tvar text = this.data;\r\n\t\tvar newText = text.substring(offset);\r\n\t\ttext = text.substring(0, offset);\r\n\t\tthis.data = this.nodeValue = text;\r\n\t\tthis.length = text.length;\r\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\r\n\t\tif(this.parentNode){\r\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\r\n\t\t}\r\n\t\treturn newNode;\r\n\t}\r\n}\r\n_extends(Text,CharacterData);\r\nfunction Comment() {\r\n};\r\nComment.prototype = {\r\n\tnodeName : \"#comment\",\r\n\tnodeType : COMMENT_NODE\r\n}\r\n_extends(Comment,CharacterData);\r\n\r\nfunction CDATASection() {\r\n};\r\nCDATASection.prototype = {\r\n\tnodeName : \"#cdata-section\",\r\n\tnodeType : CDATA_SECTION_NODE\r\n}\r\n_extends(CDATASection,CharacterData);\r\n\r\n\r\nfunction DocumentType() {\r\n};\r\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\r\n_extends(DocumentType,Node);\r\n\r\nfunction Notation() {\r\n};\r\nNotation.prototype.nodeType = NOTATION_NODE;\r\n_extends(Notation,Node);\r\n\r\nfunction Entity() {\r\n};\r\nEntity.prototype.nodeType = ENTITY_NODE;\r\n_extends(Entity,Node);\r\n\r\nfunction EntityReference() {\r\n};\r\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\r\n_extends(EntityReference,Node);\r\n\r\nfunction DocumentFragment() {\r\n};\r\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\r\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\r\n_extends(DocumentFragment,Node);\r\n\r\n\r\nfunction ProcessingInstruction() {\r\n}\r\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\r\n_extends(ProcessingInstruction,Node);\r\nfunction XMLSerializer(){}\r\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\r\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\r\n}\r\nNode.prototype.toString = nodeSerializeToString;\r\nfunction nodeSerializeToString(isHtml,nodeFilter){\r\n\tvar buf = [];\r\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\r\n\tvar prefix = refNode.prefix;\r\n\tvar uri = refNode.namespaceURI;\r\n\r\n\tif(uri && prefix == null){\r\n\t\t//console.log(prefix)\r\n\t\tvar prefix = refNode.lookupPrefix(uri);\r\n\t\tif(prefix == null){\r\n\t\t\t//isHTML = true;\r\n\t\t\tvar visibleNamespaces=[\r\n\t\t\t{namespace:uri,prefix:null}\r\n\t\t\t//{namespace:uri,prefix:''}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\r\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\r\n\tvar prefix = node.prefix || '';\r\n\tvar uri = node.namespaceURI;\r\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\r\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\r\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\r\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\r\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\r\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\r\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\r\n\tif (!uri) {\r\n\t\treturn false;\r\n\t}\r\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar i = visibleNamespaces.length\r\n\twhile (i--) {\r\n\t\tvar ns = visibleNamespaces[i];\r\n\t\t// get namespace prefix\r\n\t\tif (ns.prefix === prefix) {\r\n\t\t\treturn ns.namespace !== uri;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n/**\r\n * Well-formed constraint: No < in Attribute Values\r\n * > The replacement text of any entity referred to directly or indirectly\r\n * > in an attribute value must not contain a <.\r\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\r\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\r\n *\r\n * Literal whitespace other than space that appear in attribute values\r\n * are serialized as their entity references, so they will be preserved.\r\n * (In contrast to whitespace literals in the input which are normalized to spaces)\r\n * @see https://www.w3.org/TR/xml11/#AVNormalize\r\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\r\n */\r\nfunction addSerializedAttribute(buf, qualifiedName, value) {\r\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\r\n}\r\n\r\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\r\n\tif (!visibleNamespaces) {\r\n\t\tvisibleNamespaces = [];\r\n\t}\r\n\r\n\tif(nodeFilter){\r\n\t\tnode = nodeFilter(node);\r\n\t\tif(node){\r\n\t\t\tif(typeof node == 'string'){\r\n\t\t\t\tbuf.push(node);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//buf.sort.apply(attrs, attributeSorter);\r\n\t}\r\n\r\n\tswitch(node.nodeType){\r\n\tcase ELEMENT_NODE:\r\n\t\tvar attrs = node.attributes;\r\n\t\tvar len = attrs.length;\r\n\t\tvar child = node.firstChild;\r\n\t\tvar nodeName = node.tagName;\r\n\r\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\r\n\r\n\t\tvar prefixedNodeName = nodeName\r\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\r\n\t\t\tvar defaultNS\r\n\t\t\t// lookup current default ns from `xmlns` attribute\r\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\r\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\r\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!defaultNS) {\r\n\t\t\t\t// lookup current default ns in visibleNamespaces\r\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\r\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\r\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\r\n\t\t\t\t\t\tdefaultNS = namespace.namespace\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (defaultNS !== node.namespaceURI) {\r\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\r\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\r\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\r\n\t\t\t\t\t\tif (namespace.prefix) {\r\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuf.push('<', prefixedNodeName);\r\n\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\t// add namespaces for attributes\r\n\t\t\tvar attr = attrs.item(i);\r\n\t\t\tif (attr.prefix == 'xmlns') {\r\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n\t\t\t}else if(attr.nodeName == 'xmlns'){\r\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\tvar attr = attrs.item(i);\r\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\r\n\t\t\t\tvar prefix = attr.prefix||'';\r\n\t\t\t\tvar uri = attr.namespaceURI;\r\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\r\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\r\n\t\t\t}\r\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\r\n\t\t}\r\n\r\n\t\t// add namespace for current node\r\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\r\n\t\t\tvar prefix = node.prefix||'';\r\n\t\t\tvar uri = node.namespaceURI;\r\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\r\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\r\n\t\t}\r\n\r\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\r\n\t\t\tbuf.push('>');\r\n\t\t\t//if is cdata child node\r\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\r\n\t\t\t\twhile(child){\r\n\t\t\t\t\tif(child.data){\r\n\t\t\t\t\t\tbuf.push(child.data);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild = child.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}else\r\n\t\t\t{\r\n\t\t\t\twhile(child){\r\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\r\n\t\t\t\t\tchild = child.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbuf.push('</',prefixedNodeName,'>');\r\n\t\t}else{\r\n\t\t\tbuf.push('/>');\r\n\t\t}\r\n\t\t// remove added visible namespaces\r\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\r\n\t\treturn;\r\n\tcase DOCUMENT_NODE:\r\n\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\tvar child = node.firstChild;\r\n\t\twhile(child){\r\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\r\n\t\t\tchild = child.nextSibling;\r\n\t\t}\r\n\t\treturn;\r\n\tcase ATTRIBUTE_NODE:\r\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\r\n\tcase TEXT_NODE:\r\n\t\t/**\r\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\r\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\r\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\r\n\t\t * `&amp;` and `&lt;` respectively.\r\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\r\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\r\n\t\t * when that string is not marking the end of a CDATA section.\r\n\t\t *\r\n\t\t * In the content of elements, character data is any string of characters\r\n\t\t * which does not contain the start-delimiter of any markup\r\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\r\n\t\t *\r\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\r\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\r\n\t\t */\r\n\t\treturn buf.push(node.data\r\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\r\n\t\t);\r\n\tcase CDATA_SECTION_NODE:\r\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\r\n\tcase COMMENT_NODE:\r\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\r\n\tcase DOCUMENT_TYPE_NODE:\r\n\t\tvar pubid = node.publicId;\r\n\t\tvar sysid = node.systemId;\r\n\t\tbuf.push('<!DOCTYPE ',node.name);\r\n\t\tif(pubid){\r\n\t\t\tbuf.push(' PUBLIC ', pubid);\r\n\t\t\tif (sysid && sysid!='.') {\r\n\t\t\t\tbuf.push(' ', sysid);\r\n\t\t\t}\r\n\t\t\tbuf.push('>');\r\n\t\t}else if(sysid && sysid!='.'){\r\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\r\n\t\t}else{\r\n\t\t\tvar sub = node.internalSubset;\r\n\t\t\tif(sub){\r\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\r\n\t\t\t}\r\n\t\t\tbuf.push(\">\");\r\n\t\t}\r\n\t\treturn;\r\n\tcase PROCESSING_INSTRUCTION_NODE:\r\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\r\n\tcase ENTITY_REFERENCE_NODE:\r\n\t\treturn buf.push( '&',node.nodeName,';');\r\n\t//case ENTITY_NODE:\r\n\t//case NOTATION_NODE:\r\n\tdefault:\r\n\t\tbuf.push('??',node.nodeName);\r\n\t}\r\n}\r\nfunction importNode(doc,node,deep){\r\n\tvar node2;\r\n\tswitch (node.nodeType) {\r\n\tcase ELEMENT_NODE:\r\n\t\tnode2 = node.cloneNode(false);\r\n\t\tnode2.ownerDocument = doc;\r\n\t\t//var attrs = node2.attributes;\r\n\t\t//var len = attrs.length;\r\n\t\t//for(var i=0;i<len;i++){\r\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\r\n\t\t//}\r\n\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\tbreak;\r\n\tcase ATTRIBUTE_NODE:\r\n\t\tdeep = true;\r\n\t\tbreak;\r\n\t//case ENTITY_REFERENCE_NODE:\r\n\t//case PROCESSING_INSTRUCTION_NODE:\r\n\t////case TEXT_NODE:\r\n\t//case CDATA_SECTION_NODE:\r\n\t//case COMMENT_NODE:\r\n\t//\tdeep = false;\r\n\t//\tbreak;\r\n\t//case DOCUMENT_NODE:\r\n\t//case DOCUMENT_TYPE_NODE:\r\n\t//cannot be imported.\r\n\t//case ENTITY_NODE:\r\n\t//case NOTATION_NODE\uFF1A\r\n\t//can not hit in level3\r\n\t//default:throw e;\r\n\t}\r\n\tif(!node2){\r\n\t\tnode2 = node.cloneNode(false);//false\r\n\t}\r\n\tnode2.ownerDocument = doc;\r\n\tnode2.parentNode = null;\r\n\tif(deep){\r\n\t\tvar child = node.firstChild;\r\n\t\twhile(child){\r\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\r\n\t\t\tchild = child.nextSibling;\r\n\t\t}\r\n\t}\r\n\treturn node2;\r\n}\r\n//\r\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\r\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\r\nfunction cloneNode(doc,node,deep){\r\n\tvar node2 = new node.constructor();\r\n\tfor (var n in node) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\r\n\t\t\tvar v = node[n];\r\n\t\t\tif (typeof v != \"object\") {\r\n\t\t\t\tif (v != node2[n]) {\r\n\t\t\t\t\tnode2[n] = v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(node.childNodes){\r\n\t\tnode2.childNodes = new NodeList();\r\n\t}\r\n\tnode2.ownerDocument = doc;\r\n\tswitch (node2.nodeType) {\r\n\tcase ELEMENT_NODE:\r\n\t\tvar attrs\t= node.attributes;\r\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\r\n\t\tvar len = attrs.length\r\n\t\tattrs2._ownerElement = node2;\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\r\n\t\t}\r\n\t\tbreak;;\r\n\tcase ATTRIBUTE_NODE:\r\n\t\tdeep = true;\r\n\t}\r\n\tif(deep){\r\n\t\tvar child = node.firstChild;\r\n\t\twhile(child){\r\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\r\n\t\t\tchild = child.nextSibling;\r\n\t\t}\r\n\t}\r\n\treturn node2;\r\n}\r\n\r\nfunction __set__(object,key,value){\r\n\tobject[key] = value\r\n}\r\n//do dynamic\r\ntry{\r\n\tif(Object.defineProperty){\r\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\r\n\t\t\tget:function(){\r\n\t\t\t\t_updateLiveList(this);\r\n\t\t\t\treturn this.$$length;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tObject.defineProperty(Node.prototype,'textContent',{\r\n\t\t\tget:function(){\r\n\t\t\t\treturn getTextContent(this);\r\n\t\t\t},\r\n\r\n\t\t\tset:function(data){\r\n\t\t\t\tswitch(this.nodeType){\r\n\t\t\t\tcase ELEMENT_NODE:\r\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\t\t\t\twhile(this.firstChild){\r\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(data || String(data)){\r\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.data = data;\r\n\t\t\t\t\tthis.value = data;\r\n\t\t\t\t\tthis.nodeValue = data;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfunction getTextContent(node){\r\n\t\t\tswitch(node.nodeType){\r\n\t\t\tcase ELEMENT_NODE:\r\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\t\t\tvar buf = [];\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t\twhile(node){\r\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\r\n\t\t\t\t\t\tbuf.push(getTextContent(node));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t\treturn buf.join('');\r\n\t\t\tdefault:\r\n\t\t\t\treturn node.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t__set__ = function(object,key,value){\r\n\t\t\t//console.log(value)\r\n\t\t\tobject['$$'+key] = value\r\n\t\t}\r\n\t}\r\n}catch(e){//ie8\r\n}\r\n\r\n//if(typeof require == 'function'){\r\n\texports.DocumentType = DocumentType;\r\n\texports.DOMException = DOMException;\r\n\texports.DOMImplementation = DOMImplementation;\r\n\texports.Element = Element;\r\n\texports.Node = Node;\r\n\texports.NodeList = NodeList;\r\n\texports.XMLSerializer = XMLSerializer;\r\n//}\r\n", "'use strict';\r\n\r\nvar freeze = require('./conventions').freeze;\r\n\r\n/**\r\n * The entities that are predefined in every XML document.\r\n *\r\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\r\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\r\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\r\n */\r\nexports.XML_ENTITIES = freeze({\r\n\tamp: '&',\r\n\tapos: \"'\",\r\n\tgt: '>',\r\n\tlt: '<',\r\n\tquot: '\"',\r\n});\r\n\r\n/**\r\n * A map of all entities that are detected in an HTML document.\r\n * They contain all entries from `XML_ENTITIES`.\r\n *\r\n * @see XML_ENTITIES\r\n * @see DOMParser.parseFromString\r\n * @see DOMImplementation.prototype.createHTMLDocument\r\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\r\n * @see https://html.spec.whatwg.org/entities.json JSON\r\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\r\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\r\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\r\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\r\n */\r\nexports.HTML_ENTITIES = freeze({\r\n\tAacute: '\\u00C1',\r\n\taacute: '\\u00E1',\r\n\tAbreve: '\\u0102',\r\n\tabreve: '\\u0103',\r\n\tac: '\\u223E',\r\n\tacd: '\\u223F',\r\n\tacE: '\\u223E\\u0333',\r\n\tAcirc: '\\u00C2',\r\n\tacirc: '\\u00E2',\r\n\tacute: '\\u00B4',\r\n\tAcy: '\\u0410',\r\n\tacy: '\\u0430',\r\n\tAElig: '\\u00C6',\r\n\taelig: '\\u00E6',\r\n\taf: '\\u2061',\r\n\tAfr: '\\uD835\\uDD04',\r\n\tafr: '\\uD835\\uDD1E',\r\n\tAgrave: '\\u00C0',\r\n\tagrave: '\\u00E0',\r\n\talefsym: '\\u2135',\r\n\taleph: '\\u2135',\r\n\tAlpha: '\\u0391',\r\n\talpha: '\\u03B1',\r\n\tAmacr: '\\u0100',\r\n\tamacr: '\\u0101',\r\n\tamalg: '\\u2A3F',\r\n\tAMP: '\\u0026',\r\n\tamp: '\\u0026',\r\n\tAnd: '\\u2A53',\r\n\tand: '\\u2227',\r\n\tandand: '\\u2A55',\r\n\tandd: '\\u2A5C',\r\n\tandslope: '\\u2A58',\r\n\tandv: '\\u2A5A',\r\n\tang: '\\u2220',\r\n\tange: '\\u29A4',\r\n\tangle: '\\u2220',\r\n\tangmsd: '\\u2221',\r\n\tangmsdaa: '\\u29A8',\r\n\tangmsdab: '\\u29A9',\r\n\tangmsdac: '\\u29AA',\r\n\tangmsdad: '\\u29AB',\r\n\tangmsdae: '\\u29AC',\r\n\tangmsdaf: '\\u29AD',\r\n\tangmsdag: '\\u29AE',\r\n\tangmsdah: '\\u29AF',\r\n\tangrt: '\\u221F',\r\n\tangrtvb: '\\u22BE',\r\n\tangrtvbd: '\\u299D',\r\n\tangsph: '\\u2222',\r\n\tangst: '\\u00C5',\r\n\tangzarr: '\\u237C',\r\n\tAogon: '\\u0104',\r\n\taogon: '\\u0105',\r\n\tAopf: '\\uD835\\uDD38',\r\n\taopf: '\\uD835\\uDD52',\r\n\tap: '\\u2248',\r\n\tapacir: '\\u2A6F',\r\n\tapE: '\\u2A70',\r\n\tape: '\\u224A',\r\n\tapid: '\\u224B',\r\n\tapos: '\\u0027',\r\n\tApplyFunction: '\\u2061',\r\n\tapprox: '\\u2248',\r\n\tapproxeq: '\\u224A',\r\n\tAring: '\\u00C5',\r\n\taring: '\\u00E5',\r\n\tAscr: '\\uD835\\uDC9C',\r\n\tascr: '\\uD835\\uDCB6',\r\n\tAssign: '\\u2254',\r\n\tast: '\\u002A',\r\n\tasymp: '\\u2248',\r\n\tasympeq: '\\u224D',\r\n\tAtilde: '\\u00C3',\r\n\tatilde: '\\u00E3',\r\n\tAuml: '\\u00C4',\r\n\tauml: '\\u00E4',\r\n\tawconint: '\\u2233',\r\n\tawint: '\\u2A11',\r\n\tbackcong: '\\u224C',\r\n\tbackepsilon: '\\u03F6',\r\n\tbackprime: '\\u2035',\r\n\tbacksim: '\\u223D',\r\n\tbacksimeq: '\\u22CD',\r\n\tBackslash: '\\u2216',\r\n\tBarv: '\\u2AE7',\r\n\tbarvee: '\\u22BD',\r\n\tBarwed: '\\u2306',\r\n\tbarwed: '\\u2305',\r\n\tbarwedge: '\\u2305',\r\n\tbbrk: '\\u23B5',\r\n\tbbrktbrk: '\\u23B6',\r\n\tbcong: '\\u224C',\r\n\tBcy: '\\u0411',\r\n\tbcy: '\\u0431',\r\n\tbdquo: '\\u201E',\r\n\tbecaus: '\\u2235',\r\n\tBecause: '\\u2235',\r\n\tbecause: '\\u2235',\r\n\tbemptyv: '\\u29B0',\r\n\tbepsi: '\\u03F6',\r\n\tbernou: '\\u212C',\r\n\tBernoullis: '\\u212C',\r\n\tBeta: '\\u0392',\r\n\tbeta: '\\u03B2',\r\n\tbeth: '\\u2136',\r\n\tbetween: '\\u226C',\r\n\tBfr: '\\uD835\\uDD05',\r\n\tbfr: '\\uD835\\uDD1F',\r\n\tbigcap: '\\u22C2',\r\n\tbigcirc: '\\u25EF',\r\n\tbigcup: '\\u22C3',\r\n\tbigodot: '\\u2A00',\r\n\tbigoplus: '\\u2A01',\r\n\tbigotimes: '\\u2A02',\r\n\tbigsqcup: '\\u2A06',\r\n\tbigstar: '\\u2605',\r\n\tbigtriangledown: '\\u25BD',\r\n\tbigtriangleup: '\\u25B3',\r\n\tbiguplus: '\\u2A04',\r\n\tbigvee: '\\u22C1',\r\n\tbigwedge: '\\u22C0',\r\n\tbkarow: '\\u290D',\r\n\tblacklozenge: '\\u29EB',\r\n\tblacksquare: '\\u25AA',\r\n\tblacktriangle: '\\u25B4',\r\n\tblacktriangledown: '\\u25BE',\r\n\tblacktriangleleft: '\\u25C2',\r\n\tblacktriangleright: '\\u25B8',\r\n\tblank: '\\u2423',\r\n\tblk12: '\\u2592',\r\n\tblk14: '\\u2591',\r\n\tblk34: '\\u2593',\r\n\tblock: '\\u2588',\r\n\tbne: '\\u003D\\u20E5',\r\n\tbnequiv: '\\u2261\\u20E5',\r\n\tbNot: '\\u2AED',\r\n\tbnot: '\\u2310',\r\n\tBopf: '\\uD835\\uDD39',\r\n\tbopf: '\\uD835\\uDD53',\r\n\tbot: '\\u22A5',\r\n\tbottom: '\\u22A5',\r\n\tbowtie: '\\u22C8',\r\n\tboxbox: '\\u29C9',\r\n\tboxDL: '\\u2557',\r\n\tboxDl: '\\u2556',\r\n\tboxdL: '\\u2555',\r\n\tboxdl: '\\u2510',\r\n\tboxDR: '\\u2554',\r\n\tboxDr: '\\u2553',\r\n\tboxdR: '\\u2552',\r\n\tboxdr: '\\u250C',\r\n\tboxH: '\\u2550',\r\n\tboxh: '\\u2500',\r\n\tboxHD: '\\u2566',\r\n\tboxHd: '\\u2564',\r\n\tboxhD: '\\u2565',\r\n\tboxhd: '\\u252C',\r\n\tboxHU: '\\u2569',\r\n\tboxHu: '\\u2567',\r\n\tboxhU: '\\u2568',\r\n\tboxhu: '\\u2534',\r\n\tboxminus: '\\u229F',\r\n\tboxplus: '\\u229E',\r\n\tboxtimes: '\\u22A0',\r\n\tboxUL: '\\u255D',\r\n\tboxUl: '\\u255C',\r\n\tboxuL: '\\u255B',\r\n\tboxul: '\\u2518',\r\n\tboxUR: '\\u255A',\r\n\tboxUr: '\\u2559',\r\n\tboxuR: '\\u2558',\r\n\tboxur: '\\u2514',\r\n\tboxV: '\\u2551',\r\n\tboxv: '\\u2502',\r\n\tboxVH: '\\u256C',\r\n\tboxVh: '\\u256B',\r\n\tboxvH: '\\u256A',\r\n\tboxvh: '\\u253C',\r\n\tboxVL: '\\u2563',\r\n\tboxVl: '\\u2562',\r\n\tboxvL: '\\u2561',\r\n\tboxvl: '\\u2524',\r\n\tboxVR: '\\u2560',\r\n\tboxVr: '\\u255F',\r\n\tboxvR: '\\u255E',\r\n\tboxvr: '\\u251C',\r\n\tbprime: '\\u2035',\r\n\tBreve: '\\u02D8',\r\n\tbreve: '\\u02D8',\r\n\tbrvbar: '\\u00A6',\r\n\tBscr: '\\u212C',\r\n\tbscr: '\\uD835\\uDCB7',\r\n\tbsemi: '\\u204F',\r\n\tbsim: '\\u223D',\r\n\tbsime: '\\u22CD',\r\n\tbsol: '\\u005C',\r\n\tbsolb: '\\u29C5',\r\n\tbsolhsub: '\\u27C8',\r\n\tbull: '\\u2022',\r\n\tbullet: '\\u2022',\r\n\tbump: '\\u224E',\r\n\tbumpE: '\\u2AAE',\r\n\tbumpe: '\\u224F',\r\n\tBumpeq: '\\u224E',\r\n\tbumpeq: '\\u224F',\r\n\tCacute: '\\u0106',\r\n\tcacute: '\\u0107',\r\n\tCap: '\\u22D2',\r\n\tcap: '\\u2229',\r\n\tcapand: '\\u2A44',\r\n\tcapbrcup: '\\u2A49',\r\n\tcapcap: '\\u2A4B',\r\n\tcapcup: '\\u2A47',\r\n\tcapdot: '\\u2A40',\r\n\tCapitalDifferentialD: '\\u2145',\r\n\tcaps: '\\u2229\\uFE00',\r\n\tcaret: '\\u2041',\r\n\tcaron: '\\u02C7',\r\n\tCayleys: '\\u212D',\r\n\tccaps: '\\u2A4D',\r\n\tCcaron: '\\u010C',\r\n\tccaron: '\\u010D',\r\n\tCcedil: '\\u00C7',\r\n\tccedil: '\\u00E7',\r\n\tCcirc: '\\u0108',\r\n\tccirc: '\\u0109',\r\n\tCconint: '\\u2230',\r\n\tccups: '\\u2A4C',\r\n\tccupssm: '\\u2A50',\r\n\tCdot: '\\u010A',\r\n\tcdot: '\\u010B',\r\n\tcedil: '\\u00B8',\r\n\tCedilla: '\\u00B8',\r\n\tcemptyv: '\\u29B2',\r\n\tcent: '\\u00A2',\r\n\tCenterDot: '\\u00B7',\r\n\tcenterdot: '\\u00B7',\r\n\tCfr: '\\u212D',\r\n\tcfr: '\\uD835\\uDD20',\r\n\tCHcy: '\\u0427',\r\n\tchcy: '\\u0447',\r\n\tcheck: '\\u2713',\r\n\tcheckmark: '\\u2713',\r\n\tChi: '\\u03A7',\r\n\tchi: '\\u03C7',\r\n\tcir: '\\u25CB',\r\n\tcirc: '\\u02C6',\r\n\tcirceq: '\\u2257',\r\n\tcirclearrowleft: '\\u21BA',\r\n\tcirclearrowright: '\\u21BB',\r\n\tcircledast: '\\u229B',\r\n\tcircledcirc: '\\u229A',\r\n\tcircleddash: '\\u229D',\r\n\tCircleDot: '\\u2299',\r\n\tcircledR: '\\u00AE',\r\n\tcircledS: '\\u24C8',\r\n\tCircleMinus: '\\u2296',\r\n\tCirclePlus: '\\u2295',\r\n\tCircleTimes: '\\u2297',\r\n\tcirE: '\\u29C3',\r\n\tcire: '\\u2257',\r\n\tcirfnint: '\\u2A10',\r\n\tcirmid: '\\u2AEF',\r\n\tcirscir: '\\u29C2',\r\n\tClockwiseContourIntegral: '\\u2232',\r\n\tCloseCurlyDoubleQuote: '\\u201D',\r\n\tCloseCurlyQuote: '\\u2019',\r\n\tclubs: '\\u2663',\r\n\tclubsuit: '\\u2663',\r\n\tColon: '\\u2237',\r\n\tcolon: '\\u003A',\r\n\tColone: '\\u2A74',\r\n\tcolone: '\\u2254',\r\n\tcoloneq: '\\u2254',\r\n\tcomma: '\\u002C',\r\n\tcommat: '\\u0040',\r\n\tcomp: '\\u2201',\r\n\tcompfn: '\\u2218',\r\n\tcomplement: '\\u2201',\r\n\tcomplexes: '\\u2102',\r\n\tcong: '\\u2245',\r\n\tcongdot: '\\u2A6D',\r\n\tCongruent: '\\u2261',\r\n\tConint: '\\u222F',\r\n\tconint: '\\u222E',\r\n\tContourIntegral: '\\u222E',\r\n\tCopf: '\\u2102',\r\n\tcopf: '\\uD835\\uDD54',\r\n\tcoprod: '\\u2210',\r\n\tCoproduct: '\\u2210',\r\n\tCOPY: '\\u00A9',\r\n\tcopy: '\\u00A9',\r\n\tcopysr: '\\u2117',\r\n\tCounterClockwiseContourIntegral: '\\u2233',\r\n\tcrarr: '\\u21B5',\r\n\tCross: '\\u2A2F',\r\n\tcross: '\\u2717',\r\n\tCscr: '\\uD835\\uDC9E',\r\n\tcscr: '\\uD835\\uDCB8',\r\n\tcsub: '\\u2ACF',\r\n\tcsube: '\\u2AD1',\r\n\tcsup: '\\u2AD0',\r\n\tcsupe: '\\u2AD2',\r\n\tctdot: '\\u22EF',\r\n\tcudarrl: '\\u2938',\r\n\tcudarrr: '\\u2935',\r\n\tcuepr: '\\u22DE',\r\n\tcuesc: '\\u22DF',\r\n\tcularr: '\\u21B6',\r\n\tcularrp: '\\u293D',\r\n\tCup: '\\u22D3',\r\n\tcup: '\\u222A',\r\n\tcupbrcap: '\\u2A48',\r\n\tCupCap: '\\u224D',\r\n\tcupcap: '\\u2A46',\r\n\tcupcup: '\\u2A4A',\r\n\tcupdot: '\\u228D',\r\n\tcupor: '\\u2A45',\r\n\tcups: '\\u222A\\uFE00',\r\n\tcurarr: '\\u21B7',\r\n\tcurarrm: '\\u293C',\r\n\tcurlyeqprec: '\\u22DE',\r\n\tcurlyeqsucc: '\\u22DF',\r\n\tcurlyvee: '\\u22CE',\r\n\tcurlywedge: '\\u22CF',\r\n\tcurren: '\\u00A4',\r\n\tcurvearrowleft: '\\u21B6',\r\n\tcurvearrowright: '\\u21B7',\r\n\tcuvee: '\\u22CE',\r\n\tcuwed: '\\u22CF',\r\n\tcwconint: '\\u2232',\r\n\tcwint: '\\u2231',\r\n\tcylcty: '\\u232D',\r\n\tDagger: '\\u2021',\r\n\tdagger: '\\u2020',\r\n\tdaleth: '\\u2138',\r\n\tDarr: '\\u21A1',\r\n\tdArr: '\\u21D3',\r\n\tdarr: '\\u2193',\r\n\tdash: '\\u2010',\r\n\tDashv: '\\u2AE4',\r\n\tdashv: '\\u22A3',\r\n\tdbkarow: '\\u290F',\r\n\tdblac: '\\u02DD',\r\n\tDcaron: '\\u010E',\r\n\tdcaron: '\\u010F',\r\n\tDcy: '\\u0414',\r\n\tdcy: '\\u0434',\r\n\tDD: '\\u2145',\r\n\tdd: '\\u2146',\r\n\tddagger: '\\u2021',\r\n\tddarr: '\\u21CA',\r\n\tDDotrahd: '\\u2911',\r\n\tddotseq: '\\u2A77',\r\n\tdeg: '\\u00B0',\r\n\tDel: '\\u2207',\r\n\tDelta: '\\u0394',\r\n\tdelta: '\\u03B4',\r\n\tdemptyv: '\\u29B1',\r\n\tdfisht: '\\u297F',\r\n\tDfr: '\\uD835\\uDD07',\r\n\tdfr: '\\uD835\\uDD21',\r\n\tdHar: '\\u2965',\r\n\tdharl: '\\u21C3',\r\n\tdharr: '\\u21C2',\r\n\tDiacriticalAcute: '\\u00B4',\r\n\tDiacriticalDot: '\\u02D9',\r\n\tDiacriticalDoubleAcute: '\\u02DD',\r\n\tDiacriticalGrave: '\\u0060',\r\n\tDiacriticalTilde: '\\u02DC',\r\n\tdiam: '\\u22C4',\r\n\tDiamond: '\\u22C4',\r\n\tdiamond: '\\u22C4',\r\n\tdiamondsuit: '\\u2666',\r\n\tdiams: '\\u2666',\r\n\tdie: '\\u00A8',\r\n\tDifferentialD: '\\u2146',\r\n\tdigamma: '\\u03DD',\r\n\tdisin: '\\u22F2',\r\n\tdiv: '\\u00F7',\r\n\tdivide: '\\u00F7',\r\n\tdivideontimes: '\\u22C7',\r\n\tdivonx: '\\u22C7',\r\n\tDJcy: '\\u0402',\r\n\tdjcy: '\\u0452',\r\n\tdlcorn: '\\u231E',\r\n\tdlcrop: '\\u230D',\r\n\tdollar: '\\u0024',\r\n\tDopf: '\\uD835\\uDD3B',\r\n\tdopf: '\\uD835\\uDD55',\r\n\tDot: '\\u00A8',\r\n\tdot: '\\u02D9',\r\n\tDotDot: '\\u20DC',\r\n\tdoteq: '\\u2250',\r\n\tdoteqdot: '\\u2251',\r\n\tDotEqual: '\\u2250',\r\n\tdotminus: '\\u2238',\r\n\tdotplus: '\\u2214',\r\n\tdotsquare: '\\u22A1',\r\n\tdoublebarwedge: '\\u2306',\r\n\tDoubleContourIntegral: '\\u222F',\r\n\tDoubleDot: '\\u00A8',\r\n\tDoubleDownArrow: '\\u21D3',\r\n\tDoubleLeftArrow: '\\u21D0',\r\n\tDoubleLeftRightArrow: '\\u21D4',\r\n\tDoubleLeftTee: '\\u2AE4',\r\n\tDoubleLongLeftArrow: '\\u27F8',\r\n\tDoubleLongLeftRightArrow: '\\u27FA',\r\n\tDoubleLongRightArrow: '\\u27F9',\r\n\tDoubleRightArrow: '\\u21D2',\r\n\tDoubleRightTee: '\\u22A8',\r\n\tDoubleUpArrow: '\\u21D1',\r\n\tDoubleUpDownArrow: '\\u21D5',\r\n\tDoubleVerticalBar: '\\u2225',\r\n\tDownArrow: '\\u2193',\r\n\tDownarrow: '\\u21D3',\r\n\tdownarrow: '\\u2193',\r\n\tDownArrowBar: '\\u2913',\r\n\tDownArrowUpArrow: '\\u21F5',\r\n\tDownBreve: '\\u0311',\r\n\tdowndownarrows: '\\u21CA',\r\n\tdownharpoonleft: '\\u21C3',\r\n\tdownharpoonright: '\\u21C2',\r\n\tDownLeftRightVector: '\\u2950',\r\n\tDownLeftTeeVector: '\\u295E',\r\n\tDownLeftVector: '\\u21BD',\r\n\tDownLeftVectorBar: '\\u2956',\r\n\tDownRightTeeVector: '\\u295F',\r\n\tDownRightVector: '\\u21C1',\r\n\tDownRightVectorBar: '\\u2957',\r\n\tDownTee: '\\u22A4',\r\n\tDownTeeArrow: '\\u21A7',\r\n\tdrbkarow: '\\u2910',\r\n\tdrcorn: '\\u231F',\r\n\tdrcrop: '\\u230C',\r\n\tDscr: '\\uD835\\uDC9F',\r\n\tdscr: '\\uD835\\uDCB9',\r\n\tDScy: '\\u0405',\r\n\tdscy: '\\u0455',\r\n\tdsol: '\\u29F6',\r\n\tDstrok: '\\u0110',\r\n\tdstrok: '\\u0111',\r\n\tdtdot: '\\u22F1',\r\n\tdtri: '\\u25BF',\r\n\tdtrif: '\\u25BE',\r\n\tduarr: '\\u21F5',\r\n\tduhar: '\\u296F',\r\n\tdwangle: '\\u29A6',\r\n\tDZcy: '\\u040F',\r\n\tdzcy: '\\u045F',\r\n\tdzigrarr: '\\u27FF',\r\n\tEacute: '\\u00C9',\r\n\teacute: '\\u00E9',\r\n\teaster: '\\u2A6E',\r\n\tEcaron: '\\u011A',\r\n\tecaron: '\\u011B',\r\n\tecir: '\\u2256',\r\n\tEcirc: '\\u00CA',\r\n\tecirc: '\\u00EA',\r\n\tecolon: '\\u2255',\r\n\tEcy: '\\u042D',\r\n\tecy: '\\u044D',\r\n\teDDot: '\\u2A77',\r\n\tEdot: '\\u0116',\r\n\teDot: '\\u2251',\r\n\tedot: '\\u0117',\r\n\tee: '\\u2147',\r\n\tefDot: '\\u2252',\r\n\tEfr: '\\uD835\\uDD08',\r\n\tefr: '\\uD835\\uDD22',\r\n\teg: '\\u2A9A',\r\n\tEgrave: '\\u00C8',\r\n\tegrave: '\\u00E8',\r\n\tegs: '\\u2A96',\r\n\tegsdot: '\\u2A98',\r\n\tel: '\\u2A99',\r\n\tElement: '\\u2208',\r\n\telinters: '\\u23E7',\r\n\tell: '\\u2113',\r\n\tels: '\\u2A95',\r\n\telsdot: '\\u2A97',\r\n\tEmacr: '\\u0112',\r\n\temacr: '\\u0113',\r\n\tempty: '\\u2205',\r\n\temptyset: '\\u2205',\r\n\tEmptySmallSquare: '\\u25FB',\r\n\temptyv: '\\u2205',\r\n\tEmptyVerySmallSquare: '\\u25AB',\r\n\temsp: '\\u2003',\r\n\temsp13: '\\u2004',\r\n\temsp14: '\\u2005',\r\n\tENG: '\\u014A',\r\n\teng: '\\u014B',\r\n\tensp: '\\u2002',\r\n\tEogon: '\\u0118',\r\n\teogon: '\\u0119',\r\n\tEopf: '\\uD835\\uDD3C',\r\n\teopf: '\\uD835\\uDD56',\r\n\tepar: '\\u22D5',\r\n\teparsl: '\\u29E3',\r\n\teplus: '\\u2A71',\r\n\tepsi: '\\u03B5',\r\n\tEpsilon: '\\u0395',\r\n\tepsilon: '\\u03B5',\r\n\tepsiv: '\\u03F5',\r\n\teqcirc: '\\u2256',\r\n\teqcolon: '\\u2255',\r\n\teqsim: '\\u2242',\r\n\teqslantgtr: '\\u2A96',\r\n\teqslantless: '\\u2A95',\r\n\tEqual: '\\u2A75',\r\n\tequals: '\\u003D',\r\n\tEqualTilde: '\\u2242',\r\n\tequest: '\\u225F',\r\n\tEquilibrium: '\\u21CC',\r\n\tequiv: '\\u2261',\r\n\tequivDD: '\\u2A78',\r\n\teqvparsl: '\\u29E5',\r\n\terarr: '\\u2971',\r\n\terDot: '\\u2253',\r\n\tEscr: '\\u2130',\r\n\tescr: '\\u212F',\r\n\tesdot: '\\u2250',\r\n\tEsim: '\\u2A73',\r\n\tesim: '\\u2242',\r\n\tEta: '\\u0397',\r\n\teta: '\\u03B7',\r\n\tETH: '\\u00D0',\r\n\teth: '\\u00F0',\r\n\tEuml: '\\u00CB',\r\n\teuml: '\\u00EB',\r\n\teuro: '\\u20AC',\r\n\texcl: '\\u0021',\r\n\texist: '\\u2203',\r\n\tExists: '\\u2203',\r\n\texpectation: '\\u2130',\r\n\tExponentialE: '\\u2147',\r\n\texponentiale: '\\u2147',\r\n\tfallingdotseq: '\\u2252',\r\n\tFcy: '\\u0424',\r\n\tfcy: '\\u0444',\r\n\tfemale: '\\u2640',\r\n\tffilig: '\\uFB03',\r\n\tfflig: '\\uFB00',\r\n\tffllig: '\\uFB04',\r\n\tFfr: '\\uD835\\uDD09',\r\n\tffr: '\\uD835\\uDD23',\r\n\tfilig: '\\uFB01',\r\n\tFilledSmallSquare: '\\u25FC',\r\n\tFilledVerySmallSquare: '\\u25AA',\r\n\tfjlig: '\\u0066\\u006A',\r\n\tflat: '\\u266D',\r\n\tfllig: '\\uFB02',\r\n\tfltns: '\\u25B1',\r\n\tfnof: '\\u0192',\r\n\tFopf: '\\uD835\\uDD3D',\r\n\tfopf: '\\uD835\\uDD57',\r\n\tForAll: '\\u2200',\r\n\tforall: '\\u2200',\r\n\tfork: '\\u22D4',\r\n\tforkv: '\\u2AD9',\r\n\tFouriertrf: '\\u2131',\r\n\tfpartint: '\\u2A0D',\r\n\tfrac12: '\\u00BD',\r\n\tfrac13: '\\u2153',\r\n\tfrac14: '\\u00BC',\r\n\tfrac15: '\\u2155',\r\n\tfrac16: '\\u2159',\r\n\tfrac18: '\\u215B',\r\n\tfrac23: '\\u2154',\r\n\tfrac25: '\\u2156',\r\n\tfrac34: '\\u00BE',\r\n\tfrac35: '\\u2157',\r\n\tfrac38: '\\u215C',\r\n\tfrac45: '\\u2158',\r\n\tfrac56: '\\u215A',\r\n\tfrac58: '\\u215D',\r\n\tfrac78: '\\u215E',\r\n\tfrasl: '\\u2044',\r\n\tfrown: '\\u2322',\r\n\tFscr: '\\u2131',\r\n\tfscr: '\\uD835\\uDCBB',\r\n\tgacute: '\\u01F5',\r\n\tGamma: '\\u0393',\r\n\tgamma: '\\u03B3',\r\n\tGammad: '\\u03DC',\r\n\tgammad: '\\u03DD',\r\n\tgap: '\\u2A86',\r\n\tGbreve: '\\u011E',\r\n\tgbreve: '\\u011F',\r\n\tGcedil: '\\u0122',\r\n\tGcirc: '\\u011C',\r\n\tgcirc: '\\u011D',\r\n\tGcy: '\\u0413',\r\n\tgcy: '\\u0433',\r\n\tGdot: '\\u0120',\r\n\tgdot: '\\u0121',\r\n\tgE: '\\u2267',\r\n\tge: '\\u2265',\r\n\tgEl: '\\u2A8C',\r\n\tgel: '\\u22DB',\r\n\tgeq: '\\u2265',\r\n\tgeqq: '\\u2267',\r\n\tgeqslant: '\\u2A7E',\r\n\tges: '\\u2A7E',\r\n\tgescc: '\\u2AA9',\r\n\tgesdot: '\\u2A80',\r\n\tgesdoto: '\\u2A82',\r\n\tgesdotol: '\\u2A84',\r\n\tgesl: '\\u22DB\\uFE00',\r\n\tgesles: '\\u2A94',\r\n\tGfr: '\\uD835\\uDD0A',\r\n\tgfr: '\\uD835\\uDD24',\r\n\tGg: '\\u22D9',\r\n\tgg: '\\u226B',\r\n\tggg: '\\u22D9',\r\n\tgimel: '\\u2137',\r\n\tGJcy: '\\u0403',\r\n\tgjcy: '\\u0453',\r\n\tgl: '\\u2277',\r\n\tgla: '\\u2AA5',\r\n\tglE: '\\u2A92',\r\n\tglj: '\\u2AA4',\r\n\tgnap: '\\u2A8A',\r\n\tgnapprox: '\\u2A8A',\r\n\tgnE: '\\u2269',\r\n\tgne: '\\u2A88',\r\n\tgneq: '\\u2A88',\r\n\tgneqq: '\\u2269',\r\n\tgnsim: '\\u22E7',\r\n\tGopf: '\\uD835\\uDD3E',\r\n\tgopf: '\\uD835\\uDD58',\r\n\tgrave: '\\u0060',\r\n\tGreaterEqual: '\\u2265',\r\n\tGreaterEqualLess: '\\u22DB',\r\n\tGreaterFullEqual: '\\u2267',\r\n\tGreaterGreater: '\\u2AA2',\r\n\tGreaterLess: '\\u2277',\r\n\tGreaterSlantEqual: '\\u2A7E',\r\n\tGreaterTilde: '\\u2273',\r\n\tGscr: '\\uD835\\uDCA2',\r\n\tgscr: '\\u210A',\r\n\tgsim: '\\u2273',\r\n\tgsime: '\\u2A8E',\r\n\tgsiml: '\\u2A90',\r\n\tGt: '\\u226B',\r\n\tGT: '\\u003E',\r\n\tgt: '\\u003E',\r\n\tgtcc: '\\u2AA7',\r\n\tgtcir: '\\u2A7A',\r\n\tgtdot: '\\u22D7',\r\n\tgtlPar: '\\u2995',\r\n\tgtquest: '\\u2A7C',\r\n\tgtrapprox: '\\u2A86',\r\n\tgtrarr: '\\u2978',\r\n\tgtrdot: '\\u22D7',\r\n\tgtreqless: '\\u22DB',\r\n\tgtreqqless: '\\u2A8C',\r\n\tgtrless: '\\u2277',\r\n\tgtrsim: '\\u2273',\r\n\tgvertneqq: '\\u2269\\uFE00',\r\n\tgvnE: '\\u2269\\uFE00',\r\n\tHacek: '\\u02C7',\r\n\thairsp: '\\u200A',\r\n\thalf: '\\u00BD',\r\n\thamilt: '\\u210B',\r\n\tHARDcy: '\\u042A',\r\n\thardcy: '\\u044A',\r\n\thArr: '\\u21D4',\r\n\tharr: '\\u2194',\r\n\tharrcir: '\\u2948',\r\n\tharrw: '\\u21AD',\r\n\tHat: '\\u005E',\r\n\thbar: '\\u210F',\r\n\tHcirc: '\\u0124',\r\n\thcirc: '\\u0125',\r\n\thearts: '\\u2665',\r\n\theartsuit: '\\u2665',\r\n\thellip: '\\u2026',\r\n\thercon: '\\u22B9',\r\n\tHfr: '\\u210C',\r\n\thfr: '\\uD835\\uDD25',\r\n\tHilbertSpace: '\\u210B',\r\n\thksearow: '\\u2925',\r\n\thkswarow: '\\u2926',\r\n\thoarr: '\\u21FF',\r\n\thomtht: '\\u223B',\r\n\thookleftarrow: '\\u21A9',\r\n\thookrightarrow: '\\u21AA',\r\n\tHopf: '\\u210D',\r\n\thopf: '\\uD835\\uDD59',\r\n\thorbar: '\\u2015',\r\n\tHorizontalLine: '\\u2500',\r\n\tHscr: '\\u210B',\r\n\thscr: '\\uD835\\uDCBD',\r\n\thslash: '\\u210F',\r\n\tHstrok: '\\u0126',\r\n\thstrok: '\\u0127',\r\n\tHumpDownHump: '\\u224E',\r\n\tHumpEqual: '\\u224F',\r\n\thybull: '\\u2043',\r\n\thyphen: '\\u2010',\r\n\tIacute: '\\u00CD',\r\n\tiacute: '\\u00ED',\r\n\tic: '\\u2063',\r\n\tIcirc: '\\u00CE',\r\n\ticirc: '\\u00EE',\r\n\tIcy: '\\u0418',\r\n\ticy: '\\u0438',\r\n\tIdot: '\\u0130',\r\n\tIEcy: '\\u0415',\r\n\tiecy: '\\u0435',\r\n\tiexcl: '\\u00A1',\r\n\tiff: '\\u21D4',\r\n\tIfr: '\\u2111',\r\n\tifr: '\\uD835\\uDD26',\r\n\tIgrave: '\\u00CC',\r\n\tigrave: '\\u00EC',\r\n\tii: '\\u2148',\r\n\tiiiint: '\\u2A0C',\r\n\tiiint: '\\u222D',\r\n\tiinfin: '\\u29DC',\r\n\tiiota: '\\u2129',\r\n\tIJlig: '\\u0132',\r\n\tijlig: '\\u0133',\r\n\tIm: '\\u2111',\r\n\tImacr: '\\u012A',\r\n\timacr: '\\u012B',\r\n\timage: '\\u2111',\r\n\tImaginaryI: '\\u2148',\r\n\timagline: '\\u2110',\r\n\timagpart: '\\u2111',\r\n\timath: '\\u0131',\r\n\timof: '\\u22B7',\r\n\timped: '\\u01B5',\r\n\tImplies: '\\u21D2',\r\n\tin: '\\u2208',\r\n\tincare: '\\u2105',\r\n\tinfin: '\\u221E',\r\n\tinfintie: '\\u29DD',\r\n\tinodot: '\\u0131',\r\n\tInt: '\\u222C',\r\n\tint: '\\u222B',\r\n\tintcal: '\\u22BA',\r\n\tintegers: '\\u2124',\r\n\tIntegral: '\\u222B',\r\n\tintercal: '\\u22BA',\r\n\tIntersection: '\\u22C2',\r\n\tintlarhk: '\\u2A17',\r\n\tintprod: '\\u2A3C',\r\n\tInvisibleComma: '\\u2063',\r\n\tInvisibleTimes: '\\u2062',\r\n\tIOcy: '\\u0401',\r\n\tiocy: '\\u0451',\r\n\tIogon: '\\u012E',\r\n\tiogon: '\\u012F',\r\n\tIopf: '\\uD835\\uDD40',\r\n\tiopf: '\\uD835\\uDD5A',\r\n\tIota: '\\u0399',\r\n\tiota: '\\u03B9',\r\n\tiprod: '\\u2A3C',\r\n\tiquest: '\\u00BF',\r\n\tIscr: '\\u2110',\r\n\tiscr: '\\uD835\\uDCBE',\r\n\tisin: '\\u2208',\r\n\tisindot: '\\u22F5',\r\n\tisinE: '\\u22F9',\r\n\tisins: '\\u22F4',\r\n\tisinsv: '\\u22F3',\r\n\tisinv: '\\u2208',\r\n\tit: '\\u2062',\r\n\tItilde: '\\u0128',\r\n\titilde: '\\u0129',\r\n\tIukcy: '\\u0406',\r\n\tiukcy: '\\u0456',\r\n\tIuml: '\\u00CF',\r\n\tiuml: '\\u00EF',\r\n\tJcirc: '\\u0134',\r\n\tjcirc: '\\u0135',\r\n\tJcy: '\\u0419',\r\n\tjcy: '\\u0439',\r\n\tJfr: '\\uD835\\uDD0D',\r\n\tjfr: '\\uD835\\uDD27',\r\n\tjmath: '\\u0237',\r\n\tJopf: '\\uD835\\uDD41',\r\n\tjopf: '\\uD835\\uDD5B',\r\n\tJscr: '\\uD835\\uDCA5',\r\n\tjscr: '\\uD835\\uDCBF',\r\n\tJsercy: '\\u0408',\r\n\tjsercy: '\\u0458',\r\n\tJukcy: '\\u0404',\r\n\tjukcy: '\\u0454',\r\n\tKappa: '\\u039A',\r\n\tkappa: '\\u03BA',\r\n\tkappav: '\\u03F0',\r\n\tKcedil: '\\u0136',\r\n\tkcedil: '\\u0137',\r\n\tKcy: '\\u041A',\r\n\tkcy: '\\u043A',\r\n\tKfr: '\\uD835\\uDD0E',\r\n\tkfr: '\\uD835\\uDD28',\r\n\tkgreen: '\\u0138',\r\n\tKHcy: '\\u0425',\r\n\tkhcy: '\\u0445',\r\n\tKJcy: '\\u040C',\r\n\tkjcy: '\\u045C',\r\n\tKopf: '\\uD835\\uDD42',\r\n\tkopf: '\\uD835\\uDD5C',\r\n\tKscr: '\\uD835\\uDCA6',\r\n\tkscr: '\\uD835\\uDCC0',\r\n\tlAarr: '\\u21DA',\r\n\tLacute: '\\u0139',\r\n\tlacute: '\\u013A',\r\n\tlaemptyv: '\\u29B4',\r\n\tlagran: '\\u2112',\r\n\tLambda: '\\u039B',\r\n\tlambda: '\\u03BB',\r\n\tLang: '\\u27EA',\r\n\tlang: '\\u27E8',\r\n\tlangd: '\\u2991',\r\n\tlangle: '\\u27E8',\r\n\tlap: '\\u2A85',\r\n\tLaplacetrf: '\\u2112',\r\n\tlaquo: '\\u00AB',\r\n\tLarr: '\\u219E',\r\n\tlArr: '\\u21D0',\r\n\tlarr: '\\u2190',\r\n\tlarrb: '\\u21E4',\r\n\tlarrbfs: '\\u291F',\r\n\tlarrfs: '\\u291D',\r\n\tlarrhk: '\\u21A9',\r\n\tlarrlp: '\\u21AB',\r\n\tlarrpl: '\\u2939',\r\n\tlarrsim: '\\u2973',\r\n\tlarrtl: '\\u21A2',\r\n\tlat: '\\u2AAB',\r\n\tlAtail: '\\u291B',\r\n\tlatail: '\\u2919',\r\n\tlate: '\\u2AAD',\r\n\tlates: '\\u2AAD\\uFE00',\r\n\tlBarr: '\\u290E',\r\n\tlbarr: '\\u290C',\r\n\tlbbrk: '\\u2772',\r\n\tlbrace: '\\u007B',\r\n\tlbrack: '\\u005B',\r\n\tlbrke: '\\u298B',\r\n\tlbrksld: '\\u298F',\r\n\tlbrkslu: '\\u298D',\r\n\tLcaron: '\\u013D',\r\n\tlcaron: '\\u013E',\r\n\tLcedil: '\\u013B',\r\n\tlcedil: '\\u013C',\r\n\tlceil: '\\u2308',\r\n\tlcub: '\\u007B',\r\n\tLcy: '\\u041B',\r\n\tlcy: '\\u043B',\r\n\tldca: '\\u2936',\r\n\tldquo: '\\u201C',\r\n\tldquor: '\\u201E',\r\n\tldrdhar: '\\u2967',\r\n\tldrushar: '\\u294B',\r\n\tldsh: '\\u21B2',\r\n\tlE: '\\u2266',\r\n\tle: '\\u2264',\r\n\tLeftAngleBracket: '\\u27E8',\r\n\tLeftArrow: '\\u2190',\r\n\tLeftarrow: '\\u21D0',\r\n\tleftarrow: '\\u2190',\r\n\tLeftArrowBar: '\\u21E4',\r\n\tLeftArrowRightArrow: '\\u21C6',\r\n\tleftarrowtail: '\\u21A2',\r\n\tLeftCeiling: '\\u2308',\r\n\tLeftDoubleBracket: '\\u27E6',\r\n\tLeftDownTeeVector: '\\u2961',\r\n\tLeftDownVector: '\\u21C3',\r\n\tLeftDownVectorBar: '\\u2959',\r\n\tLeftFloor: '\\u230A',\r\n\tleftharpoondown: '\\u21BD',\r\n\tleftharpoonup: '\\u21BC',\r\n\tleftleftarrows: '\\u21C7',\r\n\tLeftRightArrow: '\\u2194',\r\n\tLeftrightarrow: '\\u21D4',\r\n\tleftrightarrow: '\\u2194',\r\n\tleftrightarrows: '\\u21C6',\r\n\tleftrightharpoons: '\\u21CB',\r\n\tleftrightsquigarrow: '\\u21AD',\r\n\tLeftRightVector: '\\u294E',\r\n\tLeftTee: '\\u22A3',\r\n\tLeftTeeArrow: '\\u21A4',\r\n\tLeftTeeVector: '\\u295A',\r\n\tleftthreetimes: '\\u22CB',\r\n\tLeftTriangle: '\\u22B2',\r\n\tLeftTriangleBar: '\\u29CF',\r\n\tLeftTriangleEqual: '\\u22B4',\r\n\tLeftUpDownVector: '\\u2951',\r\n\tLeftUpTeeVector: '\\u2960',\r\n\tLeftUpVector: '\\u21BF',\r\n\tLeftUpVectorBar: '\\u2958',\r\n\tLeftVector: '\\u21BC',\r\n\tLeftVectorBar: '\\u2952',\r\n\tlEg: '\\u2A8B',\r\n\tleg: '\\u22DA',\r\n\tleq: '\\u2264',\r\n\tleqq: '\\u2266',\r\n\tleqslant: '\\u2A7D',\r\n\tles: '\\u2A7D',\r\n\tlescc: '\\u2AA8',\r\n\tlesdot: '\\u2A7F',\r\n\tlesdoto: '\\u2A81',\r\n\tlesdotor: '\\u2A83',\r\n\tlesg: '\\u22DA\\uFE00',\r\n\tlesges: '\\u2A93',\r\n\tlessapprox: '\\u2A85',\r\n\tlessdot: '\\u22D6',\r\n\tlesseqgtr: '\\u22DA',\r\n\tlesseqqgtr: '\\u2A8B',\r\n\tLessEqualGreater: '\\u22DA',\r\n\tLessFullEqual: '\\u2266',\r\n\tLessGreater: '\\u2276',\r\n\tlessgtr: '\\u2276',\r\n\tLessLess: '\\u2AA1',\r\n\tlesssim: '\\u2272',\r\n\tLessSlantEqual: '\\u2A7D',\r\n\tLessTilde: '\\u2272',\r\n\tlfisht: '\\u297C',\r\n\tlfloor: '\\u230A',\r\n\tLfr: '\\uD835\\uDD0F',\r\n\tlfr: '\\uD835\\uDD29',\r\n\tlg: '\\u2276',\r\n\tlgE: '\\u2A91',\r\n\tlHar: '\\u2962',\r\n\tlhard: '\\u21BD',\r\n\tlharu: '\\u21BC',\r\n\tlharul: '\\u296A',\r\n\tlhblk: '\\u2584',\r\n\tLJcy: '\\u0409',\r\n\tljcy: '\\u0459',\r\n\tLl: '\\u22D8',\r\n\tll: '\\u226A',\r\n\tllarr: '\\u21C7',\r\n\tllcorner: '\\u231E',\r\n\tLleftarrow: '\\u21DA',\r\n\tllhard: '\\u296B',\r\n\tlltri: '\\u25FA',\r\n\tLmidot: '\\u013F',\r\n\tlmidot: '\\u0140',\r\n\tlmoust: '\\u23B0',\r\n\tlmoustache: '\\u23B0',\r\n\tlnap: '\\u2A89',\r\n\tlnapprox: '\\u2A89',\r\n\tlnE: '\\u2268',\r\n\tlne: '\\u2A87',\r\n\tlneq: '\\u2A87',\r\n\tlneqq: '\\u2268',\r\n\tlnsim: '\\u22E6',\r\n\tloang: '\\u27EC',\r\n\tloarr: '\\u21FD',\r\n\tlobrk: '\\u27E6',\r\n\tLongLeftArrow: '\\u27F5',\r\n\tLongleftarrow: '\\u27F8',\r\n\tlongleftarrow: '\\u27F5',\r\n\tLongLeftRightArrow: '\\u27F7',\r\n\tLongleftrightarrow: '\\u27FA',\r\n\tlongleftrightarrow: '\\u27F7',\r\n\tlongmapsto: '\\u27FC',\r\n\tLongRightArrow: '\\u27F6',\r\n\tLongrightarrow: '\\u27F9',\r\n\tlongrightarrow: '\\u27F6',\r\n\tlooparrowleft: '\\u21AB',\r\n\tlooparrowright: '\\u21AC',\r\n\tlopar: '\\u2985',\r\n\tLopf: '\\uD835\\uDD43',\r\n\tlopf: '\\uD835\\uDD5D',\r\n\tloplus: '\\u2A2D',\r\n\tlotimes: '\\u2A34',\r\n\tlowast: '\\u2217',\r\n\tlowbar: '\\u005F',\r\n\tLowerLeftArrow: '\\u2199',\r\n\tLowerRightArrow: '\\u2198',\r\n\tloz: '\\u25CA',\r\n\tlozenge: '\\u25CA',\r\n\tlozf: '\\u29EB',\r\n\tlpar: '\\u0028',\r\n\tlparlt: '\\u2993',\r\n\tlrarr: '\\u21C6',\r\n\tlrcorner: '\\u231F',\r\n\tlrhar: '\\u21CB',\r\n\tlrhard: '\\u296D',\r\n\tlrm: '\\u200E',\r\n\tlrtri: '\\u22BF',\r\n\tlsaquo: '\\u2039',\r\n\tLscr: '\\u2112',\r\n\tlscr: '\\uD835\\uDCC1',\r\n\tLsh: '\\u21B0',\r\n\tlsh: '\\u21B0',\r\n\tlsim: '\\u2272',\r\n\tlsime: '\\u2A8D',\r\n\tlsimg: '\\u2A8F',\r\n\tlsqb: '\\u005B',\r\n\tlsquo: '\\u2018',\r\n\tlsquor: '\\u201A',\r\n\tLstrok: '\\u0141',\r\n\tlstrok: '\\u0142',\r\n\tLt: '\\u226A',\r\n\tLT: '\\u003C',\r\n\tlt: '\\u003C',\r\n\tltcc: '\\u2AA6',\r\n\tltcir: '\\u2A79',\r\n\tltdot: '\\u22D6',\r\n\tlthree: '\\u22CB',\r\n\tltimes: '\\u22C9',\r\n\tltlarr: '\\u2976',\r\n\tltquest: '\\u2A7B',\r\n\tltri: '\\u25C3',\r\n\tltrie: '\\u22B4',\r\n\tltrif: '\\u25C2',\r\n\tltrPar: '\\u2996',\r\n\tlurdshar: '\\u294A',\r\n\tluruhar: '\\u2966',\r\n\tlvertneqq: '\\u2268\\uFE00',\r\n\tlvnE: '\\u2268\\uFE00',\r\n\tmacr: '\\u00AF',\r\n\tmale: '\\u2642',\r\n\tmalt: '\\u2720',\r\n\tmaltese: '\\u2720',\r\n\tMap: '\\u2905',\r\n\tmap: '\\u21A6',\r\n\tmapsto: '\\u21A6',\r\n\tmapstodown: '\\u21A7',\r\n\tmapstoleft: '\\u21A4',\r\n\tmapstoup: '\\u21A5',\r\n\tmarker: '\\u25AE',\r\n\tmcomma: '\\u2A29',\r\n\tMcy: '\\u041C',\r\n\tmcy: '\\u043C',\r\n\tmdash: '\\u2014',\r\n\tmDDot: '\\u223A',\r\n\tmeasuredangle: '\\u2221',\r\n\tMediumSpace: '\\u205F',\r\n\tMellintrf: '\\u2133',\r\n\tMfr: '\\uD835\\uDD10',\r\n\tmfr: '\\uD835\\uDD2A',\r\n\tmho: '\\u2127',\r\n\tmicro: '\\u00B5',\r\n\tmid: '\\u2223',\r\n\tmidast: '\\u002A',\r\n\tmidcir: '\\u2AF0',\r\n\tmiddot: '\\u00B7',\r\n\tminus: '\\u2212',\r\n\tminusb: '\\u229F',\r\n\tminusd: '\\u2238',\r\n\tminusdu: '\\u2A2A',\r\n\tMinusPlus: '\\u2213',\r\n\tmlcp: '\\u2ADB',\r\n\tmldr: '\\u2026',\r\n\tmnplus: '\\u2213',\r\n\tmodels: '\\u22A7',\r\n\tMopf: '\\uD835\\uDD44',\r\n\tmopf: '\\uD835\\uDD5E',\r\n\tmp: '\\u2213',\r\n\tMscr: '\\u2133',\r\n\tmscr: '\\uD835\\uDCC2',\r\n\tmstpos: '\\u223E',\r\n\tMu: '\\u039C',\r\n\tmu: '\\u03BC',\r\n\tmultimap: '\\u22B8',\r\n\tmumap: '\\u22B8',\r\n\tnabla: '\\u2207',\r\n\tNacute: '\\u0143',\r\n\tnacute: '\\u0144',\r\n\tnang: '\\u2220\\u20D2',\r\n\tnap: '\\u2249',\r\n\tnapE: '\\u2A70\\u0338',\r\n\tnapid: '\\u224B\\u0338',\r\n\tnapos: '\\u0149',\r\n\tnapprox: '\\u2249',\r\n\tnatur: '\\u266E',\r\n\tnatural: '\\u266E',\r\n\tnaturals: '\\u2115',\r\n\tnbsp: '\\u00A0',\r\n\tnbump: '\\u224E\\u0338',\r\n\tnbumpe: '\\u224F\\u0338',\r\n\tncap: '\\u2A43',\r\n\tNcaron: '\\u0147',\r\n\tncaron: '\\u0148',\r\n\tNcedil: '\\u0145',\r\n\tncedil: '\\u0146',\r\n\tncong: '\\u2247',\r\n\tncongdot: '\\u2A6D\\u0338',\r\n\tncup: '\\u2A42',\r\n\tNcy: '\\u041D',\r\n\tncy: '\\u043D',\r\n\tndash: '\\u2013',\r\n\tne: '\\u2260',\r\n\tnearhk: '\\u2924',\r\n\tneArr: '\\u21D7',\r\n\tnearr: '\\u2197',\r\n\tnearrow: '\\u2197',\r\n\tnedot: '\\u2250\\u0338',\r\n\tNegativeMediumSpace: '\\u200B',\r\n\tNegativeThickSpace: '\\u200B',\r\n\tNegativeThinSpace: '\\u200B',\r\n\tNegativeVeryThinSpace: '\\u200B',\r\n\tnequiv: '\\u2262',\r\n\tnesear: '\\u2928',\r\n\tnesim: '\\u2242\\u0338',\r\n\tNestedGreaterGreater: '\\u226B',\r\n\tNestedLessLess: '\\u226A',\r\n\tNewLine: '\\u000A',\r\n\tnexist: '\\u2204',\r\n\tnexists: '\\u2204',\r\n\tNfr: '\\uD835\\uDD11',\r\n\tnfr: '\\uD835\\uDD2B',\r\n\tngE: '\\u2267\\u0338',\r\n\tnge: '\\u2271',\r\n\tngeq: '\\u2271',\r\n\tngeqq: '\\u2267\\u0338',\r\n\tngeqslant: '\\u2A7E\\u0338',\r\n\tnges: '\\u2A7E\\u0338',\r\n\tnGg: '\\u22D9\\u0338',\r\n\tngsim: '\\u2275',\r\n\tnGt: '\\u226B\\u20D2',\r\n\tngt: '\\u226F',\r\n\tngtr: '\\u226F',\r\n\tnGtv: '\\u226B\\u0338',\r\n\tnhArr: '\\u21CE',\r\n\tnharr: '\\u21AE',\r\n\tnhpar: '\\u2AF2',\r\n\tni: '\\u220B',\r\n\tnis: '\\u22FC',\r\n\tnisd: '\\u22FA',\r\n\tniv: '\\u220B',\r\n\tNJcy: '\\u040A',\r\n\tnjcy: '\\u045A',\r\n\tnlArr: '\\u21CD',\r\n\tnlarr: '\\u219A',\r\n\tnldr: '\\u2025',\r\n\tnlE: '\\u2266\\u0338',\r\n\tnle: '\\u2270',\r\n\tnLeftarrow: '\\u21CD',\r\n\tnleftarrow: '\\u219A',\r\n\tnLeftrightarrow: '\\u21CE',\r\n\tnleftrightarrow: '\\u21AE',\r\n\tnleq: '\\u2270',\r\n\tnleqq: '\\u2266\\u0338',\r\n\tnleqslant: '\\u2A7D\\u0338',\r\n\tnles: '\\u2A7D\\u0338',\r\n\tnless: '\\u226E',\r\n\tnLl: '\\u22D8\\u0338',\r\n\tnlsim: '\\u2274',\r\n\tnLt: '\\u226A\\u20D2',\r\n\tnlt: '\\u226E',\r\n\tnltri: '\\u22EA',\r\n\tnltrie: '\\u22EC',\r\n\tnLtv: '\\u226A\\u0338',\r\n\tnmid: '\\u2224',\r\n\tNoBreak: '\\u2060',\r\n\tNonBreakingSpace: '\\u00A0',\r\n\tNopf: '\\u2115',\r\n\tnopf: '\\uD835\\uDD5F',\r\n\tNot: '\\u2AEC',\r\n\tnot: '\\u00AC',\r\n\tNotCongruent: '\\u2262',\r\n\tNotCupCap: '\\u226D',\r\n\tNotDoubleVerticalBar: '\\u2226',\r\n\tNotElement: '\\u2209',\r\n\tNotEqual: '\\u2260',\r\n\tNotEqualTilde: '\\u2242\\u0338',\r\n\tNotExists: '\\u2204',\r\n\tNotGreater: '\\u226F',\r\n\tNotGreaterEqual: '\\u2271',\r\n\tNotGreaterFullEqual: '\\u2267\\u0338',\r\n\tNotGreaterGreater: '\\u226B\\u0338',\r\n\tNotGreaterLess: '\\u2279',\r\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\r\n\tNotGreaterTilde: '\\u2275',\r\n\tNotHumpDownHump: '\\u224E\\u0338',\r\n\tNotHumpEqual: '\\u224F\\u0338',\r\n\tnotin: '\\u2209',\r\n\tnotindot: '\\u22F5\\u0338',\r\n\tnotinE: '\\u22F9\\u0338',\r\n\tnotinva: '\\u2209',\r\n\tnotinvb: '\\u22F7',\r\n\tnotinvc: '\\u22F6',\r\n\tNotLeftTriangle: '\\u22EA',\r\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\r\n\tNotLeftTriangleEqual: '\\u22EC',\r\n\tNotLess: '\\u226E',\r\n\tNotLessEqual: '\\u2270',\r\n\tNotLessGreater: '\\u2278',\r\n\tNotLessLess: '\\u226A\\u0338',\r\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\r\n\tNotLessTilde: '\\u2274',\r\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\r\n\tNotNestedLessLess: '\\u2AA1\\u0338',\r\n\tnotni: '\\u220C',\r\n\tnotniva: '\\u220C',\r\n\tnotnivb: '\\u22FE',\r\n\tnotnivc: '\\u22FD',\r\n\tNotPrecedes: '\\u2280',\r\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\r\n\tNotPrecedesSlantEqual: '\\u22E0',\r\n\tNotReverseElement: '\\u220C',\r\n\tNotRightTriangle: '\\u22EB',\r\n\tNotRightTriangleBar: '\\u29D0\\u0338',\r\n\tNotRightTriangleEqual: '\\u22ED',\r\n\tNotSquareSubset: '\\u228F\\u0338',\r\n\tNotSquareSubsetEqual: '\\u22E2',\r\n\tNotSquareSuperset: '\\u2290\\u0338',\r\n\tNotSquareSupersetEqual: '\\u22E3',\r\n\tNotSubset: '\\u2282\\u20D2',\r\n\tNotSubsetEqual: '\\u2288',\r\n\tNotSucceeds: '\\u2281',\r\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\r\n\tNotSucceedsSlantEqual: '\\u22E1',\r\n\tNotSucceedsTilde: '\\u227F\\u0338',\r\n\tNotSuperset: '\\u2283\\u20D2',\r\n\tNotSupersetEqual: '\\u2289',\r\n\tNotTilde: '\\u2241',\r\n\tNotTildeEqual: '\\u2244',\r\n\tNotTildeFullEqual: '\\u2247',\r\n\tNotTildeTilde: '\\u2249',\r\n\tNotVerticalBar: '\\u2224',\r\n\tnpar: '\\u2226',\r\n\tnparallel: '\\u2226',\r\n\tnparsl: '\\u2AFD\\u20E5',\r\n\tnpart: '\\u2202\\u0338',\r\n\tnpolint: '\\u2A14',\r\n\tnpr: '\\u2280',\r\n\tnprcue: '\\u22E0',\r\n\tnpre: '\\u2AAF\\u0338',\r\n\tnprec: '\\u2280',\r\n\tnpreceq: '\\u2AAF\\u0338',\r\n\tnrArr: '\\u21CF',\r\n\tnrarr: '\\u219B',\r\n\tnrarrc: '\\u2933\\u0338',\r\n\tnrarrw: '\\u219D\\u0338',\r\n\tnRightarrow: '\\u21CF',\r\n\tnrightarrow: '\\u219B',\r\n\tnrtri: '\\u22EB',\r\n\tnrtrie: '\\u22ED',\r\n\tnsc: '\\u2281',\r\n\tnsccue: '\\u22E1',\r\n\tnsce: '\\u2AB0\\u0338',\r\n\tNscr: '\\uD835\\uDCA9',\r\n\tnscr: '\\uD835\\uDCC3',\r\n\tnshortmid: '\\u2224',\r\n\tnshortparallel: '\\u2226',\r\n\tnsim: '\\u2241',\r\n\tnsime: '\\u2244',\r\n\tnsimeq: '\\u2244',\r\n\tnsmid: '\\u2224',\r\n\tnspar: '\\u2226',\r\n\tnsqsube: '\\u22E2',\r\n\tnsqsupe: '\\u22E3',\r\n\tnsub: '\\u2284',\r\n\tnsubE: '\\u2AC5\\u0338',\r\n\tnsube: '\\u2288',\r\n\tnsubset: '\\u2282\\u20D2',\r\n\tnsubseteq: '\\u2288',\r\n\tnsubseteqq: '\\u2AC5\\u0338',\r\n\tnsucc: '\\u2281',\r\n\tnsucceq: '\\u2AB0\\u0338',\r\n\tnsup: '\\u2285',\r\n\tnsupE: '\\u2AC6\\u0338',\r\n\tnsupe: '\\u2289',\r\n\tnsupset: '\\u2283\\u20D2',\r\n\tnsupseteq: '\\u2289',\r\n\tnsupseteqq: '\\u2AC6\\u0338',\r\n\tntgl: '\\u2279',\r\n\tNtilde: '\\u00D1',\r\n\tntilde: '\\u00F1',\r\n\tntlg: '\\u2278',\r\n\tntriangleleft: '\\u22EA',\r\n\tntrianglelefteq: '\\u22EC',\r\n\tntriangleright: '\\u22EB',\r\n\tntrianglerighteq: '\\u22ED',\r\n\tNu: '\\u039D',\r\n\tnu: '\\u03BD',\r\n\tnum: '\\u0023',\r\n\tnumero: '\\u2116',\r\n\tnumsp: '\\u2007',\r\n\tnvap: '\\u224D\\u20D2',\r\n\tnVDash: '\\u22AF',\r\n\tnVdash: '\\u22AE',\r\n\tnvDash: '\\u22AD',\r\n\tnvdash: '\\u22AC',\r\n\tnvge: '\\u2265\\u20D2',\r\n\tnvgt: '\\u003E\\u20D2',\r\n\tnvHarr: '\\u2904',\r\n\tnvinfin: '\\u29DE',\r\n\tnvlArr: '\\u2902',\r\n\tnvle: '\\u2264\\u20D2',\r\n\tnvlt: '\\u003C\\u20D2',\r\n\tnvltrie: '\\u22B4\\u20D2',\r\n\tnvrArr: '\\u2903',\r\n\tnvrtrie: '\\u22B5\\u20D2',\r\n\tnvsim: '\\u223C\\u20D2',\r\n\tnwarhk: '\\u2923',\r\n\tnwArr: '\\u21D6',\r\n\tnwarr: '\\u2196',\r\n\tnwarrow: '\\u2196',\r\n\tnwnear: '\\u2927',\r\n\tOacute: '\\u00D3',\r\n\toacute: '\\u00F3',\r\n\toast: '\\u229B',\r\n\tocir: '\\u229A',\r\n\tOcirc: '\\u00D4',\r\n\tocirc: '\\u00F4',\r\n\tOcy: '\\u041E',\r\n\tocy: '\\u043E',\r\n\todash: '\\u229D',\r\n\tOdblac: '\\u0150',\r\n\todblac: '\\u0151',\r\n\todiv: '\\u2A38',\r\n\todot: '\\u2299',\r\n\todsold: '\\u29BC',\r\n\tOElig: '\\u0152',\r\n\toelig: '\\u0153',\r\n\tofcir: '\\u29BF',\r\n\tOfr: '\\uD835\\uDD12',\r\n\tofr: '\\uD835\\uDD2C',\r\n\togon: '\\u02DB',\r\n\tOgrave: '\\u00D2',\r\n\tograve: '\\u00F2',\r\n\togt: '\\u29C1',\r\n\tohbar: '\\u29B5',\r\n\tohm: '\\u03A9',\r\n\toint: '\\u222E',\r\n\tolarr: '\\u21BA',\r\n\tolcir: '\\u29BE',\r\n\tolcross: '\\u29BB',\r\n\toline: '\\u203E',\r\n\tolt: '\\u29C0',\r\n\tOmacr: '\\u014C',\r\n\tomacr: '\\u014D',\r\n\tOmega: '\\u03A9',\r\n\tomega: '\\u03C9',\r\n\tOmicron: '\\u039F',\r\n\tomicron: '\\u03BF',\r\n\tomid: '\\u29B6',\r\n\tominus: '\\u2296',\r\n\tOopf: '\\uD835\\uDD46',\r\n\toopf: '\\uD835\\uDD60',\r\n\topar: '\\u29B7',\r\n\tOpenCurlyDoubleQuote: '\\u201C',\r\n\tOpenCurlyQuote: '\\u2018',\r\n\toperp: '\\u29B9',\r\n\toplus: '\\u2295',\r\n\tOr: '\\u2A54',\r\n\tor: '\\u2228',\r\n\torarr: '\\u21BB',\r\n\tord: '\\u2A5D',\r\n\torder: '\\u2134',\r\n\torderof: '\\u2134',\r\n\tordf: '\\u00AA',\r\n\tordm: '\\u00BA',\r\n\torigof: '\\u22B6',\r\n\toror: '\\u2A56',\r\n\torslope: '\\u2A57',\r\n\torv: '\\u2A5B',\r\n\toS: '\\u24C8',\r\n\tOscr: '\\uD835\\uDCAA',\r\n\toscr: '\\u2134',\r\n\tOslash: '\\u00D8',\r\n\toslash: '\\u00F8',\r\n\tosol: '\\u2298',\r\n\tOtilde: '\\u00D5',\r\n\totilde: '\\u00F5',\r\n\tOtimes: '\\u2A37',\r\n\totimes: '\\u2297',\r\n\totimesas: '\\u2A36',\r\n\tOuml: '\\u00D6',\r\n\touml: '\\u00F6',\r\n\tovbar: '\\u233D',\r\n\tOverBar: '\\u203E',\r\n\tOverBrace: '\\u23DE',\r\n\tOverBracket: '\\u23B4',\r\n\tOverParenthesis: '\\u23DC',\r\n\tpar: '\\u2225',\r\n\tpara: '\\u00B6',\r\n\tparallel: '\\u2225',\r\n\tparsim: '\\u2AF3',\r\n\tparsl: '\\u2AFD',\r\n\tpart: '\\u2202',\r\n\tPartialD: '\\u2202',\r\n\tPcy: '\\u041F',\r\n\tpcy: '\\u043F',\r\n\tpercnt: '\\u0025',\r\n\tperiod: '\\u002E',\r\n\tpermil: '\\u2030',\r\n\tperp: '\\u22A5',\r\n\tpertenk: '\\u2031',\r\n\tPfr: '\\uD835\\uDD13',\r\n\tpfr: '\\uD835\\uDD2D',\r\n\tPhi: '\\u03A6',\r\n\tphi: '\\u03C6',\r\n\tphiv: '\\u03D5',\r\n\tphmmat: '\\u2133',\r\n\tphone: '\\u260E',\r\n\tPi: '\\u03A0',\r\n\tpi: '\\u03C0',\r\n\tpitchfork: '\\u22D4',\r\n\tpiv: '\\u03D6',\r\n\tplanck: '\\u210F',\r\n\tplanckh: '\\u210E',\r\n\tplankv: '\\u210F',\r\n\tplus: '\\u002B',\r\n\tplusacir: '\\u2A23',\r\n\tplusb: '\\u229E',\r\n\tpluscir: '\\u2A22',\r\n\tplusdo: '\\u2214',\r\n\tplusdu: '\\u2A25',\r\n\tpluse: '\\u2A72',\r\n\tPlusMinus: '\\u00B1',\r\n\tplusmn: '\\u00B1',\r\n\tplussim: '\\u2A26',\r\n\tplustwo: '\\u2A27',\r\n\tpm: '\\u00B1',\r\n\tPoincareplane: '\\u210C',\r\n\tpointint: '\\u2A15',\r\n\tPopf: '\\u2119',\r\n\tpopf: '\\uD835\\uDD61',\r\n\tpound: '\\u00A3',\r\n\tPr: '\\u2ABB',\r\n\tpr: '\\u227A',\r\n\tprap: '\\u2AB7',\r\n\tprcue: '\\u227C',\r\n\tprE: '\\u2AB3',\r\n\tpre: '\\u2AAF',\r\n\tprec: '\\u227A',\r\n\tprecapprox: '\\u2AB7',\r\n\tpreccurlyeq: '\\u227C',\r\n\tPrecedes: '\\u227A',\r\n\tPrecedesEqual: '\\u2AAF',\r\n\tPrecedesSlantEqual: '\\u227C',\r\n\tPrecedesTilde: '\\u227E',\r\n\tpreceq: '\\u2AAF',\r\n\tprecnapprox: '\\u2AB9',\r\n\tprecneqq: '\\u2AB5',\r\n\tprecnsim: '\\u22E8',\r\n\tprecsim: '\\u227E',\r\n\tPrime: '\\u2033',\r\n\tprime: '\\u2032',\r\n\tprimes: '\\u2119',\r\n\tprnap: '\\u2AB9',\r\n\tprnE: '\\u2AB5',\r\n\tprnsim: '\\u22E8',\r\n\tprod: '\\u220F',\r\n\tProduct: '\\u220F',\r\n\tprofalar: '\\u232E',\r\n\tprofline: '\\u2312',\r\n\tprofsurf: '\\u2313',\r\n\tprop: '\\u221D',\r\n\tProportion: '\\u2237',\r\n\tProportional: '\\u221D',\r\n\tpropto: '\\u221D',\r\n\tprsim: '\\u227E',\r\n\tprurel: '\\u22B0',\r\n\tPscr: '\\uD835\\uDCAB',\r\n\tpscr: '\\uD835\\uDCC5',\r\n\tPsi: '\\u03A8',\r\n\tpsi: '\\u03C8',\r\n\tpuncsp: '\\u2008',\r\n\tQfr: '\\uD835\\uDD14',\r\n\tqfr: '\\uD835\\uDD2E',\r\n\tqint: '\\u2A0C',\r\n\tQopf: '\\u211A',\r\n\tqopf: '\\uD835\\uDD62',\r\n\tqprime: '\\u2057',\r\n\tQscr: '\\uD835\\uDCAC',\r\n\tqscr: '\\uD835\\uDCC6',\r\n\tquaternions: '\\u210D',\r\n\tquatint: '\\u2A16',\r\n\tquest: '\\u003F',\r\n\tquesteq: '\\u225F',\r\n\tQUOT: '\\u0022',\r\n\tquot: '\\u0022',\r\n\trAarr: '\\u21DB',\r\n\trace: '\\u223D\\u0331',\r\n\tRacute: '\\u0154',\r\n\tracute: '\\u0155',\r\n\tradic: '\\u221A',\r\n\traemptyv: '\\u29B3',\r\n\tRang: '\\u27EB',\r\n\trang: '\\u27E9',\r\n\trangd: '\\u2992',\r\n\trange: '\\u29A5',\r\n\trangle: '\\u27E9',\r\n\traquo: '\\u00BB',\r\n\tRarr: '\\u21A0',\r\n\trArr: '\\u21D2',\r\n\trarr: '\\u2192',\r\n\trarrap: '\\u2975',\r\n\trarrb: '\\u21E5',\r\n\trarrbfs: '\\u2920',\r\n\trarrc: '\\u2933',\r\n\trarrfs: '\\u291E',\r\n\trarrhk: '\\u21AA',\r\n\trarrlp: '\\u21AC',\r\n\trarrpl: '\\u2945',\r\n\trarrsim: '\\u2974',\r\n\tRarrtl: '\\u2916',\r\n\trarrtl: '\\u21A3',\r\n\trarrw: '\\u219D',\r\n\trAtail: '\\u291C',\r\n\tratail: '\\u291A',\r\n\tratio: '\\u2236',\r\n\trationals: '\\u211A',\r\n\tRBarr: '\\u2910',\r\n\trBarr: '\\u290F',\r\n\trbarr: '\\u290D',\r\n\trbbrk: '\\u2773',\r\n\trbrace: '\\u007D',\r\n\trbrack: '\\u005D',\r\n\trbrke: '\\u298C',\r\n\trbrksld: '\\u298E',\r\n\trbrkslu: '\\u2990',\r\n\tRcaron: '\\u0158',\r\n\trcaron: '\\u0159',\r\n\tRcedil: '\\u0156',\r\n\trcedil: '\\u0157',\r\n\trceil: '\\u2309',\r\n\trcub: '\\u007D',\r\n\tRcy: '\\u0420',\r\n\trcy: '\\u0440',\r\n\trdca: '\\u2937',\r\n\trdldhar: '\\u2969',\r\n\trdquo: '\\u201D',\r\n\trdquor: '\\u201D',\r\n\trdsh: '\\u21B3',\r\n\tRe: '\\u211C',\r\n\treal: '\\u211C',\r\n\trealine: '\\u211B',\r\n\trealpart: '\\u211C',\r\n\treals: '\\u211D',\r\n\trect: '\\u25AD',\r\n\tREG: '\\u00AE',\r\n\treg: '\\u00AE',\r\n\tReverseElement: '\\u220B',\r\n\tReverseEquilibrium: '\\u21CB',\r\n\tReverseUpEquilibrium: '\\u296F',\r\n\trfisht: '\\u297D',\r\n\trfloor: '\\u230B',\r\n\tRfr: '\\u211C',\r\n\trfr: '\\uD835\\uDD2F',\r\n\trHar: '\\u2964',\r\n\trhard: '\\u21C1',\r\n\trharu: '\\u21C0',\r\n\trharul: '\\u296C',\r\n\tRho: '\\u03A1',\r\n\trho: '\\u03C1',\r\n\trhov: '\\u03F1',\r\n\tRightAngleBracket: '\\u27E9',\r\n\tRightArrow: '\\u2192',\r\n\tRightarrow: '\\u21D2',\r\n\trightarrow: '\\u2192',\r\n\tRightArrowBar: '\\u21E5',\r\n\tRightArrowLeftArrow: '\\u21C4',\r\n\trightarrowtail: '\\u21A3',\r\n\tRightCeiling: '\\u2309',\r\n\tRightDoubleBracket: '\\u27E7',\r\n\tRightDownTeeVector: '\\u295D',\r\n\tRightDownVector: '\\u21C2',\r\n\tRightDownVectorBar: '\\u2955',\r\n\tRightFloor: '\\u230B',\r\n\trightharpoondown: '\\u21C1',\r\n\trightharpoonup: '\\u21C0',\r\n\trightleftarrows: '\\u21C4',\r\n\trightleftharpoons: '\\u21CC',\r\n\trightrightarrows: '\\u21C9',\r\n\trightsquigarrow: '\\u219D',\r\n\tRightTee: '\\u22A2',\r\n\tRightTeeArrow: '\\u21A6',\r\n\tRightTeeVector: '\\u295B',\r\n\trightthreetimes: '\\u22CC',\r\n\tRightTriangle: '\\u22B3',\r\n\tRightTriangleBar: '\\u29D0',\r\n\tRightTriangleEqual: '\\u22B5',\r\n\tRightUpDownVector: '\\u294F',\r\n\tRightUpTeeVector: '\\u295C',\r\n\tRightUpVector: '\\u21BE',\r\n\tRightUpVectorBar: '\\u2954',\r\n\tRightVector: '\\u21C0',\r\n\tRightVectorBar: '\\u2953',\r\n\tring: '\\u02DA',\r\n\trisingdotseq: '\\u2253',\r\n\trlarr: '\\u21C4',\r\n\trlhar: '\\u21CC',\r\n\trlm: '\\u200F',\r\n\trmoust: '\\u23B1',\r\n\trmoustache: '\\u23B1',\r\n\trnmid: '\\u2AEE',\r\n\troang: '\\u27ED',\r\n\troarr: '\\u21FE',\r\n\trobrk: '\\u27E7',\r\n\tropar: '\\u2986',\r\n\tRopf: '\\u211D',\r\n\tropf: '\\uD835\\uDD63',\r\n\troplus: '\\u2A2E',\r\n\trotimes: '\\u2A35',\r\n\tRoundImplies: '\\u2970',\r\n\trpar: '\\u0029',\r\n\trpargt: '\\u2994',\r\n\trppolint: '\\u2A12',\r\n\trrarr: '\\u21C9',\r\n\tRrightarrow: '\\u21DB',\r\n\trsaquo: '\\u203A',\r\n\tRscr: '\\u211B',\r\n\trscr: '\\uD835\\uDCC7',\r\n\tRsh: '\\u21B1',\r\n\trsh: '\\u21B1',\r\n\trsqb: '\\u005D',\r\n\trsquo: '\\u2019',\r\n\trsquor: '\\u2019',\r\n\trthree: '\\u22CC',\r\n\trtimes: '\\u22CA',\r\n\trtri: '\\u25B9',\r\n\trtrie: '\\u22B5',\r\n\trtrif: '\\u25B8',\r\n\trtriltri: '\\u29CE',\r\n\tRuleDelayed: '\\u29F4',\r\n\truluhar: '\\u2968',\r\n\trx: '\\u211E',\r\n\tSacute: '\\u015A',\r\n\tsacute: '\\u015B',\r\n\tsbquo: '\\u201A',\r\n\tSc: '\\u2ABC',\r\n\tsc: '\\u227B',\r\n\tscap: '\\u2AB8',\r\n\tScaron: '\\u0160',\r\n\tscaron: '\\u0161',\r\n\tsccue: '\\u227D',\r\n\tscE: '\\u2AB4',\r\n\tsce: '\\u2AB0',\r\n\tScedil: '\\u015E',\r\n\tscedil: '\\u015F',\r\n\tScirc: '\\u015C',\r\n\tscirc: '\\u015D',\r\n\tscnap: '\\u2ABA',\r\n\tscnE: '\\u2AB6',\r\n\tscnsim: '\\u22E9',\r\n\tscpolint: '\\u2A13',\r\n\tscsim: '\\u227F',\r\n\tScy: '\\u0421',\r\n\tscy: '\\u0441',\r\n\tsdot: '\\u22C5',\r\n\tsdotb: '\\u22A1',\r\n\tsdote: '\\u2A66',\r\n\tsearhk: '\\u2925',\r\n\tseArr: '\\u21D8',\r\n\tsearr: '\\u2198',\r\n\tsearrow: '\\u2198',\r\n\tsect: '\\u00A7',\r\n\tsemi: '\\u003B',\r\n\tseswar: '\\u2929',\r\n\tsetminus: '\\u2216',\r\n\tsetmn: '\\u2216',\r\n\tsext: '\\u2736',\r\n\tSfr: '\\uD835\\uDD16',\r\n\tsfr: '\\uD835\\uDD30',\r\n\tsfrown: '\\u2322',\r\n\tsharp: '\\u266F',\r\n\tSHCHcy: '\\u0429',\r\n\tshchcy: '\\u0449',\r\n\tSHcy: '\\u0428',\r\n\tshcy: '\\u0448',\r\n\tShortDownArrow: '\\u2193',\r\n\tShortLeftArrow: '\\u2190',\r\n\tshortmid: '\\u2223',\r\n\tshortparallel: '\\u2225',\r\n\tShortRightArrow: '\\u2192',\r\n\tShortUpArrow: '\\u2191',\r\n\tshy: '\\u00AD',\r\n\tSigma: '\\u03A3',\r\n\tsigma: '\\u03C3',\r\n\tsigmaf: '\\u03C2',\r\n\tsigmav: '\\u03C2',\r\n\tsim: '\\u223C',\r\n\tsimdot: '\\u2A6A',\r\n\tsime: '\\u2243',\r\n\tsimeq: '\\u2243',\r\n\tsimg: '\\u2A9E',\r\n\tsimgE: '\\u2AA0',\r\n\tsiml: '\\u2A9D',\r\n\tsimlE: '\\u2A9F',\r\n\tsimne: '\\u2246',\r\n\tsimplus: '\\u2A24',\r\n\tsimrarr: '\\u2972',\r\n\tslarr: '\\u2190',\r\n\tSmallCircle: '\\u2218',\r\n\tsmallsetminus: '\\u2216',\r\n\tsmashp: '\\u2A33',\r\n\tsmeparsl: '\\u29E4',\r\n\tsmid: '\\u2223',\r\n\tsmile: '\\u2323',\r\n\tsmt: '\\u2AAA',\r\n\tsmte: '\\u2AAC',\r\n\tsmtes: '\\u2AAC\\uFE00',\r\n\tSOFTcy: '\\u042C',\r\n\tsoftcy: '\\u044C',\r\n\tsol: '\\u002F',\r\n\tsolb: '\\u29C4',\r\n\tsolbar: '\\u233F',\r\n\tSopf: '\\uD835\\uDD4A',\r\n\tsopf: '\\uD835\\uDD64',\r\n\tspades: '\\u2660',\r\n\tspadesuit: '\\u2660',\r\n\tspar: '\\u2225',\r\n\tsqcap: '\\u2293',\r\n\tsqcaps: '\\u2293\\uFE00',\r\n\tsqcup: '\\u2294',\r\n\tsqcups: '\\u2294\\uFE00',\r\n\tSqrt: '\\u221A',\r\n\tsqsub: '\\u228F',\r\n\tsqsube: '\\u2291',\r\n\tsqsubset: '\\u228F',\r\n\tsqsubseteq: '\\u2291',\r\n\tsqsup: '\\u2290',\r\n\tsqsupe: '\\u2292',\r\n\tsqsupset: '\\u2290',\r\n\tsqsupseteq: '\\u2292',\r\n\tsqu: '\\u25A1',\r\n\tSquare: '\\u25A1',\r\n\tsquare: '\\u25A1',\r\n\tSquareIntersection: '\\u2293',\r\n\tSquareSubset: '\\u228F',\r\n\tSquareSubsetEqual: '\\u2291',\r\n\tSquareSuperset: '\\u2290',\r\n\tSquareSupersetEqual: '\\u2292',\r\n\tSquareUnion: '\\u2294',\r\n\tsquarf: '\\u25AA',\r\n\tsquf: '\\u25AA',\r\n\tsrarr: '\\u2192',\r\n\tSscr: '\\uD835\\uDCAE',\r\n\tsscr: '\\uD835\\uDCC8',\r\n\tssetmn: '\\u2216',\r\n\tssmile: '\\u2323',\r\n\tsstarf: '\\u22C6',\r\n\tStar: '\\u22C6',\r\n\tstar: '\\u2606',\r\n\tstarf: '\\u2605',\r\n\tstraightepsilon: '\\u03F5',\r\n\tstraightphi: '\\u03D5',\r\n\tstrns: '\\u00AF',\r\n\tSub: '\\u22D0',\r\n\tsub: '\\u2282',\r\n\tsubdot: '\\u2ABD',\r\n\tsubE: '\\u2AC5',\r\n\tsube: '\\u2286',\r\n\tsubedot: '\\u2AC3',\r\n\tsubmult: '\\u2AC1',\r\n\tsubnE: '\\u2ACB',\r\n\tsubne: '\\u228A',\r\n\tsubplus: '\\u2ABF',\r\n\tsubrarr: '\\u2979',\r\n\tSubset: '\\u22D0',\r\n\tsubset: '\\u2282',\r\n\tsubseteq: '\\u2286',\r\n\tsubseteqq: '\\u2AC5',\r\n\tSubsetEqual: '\\u2286',\r\n\tsubsetneq: '\\u228A',\r\n\tsubsetneqq: '\\u2ACB',\r\n\tsubsim: '\\u2AC7',\r\n\tsubsub: '\\u2AD5',\r\n\tsubsup: '\\u2AD3',\r\n\tsucc: '\\u227B',\r\n\tsuccapprox: '\\u2AB8',\r\n\tsucccurlyeq: '\\u227D',\r\n\tSucceeds: '\\u227B',\r\n\tSucceedsEqual: '\\u2AB0',\r\n\tSucceedsSlantEqual: '\\u227D',\r\n\tSucceedsTilde: '\\u227F',\r\n\tsucceq: '\\u2AB0',\r\n\tsuccnapprox: '\\u2ABA',\r\n\tsuccneqq: '\\u2AB6',\r\n\tsuccnsim: '\\u22E9',\r\n\tsuccsim: '\\u227F',\r\n\tSuchThat: '\\u220B',\r\n\tSum: '\\u2211',\r\n\tsum: '\\u2211',\r\n\tsung: '\\u266A',\r\n\tSup: '\\u22D1',\r\n\tsup: '\\u2283',\r\n\tsup1: '\\u00B9',\r\n\tsup2: '\\u00B2',\r\n\tsup3: '\\u00B3',\r\n\tsupdot: '\\u2ABE',\r\n\tsupdsub: '\\u2AD8',\r\n\tsupE: '\\u2AC6',\r\n\tsupe: '\\u2287',\r\n\tsupedot: '\\u2AC4',\r\n\tSuperset: '\\u2283',\r\n\tSupersetEqual: '\\u2287',\r\n\tsuphsol: '\\u27C9',\r\n\tsuphsub: '\\u2AD7',\r\n\tsuplarr: '\\u297B',\r\n\tsupmult: '\\u2AC2',\r\n\tsupnE: '\\u2ACC',\r\n\tsupne: '\\u228B',\r\n\tsupplus: '\\u2AC0',\r\n\tSupset: '\\u22D1',\r\n\tsupset: '\\u2283',\r\n\tsupseteq: '\\u2287',\r\n\tsupseteqq: '\\u2AC6',\r\n\tsupsetneq: '\\u228B',\r\n\tsupsetneqq: '\\u2ACC',\r\n\tsupsim: '\\u2AC8',\r\n\tsupsub: '\\u2AD4',\r\n\tsupsup: '\\u2AD6',\r\n\tswarhk: '\\u2926',\r\n\tswArr: '\\u21D9',\r\n\tswarr: '\\u2199',\r\n\tswarrow: '\\u2199',\r\n\tswnwar: '\\u292A',\r\n\tszlig: '\\u00DF',\r\n\tTab: '\\u0009',\r\n\ttarget: '\\u2316',\r\n\tTau: '\\u03A4',\r\n\ttau: '\\u03C4',\r\n\ttbrk: '\\u23B4',\r\n\tTcaron: '\\u0164',\r\n\ttcaron: '\\u0165',\r\n\tTcedil: '\\u0162',\r\n\ttcedil: '\\u0163',\r\n\tTcy: '\\u0422',\r\n\ttcy: '\\u0442',\r\n\ttdot: '\\u20DB',\r\n\ttelrec: '\\u2315',\r\n\tTfr: '\\uD835\\uDD17',\r\n\ttfr: '\\uD835\\uDD31',\r\n\tthere4: '\\u2234',\r\n\tTherefore: '\\u2234',\r\n\ttherefore: '\\u2234',\r\n\tTheta: '\\u0398',\r\n\ttheta: '\\u03B8',\r\n\tthetasym: '\\u03D1',\r\n\tthetav: '\\u03D1',\r\n\tthickapprox: '\\u2248',\r\n\tthicksim: '\\u223C',\r\n\tThickSpace: '\\u205F\\u200A',\r\n\tthinsp: '\\u2009',\r\n\tThinSpace: '\\u2009',\r\n\tthkap: '\\u2248',\r\n\tthksim: '\\u223C',\r\n\tTHORN: '\\u00DE',\r\n\tthorn: '\\u00FE',\r\n\tTilde: '\\u223C',\r\n\ttilde: '\\u02DC',\r\n\tTildeEqual: '\\u2243',\r\n\tTildeFullEqual: '\\u2245',\r\n\tTildeTilde: '\\u2248',\r\n\ttimes: '\\u00D7',\r\n\ttimesb: '\\u22A0',\r\n\ttimesbar: '\\u2A31',\r\n\ttimesd: '\\u2A30',\r\n\ttint: '\\u222D',\r\n\ttoea: '\\u2928',\r\n\ttop: '\\u22A4',\r\n\ttopbot: '\\u2336',\r\n\ttopcir: '\\u2AF1',\r\n\tTopf: '\\uD835\\uDD4B',\r\n\ttopf: '\\uD835\\uDD65',\r\n\ttopfork: '\\u2ADA',\r\n\ttosa: '\\u2929',\r\n\ttprime: '\\u2034',\r\n\tTRADE: '\\u2122',\r\n\ttrade: '\\u2122',\r\n\ttriangle: '\\u25B5',\r\n\ttriangledown: '\\u25BF',\r\n\ttriangleleft: '\\u25C3',\r\n\ttrianglelefteq: '\\u22B4',\r\n\ttriangleq: '\\u225C',\r\n\ttriangleright: '\\u25B9',\r\n\ttrianglerighteq: '\\u22B5',\r\n\ttridot: '\\u25EC',\r\n\ttrie: '\\u225C',\r\n\ttriminus: '\\u2A3A',\r\n\tTripleDot: '\\u20DB',\r\n\ttriplus: '\\u2A39',\r\n\ttrisb: '\\u29CD',\r\n\ttritime: '\\u2A3B',\r\n\ttrpezium: '\\u23E2',\r\n\tTscr: '\\uD835\\uDCAF',\r\n\ttscr: '\\uD835\\uDCC9',\r\n\tTScy: '\\u0426',\r\n\ttscy: '\\u0446',\r\n\tTSHcy: '\\u040B',\r\n\ttshcy: '\\u045B',\r\n\tTstrok: '\\u0166',\r\n\ttstrok: '\\u0167',\r\n\ttwixt: '\\u226C',\r\n\ttwoheadleftarrow: '\\u219E',\r\n\ttwoheadrightarrow: '\\u21A0',\r\n\tUacute: '\\u00DA',\r\n\tuacute: '\\u00FA',\r\n\tUarr: '\\u219F',\r\n\tuArr: '\\u21D1',\r\n\tuarr: '\\u2191',\r\n\tUarrocir: '\\u2949',\r\n\tUbrcy: '\\u040E',\r\n\tubrcy: '\\u045E',\r\n\tUbreve: '\\u016C',\r\n\tubreve: '\\u016D',\r\n\tUcirc: '\\u00DB',\r\n\tucirc: '\\u00FB',\r\n\tUcy: '\\u0423',\r\n\tucy: '\\u0443',\r\n\tudarr: '\\u21C5',\r\n\tUdblac: '\\u0170',\r\n\tudblac: '\\u0171',\r\n\tudhar: '\\u296E',\r\n\tufisht: '\\u297E',\r\n\tUfr: '\\uD835\\uDD18',\r\n\tufr: '\\uD835\\uDD32',\r\n\tUgrave: '\\u00D9',\r\n\tugrave: '\\u00F9',\r\n\tuHar: '\\u2963',\r\n\tuharl: '\\u21BF',\r\n\tuharr: '\\u21BE',\r\n\tuhblk: '\\u2580',\r\n\tulcorn: '\\u231C',\r\n\tulcorner: '\\u231C',\r\n\tulcrop: '\\u230F',\r\n\tultri: '\\u25F8',\r\n\tUmacr: '\\u016A',\r\n\tumacr: '\\u016B',\r\n\tuml: '\\u00A8',\r\n\tUnderBar: '\\u005F',\r\n\tUnderBrace: '\\u23DF',\r\n\tUnderBracket: '\\u23B5',\r\n\tUnderParenthesis: '\\u23DD',\r\n\tUnion: '\\u22C3',\r\n\tUnionPlus: '\\u228E',\r\n\tUogon: '\\u0172',\r\n\tuogon: '\\u0173',\r\n\tUopf: '\\uD835\\uDD4C',\r\n\tuopf: '\\uD835\\uDD66',\r\n\tUpArrow: '\\u2191',\r\n\tUparrow: '\\u21D1',\r\n\tuparrow: '\\u2191',\r\n\tUpArrowBar: '\\u2912',\r\n\tUpArrowDownArrow: '\\u21C5',\r\n\tUpDownArrow: '\\u2195',\r\n\tUpdownarrow: '\\u21D5',\r\n\tupdownarrow: '\\u2195',\r\n\tUpEquilibrium: '\\u296E',\r\n\tupharpoonleft: '\\u21BF',\r\n\tupharpoonright: '\\u21BE',\r\n\tuplus: '\\u228E',\r\n\tUpperLeftArrow: '\\u2196',\r\n\tUpperRightArrow: '\\u2197',\r\n\tUpsi: '\\u03D2',\r\n\tupsi: '\\u03C5',\r\n\tupsih: '\\u03D2',\r\n\tUpsilon: '\\u03A5',\r\n\tupsilon: '\\u03C5',\r\n\tUpTee: '\\u22A5',\r\n\tUpTeeArrow: '\\u21A5',\r\n\tupuparrows: '\\u21C8',\r\n\turcorn: '\\u231D',\r\n\turcorner: '\\u231D',\r\n\turcrop: '\\u230E',\r\n\tUring: '\\u016E',\r\n\turing: '\\u016F',\r\n\turtri: '\\u25F9',\r\n\tUscr: '\\uD835\\uDCB0',\r\n\tuscr: '\\uD835\\uDCCA',\r\n\tutdot: '\\u22F0',\r\n\tUtilde: '\\u0168',\r\n\tutilde: '\\u0169',\r\n\tutri: '\\u25B5',\r\n\tutrif: '\\u25B4',\r\n\tuuarr: '\\u21C8',\r\n\tUuml: '\\u00DC',\r\n\tuuml: '\\u00FC',\r\n\tuwangle: '\\u29A7',\r\n\tvangrt: '\\u299C',\r\n\tvarepsilon: '\\u03F5',\r\n\tvarkappa: '\\u03F0',\r\n\tvarnothing: '\\u2205',\r\n\tvarphi: '\\u03D5',\r\n\tvarpi: '\\u03D6',\r\n\tvarpropto: '\\u221D',\r\n\tvArr: '\\u21D5',\r\n\tvarr: '\\u2195',\r\n\tvarrho: '\\u03F1',\r\n\tvarsigma: '\\u03C2',\r\n\tvarsubsetneq: '\\u228A\\uFE00',\r\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\r\n\tvarsupsetneq: '\\u228B\\uFE00',\r\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\r\n\tvartheta: '\\u03D1',\r\n\tvartriangleleft: '\\u22B2',\r\n\tvartriangleright: '\\u22B3',\r\n\tVbar: '\\u2AEB',\r\n\tvBar: '\\u2AE8',\r\n\tvBarv: '\\u2AE9',\r\n\tVcy: '\\u0412',\r\n\tvcy: '\\u0432',\r\n\tVDash: '\\u22AB',\r\n\tVdash: '\\u22A9',\r\n\tvDash: '\\u22A8',\r\n\tvdash: '\\u22A2',\r\n\tVdashl: '\\u2AE6',\r\n\tVee: '\\u22C1',\r\n\tvee: '\\u2228',\r\n\tveebar: '\\u22BB',\r\n\tveeeq: '\\u225A',\r\n\tvellip: '\\u22EE',\r\n\tVerbar: '\\u2016',\r\n\tverbar: '\\u007C',\r\n\tVert: '\\u2016',\r\n\tvert: '\\u007C',\r\n\tVerticalBar: '\\u2223',\r\n\tVerticalLine: '\\u007C',\r\n\tVerticalSeparator: '\\u2758',\r\n\tVerticalTilde: '\\u2240',\r\n\tVeryThinSpace: '\\u200A',\r\n\tVfr: '\\uD835\\uDD19',\r\n\tvfr: '\\uD835\\uDD33',\r\n\tvltri: '\\u22B2',\r\n\tvnsub: '\\u2282\\u20D2',\r\n\tvnsup: '\\u2283\\u20D2',\r\n\tVopf: '\\uD835\\uDD4D',\r\n\tvopf: '\\uD835\\uDD67',\r\n\tvprop: '\\u221D',\r\n\tvrtri: '\\u22B3',\r\n\tVscr: '\\uD835\\uDCB1',\r\n\tvscr: '\\uD835\\uDCCB',\r\n\tvsubnE: '\\u2ACB\\uFE00',\r\n\tvsubne: '\\u228A\\uFE00',\r\n\tvsupnE: '\\u2ACC\\uFE00',\r\n\tvsupne: '\\u228B\\uFE00',\r\n\tVvdash: '\\u22AA',\r\n\tvzigzag: '\\u299A',\r\n\tWcirc: '\\u0174',\r\n\twcirc: '\\u0175',\r\n\twedbar: '\\u2A5F',\r\n\tWedge: '\\u22C0',\r\n\twedge: '\\u2227',\r\n\twedgeq: '\\u2259',\r\n\tweierp: '\\u2118',\r\n\tWfr: '\\uD835\\uDD1A',\r\n\twfr: '\\uD835\\uDD34',\r\n\tWopf: '\\uD835\\uDD4E',\r\n\twopf: '\\uD835\\uDD68',\r\n\twp: '\\u2118',\r\n\twr: '\\u2240',\r\n\twreath: '\\u2240',\r\n\tWscr: '\\uD835\\uDCB2',\r\n\twscr: '\\uD835\\uDCCC',\r\n\txcap: '\\u22C2',\r\n\txcirc: '\\u25EF',\r\n\txcup: '\\u22C3',\r\n\txdtri: '\\u25BD',\r\n\tXfr: '\\uD835\\uDD1B',\r\n\txfr: '\\uD835\\uDD35',\r\n\txhArr: '\\u27FA',\r\n\txharr: '\\u27F7',\r\n\tXi: '\\u039E',\r\n\txi: '\\u03BE',\r\n\txlArr: '\\u27F8',\r\n\txlarr: '\\u27F5',\r\n\txmap: '\\u27FC',\r\n\txnis: '\\u22FB',\r\n\txodot: '\\u2A00',\r\n\tXopf: '\\uD835\\uDD4F',\r\n\txopf: '\\uD835\\uDD69',\r\n\txoplus: '\\u2A01',\r\n\txotime: '\\u2A02',\r\n\txrArr: '\\u27F9',\r\n\txrarr: '\\u27F6',\r\n\tXscr: '\\uD835\\uDCB3',\r\n\txscr: '\\uD835\\uDCCD',\r\n\txsqcup: '\\u2A06',\r\n\txuplus: '\\u2A04',\r\n\txutri: '\\u25B3',\r\n\txvee: '\\u22C1',\r\n\txwedge: '\\u22C0',\r\n\tYacute: '\\u00DD',\r\n\tyacute: '\\u00FD',\r\n\tYAcy: '\\u042F',\r\n\tyacy: '\\u044F',\r\n\tYcirc: '\\u0176',\r\n\tycirc: '\\u0177',\r\n\tYcy: '\\u042B',\r\n\tycy: '\\u044B',\r\n\tyen: '\\u00A5',\r\n\tYfr: '\\uD835\\uDD1C',\r\n\tyfr: '\\uD835\\uDD36',\r\n\tYIcy: '\\u0407',\r\n\tyicy: '\\u0457',\r\n\tYopf: '\\uD835\\uDD50',\r\n\tyopf: '\\uD835\\uDD6A',\r\n\tYscr: '\\uD835\\uDCB4',\r\n\tyscr: '\\uD835\\uDCCE',\r\n\tYUcy: '\\u042E',\r\n\tyucy: '\\u044E',\r\n\tYuml: '\\u0178',\r\n\tyuml: '\\u00FF',\r\n\tZacute: '\\u0179',\r\n\tzacute: '\\u017A',\r\n\tZcaron: '\\u017D',\r\n\tzcaron: '\\u017E',\r\n\tZcy: '\\u0417',\r\n\tzcy: '\\u0437',\r\n\tZdot: '\\u017B',\r\n\tzdot: '\\u017C',\r\n\tzeetrf: '\\u2128',\r\n\tZeroWidthSpace: '\\u200B',\r\n\tZeta: '\\u0396',\r\n\tzeta: '\\u03B6',\r\n\tZfr: '\\u2128',\r\n\tzfr: '\\uD835\\uDD37',\r\n\tZHcy: '\\u0416',\r\n\tzhcy: '\\u0436',\r\n\tzigrarr: '\\u21DD',\r\n\tZopf: '\\u2124',\r\n\tzopf: '\\uD835\\uDD6B',\r\n\tZscr: '\\uD835\\uDCB5',\r\n\tzscr: '\\uD835\\uDCCF',\r\n\tzwj: '\\u200D',\r\n\tzwnj: '\\u200C',\r\n});\r\n\r\n/**\r\n * @deprecated use `HTML_ENTITIES` instead\r\n * @see HTML_ENTITIES\r\n */\r\nexports.entityMap = exports.HTML_ENTITIES;\r\n", "var NAMESPACE = require(\"./conventions\").NAMESPACE;\r\n\r\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\r\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\r\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\r\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\r\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\r\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\r\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\r\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\r\n\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\r\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\r\nvar S_TAG = 0;//tag name offerring\r\nvar S_ATTR = 1;//attr name offerring\r\nvar S_ATTR_SPACE=2;//attr name end and space offer\r\nvar S_EQ = 3;//=space?\r\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\r\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\r\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\r\nvar S_TAG_CLOSE = 7;//closed el<el />\r\n\r\n/**\r\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\r\n *\r\n * @param {string} message\r\n * @param {any?} locator Optional, can provide details about the location in the source\r\n * @constructor\r\n */\r\nfunction ParseError(message, locator) {\r\n\tthis.message = message\r\n\tthis.locator = locator\r\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\r\n}\r\nParseError.prototype = new Error();\r\nParseError.prototype.name = ParseError.name\r\n\r\nfunction XMLReader(){\r\n\r\n}\r\n\r\nXMLReader.prototype = {\r\n\tparse:function(source,defaultNSMap,entityMap){\r\n\t\tvar domBuilder = this.domBuilder;\r\n\t\tdomBuilder.startDocument();\r\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\r\n\t\tparse(source,defaultNSMap,entityMap,\r\n\t\t\t\tdomBuilder,this.errorHandler);\r\n\t\tdomBuilder.endDocument();\r\n\t}\r\n}\r\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\r\n\tfunction fixedFromCharCode(code) {\r\n\t\t// String.prototype.fromCharCode does not supports\r\n\t\t// > 2 bytes unicode chars directly\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\r\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\r\n\r\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\r\n\t\t} else {\r\n\t\t\treturn String.fromCharCode(code);\r\n\t\t}\r\n\t}\r\n\tfunction entityReplacer(a){\r\n\t\tvar k = a.slice(1,-1);\r\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\r\n\t\t\treturn entityMap[k];\r\n\t\t}else if(k.charAt(0) === '#'){\r\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\r\n\t\t}else{\r\n\t\t\terrorHandler.error('entity not found:'+a);\r\n\t\t\treturn a;\r\n\t\t}\r\n\t}\r\n\tfunction appendText(end){//has some bugs\r\n\t\tif(end>start){\r\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\tlocator&&position(start);\r\n\t\t\tdomBuilder.characters(xt,0,end-start);\r\n\t\t\tstart = end\r\n\t\t}\r\n\t}\r\n\tfunction position(p,m){\r\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\r\n\t\t\tlineStart = m.index;\r\n\t\t\tlineEnd = lineStart + m[0].length;\r\n\t\t\tlocator.lineNumber++;\r\n\t\t\t//console.log('line++:',locator,startPos,endPos)\r\n\t\t}\r\n\t\tlocator.columnNumber = p-lineStart+1;\r\n\t}\r\n\tvar lineStart = 0;\r\n\tvar lineEnd = 0;\r\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\r\n\tvar locator = domBuilder.locator;\r\n\r\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\r\n\tvar closeMap = {};\r\n\tvar start = 0;\r\n\twhile(true){\r\n\t\ttry{\r\n\t\t\tvar tagStart = source.indexOf('<',start);\r\n\t\t\tif(tagStart<0){\r\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\r\n\t\t\t\t\tvar doc = domBuilder.doc;\r\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\r\n\t    \t\t\tdoc.appendChild(text);\r\n\t    \t\t\tdomBuilder.currentElement = text;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(tagStart>start){\r\n\t\t\t\tappendText(tagStart);\r\n\t\t\t}\r\n\t\t\tswitch(source.charAt(tagStart+1)){\r\n\t\t\tcase '/':\r\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\r\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\r\n\t\t\t\tvar config = parseStack.pop();\r\n\t\t\t\tif(end<0){\r\n\r\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\r\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\r\n\t        \t\tend = tagStart+1+tagName.length;\r\n\t        \t}else if(tagName.match(/\\s</)){\r\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\r\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\r\n\t        \t\tend = tagStart+1+tagName.length;\r\n\t\t\t\t}\r\n\t\t\t\tvar localNSMap = config.localNSMap;\r\n\t\t\t\tvar endMatch = config.tagName == tagName;\r\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\r\n\t\t        if(endIgnoreCaseMach){\r\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\r\n\t\t\t\t\tif(localNSMap){\r\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\r\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\r\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!endMatch){\r\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\r\n\t\t\t\t\t}\r\n\t\t        }else{\r\n\t\t        \tparseStack.push(config)\r\n\t\t        }\r\n\r\n\t\t\t\tend++;\r\n\t\t\t\tbreak;\r\n\t\t\t\t// end elment\r\n\t\t\tcase '?':// <?...?>\r\n\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\r\n\t\t\t\tbreak;\r\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\r\n\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\tvar el = new ElementAttributes();\r\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\t\t\t\t//elStartEnd\r\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\r\n\t\t\t\tvar len = el.length;\r\n\r\n\r\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\r\n\t\t\t\t\tel.closed = true;\r\n\t\t\t\t\tif(!entityMap.nbsp){\r\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(locator && len){\r\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\r\n\t\t\t\t\t//try{//attribute position fixed\r\n\t\t\t\t\tfor(var i = 0;i<len;i++){\r\n\t\t\t\t\t\tvar a = el[i];\r\n\t\t\t\t\t\tposition(a.offset);\r\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomBuilder.locator = locator2\r\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\r\n\t\t\t\t\t\tparseStack.push(el)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomBuilder.locator = locator;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\r\n\t\t\t\t\t\tparseStack.push(el)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\r\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tend++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t\tif (e instanceof ParseError) {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\terrorHandler.error('element parse error: '+e)\r\n\t\t\tend = -1;\r\n\t\t}\r\n\t\tif(end>start){\r\n\t\t\tstart = end;\r\n\t\t}else{\r\n\t\t\t//TODO: \u8FD9\u91CC\u6709\u53EF\u80FDsax\u56DE\u9000\uFF0C\u6709\u4F4D\u7F6E\u9519\u8BEF\u98CE\u9669\r\n\t\t\tappendText(Math.max(tagStart,start)+1);\r\n\t\t}\r\n\t}\r\n}\r\nfunction copyLocator(f,t){\r\n\tt.lineNumber = f.lineNumber;\r\n\tt.columnNumber = f.columnNumber;\r\n\treturn t;\r\n}\r\n\r\n/**\r\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\r\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n */\r\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\r\n\r\n\t/**\r\n\t * @param {string} qname\r\n\t * @param {string} value\r\n\t * @param {number} startIndex\r\n\t */\r\n\tfunction addAttribute(qname, value, startIndex) {\r\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\r\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\r\n\t\t}\r\n\t\tel.addValue(\r\n\t\t\tqname,\r\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\r\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\r\n\t\t\t// - recursive replacement of (DTD) entity references\r\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\r\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\r\n\t\t\tstartIndex\r\n\t\t)\r\n\t}\r\n\tvar attrName;\r\n\tvar value;\r\n\tvar p = ++start;\r\n\tvar s = S_TAG;//status\r\n\twhile(true){\r\n\t\tvar c = source.charAt(p);\r\n\t\tswitch(c){\r\n\t\tcase '=':\r\n\t\t\tif(s === S_ATTR){//attrName\r\n\t\t\t\tattrName = source.slice(start,p);\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else if(s === S_ATTR_SPACE){\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\r\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '\\'':\r\n\t\tcase '\"':\r\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\r\n\t\t\t\t){//equal\r\n\t\t\t\tif(s === S_ATTR){\r\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\r\n\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t}\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\tp = source.indexOf(c,start)\r\n\t\t\t\tif(p>0){\r\n\t\t\t\t\tvalue = source.slice(start, p);\r\n\t\t\t\t\taddAttribute(attrName, value, start-1);\r\n\t\t\t\t\ts = S_ATTR_END;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//fatalError: no end quot match\r\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\r\n\t\t\t\t}\r\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\r\n\t\t\t\tvalue = source.slice(start, p);\r\n\t\t\t\taddAttribute(attrName, value, start);\r\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\ts = S_ATTR_END\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: no equal before\r\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '/':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_ATTR_END:\r\n\t\t\tcase S_TAG_SPACE:\r\n\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\ts =S_TAG_CLOSE;\r\n\t\t\t\tel.closed = true;\r\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\r\n\t\t\tcase S_ATTR:\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\t\tel.closed = true;\r\n\t\t\t\tbreak;\r\n\t\t\t//case S_EQ:\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase ''://end document\r\n\t\t\terrorHandler.error('unexpected end of input');\r\n\t\t\tif(s == S_TAG){\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\t}\r\n\t\t\treturn p;\r\n\t\tcase '>':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_ATTR_END:\r\n\t\t\tcase S_TAG_SPACE:\r\n\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\tbreak;//normal\r\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\r\n\t\t\tcase S_ATTR:\r\n\t\t\t\tvalue = source.slice(start,p);\r\n\t\t\t\tif(value.slice(-1) === '/'){\r\n\t\t\t\t\tel.closed  = true;\r\n\t\t\t\t\tvalue = value.slice(0,-1)\r\n\t\t\t\t}\r\n\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\tif(s === S_ATTR_SPACE){\r\n\t\t\t\t\tvalue = attrName;\r\n\t\t\t\t}\r\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\r\n\t\t\t\t\taddAttribute(attrName, value, start)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\r\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\r\n\t\t\t\t\t}\r\n\t\t\t\t\taddAttribute(value, value, start)\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase S_EQ:\r\n\t\t\t\tthrow new Error('attribute value missed!!');\r\n\t\t\t}\r\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\r\n\t\t\treturn p;\r\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\r\n\t\tcase '\\u0080':\r\n\t\t\tc = ' ';\r\n\t\tdefault:\r\n\t\t\tif(c<= ' '){//space\r\n\t\t\t\tswitch(s){\r\n\t\t\t\tcase S_TAG:\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\r\n\t\t\t\t\ts = S_TAG_SPACE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR:\r\n\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t\ts = S_ATTR_SPACE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\r\n\t\t\t\t\tvar value = source.slice(start, p);\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\taddAttribute(attrName, value, start)\r\n\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\t\ts = S_TAG_SPACE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//case S_TAG_SPACE:\r\n\t\t\t\t//case S_EQ:\r\n\t\t\t\t//case S_ATTR_SPACE:\r\n\t\t\t\t//\tvoid();break;\r\n\t\t\t\t//case S_TAG_CLOSE:\r\n\t\t\t\t\t//ignore warning\r\n\t\t\t\t}\r\n\t\t\t}else{//not space\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\r\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\r\n\t\t\t\tswitch(s){\r\n\t\t\t\t//case S_TAG:void();break;\r\n\t\t\t\t//case S_ATTR:void();break;\r\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\r\n\t\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\t\tvar tagName =  el.tagName;\r\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\r\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\r\n\t\t\t\t\t}\r\n\t\t\t\t\taddAttribute(attrName, attrName, start);\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\r\n\t\t\t\tcase S_TAG_SPACE:\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_EQ:\r\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}//end outer switch\r\n\t\t//console.log('p++',p)\r\n\t\tp++;\r\n\t}\r\n}\r\n/**\r\n * @return true if has new namespace define\r\n */\r\nfunction appendElement(el,domBuilder,currentNSMap){\r\n\tvar tagName = el.tagName;\r\n\tvar localNSMap = null;\r\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\tvar a = el[i];\r\n\t\tvar qName = a.qName;\r\n\t\tvar value = a.value;\r\n\t\tvar nsp = qName.indexOf(':');\r\n\t\tif(nsp>0){\r\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\r\n\t\t\tvar localName = qName.slice(nsp+1);\r\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\r\n\t\t}else{\r\n\t\t\tlocalName = qName;\r\n\t\t\tprefix = null\r\n\t\t\tnsPrefix = qName === 'xmlns' && ''\r\n\t\t}\r\n\t\t//can not set prefix,because prefix !== ''\r\n\t\ta.localName = localName ;\r\n\t\t//prefix == null for no ns prefix attribute\r\n\t\tif(nsPrefix !== false){//hack!!\r\n\t\t\tif(localNSMap == null){\r\n\t\t\t\tlocalNSMap = {}\r\n\t\t\t\t//console.log(currentNSMap,0)\r\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\r\n\t\t\t\t//console.log(currentNSMap,1)\r\n\t\t\t}\r\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\r\n\t\t\ta.uri = NAMESPACE.XMLNS\r\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\r\n\t\t}\r\n\t}\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\ta = el[i];\r\n\t\tvar prefix = a.prefix;\r\n\t\tif(prefix){//no prefix attribute has no namespace\r\n\t\t\tif(prefix === 'xml'){\r\n\t\t\t\ta.uri = NAMESPACE.XML;\r\n\t\t\t}if(prefix !== 'xmlns'){\r\n\t\t\t\ta.uri = currentNSMap[prefix || '']\r\n\r\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar nsp = tagName.indexOf(':');\r\n\tif(nsp>0){\r\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\r\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\r\n\t}else{\r\n\t\tprefix = null;//important!!\r\n\t\tlocalName = el.localName = tagName;\r\n\t}\r\n\t//no prefix element has default namespace\r\n\tvar ns = el.uri = currentNSMap[prefix || ''];\r\n\tdomBuilder.startElement(ns,localName,tagName,el);\r\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\r\n\t//localNSMap = null\r\n\tif(el.closed){\r\n\t\tdomBuilder.endElement(ns,localName,tagName);\r\n\t\tif(localNSMap){\r\n\t\t\tfor (prefix in localNSMap) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\r\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tel.currentNSMap = currentNSMap;\r\n\t\tel.localNSMap = localNSMap;\r\n\t\t//parseStack.push(el);\r\n\t\treturn true;\r\n\t}\r\n}\r\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\r\n\tif(/^(?:script|textarea)$/i.test(tagName)){\r\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\r\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\r\n\t\tif(/[&<]/.test(text)){\r\n\t\t\tif(/^script$/i.test(tagName)){\r\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\r\n\t\t\t\t\t//lexHandler.startCDATA();\r\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\t\t//lexHandler.endCDATA();\r\n\t\t\t\t\treturn elEndStart;\r\n\t\t\t\t//}\r\n\t\t\t}//}else{//text area\r\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\treturn elEndStart;\r\n\t\t\t//}\r\n\r\n\t\t}\r\n\t}\r\n\treturn elStartEnd+1;\r\n}\r\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\r\n\t//if(tagName in closeMap){\r\n\tvar pos = closeMap[tagName];\r\n\tif(pos == null){\r\n\t\t//console.log(tagName)\r\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\r\n\t\tif(pos<elStartEnd){//\u5FD8\u8BB0\u95ED\u5408\r\n\t\t\tpos = source.lastIndexOf('</'+tagName)\r\n\t\t}\r\n\t\tcloseMap[tagName] =pos\r\n\t}\r\n\treturn pos<elStartEnd;\r\n\t//}\r\n}\r\n\r\nfunction _copy (source, target) {\r\n\tfor (var n in source) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\r\n\t\t\ttarget[n] = source[n];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\r\n\tvar next= source.charAt(start+2)\r\n\tswitch(next){\r\n\tcase '-':\r\n\t\tif(source.charAt(start + 3) === '-'){\r\n\t\t\tvar end = source.indexOf('-->',start+4);\r\n\t\t\t//append comment source.substring(4,end)//<!--\r\n\t\t\tif(end>start){\r\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\r\n\t\t\t\treturn end+3;\r\n\t\t\t}else{\r\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\tdefault:\r\n\t\tif(source.substr(start+3,6) == 'CDATA['){\r\n\t\t\tvar end = source.indexOf(']]>',start+9);\r\n\t\t\tdomBuilder.startCDATA();\r\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\r\n\t\t\tdomBuilder.endCDATA()\r\n\t\t\treturn end+3;\r\n\t\t}\r\n\t\t//<!DOCTYPE\r\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\r\n\t\tvar matchs = split(source,start);\r\n\t\tvar len = matchs.length;\r\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\r\n\t\t\tvar name = matchs[1][0];\r\n\t\t\tvar pubid = false;\r\n\t\t\tvar sysid = false;\r\n\t\t\tif(len>3){\r\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\r\n\t\t\t\t\tpubid = matchs[3][0];\r\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\r\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\r\n\t\t\t\t\tsysid = matchs[3][0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar lastMatch = matchs[len-1]\r\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\r\n\t\t\tdomBuilder.endDTD();\r\n\r\n\t\t\treturn lastMatch.index+lastMatch[0].length\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n\r\n\r\nfunction parseInstruction(source,start,domBuilder){\r\n\tvar end = source.indexOf('?>',start);\r\n\tif(end){\r\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\r\n\t\tif(match){\r\n\t\t\tvar len = match[0].length;\r\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\r\n\t\t\treturn end+2;\r\n\t\t}else{//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nfunction ElementAttributes(){\r\n\tthis.attributeNames = {}\r\n}\r\nElementAttributes.prototype = {\r\n\tsetTagName:function(tagName){\r\n\t\tif(!tagNamePattern.test(tagName)){\r\n\t\t\tthrow new Error('invalid tagName:'+tagName)\r\n\t\t}\r\n\t\tthis.tagName = tagName\r\n\t},\r\n\taddValue:function(qName, value, offset) {\r\n\t\tif(!tagNamePattern.test(qName)){\r\n\t\t\tthrow new Error('invalid attribute:'+qName)\r\n\t\t}\r\n\t\tthis.attributeNames[qName] = this.length;\r\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\r\n\t},\r\n\tlength:0,\r\n\tgetLocalName:function(i){return this[i].localName},\r\n\tgetLocator:function(i){return this[i].locator},\r\n\tgetQName:function(i){return this[i].qName},\r\n\tgetURI:function(i){return this[i].uri},\r\n\tgetValue:function(i){return this[i].value}\r\n//\t,getIndex:function(uri, localName)){\r\n//\t\tif(localName){\r\n//\r\n//\t\t}else{\r\n//\t\t\tvar qName = uri\r\n//\t\t}\r\n//\t},\r\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\r\n//\tgetType:function(uri,localName){}\r\n//\tgetType:function(i){},\r\n}\r\n\r\n\r\n\r\nfunction split(source,start){\r\n\tvar match;\r\n\tvar buf = [];\r\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\r\n\treg.lastIndex = start;\r\n\treg.exec(source);//skip <\r\n\twhile(match = reg.exec(source)){\r\n\t\tbuf.push(match);\r\n\t\tif(match[1])return buf;\r\n\t}\r\n}\r\n\r\nexports.XMLReader = XMLReader;\r\nexports.ParseError = ParseError;\r\n", "var conventions = require(\"./conventions\");\r\nvar dom = require('./dom')\r\nvar entities = require('./entities');\r\nvar sax = require('./sax');\r\n\r\nvar DOMImplementation = dom.DOMImplementation;\r\n\r\nvar NAMESPACE = conventions.NAMESPACE;\r\n\r\nvar ParseError = sax.ParseError;\r\nvar XMLReader = sax.XMLReader;\r\n\r\n/**\r\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\r\n *\r\n * > XML parsed entities are often stored in computer files which,\r\n * > for editing convenience, are organized into lines.\r\n * > These lines are typically separated by some combination\r\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\r\n * >\r\n * > To simplify the tasks of applications, the XML processor must behave\r\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\r\n * > on input, before parsing, by translating all of the following to a single #xA character:\r\n * >\r\n * > 1. the two-character sequence #xD #xA\r\n * > 2. the two-character sequence #xD #x85\r\n * > 3. the single character #x85\r\n * > 4. the single character #x2028\r\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\r\n *\r\n * @param {string} input\r\n * @returns {string}\r\n */\r\nfunction normalizeLineEndings(input) {\r\n\treturn input\r\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\r\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\r\n}\r\n\r\n/**\r\n * @typedef Locator\r\n * @property {number} [columnNumber]\r\n * @property {number} [lineNumber]\r\n */\r\n\r\n/**\r\n * @typedef DOMParserOptions\r\n * @property {DOMHandler} [domBuilder]\r\n * @property {Function} [errorHandler]\r\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\r\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\r\n * @property {Locator} [locator]\r\n * @property {Record<string, string>} [xmlns]\r\n *\r\n * @see normalizeLineEndings\r\n */\r\n\r\n/**\r\n * The DOMParser interface provides the ability to parse XML or HTML source code\r\n * from a string into a DOM `Document`.\r\n *\r\n * _xmldom is different from the spec in that it allows an `options` parameter,\r\n * to override the default behavior._\r\n *\r\n * @param {DOMParserOptions} [options]\r\n * @constructor\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\r\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\r\n */\r\nfunction DOMParser(options){\r\n\tthis.options = options ||{locator:{}};\r\n}\r\n\r\nDOMParser.prototype.parseFromString = function(source,mimeType){\r\n\tvar options = this.options;\r\n\tvar sax =  new XMLReader();\r\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\r\n\tvar errorHandler = options.errorHandler;\r\n\tvar locator = options.locator;\r\n\tvar defaultNSMap = options.xmlns||{};\r\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\r\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\r\n\tif(locator){\r\n\t\tdomBuilder.setDocumentLocator(locator)\r\n\t}\r\n\r\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\r\n\tsax.domBuilder = options.domBuilder || domBuilder;\r\n\tif(isHTML){\r\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\r\n\t}\r\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\r\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\r\n\tif (source && typeof source === 'string') {\r\n\t\tsax.parse(\r\n\t\t\tnormalize(source),\r\n\t\t\tdefaultNSMap,\r\n\t\t\tentityMap\r\n\t\t)\r\n\t} else {\r\n\t\tsax.errorHandler.error('invalid doc source')\r\n\t}\r\n\treturn domBuilder.doc;\r\n}\r\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\r\n\tif(!errorImpl){\r\n\t\tif(domBuilder instanceof DOMHandler){\r\n\t\t\treturn domBuilder;\r\n\t\t}\r\n\t\terrorImpl = domBuilder ;\r\n\t}\r\n\tvar errorHandler = {}\r\n\tvar isCallback = errorImpl instanceof Function;\r\n\tlocator = locator||{}\r\n\tfunction build(key){\r\n\t\tvar fn = errorImpl[key];\r\n\t\tif(!fn && isCallback){\r\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\r\n\t\t}\r\n\t\terrorHandler[key] = fn && function(msg){\r\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\r\n\t\t}||function(){};\r\n\t}\r\n\tbuild('warning');\r\n\tbuild('error');\r\n\tbuild('fatalError');\r\n\treturn errorHandler;\r\n}\r\n\r\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\r\n/**\r\n * +ContentHandler+ErrorHandler\r\n * +LexicalHandler+EntityResolver2\r\n * -DeclHandler-DTDHandler\r\n *\r\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\r\n */\r\nfunction DOMHandler() {\r\n    this.cdata = false;\r\n}\r\nfunction position(locator,node){\r\n\tnode.lineNumber = locator.lineNumber;\r\n\tnode.columnNumber = locator.columnNumber;\r\n}\r\n/**\r\n * @see org.xml.sax.ContentHandler#startDocument\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\r\n */\r\nDOMHandler.prototype = {\r\n\tstartDocument : function() {\r\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\r\n    \tif (this.locator) {\r\n        \tthis.doc.documentURI = this.locator.systemId;\r\n    \t}\r\n\t},\r\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\r\n\t\tvar doc = this.doc;\r\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\r\n\t    var len = attrs.length;\r\n\t    appendElement(this, el);\r\n\t    this.currentElement = el;\r\n\r\n\t\tthis.locator && position(this.locator,el)\r\n\t    for (var i = 0 ; i < len; i++) {\r\n\t        var namespaceURI = attrs.getURI(i);\r\n\t        var value = attrs.getValue(i);\r\n\t        var qName = attrs.getQName(i);\r\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\r\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\r\n\t\t\tattr.value = attr.nodeValue = value;\r\n\t\t\tel.setAttributeNode(attr)\r\n\t    }\r\n\t},\r\n\tendElement:function(namespaceURI, localName, qName) {\r\n\t\tvar current = this.currentElement\r\n\t\tvar tagName = current.tagName;\r\n\t\tthis.currentElement = current.parentNode;\r\n\t},\r\n\tstartPrefixMapping:function(prefix, uri) {\r\n\t},\r\n\tendPrefixMapping:function(prefix) {\r\n\t},\r\n\tprocessingInstruction:function(target, data) {\r\n\t    var ins = this.doc.createProcessingInstruction(target, data);\r\n\t    this.locator && position(this.locator,ins)\r\n\t    appendElement(this, ins);\r\n\t},\r\n\tignorableWhitespace:function(ch, start, length) {\r\n\t},\r\n\tcharacters:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t\t//console.log(chars)\r\n\t\tif(chars){\r\n\t\t\tif (this.cdata) {\r\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\r\n\t\t\t} else {\r\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\r\n\t\t\t}\r\n\t\t\tif(this.currentElement){\r\n\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t}else if(/^\\s*$/.test(chars)){\r\n\t\t\t\tthis.doc.appendChild(charNode);\r\n\t\t\t\t//process xml\r\n\t\t\t}\r\n\t\t\tthis.locator && position(this.locator,charNode)\r\n\t\t}\r\n\t},\r\n\tskippedEntity:function(name) {\r\n\t},\r\n\tendDocument:function() {\r\n\t\tthis.doc.normalize();\r\n\t},\r\n\tsetDocumentLocator:function (locator) {\r\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\r\n\t    \tlocator.lineNumber = 0;\r\n\t    }\r\n\t},\r\n\t//LexicalHandler\r\n\tcomment:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t    var comm = this.doc.createComment(chars);\r\n\t    this.locator && position(this.locator,comm)\r\n\t    appendElement(this, comm);\r\n\t},\r\n\r\n\tstartCDATA:function() {\r\n\t    //used in characters() methods\r\n\t    this.cdata = true;\r\n\t},\r\n\tendCDATA:function() {\r\n\t    this.cdata = false;\r\n\t},\r\n\r\n\tstartDTD:function(name, publicId, systemId) {\r\n\t\tvar impl = this.doc.implementation;\r\n\t    if (impl && impl.createDocumentType) {\r\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\r\n\t        this.locator && position(this.locator,dt)\r\n\t        appendElement(this, dt);\r\n\t\t\t\t\tthis.doc.doctype = dt;\r\n\t    }\r\n\t},\r\n\t/**\r\n\t * @see org.xml.sax.ErrorHandler\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\r\n\t */\r\n\twarning:function(error) {\r\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\r\n\t},\r\n\terror:function(error) {\r\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\r\n\t},\r\n\tfatalError:function(error) {\r\n\t\tthrow new ParseError(error, this.locator);\r\n\t}\r\n}\r\nfunction _locator(l){\r\n\tif(l){\r\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\r\n\t}\r\n}\r\nfunction _toString(chars,start,length){\r\n\tif(typeof chars == 'string'){\r\n\t\treturn chars.substr(start,length)\r\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\r\n\t\tif(chars.length >= start+length || start){\r\n\t\t\treturn new java.lang.String(chars,start,length)+'';\r\n\t\t}\r\n\t\treturn chars;\r\n\t}\r\n}\r\n\r\n/*\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\r\n * used method of org.xml.sax.ext.LexicalHandler:\r\n *  #comment(chars, start, length)\r\n *  #startCDATA()\r\n *  #endCDATA()\r\n *  #startDTD(name, publicId, systemId)\r\n *\r\n *\r\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\r\n *  #endDTD()\r\n *  #startEntity(name)\r\n *  #endEntity(name)\r\n *\r\n *\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\r\n * IGNORED method of org.xml.sax.ext.DeclHandler\r\n * \t#attributeDecl(eName, aName, type, mode, value)\r\n *  #elementDecl(name, model)\r\n *  #externalEntityDecl(name, publicId, systemId)\r\n *  #internalEntityDecl(name, value)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\r\n * IGNORED method of org.xml.sax.EntityResolver2\r\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\r\n *  #resolveEntity(publicId, systemId)\r\n *  #getExternalSubset(name, baseURI)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\r\n * IGNORED method of org.xml.sax.DTDHandler\r\n *  #notationDecl(name, publicId, systemId) {};\r\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\r\n */\r\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\r\n\tDOMHandler.prototype[key] = function(){return null}\r\n})\r\n\r\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\r\nfunction appendElement (hander,node) {\r\n    if (!hander.currentElement) {\r\n        hander.doc.appendChild(node);\r\n    } else {\r\n        hander.currentElement.appendChild(node);\r\n    }\r\n}//appendChild and setAttributeNS are preformance key\r\n\r\nexports.__DOMHandler = DOMHandler;\r\nexports.normalizeLineEndings = normalizeLineEndings;\r\nexports.DOMParser = DOMParser;\r\n", "var dom = require('./dom')\r\nexports.DOMImplementation = dom.DOMImplementation\r\nexports.XMLSerializer = dom.XMLSerializer\r\nexports.DOMParser = require('./dom-parser').DOMParser\r\n", "var MAX_UINT32 = Math.pow(2, 32);\r\n\r\nvar getUint64 = function(uint8) {\r\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\r\n  var value;\r\n\r\n  if (dv.getBigUint64) {\r\n    value = dv.getBigUint64(0);\r\n\r\n    if (value < Number.MAX_SAFE_INTEGER) {\r\n      return Number(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\r\n};\r\n\r\nmodule.exports = {\r\n  getUint64: getUint64,\r\n  MAX_UINT32: MAX_UINT32\r\n};\r\n", "var getUint64 = require('../utils/numbers.js').getUint64;\r\n\r\nvar parseSidx = function(data) {\r\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n      result = {\r\n        version: data[0],\r\n        flags: new Uint8Array(data.subarray(1, 4)),\r\n        references: [],\r\n        referenceId: view.getUint32(4),\r\n        timescale: view.getUint32(8)\r\n      },\r\n    i = 12;\r\n\r\n  if (result.version === 0) {\r\n    result.earliestPresentationTime = view.getUint32(i);\r\n    result.firstOffset = view.getUint32(i + 4);\r\n    i += 8;\r\n  } else {\r\n    // read 64 bits\r\n    result.earliestPresentationTime = getUint64(data.subarray(i));\r\n    result.firstOffset = getUint64(data.subarray(i + 8));\r\n    i += 16;\r\n  }\r\n\r\n  i += 2; // reserved\r\n\r\n  var referenceCount = view.getUint16(i);\r\n\r\n  i += 2; // start of references\r\n\r\n  for (; referenceCount > 0; i += 12, referenceCount--) {\r\n    result.references.push({\r\n      referenceType: (data[i] & 0x80) >>> 7,\r\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\r\n      subsegmentDuration: view.getUint32(i + 4),\r\n      startsWithSap: !!(data[i + 8] & 0x80),\r\n      sapType: (data[i + 8] & 0x70) >>> 4,\r\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n\r\nmodule.exports = parseSidx;\r\n", "/**\r\n * mux.js\r\n *\r\n * Copyright (c) Brightcove\r\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n */\r\nvar\r\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\r\n  secondsToVideoTs,\r\n  secondsToAudioTs,\r\n  videoTsToSeconds,\r\n  audioTsToSeconds,\r\n  audioTsToVideoTs,\r\n  videoTsToAudioTs,\r\n  metadataTsToSeconds;\r\n\r\nsecondsToVideoTs = function(seconds) {\r\n  return seconds * ONE_SECOND_IN_TS;\r\n};\r\n\r\nsecondsToAudioTs = function(seconds, sampleRate) {\r\n  return seconds * sampleRate;\r\n};\r\n\r\nvideoTsToSeconds = function(timestamp) {\r\n  return timestamp / ONE_SECOND_IN_TS;\r\n};\r\n\r\naudioTsToSeconds = function(timestamp, sampleRate) {\r\n  return timestamp / sampleRate;\r\n};\r\n\r\naudioTsToVideoTs = function(timestamp, sampleRate) {\r\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\r\n};\r\n\r\nvideoTsToAudioTs = function(timestamp, sampleRate) {\r\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\r\n};\r\n\r\n/**\r\n * Adjust ID3 tag or caption timing information by the timeline pts values\r\n * (if keepOriginalTimestamps is false) and convert to seconds\r\n */\r\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\r\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\r\n};\r\n\r\nmodule.exports = {\r\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\r\n  secondsToVideoTs: secondsToVideoTs,\r\n  secondsToAudioTs: secondsToAudioTs,\r\n  videoTsToSeconds: videoTsToSeconds,\r\n  audioTsToSeconds: audioTsToSeconds,\r\n  audioTsToVideoTs: audioTsToVideoTs,\r\n  videoTsToAudioTs: videoTsToAudioTs,\r\n  metadataTsToSeconds: metadataTsToSeconds\r\n};\r\n", "/**\r\n * @license\r\n * Video.js 7.21.5 <http://videojs.com/>\r\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\r\n * Available under Apache License Version 2.0\r\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\r\n *\r\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\r\n * Available under Apache License Version 2.0\r\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\r\n */\r\n\r\nimport window$1 from 'global/window';\r\nimport document from 'global/document';\r\nimport _extends from '@babel/runtime/helpers/extends';\r\nimport keycode from 'keycode';\r\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\r\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\r\nimport safeParseTuple from 'safe-json-parse/tuple';\r\nimport XHR from '@videojs/xhr';\r\nimport vtt from 'videojs-vtt.js';\r\nimport _construct from '@babel/runtime/helpers/construct';\r\nimport _inherits from '@babel/runtime/helpers/inherits';\r\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\r\nimport { Parser } from 'm3u8-parser';\r\nimport { browserSupportsCodec, DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, muxerSupportsCodec, parseCodecs, translateLegacyCodec, codecsFromDefault, getMimeForCodec, isAudioCodec } from '@videojs/vhs-utils/es/codecs.js';\r\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\r\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\r\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\r\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\r\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\r\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\r\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\r\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\r\n\r\nvar version$5 = \"7.21.5\";\r\n\r\n/**\r\n * An Object that contains lifecycle hooks as keys which point to an array\r\n * of functions that are run when a lifecycle is triggered\r\n *\r\n * @private\r\n */\r\nvar hooks_ = {};\r\n/**\r\n * Get a list of hooks for a specific lifecycle\r\n *\r\n * @param  {string} type\r\n *         the lifecyle to get hooks from\r\n *\r\n * @param  {Function|Function[]} [fn]\r\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\r\n *\r\n * @return {Array}\r\n *         an array of hooks, or an empty array if there are none.\r\n */\r\n\r\nvar hooks = function hooks(type, fn) {\r\n  hooks_[type] = hooks_[type] || [];\r\n\r\n  if (fn) {\r\n    hooks_[type] = hooks_[type].concat(fn);\r\n  }\r\n\r\n  return hooks_[type];\r\n};\r\n/**\r\n * Add a function hook to a specific videojs lifecycle.\r\n *\r\n * @param {string} type\r\n *        the lifecycle to hook the function to.\r\n *\r\n * @param {Function|Function[]}\r\n *        The function or array of functions to attach.\r\n */\r\n\r\n\r\nvar hook = function hook(type, fn) {\r\n  hooks(type, fn);\r\n};\r\n/**\r\n * Remove a hook from a specific videojs lifecycle.\r\n *\r\n * @param  {string} type\r\n *         the lifecycle that the function hooked to\r\n *\r\n * @param  {Function} fn\r\n *         The hooked function to remove\r\n *\r\n * @return {boolean}\r\n *         The function that was removed or undef\r\n */\r\n\r\n\r\nvar removeHook = function removeHook(type, fn) {\r\n  var index = hooks(type).indexOf(fn);\r\n\r\n  if (index <= -1) {\r\n    return false;\r\n  }\r\n\r\n  hooks_[type] = hooks_[type].slice();\r\n  hooks_[type].splice(index, 1);\r\n  return true;\r\n};\r\n/**\r\n * Add a function hook that will only run once to a specific videojs lifecycle.\r\n *\r\n * @param {string} type\r\n *        the lifecycle to hook the function to.\r\n *\r\n * @param {Function|Function[]}\r\n *        The function or array of functions to attach.\r\n */\r\n\r\n\r\nvar hookOnce = function hookOnce(type, fn) {\r\n  hooks(type, [].concat(fn).map(function (original) {\r\n    var wrapper = function wrapper() {\r\n      removeHook(type, wrapper);\r\n      return original.apply(void 0, arguments);\r\n    };\r\n\r\n    return wrapper;\r\n  }));\r\n};\r\n\r\n/**\r\n * @file fullscreen-api.js\r\n * @module fullscreen-api\r\n * @private\r\n */\r\n/**\r\n * Store the browser-specific methods for the fullscreen API.\r\n *\r\n * @type {Object}\r\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\r\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\r\n */\r\n\r\nvar FullscreenApi = {\r\n  prefixed: true\r\n}; // browser API methods\r\n\r\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\r\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\r\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\r\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\r\nvar specApi = apiMap[0];\r\nvar browserApi; // determine the supported set of functions\r\n\r\nfor (var i = 0; i < apiMap.length; i++) {\r\n  // check for exitFullscreen function\r\n  if (apiMap[i][1] in document) {\r\n    browserApi = apiMap[i];\r\n    break;\r\n  }\r\n} // map the browser API names to the spec API names\r\n\r\n\r\nif (browserApi) {\r\n  for (var _i = 0; _i < browserApi.length; _i++) {\r\n    FullscreenApi[specApi[_i]] = browserApi[_i];\r\n  }\r\n\r\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\r\n}\r\n\r\n/**\r\n * @file create-logger.js\r\n * @module create-logger\r\n */\r\n\r\nvar history = [];\r\n/**\r\n * Log messages to the console and history based on the type of message\r\n *\r\n * @private\r\n * @param  {string} type\r\n *         The name of the console method to use.\r\n *\r\n * @param  {Array} args\r\n *         The arguments to be passed to the matching console method.\r\n */\r\n\r\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\r\n  return function (type, level, args) {\r\n    var lvl = log.levels[level];\r\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\r\n\r\n    if (type !== 'log') {\r\n      // Add the type to the front of the message when it's not \"log\".\r\n      args.unshift(type.toUpperCase() + ':');\r\n    } // Add console prefix after adding to history.\r\n\r\n\r\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\r\n\r\n    if (history) {\r\n      history.push([].concat(args)); // only store 1000 history entries\r\n\r\n      var splice = history.length - 1000;\r\n      history.splice(0, splice > 0 ? splice : 0);\r\n    } // If there's no console then don't try to output messages, but they will\r\n    // still be stored in history.\r\n\r\n\r\n    if (!window$1.console) {\r\n      return;\r\n    } // Was setting these once outside of this function, but containing them\r\n    // in the function makes it easier to test cases where console doesn't exist\r\n    // when the module is executed.\r\n\r\n\r\n    var fn = window$1.console[type];\r\n\r\n    if (!fn && type === 'debug') {\r\n      // Certain browsers don't have support for console.debug. For those, we\r\n      // should default to the closest comparable log.\r\n      fn = window$1.console.info || window$1.console.log;\r\n    } // Bail out if there's no console or if this type is not allowed by the\r\n    // current logging level.\r\n\r\n\r\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\r\n      return;\r\n    }\r\n\r\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\r\n  };\r\n};\r\n\r\nfunction createLogger$1(name) {\r\n  // This is the private tracking variable for logging level.\r\n  var level = 'info'; // the curried logByType bound to the specific log and history\r\n\r\n  var logByType;\r\n  /**\r\n   * Logs plain debug messages. Similar to `console.log`.\r\n   *\r\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\r\n   * of our JSDoc template, we cannot properly document this as both a function\r\n   * and a namespace, so its function signature is documented here.\r\n   *\r\n   * #### Arguments\r\n   * ##### *args\r\n   * Mixed[]\r\n   *\r\n   * Any combination of values that could be passed to `console.log()`.\r\n   *\r\n   * #### Return Value\r\n   *\r\n   * `undefined`\r\n   *\r\n   * @namespace\r\n   * @param    {Mixed[]} args\r\n   *           One or more messages or objects that should be logged.\r\n   */\r\n\r\n  var log = function log() {\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    logByType('log', level, args);\r\n  }; // This is the logByType helper that the logging methods below use\r\n\r\n\r\n  logByType = LogByTypeFactory(name, log);\r\n  /**\r\n   * Create a new sublogger which chains the old name to the new name.\r\n   *\r\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\r\n   * ```js\r\n   *  mylogger('foo');\r\n   *  // > VIDEOJS: player: foo\r\n   * ```\r\n   *\r\n   * @param {string} name\r\n   *        The name to add call the new logger\r\n   * @return {Object}\r\n   */\r\n\r\n  log.createLogger = function (subname) {\r\n    return createLogger$1(name + ': ' + subname);\r\n  };\r\n  /**\r\n   * Enumeration of available logging levels, where the keys are the level names\r\n   * and the values are `|`-separated strings containing logging methods allowed\r\n   * in that logging level. These strings are used to create a regular expression\r\n   * matching the function name being called.\r\n   *\r\n   * Levels provided by Video.js are:\r\n   *\r\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\r\n   *   this effect. The most restrictive.\r\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\r\n   *   `log.warn`, and `log.error`).\r\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\r\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\r\n   * - `warn`: Matches `log.warn` and `log.error` calls.\r\n   * - `error`: Matches only `log.error` calls.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n\r\n  log.levels = {\r\n    all: 'debug|log|warn|error',\r\n    off: '',\r\n    debug: 'debug|log|warn|error',\r\n    info: 'log|warn|error',\r\n    warn: 'warn|error',\r\n    error: 'error',\r\n    DEFAULT: level\r\n  };\r\n  /**\r\n   * Get or set the current logging level.\r\n   *\r\n   * If a string matching a key from {@link module:log.levels} is provided, acts\r\n   * as a setter.\r\n   *\r\n   * @param  {string} [lvl]\r\n   *         Pass a valid level to set a new logging level.\r\n   *\r\n   * @return {string}\r\n   *         The current logging level.\r\n   */\r\n\r\n  log.level = function (lvl) {\r\n    if (typeof lvl === 'string') {\r\n      if (!log.levels.hasOwnProperty(lvl)) {\r\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\r\n      }\r\n\r\n      level = lvl;\r\n    }\r\n\r\n    return level;\r\n  };\r\n  /**\r\n   * Returns an array containing everything that has been logged to the history.\r\n   *\r\n   * This array is a shallow clone of the internal history record. However, its\r\n   * contents are _not_ cloned; so, mutating objects inside this array will\r\n   * mutate them in history.\r\n   *\r\n   * @return {Array}\r\n   */\r\n\r\n\r\n  log.history = function () {\r\n    return history ? [].concat(history) : [];\r\n  };\r\n  /**\r\n   * Allows you to filter the history by the given logger name\r\n   *\r\n   * @param {string} fname\r\n   *        The name to filter by\r\n   *\r\n   * @return {Array}\r\n   *         The filtered list to return\r\n   */\r\n\r\n\r\n  log.history.filter = function (fname) {\r\n    return (history || []).filter(function (historyItem) {\r\n      // if the first item in each historyItem includes `fname`, then it's a match\r\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\r\n    });\r\n  };\r\n  /**\r\n   * Clears the internal history tracking, but does not prevent further history\r\n   * tracking.\r\n   */\r\n\r\n\r\n  log.history.clear = function () {\r\n    if (history) {\r\n      history.length = 0;\r\n    }\r\n  };\r\n  /**\r\n   * Disable history tracking if it is currently enabled.\r\n   */\r\n\r\n\r\n  log.history.disable = function () {\r\n    if (history !== null) {\r\n      history.length = 0;\r\n      history = null;\r\n    }\r\n  };\r\n  /**\r\n   * Enable history tracking if it is currently disabled.\r\n   */\r\n\r\n\r\n  log.history.enable = function () {\r\n    if (history === null) {\r\n      history = [];\r\n    }\r\n  };\r\n  /**\r\n   * Logs error messages. Similar to `console.error`.\r\n   *\r\n   * @param {Mixed[]} args\r\n   *        One or more messages or objects that should be logged as an error\r\n   */\r\n\r\n\r\n  log.error = function () {\r\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      args[_key2] = arguments[_key2];\r\n    }\r\n\r\n    return logByType('error', level, args);\r\n  };\r\n  /**\r\n   * Logs warning messages. Similar to `console.warn`.\r\n   *\r\n   * @param {Mixed[]} args\r\n   *        One or more messages or objects that should be logged as a warning.\r\n   */\r\n\r\n\r\n  log.warn = function () {\r\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n      args[_key3] = arguments[_key3];\r\n    }\r\n\r\n    return logByType('warn', level, args);\r\n  };\r\n  /**\r\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\r\n   * log if `console.debug` is not available\r\n   *\r\n   * @param {Mixed[]} args\r\n   *        One or more messages or objects that should be logged as debug.\r\n   */\r\n\r\n\r\n  log.debug = function () {\r\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n      args[_key4] = arguments[_key4];\r\n    }\r\n\r\n    return logByType('debug', level, args);\r\n  };\r\n\r\n  return log;\r\n}\r\n\r\n/**\r\n * @file log.js\r\n * @module log\r\n */\r\nvar log$1 = createLogger$1('VIDEOJS');\r\nvar createLogger = log$1.createLogger;\r\n\r\n/**\r\n * @file obj.js\r\n * @module obj\r\n */\r\n\r\n/**\r\n * @callback obj:EachCallback\r\n *\r\n * @param {Mixed} value\r\n *        The current key for the object that is being iterated over.\r\n *\r\n * @param {string} key\r\n *        The current key-value for object that is being iterated over\r\n */\r\n\r\n/**\r\n * @callback obj:ReduceCallback\r\n *\r\n * @param {Mixed} accum\r\n *        The value that is accumulating over the reduce loop.\r\n *\r\n * @param {Mixed} value\r\n *        The current key for the object that is being iterated over.\r\n *\r\n * @param {string} key\r\n *        The current key-value for object that is being iterated over\r\n *\r\n * @return {Mixed}\r\n *         The new accumulated value.\r\n */\r\nvar toString = Object.prototype.toString;\r\n/**\r\n * Get the keys of an Object\r\n *\r\n * @param {Object}\r\n *        The Object to get the keys from\r\n *\r\n * @return {string[]}\r\n *         An array of the keys from the object. Returns an empty array if the\r\n *         object passed in was invalid or had no keys.\r\n *\r\n * @private\r\n */\r\n\r\nvar keys = function keys(object) {\r\n  return isObject(object) ? Object.keys(object) : [];\r\n};\r\n/**\r\n * Array-like iteration for objects.\r\n *\r\n * @param {Object} object\r\n *        The object to iterate over\r\n *\r\n * @param {obj:EachCallback} fn\r\n *        The callback function which is called for each key in the object.\r\n */\r\n\r\n\r\nfunction each(object, fn) {\r\n  keys(object).forEach(function (key) {\r\n    return fn(object[key], key);\r\n  });\r\n}\r\n/**\r\n * Array-like reduce for objects.\r\n *\r\n * @param {Object} object\r\n *        The Object that you want to reduce.\r\n *\r\n * @param {Function} fn\r\n *         A callback function which is called for each key in the object. It\r\n *         receives the accumulated value and the per-iteration value and key\r\n *         as arguments.\r\n *\r\n * @param {Mixed} [initial = 0]\r\n *        Starting value\r\n *\r\n * @return {Mixed}\r\n *         The final accumulated value.\r\n */\r\n\r\nfunction reduce(object, fn, initial) {\r\n  if (initial === void 0) {\r\n    initial = 0;\r\n  }\r\n\r\n  return keys(object).reduce(function (accum, key) {\r\n    return fn(accum, object[key], key);\r\n  }, initial);\r\n}\r\n/**\r\n * Object.assign-style object shallow merge/extend.\r\n *\r\n * @param  {Object} target\r\n * @param  {Object} ...sources\r\n * @return {Object}\r\n */\r\n\r\nfunction assign(target) {\r\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    sources[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  if (Object.assign) {\r\n    return _extends.apply(void 0, [target].concat(sources));\r\n  }\r\n\r\n  sources.forEach(function (source) {\r\n    if (!source) {\r\n      return;\r\n    }\r\n\r\n    each(source, function (value, key) {\r\n      target[key] = value;\r\n    });\r\n  });\r\n  return target;\r\n}\r\n/**\r\n * Returns whether a value is an object of any kind - including DOM nodes,\r\n * arrays, regular expressions, etc. Not functions, though.\r\n *\r\n * This avoids the gotcha where using `typeof` on a `null` value\r\n * results in `'object'`.\r\n *\r\n * @param  {Object} value\r\n * @return {boolean}\r\n */\r\n\r\nfunction isObject(value) {\r\n  return !!value && typeof value === 'object';\r\n}\r\n/**\r\n * Returns whether an object appears to be a \"plain\" object - that is, a\r\n * direct instance of `Object`.\r\n *\r\n * @param  {Object} value\r\n * @return {boolean}\r\n */\r\n\r\nfunction isPlain(value) {\r\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\r\n}\r\n\r\n/**\r\n * @file computed-style.js\r\n * @module computed-style\r\n */\r\n/**\r\n * A safe getComputedStyle.\r\n *\r\n * This is needed because in Firefox, if the player is loaded in an iframe with\r\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\r\n * null-check to make sure that the player doesn't break in these cases.\r\n *\r\n * @function\r\n * @param    {Element} el\r\n *           The element you want the computed style of\r\n *\r\n * @param    {string} prop\r\n *           The property name you want\r\n *\r\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n */\r\n\r\nfunction computedStyle(el, prop) {\r\n  if (!el || !prop) {\r\n    return '';\r\n  }\r\n\r\n  if (typeof window$1.getComputedStyle === 'function') {\r\n    var computedStyleValue;\r\n\r\n    try {\r\n      computedStyleValue = window$1.getComputedStyle(el);\r\n    } catch (e) {\r\n      return '';\r\n    }\r\n\r\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\n/**\r\n * @file browser.js\r\n * @module browser\r\n */\r\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\r\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\r\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\r\n/**\r\n * Whether or not this device is an iPod.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\r\n/**\r\n * The detected iOS version - or `null`.\r\n *\r\n * @static\r\n * @const\r\n * @type {string|null}\r\n */\r\n\r\nvar IOS_VERSION = function () {\r\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\r\n\r\n  if (match && match[1]) {\r\n    return match[1];\r\n  }\r\n\r\n  return null;\r\n}();\r\n/**\r\n * Whether or not this is an Android device.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\r\n/**\r\n * The detected Android version - or `null`.\r\n *\r\n * @static\r\n * @const\r\n * @type {number|string|null}\r\n */\r\n\r\nvar ANDROID_VERSION = function () {\r\n  // This matches Android Major.Minor.Patch versions\r\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\r\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\r\n\r\n  if (!match) {\r\n    return null;\r\n  }\r\n\r\n  var major = match[1] && parseFloat(match[1]);\r\n  var minor = match[2] && parseFloat(match[2]);\r\n\r\n  if (major && minor) {\r\n    return parseFloat(match[1] + '.' + match[2]);\r\n  } else if (major) {\r\n    return major;\r\n  }\r\n\r\n  return null;\r\n}();\r\n/**\r\n * Whether or not this is a native Android browser.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\r\n/**\r\n * Whether or not this is Mozilla Firefox.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\r\n/**\r\n * Whether or not this is Microsoft Edge.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\r\n/**\r\n * Whether or not this is Google Chrome.\r\n *\r\n * This will also be `true` for Chrome on iOS, which will have different support\r\n * as it is actually Safari under the hood.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\r\n/**\r\n * The detected Google Chrome version - or `null`.\r\n *\r\n * @static\r\n * @const\r\n * @type {number|null}\r\n */\r\n\r\nvar CHROME_VERSION = function () {\r\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\r\n\r\n  if (match && match[2]) {\r\n    return parseFloat(match[2]);\r\n  }\r\n\r\n  return null;\r\n}();\r\n/**\r\n * The detected Internet Explorer version - or `null`.\r\n *\r\n * @static\r\n * @const\r\n * @type {number|null}\r\n */\r\n\r\nvar IE_VERSION = function () {\r\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\r\n  var version = result && parseFloat(result[1]);\r\n\r\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\r\n    // IE 11 has a different user agent string than other IE versions\r\n    version = 11.0;\r\n  }\r\n\r\n  return version;\r\n}();\r\n/**\r\n * Whether or not this is desktop Safari.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\r\n/**\r\n * Whether or not this is a Windows machine.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\r\n/**\r\n * Whether or not this device is touch-enabled.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\r\n/**\r\n * Whether or not this device is an iPad.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\r\n/**\r\n * Whether or not this device is an iPhone.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\r\n// to identify iPhones, we need to exclude iPads.\r\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\r\n\r\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\r\n/**\r\n * Whether or not this is an iOS device.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\r\n/**\r\n * Whether or not this is any flavor of Safari - including iOS.\r\n *\r\n * @static\r\n * @const\r\n * @type {Boolean}\r\n */\r\n\r\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\r\n\r\nvar browser = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  IS_IPOD: IS_IPOD,\r\n  IOS_VERSION: IOS_VERSION,\r\n  IS_ANDROID: IS_ANDROID,\r\n  ANDROID_VERSION: ANDROID_VERSION,\r\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\r\n  IS_FIREFOX: IS_FIREFOX,\r\n  IS_EDGE: IS_EDGE,\r\n  IS_CHROME: IS_CHROME,\r\n  CHROME_VERSION: CHROME_VERSION,\r\n  IE_VERSION: IE_VERSION,\r\n  IS_SAFARI: IS_SAFARI,\r\n  IS_WINDOWS: IS_WINDOWS,\r\n  TOUCH_ENABLED: TOUCH_ENABLED,\r\n  IS_IPAD: IS_IPAD,\r\n  IS_IPHONE: IS_IPHONE,\r\n  IS_IOS: IS_IOS,\r\n  IS_ANY_SAFARI: IS_ANY_SAFARI\r\n});\r\n\r\n/**\r\n * @file dom.js\r\n * @module dom\r\n */\r\n/**\r\n * Detect if a value is a string with any non-whitespace characters.\r\n *\r\n * @private\r\n * @param  {string} str\r\n *         The string to check\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if the string is non-blank, `false` otherwise.\r\n *\r\n */\r\n\r\nfunction isNonBlankString(str) {\r\n  // we use str.trim as it will trim any whitespace characters\r\n  // from the front or back of non-whitespace characters. aka\r\n  // Any string that contains non-whitespace characters will\r\n  // still contain them after `trim` but whitespace only strings\r\n  // will have a length of 0, failing this check.\r\n  return typeof str === 'string' && Boolean(str.trim());\r\n}\r\n/**\r\n * Throws an error if the passed string has whitespace. This is used by\r\n * class methods to be relatively consistent with the classList API.\r\n *\r\n * @private\r\n * @param  {string} str\r\n *         The string to check for whitespace.\r\n *\r\n * @throws {Error}\r\n *         Throws an error if there is whitespace in the string.\r\n */\r\n\r\n\r\nfunction throwIfWhitespace(str) {\r\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\r\n  if (str.indexOf(' ') >= 0) {\r\n    throw new Error('class has illegal whitespace characters');\r\n  }\r\n}\r\n/**\r\n * Produce a regular expression for matching a className within an elements className.\r\n *\r\n * @private\r\n * @param  {string} className\r\n *         The className to generate the RegExp for.\r\n *\r\n * @return {RegExp}\r\n *         The RegExp that will check for a specific `className` in an elements\r\n *         className.\r\n */\r\n\r\n\r\nfunction classRegExp(className) {\r\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\r\n}\r\n/**\r\n * Whether the current DOM interface appears to be real (i.e. not simulated).\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\r\n */\r\n\r\n\r\nfunction isReal() {\r\n  // Both document and window will never be undefined thanks to `global`.\r\n  return document === window$1.document;\r\n}\r\n/**\r\n * Determines, via duck typing, whether or not a value is a DOM element.\r\n *\r\n * @param  {Mixed} value\r\n *         The value to check.\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if the value is a DOM element, `false` otherwise.\r\n */\r\n\r\nfunction isEl(value) {\r\n  return isObject(value) && value.nodeType === 1;\r\n}\r\n/**\r\n * Determines if the current DOM is embedded in an iframe.\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if the DOM is embedded in an iframe, `false`\r\n *         otherwise.\r\n */\r\n\r\nfunction isInFrame() {\r\n  // We need a try/catch here because Safari will throw errors when attempting\r\n  // to get either `parent` or `self`\r\n  try {\r\n    return window$1.parent !== window$1.self;\r\n  } catch (x) {\r\n    return true;\r\n  }\r\n}\r\n/**\r\n * Creates functions to query the DOM using a given method.\r\n *\r\n * @private\r\n * @param   {string} method\r\n *          The method to create the query with.\r\n *\r\n * @return  {Function}\r\n *          The query method\r\n */\r\n\r\nfunction createQuerier(method) {\r\n  return function (selector, context) {\r\n    if (!isNonBlankString(selector)) {\r\n      return document[method](null);\r\n    }\r\n\r\n    if (isNonBlankString(context)) {\r\n      context = document.querySelector(context);\r\n    }\r\n\r\n    var ctx = isEl(context) ? context : document;\r\n    return ctx[method] && ctx[method](selector);\r\n  };\r\n}\r\n/**\r\n * Creates an element and applies properties, attributes, and inserts content.\r\n *\r\n * @param  {string} [tagName='div']\r\n *         Name of tag to be created.\r\n *\r\n * @param  {Object} [properties={}]\r\n *         Element properties to be applied.\r\n *\r\n * @param  {Object} [attributes={}]\r\n *         Element attributes to be applied.\r\n *\r\n * @param {module:dom~ContentDescriptor} content\r\n *        A content descriptor object.\r\n *\r\n * @return {Element}\r\n *         The element that was created.\r\n */\r\n\r\n\r\nfunction createEl(tagName, properties, attributes, content) {\r\n  if (tagName === void 0) {\r\n    tagName = 'div';\r\n  }\r\n\r\n  if (properties === void 0) {\r\n    properties = {};\r\n  }\r\n\r\n  if (attributes === void 0) {\r\n    attributes = {};\r\n  }\r\n\r\n  var el = document.createElement(tagName);\r\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\r\n    var val = properties[propName]; // See #2176\r\n    // We originally were accepting both properties and attributes in the\r\n    // same object, but that doesn't work so well.\r\n\r\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\r\n      log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\r\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\r\n      // method for it.\r\n    } else if (propName === 'textContent') {\r\n      textContent(el, val);\r\n    } else if (el[propName] !== val || propName === 'tabIndex') {\r\n      el[propName] = val;\r\n    }\r\n  });\r\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\r\n    el.setAttribute(attrName, attributes[attrName]);\r\n  });\r\n\r\n  if (content) {\r\n    appendContent(el, content);\r\n  }\r\n\r\n  return el;\r\n}\r\n/**\r\n * Injects text into an element, replacing any existing contents entirely.\r\n *\r\n * @param  {Element} el\r\n *         The element to add text content into\r\n *\r\n * @param  {string} text\r\n *         The text content to add.\r\n *\r\n * @return {Element}\r\n *         The element with added text content.\r\n */\r\n\r\nfunction textContent(el, text) {\r\n  if (typeof el.textContent === 'undefined') {\r\n    el.innerText = text;\r\n  } else {\r\n    el.textContent = text;\r\n  }\r\n\r\n  return el;\r\n}\r\n/**\r\n * Insert an element as the first child node of another\r\n *\r\n * @param {Element} child\r\n *        Element to insert\r\n *\r\n * @param {Element} parent\r\n *        Element to insert child into\r\n */\r\n\r\nfunction prependTo(child, parent) {\r\n  if (parent.firstChild) {\r\n    parent.insertBefore(child, parent.firstChild);\r\n  } else {\r\n    parent.appendChild(child);\r\n  }\r\n}\r\n/**\r\n * Check if an element has a class name.\r\n *\r\n * @param  {Element} element\r\n *         Element to check\r\n *\r\n * @param  {string} classToCheck\r\n *         Class name to check for\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if the element has a class, `false` otherwise.\r\n *\r\n * @throws {Error}\r\n *         Throws an error if `classToCheck` has white space.\r\n */\r\n\r\nfunction hasClass(element, classToCheck) {\r\n  throwIfWhitespace(classToCheck);\r\n\r\n  if (element.classList) {\r\n    return element.classList.contains(classToCheck);\r\n  }\r\n\r\n  return classRegExp(classToCheck).test(element.className);\r\n}\r\n/**\r\n * Add a class name to an element.\r\n *\r\n * @param  {Element} element\r\n *         Element to add class name to.\r\n *\r\n * @param  {string} classToAdd\r\n *         Class name to add.\r\n *\r\n * @return {Element}\r\n *         The DOM element with the added class name.\r\n */\r\n\r\nfunction addClass(element, classToAdd) {\r\n  if (element.classList) {\r\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\r\n    // in the case of classList not being supported.\r\n  } else if (!hasClass(element, classToAdd)) {\r\n    element.className = (element.className + ' ' + classToAdd).trim();\r\n  }\r\n\r\n  return element;\r\n}\r\n/**\r\n * Remove a class name from an element.\r\n *\r\n * @param  {Element} element\r\n *         Element to remove a class name from.\r\n *\r\n * @param  {string} classToRemove\r\n *         Class name to remove\r\n *\r\n * @return {Element}\r\n *         The DOM element with class name removed.\r\n */\r\n\r\nfunction removeClass(element, classToRemove) {\r\n  // Protect in case the player gets disposed\r\n  if (!element) {\r\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\r\n    return null;\r\n  }\r\n\r\n  if (element.classList) {\r\n    element.classList.remove(classToRemove);\r\n  } else {\r\n    throwIfWhitespace(classToRemove);\r\n    element.className = element.className.split(/\\s+/).filter(function (c) {\r\n      return c !== classToRemove;\r\n    }).join(' ');\r\n  }\r\n\r\n  return element;\r\n}\r\n/**\r\n * The callback definition for toggleClass.\r\n *\r\n * @callback module:dom~PredicateCallback\r\n * @param    {Element} element\r\n *           The DOM element of the Component.\r\n *\r\n * @param    {string} classToToggle\r\n *           The `className` that wants to be toggled\r\n *\r\n * @return   {boolean|undefined}\r\n *           If `true` is returned, the `classToToggle` will be added to the\r\n *           `element`. If `false`, the `classToToggle` will be removed from\r\n *           the `element`. If `undefined`, the callback will be ignored.\r\n */\r\n\r\n/**\r\n * Adds or removes a class name to/from an element depending on an optional\r\n * condition or the presence/absence of the class name.\r\n *\r\n * @param  {Element} element\r\n *         The element to toggle a class name on.\r\n *\r\n * @param  {string} classToToggle\r\n *         The class that should be toggled.\r\n *\r\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\r\n *         See the return value for {@link module:dom~PredicateCallback}\r\n *\r\n * @return {Element}\r\n *         The element with a class that has been toggled.\r\n */\r\n\r\nfunction toggleClass(element, classToToggle, predicate) {\r\n  // This CANNOT use `classList` internally because IE11 does not support the\r\n  // second parameter to the `classList.toggle()` method! Which is fine because\r\n  // `classList` will be used by the add/remove functions.\r\n  var has = hasClass(element, classToToggle);\r\n\r\n  if (typeof predicate === 'function') {\r\n    predicate = predicate(element, classToToggle);\r\n  }\r\n\r\n  if (typeof predicate !== 'boolean') {\r\n    predicate = !has;\r\n  } // If the necessary class operation matches the current state of the\r\n  // element, no action is required.\r\n\r\n\r\n  if (predicate === has) {\r\n    return;\r\n  }\r\n\r\n  if (predicate) {\r\n    addClass(element, classToToggle);\r\n  } else {\r\n    removeClass(element, classToToggle);\r\n  }\r\n\r\n  return element;\r\n}\r\n/**\r\n * Apply attributes to an HTML element.\r\n *\r\n * @param {Element} el\r\n *        Element to add attributes to.\r\n *\r\n * @param {Object} [attributes]\r\n *        Attributes to be applied.\r\n */\r\n\r\nfunction setAttributes(el, attributes) {\r\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\r\n    var attrValue = attributes[attrName];\r\n\r\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\r\n      el.removeAttribute(attrName);\r\n    } else {\r\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\r\n    }\r\n  });\r\n}\r\n/**\r\n * Get an element's attribute values, as defined on the HTML tag.\r\n *\r\n * Attributes are not the same as properties. They're defined on the tag\r\n * or with setAttribute.\r\n *\r\n * @param  {Element} tag\r\n *         Element from which to get tag attributes.\r\n *\r\n * @return {Object}\r\n *         All attributes of the element. Boolean attributes will be `true` or\r\n *         `false`, others will be strings.\r\n */\r\n\r\nfunction getAttributes(tag) {\r\n  var obj = {}; // known boolean attributes\r\n  // we can check for matching boolean properties, but not all browsers\r\n  // and not all tags know about these attributes, so, we still want to check them manually\r\n\r\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\r\n\r\n  if (tag && tag.attributes && tag.attributes.length > 0) {\r\n    var attrs = tag.attributes;\r\n\r\n    for (var i = attrs.length - 1; i >= 0; i--) {\r\n      var attrName = attrs[i].name;\r\n      var attrVal = attrs[i].value; // check for known booleans\r\n      // the matching element property will return a value for typeof\r\n\r\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\r\n        // the value of an included boolean attribute is typically an empty\r\n        // string ('') which would equal false if we just check for a false value.\r\n        // we also don't want support bad code like autoplay='false'\r\n        attrVal = attrVal !== null ? true : false;\r\n      }\r\n\r\n      obj[attrName] = attrVal;\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n/**\r\n * Get the value of an element's attribute.\r\n *\r\n * @param {Element} el\r\n *        A DOM element.\r\n *\r\n * @param {string} attribute\r\n *        Attribute to get the value of.\r\n *\r\n * @return {string}\r\n *         The value of the attribute.\r\n */\r\n\r\nfunction getAttribute(el, attribute) {\r\n  return el.getAttribute(attribute);\r\n}\r\n/**\r\n * Set the value of an element's attribute.\r\n *\r\n * @param {Element} el\r\n *        A DOM element.\r\n *\r\n * @param {string} attribute\r\n *        Attribute to set.\r\n *\r\n * @param {string} value\r\n *        Value to set the attribute to.\r\n */\r\n\r\nfunction setAttribute(el, attribute, value) {\r\n  el.setAttribute(attribute, value);\r\n}\r\n/**\r\n * Remove an element's attribute.\r\n *\r\n * @param {Element} el\r\n *        A DOM element.\r\n *\r\n * @param {string} attribute\r\n *        Attribute to remove.\r\n */\r\n\r\nfunction removeAttribute(el, attribute) {\r\n  el.removeAttribute(attribute);\r\n}\r\n/**\r\n * Attempt to block the ability to select text.\r\n */\r\n\r\nfunction blockTextSelection() {\r\n  document.body.focus();\r\n\r\n  document.onselectstart = function () {\r\n    return false;\r\n  };\r\n}\r\n/**\r\n * Turn off text selection blocking.\r\n */\r\n\r\nfunction unblockTextSelection() {\r\n  document.onselectstart = function () {\r\n    return true;\r\n  };\r\n}\r\n/**\r\n * Identical to the native `getBoundingClientRect` function, but ensures that\r\n * the method is supported at all (it is in all browsers we claim to support)\r\n * and that the element is in the DOM before continuing.\r\n *\r\n * This wrapper function also shims properties which are not provided by some\r\n * older browsers (namely, IE8).\r\n *\r\n * Additionally, some browsers do not support adding properties to a\r\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\r\n * properties (except `x` and `y` which are not widely supported). This helps\r\n * avoid implementations where keys are non-enumerable.\r\n *\r\n * @param  {Element} el\r\n *         Element whose `ClientRect` we want to calculate.\r\n *\r\n * @return {Object|undefined}\r\n *         Always returns a plain object - or `undefined` if it cannot.\r\n */\r\n\r\nfunction getBoundingClientRect(el) {\r\n  if (el && el.getBoundingClientRect && el.parentNode) {\r\n    var rect = el.getBoundingClientRect();\r\n    var result = {};\r\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\r\n      if (rect[k] !== undefined) {\r\n        result[k] = rect[k];\r\n      }\r\n    });\r\n\r\n    if (!result.height) {\r\n      result.height = parseFloat(computedStyle(el, 'height'));\r\n    }\r\n\r\n    if (!result.width) {\r\n      result.width = parseFloat(computedStyle(el, 'width'));\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * Represents the position of a DOM element on the page.\r\n *\r\n * @typedef  {Object} module:dom~Position\r\n *\r\n * @property {number} left\r\n *           Pixels to the left.\r\n *\r\n * @property {number} top\r\n *           Pixels from the top.\r\n */\r\n\r\n/**\r\n * Get the position of an element in the DOM.\r\n *\r\n * Uses `getBoundingClientRect` technique from John Resig.\r\n *\r\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\r\n *\r\n * @param  {Element} el\r\n *         Element from which to get offset.\r\n *\r\n * @return {module:dom~Position}\r\n *         The position of the element that was passed in.\r\n */\r\n\r\nfunction findPosition(el) {\r\n  if (!el || el && !el.offsetParent) {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n  }\r\n\r\n  var width = el.offsetWidth;\r\n  var height = el.offsetHeight;\r\n  var left = 0;\r\n  var top = 0;\r\n\r\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\r\n    left += el.offsetLeft;\r\n    top += el.offsetTop;\r\n    el = el.offsetParent;\r\n  }\r\n\r\n  return {\r\n    left: left,\r\n    top: top,\r\n    width: width,\r\n    height: height\r\n  };\r\n}\r\n/**\r\n * Represents x and y coordinates for a DOM element or mouse pointer.\r\n *\r\n * @typedef  {Object} module:dom~Coordinates\r\n *\r\n * @property {number} x\r\n *           x coordinate in pixels\r\n *\r\n * @property {number} y\r\n *           y coordinate in pixels\r\n */\r\n\r\n/**\r\n * Get the pointer position within an element.\r\n *\r\n * The base on the coordinates are the bottom left of the element.\r\n *\r\n * @param  {Element} el\r\n *         Element on which to get the pointer position on.\r\n *\r\n * @param  {EventTarget~Event} event\r\n *         Event object.\r\n *\r\n * @return {module:dom~Coordinates}\r\n *         A coordinates object corresponding to the mouse position.\r\n *\r\n */\r\n\r\nfunction getPointerPosition(el, event) {\r\n  var translated = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  if (IS_IOS) {\r\n    var item = el;\r\n\r\n    while (item && item.nodeName.toLowerCase() !== 'html') {\r\n      var transform = computedStyle(item, 'transform');\r\n\r\n      if (/^matrix/.test(transform)) {\r\n        var values = transform.slice(7, -1).split(/,\\s/).map(Number);\r\n        translated.x += values[4];\r\n        translated.y += values[5];\r\n      } else if (/^matrix3d/.test(transform)) {\r\n        var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\r\n\r\n        translated.x += _values[12];\r\n        translated.y += _values[13];\r\n      }\r\n\r\n      item = item.parentNode;\r\n    }\r\n  }\r\n\r\n  var position = {};\r\n  var boxTarget = findPosition(event.target);\r\n  var box = findPosition(el);\r\n  var boxW = box.width;\r\n  var boxH = box.height;\r\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\r\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\r\n\r\n  if (event.changedTouches) {\r\n    offsetX = event.changedTouches[0].pageX - box.left;\r\n    offsetY = event.changedTouches[0].pageY + box.top;\r\n\r\n    if (IS_IOS) {\r\n      offsetX -= translated.x;\r\n      offsetY -= translated.y;\r\n    }\r\n  }\r\n\r\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\r\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\r\n  return position;\r\n}\r\n/**\r\n * Determines, via duck typing, whether or not a value is a text node.\r\n *\r\n * @param  {Mixed} value\r\n *         Check if this value is a text node.\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if the value is a text node, `false` otherwise.\r\n */\r\n\r\nfunction isTextNode(value) {\r\n  return isObject(value) && value.nodeType === 3;\r\n}\r\n/**\r\n * Empties the contents of an element.\r\n *\r\n * @param  {Element} el\r\n *         The element to empty children from\r\n *\r\n * @return {Element}\r\n *         The element with no children\r\n */\r\n\r\nfunction emptyEl(el) {\r\n  while (el.firstChild) {\r\n    el.removeChild(el.firstChild);\r\n  }\r\n\r\n  return el;\r\n}\r\n/**\r\n * This is a mixed value that describes content to be injected into the DOM\r\n * via some method. It can be of the following types:\r\n *\r\n * Type       | Description\r\n * -----------|-------------\r\n * `string`   | The value will be normalized into a text node.\r\n * `Element`  | The value will be accepted as-is.\r\n * `TextNode` | The value will be accepted as-is.\r\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\r\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\r\n *\r\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\r\n */\r\n\r\n/**\r\n * Normalizes content for eventual insertion into the DOM.\r\n *\r\n * This allows a wide range of content definition methods, but helps protect\r\n * from falling into the trap of simply writing to `innerHTML`, which could\r\n * be an XSS concern.\r\n *\r\n * The content for an element can be passed in multiple types and\r\n * combinations, whose behavior is as follows:\r\n *\r\n * @param {module:dom~ContentDescriptor} content\r\n *        A content descriptor value.\r\n *\r\n * @return {Array}\r\n *         All of the content that was passed in, normalized to an array of\r\n *         elements or text nodes.\r\n */\r\n\r\nfunction normalizeContent(content) {\r\n  // First, invoke content if it is a function. If it produces an array,\r\n  // that needs to happen before normalization.\r\n  if (typeof content === 'function') {\r\n    content = content();\r\n  } // Next up, normalize to an array, so one or many items can be normalized,\r\n  // filtered, and returned.\r\n\r\n\r\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\r\n    // First, invoke value if it is a function to produce a new value,\r\n    // which will be subsequently normalized to a Node of some kind.\r\n    if (typeof value === 'function') {\r\n      value = value();\r\n    }\r\n\r\n    if (isEl(value) || isTextNode(value)) {\r\n      return value;\r\n    }\r\n\r\n    if (typeof value === 'string' && /\\S/.test(value)) {\r\n      return document.createTextNode(value);\r\n    }\r\n  }).filter(function (value) {\r\n    return value;\r\n  });\r\n}\r\n/**\r\n * Normalizes and appends content to an element.\r\n *\r\n * @param  {Element} el\r\n *         Element to append normalized content to.\r\n *\r\n * @param {module:dom~ContentDescriptor} content\r\n *        A content descriptor value.\r\n *\r\n * @return {Element}\r\n *         The element with appended normalized content.\r\n */\r\n\r\nfunction appendContent(el, content) {\r\n  normalizeContent(content).forEach(function (node) {\r\n    return el.appendChild(node);\r\n  });\r\n  return el;\r\n}\r\n/**\r\n * Normalizes and inserts content into an element; this is identical to\r\n * `appendContent()`, except it empties the element first.\r\n *\r\n * @param {Element} el\r\n *        Element to insert normalized content into.\r\n *\r\n * @param {module:dom~ContentDescriptor} content\r\n *        A content descriptor value.\r\n *\r\n * @return {Element}\r\n *         The element with inserted normalized content.\r\n */\r\n\r\nfunction insertContent(el, content) {\r\n  return appendContent(emptyEl(el), content);\r\n}\r\n/**\r\n * Check if an event was a single left click.\r\n *\r\n * @param  {EventTarget~Event} event\r\n *         Event object.\r\n *\r\n * @return {boolean}\r\n *         Will be `true` if a single left click, `false` otherwise.\r\n */\r\n\r\nfunction isSingleLeftClick(event) {\r\n  // Note: if you create something draggable, be sure to\r\n  // call it on both `mousedown` and `mousemove` event,\r\n  // otherwise `mousedown` should be enough for a button\r\n  if (event.button === undefined && event.buttons === undefined) {\r\n    // Why do we need `buttons` ?\r\n    // Because, middle mouse sometimes have this:\r\n    // e.button === 0 and e.buttons === 4\r\n    // Furthermore, we want to prevent combination click, something like\r\n    // HOLD middlemouse then left click, that would be\r\n    // e.button === 0, e.buttons === 5\r\n    // just `button` is not gonna work\r\n    // Alright, then what this block does ?\r\n    // this is for chrome `simulate mobile devices`\r\n    // I want to support this as well\r\n    return true;\r\n  }\r\n\r\n  if (event.button === 0 && event.buttons === undefined) {\r\n    // Touch screen, sometimes on some specific device, `buttons`\r\n    // doesn't have anything (safari on ios, blackberry...)\r\n    return true;\r\n  } // `mouseup` event on a single left click has\r\n  // `button` and `buttons` equal to 0\r\n\r\n\r\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\r\n    return true;\r\n  }\r\n\r\n  if (event.button !== 0 || event.buttons !== 1) {\r\n    // This is the reason we have those if else block above\r\n    // if any special case we can catch and let it slide\r\n    // we do it above, when get to here, this definitely\r\n    // is-not-left-click\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n/**\r\n * Finds a single DOM element matching `selector` within the optional\r\n * `context` of another DOM element (defaulting to `document`).\r\n *\r\n * @param  {string} selector\r\n *         A valid CSS selector, which will be passed to `querySelector`.\r\n *\r\n * @param  {Element|String} [context=document]\r\n *         A DOM element within which to query. Can also be a selector\r\n *         string in which case the first matching element will be used\r\n *         as context. If missing (or no element matches selector), falls\r\n *         back to `document`.\r\n *\r\n * @return {Element|null}\r\n *         The element that was found or null.\r\n */\r\n\r\nvar $ = createQuerier('querySelector');\r\n/**\r\n * Finds a all DOM elements matching `selector` within the optional\r\n * `context` of another DOM element (defaulting to `document`).\r\n *\r\n * @param  {string} selector\r\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\r\n *\r\n * @param  {Element|String} [context=document]\r\n *         A DOM element within which to query. Can also be a selector\r\n *         string in which case the first matching element will be used\r\n *         as context. If missing (or no element matches selector), falls\r\n *         back to `document`.\r\n *\r\n * @return {NodeList}\r\n *         A element list of elements that were found. Will be empty if none\r\n *         were found.\r\n *\r\n */\r\n\r\nvar $$ = createQuerier('querySelectorAll');\r\n\r\nvar Dom = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  isReal: isReal,\r\n  isEl: isEl,\r\n  isInFrame: isInFrame,\r\n  createEl: createEl,\r\n  textContent: textContent,\r\n  prependTo: prependTo,\r\n  hasClass: hasClass,\r\n  addClass: addClass,\r\n  removeClass: removeClass,\r\n  toggleClass: toggleClass,\r\n  setAttributes: setAttributes,\r\n  getAttributes: getAttributes,\r\n  getAttribute: getAttribute,\r\n  setAttribute: setAttribute,\r\n  removeAttribute: removeAttribute,\r\n  blockTextSelection: blockTextSelection,\r\n  unblockTextSelection: unblockTextSelection,\r\n  getBoundingClientRect: getBoundingClientRect,\r\n  findPosition: findPosition,\r\n  getPointerPosition: getPointerPosition,\r\n  isTextNode: isTextNode,\r\n  emptyEl: emptyEl,\r\n  normalizeContent: normalizeContent,\r\n  appendContent: appendContent,\r\n  insertContent: insertContent,\r\n  isSingleLeftClick: isSingleLeftClick,\r\n  $: $,\r\n  $$: $$\r\n});\r\n\r\n/**\r\n * @file setup.js - Functions for setting up a player without\r\n * user interaction based on the data-setup `attribute` of the video tag.\r\n *\r\n * @module setup\r\n */\r\nvar _windowLoaded = false;\r\nvar videojs$1;\r\n/**\r\n * Set up any tags that have a data-setup `attribute` when the player is started.\r\n */\r\n\r\nvar autoSetup = function autoSetup() {\r\n  if (videojs$1.options.autoSetup === false) {\r\n    return;\r\n  }\r\n\r\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\r\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\r\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\r\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\r\n\r\n  if (mediaEls && mediaEls.length > 0) {\r\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\r\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\r\n\r\n      if (mediaEl && mediaEl.getAttribute) {\r\n        // Make sure this player hasn't already been set up.\r\n        if (mediaEl.player === undefined) {\r\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\r\n          // We only auto-setup if they've added the data-setup attr.\r\n\r\n          if (options !== null) {\r\n            // Create new video.js instance.\r\n            videojs$1(mediaEl);\r\n          }\r\n        } // If getAttribute isn't defined, we need to wait for the DOM.\r\n\r\n      } else {\r\n        autoSetupTimeout(1);\r\n        break;\r\n      }\r\n    } // No videos were found, so keep looping unless page is finished loading.\r\n\r\n  } else if (!_windowLoaded) {\r\n    autoSetupTimeout(1);\r\n  }\r\n};\r\n/**\r\n * Wait until the page is loaded before running autoSetup. This will be called in\r\n * autoSetup if `hasLoaded` returns false.\r\n *\r\n * @param {number} wait\r\n *        How long to wait in ms\r\n *\r\n * @param {module:videojs} [vjs]\r\n *        The videojs library function\r\n */\r\n\r\n\r\nfunction autoSetupTimeout(wait, vjs) {\r\n  // Protect against breakage in non-browser environments\r\n  if (!isReal()) {\r\n    return;\r\n  }\r\n\r\n  if (vjs) {\r\n    videojs$1 = vjs;\r\n  }\r\n\r\n  window$1.setTimeout(autoSetup, wait);\r\n}\r\n/**\r\n * Used to set the internal tracking of window loaded state to true.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nfunction setWindowLoaded() {\r\n  _windowLoaded = true;\r\n  window$1.removeEventListener('load', setWindowLoaded);\r\n}\r\n\r\nif (isReal()) {\r\n  if (document.readyState === 'complete') {\r\n    setWindowLoaded();\r\n  } else {\r\n    /**\r\n     * Listen for the load event on window, and set _windowLoaded to true.\r\n     *\r\n     * We use a standard event listener here to avoid incrementing the GUID\r\n     * before any players are created.\r\n     *\r\n     * @listens load\r\n     */\r\n    window$1.addEventListener('load', setWindowLoaded);\r\n  }\r\n}\r\n\r\n/**\r\n * @file stylesheet.js\r\n * @module stylesheet\r\n */\r\n/**\r\n * Create a DOM syle element given a className for it.\r\n *\r\n * @param {string} className\r\n *        The className to add to the created style element.\r\n *\r\n * @return {Element}\r\n *         The element that was created.\r\n */\r\n\r\nvar createStyleElement = function createStyleElement(className) {\r\n  var style = document.createElement('style');\r\n  style.className = className;\r\n  return style;\r\n};\r\n/**\r\n * Add text to a DOM element.\r\n *\r\n * @param {Element} el\r\n *        The Element to add text content to.\r\n *\r\n * @param {string} content\r\n *        The text to add to the element.\r\n */\r\n\r\nvar setTextContent = function setTextContent(el, content) {\r\n  if (el.styleSheet) {\r\n    el.styleSheet.cssText = content;\r\n  } else {\r\n    el.textContent = content;\r\n  }\r\n};\r\n\r\n/**\r\n * @file guid.js\r\n * @module guid\r\n */\r\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\r\n//\r\n// The initial GUID is 3 because some users have come to rely on the first\r\n// default player ID ending up as `vjs_video_3`.\r\n//\r\n// See: https://github.com/videojs/video.js/pull/6216\r\nvar _initialGuid = 3;\r\n/**\r\n * Unique ID for an element or function\r\n *\r\n * @type {Number}\r\n */\r\n\r\nvar _guid = _initialGuid;\r\n/**\r\n * Get a unique auto-incrementing ID by number that has not been returned before.\r\n *\r\n * @return {number}\r\n *         A new unique ID.\r\n */\r\n\r\nfunction newGUID() {\r\n  return _guid++;\r\n}\r\n\r\n/**\r\n * @file dom-data.js\r\n * @module dom-data\r\n */\r\nvar FakeWeakMap;\r\n\r\nif (!window$1.WeakMap) {\r\n  FakeWeakMap = /*#__PURE__*/function () {\r\n    function FakeWeakMap() {\r\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\r\n      this.data = {};\r\n    }\r\n\r\n    var _proto = FakeWeakMap.prototype;\r\n\r\n    _proto.set = function set(key, value) {\r\n      var access = key[this.vdata] || newGUID();\r\n\r\n      if (!key[this.vdata]) {\r\n        key[this.vdata] = access;\r\n      }\r\n\r\n      this.data[access] = value;\r\n      return this;\r\n    };\r\n\r\n    _proto.get = function get(key) {\r\n      var access = key[this.vdata]; // we have data, return it\r\n\r\n      if (access) {\r\n        return this.data[access];\r\n      } // we don't have data, return nothing.\r\n      // return undefined explicitly as that's the contract for this method\r\n\r\n\r\n      log$1('We have no data for this element', key);\r\n      return undefined;\r\n    };\r\n\r\n    _proto.has = function has(key) {\r\n      var access = key[this.vdata];\r\n      return access in this.data;\r\n    };\r\n\r\n    _proto[\"delete\"] = function _delete(key) {\r\n      var access = key[this.vdata];\r\n\r\n      if (access) {\r\n        delete this.data[access];\r\n        delete key[this.vdata];\r\n      }\r\n    };\r\n\r\n    return FakeWeakMap;\r\n  }();\r\n}\r\n/**\r\n * Element Data Store.\r\n *\r\n * Allows for binding data to an element without putting it directly on the\r\n * element. Ex. Event listeners are stored here.\r\n * (also from jsninja.com, slightly modified and updated for closure compiler)\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\r\n\r\n/**\r\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\r\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\r\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\r\n * robust as jquery's, so there's probably some differences.\r\n *\r\n * @file events.js\r\n * @module events\r\n */\r\n/**\r\n * Clean up the listener cache and dispatchers\r\n *\r\n * @param {Element|Object} elem\r\n *        Element to clean up\r\n *\r\n * @param {string} type\r\n *        Type of event to clean up\r\n */\r\n\r\nfunction _cleanUpEvents(elem, type) {\r\n  if (!DomData.has(elem)) {\r\n    return;\r\n  }\r\n\r\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\r\n\r\n  if (data.handlers[type].length === 0) {\r\n    delete data.handlers[type]; // data.handlers[type] = null;\r\n    // Setting to null was causing an error with data.handlers\r\n    // Remove the meta-handler from the element\r\n\r\n    if (elem.removeEventListener) {\r\n      elem.removeEventListener(type, data.dispatcher, false);\r\n    } else if (elem.detachEvent) {\r\n      elem.detachEvent('on' + type, data.dispatcher);\r\n    }\r\n  } // Remove the events object if there are no types left\r\n\r\n\r\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\r\n    delete data.handlers;\r\n    delete data.dispatcher;\r\n    delete data.disabled;\r\n  } // Finally remove the element data if there is no data left\r\n\r\n\r\n  if (Object.getOwnPropertyNames(data).length === 0) {\r\n    DomData[\"delete\"](elem);\r\n  }\r\n}\r\n/**\r\n * Loops through an array of event types and calls the requested method for each type.\r\n *\r\n * @param {Function} fn\r\n *        The event method we want to use.\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind listeners to\r\n *\r\n * @param {string} type\r\n *        Type of event to bind to.\r\n *\r\n * @param {EventTarget~EventListener} callback\r\n *        Event listener.\r\n */\r\n\r\n\r\nfunction _handleMultipleEvents(fn, elem, types, callback) {\r\n  types.forEach(function (type) {\r\n    // Call the event method for each one of the types\r\n    fn(elem, type, callback);\r\n  });\r\n}\r\n/**\r\n * Fix a native event to have standard property values\r\n *\r\n * @param {Object} event\r\n *        Event object to fix.\r\n *\r\n * @return {Object}\r\n *         Fixed event object.\r\n */\r\n\r\n\r\nfunction fixEvent(event) {\r\n  if (event.fixed_) {\r\n    return event;\r\n  }\r\n\r\n  function returnTrue() {\r\n    return true;\r\n  }\r\n\r\n  function returnFalse() {\r\n    return false;\r\n  } // Test if fixing up is needed\r\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\r\n  // But native events return true for stopPropagation, but don't have\r\n  // other expected methods like isPropagationStopped. Seems to be a problem\r\n  // with the Javascript Ninja code. So we're just overriding all events now.\r\n\r\n\r\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\r\n    var old = event || window$1.event;\r\n    event = {}; // Clone the old object so that we can modify the values event = {};\r\n    // IE8 Doesn't like when you mess with native event properties\r\n    // Firefox returns false for event.hasOwnProperty('type') and other props\r\n    //  which makes copying more difficult.\r\n    // TODO: Probably best to create a whitelist of event props\r\n\r\n    for (var key in old) {\r\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\r\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\r\n      // and webkitMovementX/Y\r\n      // Lighthouse complains if Event.path is copied\r\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\r\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\r\n        // we still want to if preventDefault isn't supported (IE8).\r\n        if (!(key === 'returnValue' && old.preventDefault)) {\r\n          event[key] = old[key];\r\n        }\r\n      }\r\n    } // The event occurred on this element\r\n\r\n\r\n    if (!event.target) {\r\n      event.target = event.srcElement || document;\r\n    } // Handle which other element the event is related to\r\n\r\n\r\n    if (!event.relatedTarget) {\r\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\r\n    } // Stop the default browser action\r\n\r\n\r\n    event.preventDefault = function () {\r\n      if (old.preventDefault) {\r\n        old.preventDefault();\r\n      }\r\n\r\n      event.returnValue = false;\r\n      old.returnValue = false;\r\n      event.defaultPrevented = true;\r\n    };\r\n\r\n    event.defaultPrevented = false; // Stop the event from bubbling\r\n\r\n    event.stopPropagation = function () {\r\n      if (old.stopPropagation) {\r\n        old.stopPropagation();\r\n      }\r\n\r\n      event.cancelBubble = true;\r\n      old.cancelBubble = true;\r\n      event.isPropagationStopped = returnTrue;\r\n    };\r\n\r\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\r\n\r\n    event.stopImmediatePropagation = function () {\r\n      if (old.stopImmediatePropagation) {\r\n        old.stopImmediatePropagation();\r\n      }\r\n\r\n      event.isImmediatePropagationStopped = returnTrue;\r\n      event.stopPropagation();\r\n    };\r\n\r\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\r\n\r\n    if (event.clientX !== null && event.clientX !== undefined) {\r\n      var doc = document.documentElement;\r\n      var body = document.body;\r\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\r\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\r\n    } // Handle key presses\r\n\r\n\r\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\r\n    // 0 == left; 1 == middle; 2 == right\r\n\r\n    if (event.button !== null && event.button !== undefined) {\r\n      // The following is disabled because it does not pass videojs-standard\r\n      // and... yikes.\r\n\r\n      /* eslint-disable */\r\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\r\n      /* eslint-enable */\r\n    }\r\n  }\r\n\r\n  event.fixed_ = true; // Returns fixed-up instance\r\n\r\n  return event;\r\n}\r\n/**\r\n * Whether passive event listeners are supported\r\n */\r\n\r\nvar _supportsPassive;\r\n\r\nvar supportsPassive = function supportsPassive() {\r\n  if (typeof _supportsPassive !== 'boolean') {\r\n    _supportsPassive = false;\r\n\r\n    try {\r\n      var opts = Object.defineProperty({}, 'passive', {\r\n        get: function get() {\r\n          _supportsPassive = true;\r\n        }\r\n      });\r\n      window$1.addEventListener('test', null, opts);\r\n      window$1.removeEventListener('test', null, opts);\r\n    } catch (e) {// disregard\r\n    }\r\n  }\r\n\r\n  return _supportsPassive;\r\n};\r\n/**\r\n * Touch events Chrome expects to be passive\r\n */\r\n\r\n\r\nvar passiveEvents = ['touchstart', 'touchmove'];\r\n/**\r\n * Add an event listener to element\r\n * It stores the handler function in a separate cache object\r\n * and adds a generic handler to the element's event,\r\n * along with a unique id (guid) to the element.\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind listeners to\r\n *\r\n * @param {string|string[]} type\r\n *        Type of event to bind to.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        Event listener.\r\n */\r\n\r\nfunction on(elem, type, fn) {\r\n  if (Array.isArray(type)) {\r\n    return _handleMultipleEvents(on, elem, type, fn);\r\n  }\r\n\r\n  if (!DomData.has(elem)) {\r\n    DomData.set(elem, {});\r\n  }\r\n\r\n  var data = DomData.get(elem); // We need a place to store all our handler data\r\n\r\n  if (!data.handlers) {\r\n    data.handlers = {};\r\n  }\r\n\r\n  if (!data.handlers[type]) {\r\n    data.handlers[type] = [];\r\n  }\r\n\r\n  if (!fn.guid) {\r\n    fn.guid = newGUID();\r\n  }\r\n\r\n  data.handlers[type].push(fn);\r\n\r\n  if (!data.dispatcher) {\r\n    data.disabled = false;\r\n\r\n    data.dispatcher = function (event, hash) {\r\n      if (data.disabled) {\r\n        return;\r\n      }\r\n\r\n      event = fixEvent(event);\r\n      var handlers = data.handlers[event.type];\r\n\r\n      if (handlers) {\r\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\r\n        var handlersCopy = handlers.slice(0);\r\n\r\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\r\n          if (event.isImmediatePropagationStopped()) {\r\n            break;\r\n          } else {\r\n            try {\r\n              handlersCopy[m].call(elem, event, hash);\r\n            } catch (e) {\r\n              log$1.error(e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  if (data.handlers[type].length === 1) {\r\n    if (elem.addEventListener) {\r\n      var options = false;\r\n\r\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\r\n        options = {\r\n          passive: true\r\n        };\r\n      }\r\n\r\n      elem.addEventListener(type, data.dispatcher, options);\r\n    } else if (elem.attachEvent) {\r\n      elem.attachEvent('on' + type, data.dispatcher);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Removes event listeners from an element\r\n *\r\n * @param {Element|Object} elem\r\n *        Object to remove listeners from.\r\n *\r\n * @param {string|string[]} [type]\r\n *        Type of listener to remove. Don't include to remove all events from element.\r\n *\r\n * @param {EventTarget~EventListener} [fn]\r\n *        Specific listener to remove. Don't include to remove listeners for an event\r\n *        type.\r\n */\r\n\r\nfunction off(elem, type, fn) {\r\n  // Don't want to add a cache object through getElData if not needed\r\n  if (!DomData.has(elem)) {\r\n    return;\r\n  }\r\n\r\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\r\n\r\n  if (!data.handlers) {\r\n    return;\r\n  }\r\n\r\n  if (Array.isArray(type)) {\r\n    return _handleMultipleEvents(off, elem, type, fn);\r\n  } // Utility function\r\n\r\n\r\n  var removeType = function removeType(el, t) {\r\n    data.handlers[t] = [];\r\n\r\n    _cleanUpEvents(el, t);\r\n  }; // Are we removing all bound events?\r\n\r\n\r\n  if (type === undefined) {\r\n    for (var t in data.handlers) {\r\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\r\n        removeType(elem, t);\r\n      }\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\r\n\r\n  if (!handlers) {\r\n    return;\r\n  } // If no listener was provided, remove all listeners for type\r\n\r\n\r\n  if (!fn) {\r\n    removeType(elem, type);\r\n    return;\r\n  } // We're only removing a single handler\r\n\r\n\r\n  if (fn.guid) {\r\n    for (var n = 0; n < handlers.length; n++) {\r\n      if (handlers[n].guid === fn.guid) {\r\n        handlers.splice(n--, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  _cleanUpEvents(elem, type);\r\n}\r\n/**\r\n * Trigger an event for an element\r\n *\r\n * @param {Element|Object} elem\r\n *        Element to trigger an event on\r\n *\r\n * @param {EventTarget~Event|string} event\r\n *        A string (the type) or an event object with a type attribute\r\n *\r\n * @param {Object} [hash]\r\n *        data hash to pass along with the event\r\n *\r\n * @return {boolean|undefined}\r\n *         Returns the opposite of `defaultPrevented` if default was\r\n *         prevented. Otherwise, returns `undefined`\r\n */\r\n\r\nfunction trigger(elem, event, hash) {\r\n  // Fetches element data and a reference to the parent (for bubbling).\r\n  // Don't want to add a data object to cache for every parent,\r\n  // so checking hasElData first.\r\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\r\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\r\n  // handler;\r\n  // If an event name was passed as a string, creates an event out of it\r\n\r\n  if (typeof event === 'string') {\r\n    event = {\r\n      type: event,\r\n      target: elem\r\n    };\r\n  } else if (!event.target) {\r\n    event.target = elem;\r\n  } // Normalizes the event properties.\r\n\r\n\r\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\r\n\r\n  if (elemData.dispatcher) {\r\n    elemData.dispatcher.call(elem, event, hash);\r\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\r\n  // recursively calls this function to bubble the event up the DOM.\r\n\r\n\r\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\r\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\r\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\r\n    if (!DomData.has(event.target)) {\r\n      DomData.set(event.target, {});\r\n    }\r\n\r\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\r\n\r\n    if (event.target[event.type]) {\r\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\r\n      targetData.disabled = true; // Executes the default action.\r\n\r\n      if (typeof event.target[event.type] === 'function') {\r\n        event.target[event.type]();\r\n      } // Re-enables event dispatching.\r\n\r\n\r\n      targetData.disabled = false;\r\n    }\r\n  } // Inform the triggerer if the default was prevented by returning false\r\n\r\n\r\n  return !event.defaultPrevented;\r\n}\r\n/**\r\n * Trigger a listener only once for an event.\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind to.\r\n *\r\n * @param {string|string[]} type\r\n *        Name/type of event\r\n *\r\n * @param {Event~EventListener} fn\r\n *        Event listener function\r\n */\r\n\r\nfunction one(elem, type, fn) {\r\n  if (Array.isArray(type)) {\r\n    return _handleMultipleEvents(one, elem, type, fn);\r\n  }\r\n\r\n  var func = function func() {\r\n    off(elem, type, func);\r\n    fn.apply(this, arguments);\r\n  }; // copy the guid to the new function so it can removed using the original function's ID\r\n\r\n\r\n  func.guid = fn.guid = fn.guid || newGUID();\r\n  on(elem, type, func);\r\n}\r\n/**\r\n * Trigger a listener only once and then turn if off for all\r\n * configured events\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind to.\r\n *\r\n * @param {string|string[]} type\r\n *        Name/type of event\r\n *\r\n * @param {Event~EventListener} fn\r\n *        Event listener function\r\n */\r\n\r\nfunction any(elem, type, fn) {\r\n  var func = function func() {\r\n    off(elem, type, func);\r\n    fn.apply(this, arguments);\r\n  }; // copy the guid to the new function so it can removed using the original function's ID\r\n\r\n\r\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\r\n\r\n  on(elem, type, func);\r\n}\r\n\r\nvar Events = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  fixEvent: fixEvent,\r\n  on: on,\r\n  off: off,\r\n  trigger: trigger,\r\n  one: one,\r\n  any: any\r\n});\r\n\r\n/**\r\n * @file fn.js\r\n * @module fn\r\n */\r\nvar UPDATE_REFRESH_INTERVAL = 30;\r\n/**\r\n * Bind (a.k.a proxy or context). A simple method for changing the context of\r\n * a function.\r\n *\r\n * It also stores a unique id on the function so it can be easily removed from\r\n * events.\r\n *\r\n * @function\r\n * @param    {Mixed} context\r\n *           The object to bind as scope.\r\n *\r\n * @param    {Function} fn\r\n *           The function to be bound to a scope.\r\n *\r\n * @param    {number} [uid]\r\n *           An optional unique ID for the function to be set\r\n *\r\n * @return   {Function}\r\n *           The new function that will be bound into the context given\r\n */\r\n\r\nvar bind = function bind(context, fn, uid) {\r\n  // Make sure the function has a unique ID\r\n  if (!fn.guid) {\r\n    fn.guid = newGUID();\r\n  } // Create the new function that changes the context\r\n\r\n\r\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\r\n  // Needed in the case where multiple objects might share the same prototype\r\n  // IF both items add an event listener with the same function, then you try to remove just one\r\n  // it will remove both because they both have the same guid.\r\n  // when using this, you need to use the bind method when you remove the listener as well.\r\n  // currently used in text tracks\r\n\r\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\r\n  return bound;\r\n};\r\n/**\r\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\r\n * at most once per every `wait` milliseconds.\r\n *\r\n * @function\r\n * @param    {Function} fn\r\n *           The function to be throttled.\r\n *\r\n * @param    {number}   wait\r\n *           The number of milliseconds by which to throttle.\r\n *\r\n * @return   {Function}\r\n */\r\n\r\nvar throttle = function throttle(fn, wait) {\r\n  var last = window$1.performance.now();\r\n\r\n  var throttled = function throttled() {\r\n    var now = window$1.performance.now();\r\n\r\n    if (now - last >= wait) {\r\n      fn.apply(void 0, arguments);\r\n      last = now;\r\n    }\r\n  };\r\n\r\n  return throttled;\r\n};\r\n/**\r\n * Creates a debounced function that delays invoking `func` until after `wait`\r\n * milliseconds have elapsed since the last time the debounced function was\r\n * invoked.\r\n *\r\n * Inspired by lodash and underscore implementations.\r\n *\r\n * @function\r\n * @param    {Function} func\r\n *           The function to wrap with debounce behavior.\r\n *\r\n * @param    {number} wait\r\n *           The number of milliseconds to wait after the last invocation.\r\n *\r\n * @param    {boolean} [immediate]\r\n *           Whether or not to invoke the function immediately upon creation.\r\n *\r\n * @param    {Object} [context=window]\r\n *           The \"context\" in which the debounced function should debounce. For\r\n *           example, if this function should be tied to a Video.js player,\r\n *           the player can be passed here. Alternatively, defaults to the\r\n *           global `window` object.\r\n *\r\n * @return   {Function}\r\n *           A debounced function.\r\n */\r\n\r\nvar debounce = function debounce(func, wait, immediate, context) {\r\n  if (context === void 0) {\r\n    context = window$1;\r\n  }\r\n\r\n  var timeout;\r\n\r\n  var cancel = function cancel() {\r\n    context.clearTimeout(timeout);\r\n    timeout = null;\r\n  };\r\n  /* eslint-disable consistent-this */\r\n\r\n\r\n  var debounced = function debounced() {\r\n    var self = this;\r\n    var args = arguments;\r\n\r\n    var _later = function later() {\r\n      timeout = null;\r\n      _later = null;\r\n\r\n      if (!immediate) {\r\n        func.apply(self, args);\r\n      }\r\n    };\r\n\r\n    if (!timeout && immediate) {\r\n      func.apply(self, args);\r\n    }\r\n\r\n    context.clearTimeout(timeout);\r\n    timeout = context.setTimeout(_later, wait);\r\n  };\r\n  /* eslint-enable consistent-this */\r\n\r\n\r\n  debounced.cancel = cancel;\r\n  return debounced;\r\n};\r\n\r\n/**\r\n * @file src/js/event-target.js\r\n */\r\n/**\r\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\r\n * adds shorthand functions that wrap around lengthy functions. For example:\r\n * the `on` function is a wrapper around `addEventListener`.\r\n *\r\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\r\n * @class EventTarget\r\n */\r\n\r\nvar EventTarget$2 = function EventTarget() {};\r\n/**\r\n * A Custom DOM event.\r\n *\r\n * @typedef {Object} EventTarget~Event\r\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\r\n */\r\n\r\n/**\r\n * All event listeners should follow the following format.\r\n *\r\n * @callback EventTarget~EventListener\r\n * @this {EventTarget}\r\n *\r\n * @param {EventTarget~Event} event\r\n *        the event that triggered this function\r\n *\r\n * @param {Object} [hash]\r\n *        hash of data sent during the event\r\n */\r\n\r\n/**\r\n * An object containing event names as keys and booleans as values.\r\n *\r\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\r\n *         will have extra functionality. See that function for more information.\r\n *\r\n * @property EventTarget.prototype.allowedEvents_\r\n * @private\r\n */\r\n\r\n\r\nEventTarget$2.prototype.allowedEvents_ = {};\r\n/**\r\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\r\n * function that will get called when an event with a certain name gets triggered.\r\n *\r\n * @param {string|string[]} type\r\n *        An event name or an array of event names.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        The function to call with `EventTarget`s\r\n */\r\n\r\nEventTarget$2.prototype.on = function (type, fn) {\r\n  // Remove the addEventListener alias before calling Events.on\r\n  // so we don't get into an infinite type loop\r\n  var ael = this.addEventListener;\r\n\r\n  this.addEventListener = function () {};\r\n\r\n  on(this, type, fn);\r\n  this.addEventListener = ael;\r\n};\r\n/**\r\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\r\n * the standard DOM API.\r\n *\r\n * @function\r\n * @see {@link EventTarget#on}\r\n */\r\n\r\n\r\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\r\n/**\r\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\r\n * This makes it so that the `event listener` will no longer get called when the\r\n * named event happens.\r\n *\r\n * @param {string|string[]} type\r\n *        An event name or an array of event names.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        The function to remove.\r\n */\r\n\r\nEventTarget$2.prototype.off = function (type, fn) {\r\n  off(this, type, fn);\r\n};\r\n/**\r\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\r\n * the standard DOM API.\r\n *\r\n * @function\r\n * @see {@link EventTarget#off}\r\n */\r\n\r\n\r\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\r\n/**\r\n * This function will add an `event listener` that gets triggered only once. After the\r\n * first trigger it will get removed. This is like adding an `event listener`\r\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\r\n *\r\n * @param {string|string[]} type\r\n *        An event name or an array of event names.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        The function to be called once for each event name.\r\n */\r\n\r\nEventTarget$2.prototype.one = function (type, fn) {\r\n  // Remove the addEventListener aliasing Events.on\r\n  // so we don't get into an infinite type loop\r\n  var ael = this.addEventListener;\r\n\r\n  this.addEventListener = function () {};\r\n\r\n  one(this, type, fn);\r\n  this.addEventListener = ael;\r\n};\r\n\r\nEventTarget$2.prototype.any = function (type, fn) {\r\n  // Remove the addEventListener aliasing Events.on\r\n  // so we don't get into an infinite type loop\r\n  var ael = this.addEventListener;\r\n\r\n  this.addEventListener = function () {};\r\n\r\n  any(this, type, fn);\r\n  this.addEventListener = ael;\r\n};\r\n/**\r\n * This function causes an event to happen. This will then cause any `event listeners`\r\n * that are waiting for that event, to get called. If there are no `event listeners`\r\n * for an event then nothing will happen.\r\n *\r\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\r\n * Trigger will also call the `on` + `uppercaseEventName` function.\r\n *\r\n * Example:\r\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\r\n * `onClick` if it exists.\r\n *\r\n * @param {string|EventTarget~Event|Object} event\r\n *        The name of the event, an `Event`, or an object with a key of type set to\r\n *        an event name.\r\n */\r\n\r\n\r\nEventTarget$2.prototype.trigger = function (event) {\r\n  var type = event.type || event; // deprecation\r\n  // In a future version we should default target to `this`\r\n  // similar to how we default the target to `elem` in\r\n  // `Events.trigger`. Right now the default `target` will be\r\n  // `document` due to the `Event.fixEvent` call.\r\n\r\n  if (typeof event === 'string') {\r\n    event = {\r\n      type: type\r\n    };\r\n  }\r\n\r\n  event = fixEvent(event);\r\n\r\n  if (this.allowedEvents_[type] && this['on' + type]) {\r\n    this['on' + type](event);\r\n  }\r\n\r\n  trigger(this, event);\r\n};\r\n/**\r\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\r\n * the standard DOM API.\r\n *\r\n * @function\r\n * @see {@link EventTarget#trigger}\r\n */\r\n\r\n\r\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\r\nvar EVENT_MAP;\r\n\r\nEventTarget$2.prototype.queueTrigger = function (event) {\r\n  var _this = this;\r\n\r\n  // only set up EVENT_MAP if it'll be used\r\n  if (!EVENT_MAP) {\r\n    EVENT_MAP = new Map();\r\n  }\r\n\r\n  var type = event.type || event;\r\n  var map = EVENT_MAP.get(this);\r\n\r\n  if (!map) {\r\n    map = new Map();\r\n    EVENT_MAP.set(this, map);\r\n  }\r\n\r\n  var oldTimeout = map.get(type);\r\n  map[\"delete\"](type);\r\n  window$1.clearTimeout(oldTimeout);\r\n  var timeout = window$1.setTimeout(function () {\r\n    map[\"delete\"](type); // if we cleared out all timeouts for the current target, delete its map\r\n\r\n    if (map.size === 0) {\r\n      map = null;\r\n      EVENT_MAP[\"delete\"](_this);\r\n    }\r\n\r\n    _this.trigger(event);\r\n  }, 0);\r\n  map.set(type, timeout);\r\n};\r\n\r\n/**\r\n * @file mixins/evented.js\r\n * @module evented\r\n */\r\n\r\nvar objName = function objName(obj) {\r\n  if (typeof obj.name === 'function') {\r\n    return obj.name();\r\n  }\r\n\r\n  if (typeof obj.name === 'string') {\r\n    return obj.name;\r\n  }\r\n\r\n  if (obj.name_) {\r\n    return obj.name_;\r\n  }\r\n\r\n  if (obj.constructor && obj.constructor.name) {\r\n    return obj.constructor.name;\r\n  }\r\n\r\n  return typeof obj;\r\n};\r\n/**\r\n * Returns whether or not an object has had the evented mixin applied.\r\n *\r\n * @param  {Object} object\r\n *         An object to test.\r\n *\r\n * @return {boolean}\r\n *         Whether or not the object appears to be evented.\r\n */\r\n\r\n\r\nvar isEvented = function isEvented(object) {\r\n  return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\r\n    return typeof object[k] === 'function';\r\n  });\r\n};\r\n/**\r\n * Adds a callback to run after the evented mixin applied.\r\n *\r\n * @param  {Object} object\r\n *         An object to Add\r\n * @param  {Function} callback\r\n *         The callback to run.\r\n */\r\n\r\n\r\nvar addEventedCallback = function addEventedCallback(target, callback) {\r\n  if (isEvented(target)) {\r\n    callback();\r\n  } else {\r\n    if (!target.eventedCallbacks) {\r\n      target.eventedCallbacks = [];\r\n    }\r\n\r\n    target.eventedCallbacks.push(callback);\r\n  }\r\n};\r\n/**\r\n * Whether a value is a valid event type - non-empty string or array.\r\n *\r\n * @private\r\n * @param  {string|Array} type\r\n *         The type value to test.\r\n *\r\n * @return {boolean}\r\n *         Whether or not the type is a valid event type.\r\n */\r\n\r\n\r\nvar isValidEventType = function isValidEventType(type) {\r\n  return (// The regex here verifies that the `type` contains at least one non-\r\n    // whitespace character.\r\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\r\n  );\r\n};\r\n/**\r\n * Validates a value to determine if it is a valid event target. Throws if not.\r\n *\r\n * @private\r\n * @throws {Error}\r\n *         If the target does not appear to be a valid event target.\r\n *\r\n * @param  {Object} target\r\n *         The object to test.\r\n *\r\n * @param  {Object} obj\r\n *         The evented object we are validating for\r\n *\r\n * @param  {string} fnName\r\n *         The name of the evented mixin function that called this.\r\n */\r\n\r\n\r\nvar validateTarget = function validateTarget(target, obj, fnName) {\r\n  if (!target || !target.nodeName && !isEvented(target)) {\r\n    throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\r\n  }\r\n};\r\n/**\r\n * Validates a value to determine if it is a valid event target. Throws if not.\r\n *\r\n * @private\r\n * @throws {Error}\r\n *         If the type does not appear to be a valid event type.\r\n *\r\n * @param  {string|Array} type\r\n *         The type to test.\r\n *\r\n * @param  {Object} obj\r\n*         The evented object we are validating for\r\n *\r\n * @param  {string} fnName\r\n *         The name of the evented mixin function that called this.\r\n */\r\n\r\n\r\nvar validateEventType = function validateEventType(type, obj, fnName) {\r\n  if (!isValidEventType(type)) {\r\n    throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\r\n  }\r\n};\r\n/**\r\n * Validates a value to determine if it is a valid listener. Throws if not.\r\n *\r\n * @private\r\n * @throws {Error}\r\n *         If the listener is not a function.\r\n *\r\n * @param  {Function} listener\r\n *         The listener to test.\r\n *\r\n * @param  {Object} obj\r\n *         The evented object we are validating for\r\n *\r\n * @param  {string} fnName\r\n *         The name of the evented mixin function that called this.\r\n */\r\n\r\n\r\nvar validateListener = function validateListener(listener, obj, fnName) {\r\n  if (typeof listener !== 'function') {\r\n    throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\r\n  }\r\n};\r\n/**\r\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\r\n * normalizes them into an object.\r\n *\r\n * @private\r\n * @param  {Object} self\r\n *         The evented object on which `on()` or `one()` was called. This\r\n *         object will be bound as the `this` value for the listener.\r\n *\r\n * @param  {Array} args\r\n *         An array of arguments passed to `on()` or `one()`.\r\n *\r\n * @param  {string} fnName\r\n *         The name of the evented mixin function that called this.\r\n *\r\n * @return {Object}\r\n *         An object containing useful values for `on()` or `one()` calls.\r\n */\r\n\r\n\r\nvar normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\r\n  // If the number of arguments is less than 3, the target is always the\r\n  // evented object itself.\r\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\r\n  var target;\r\n  var type;\r\n  var listener;\r\n\r\n  if (isTargetingSelf) {\r\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\r\n    // the evented object itself.\r\n\r\n    if (args.length >= 3) {\r\n      args.shift();\r\n    }\r\n\r\n    type = args[0];\r\n    listener = args[1];\r\n  } else {\r\n    target = args[0];\r\n    type = args[1];\r\n    listener = args[2];\r\n  }\r\n\r\n  validateTarget(target, self, fnName);\r\n  validateEventType(type, self, fnName);\r\n  validateListener(listener, self, fnName);\r\n  listener = bind(self, listener);\r\n  return {\r\n    isTargetingSelf: isTargetingSelf,\r\n    target: target,\r\n    type: type,\r\n    listener: listener\r\n  };\r\n};\r\n/**\r\n * Adds the listener to the event type(s) on the target, normalizing for\r\n * the type of target.\r\n *\r\n * @private\r\n * @param  {Element|Object} target\r\n *         A DOM node or evented object.\r\n *\r\n * @param  {string} method\r\n *         The event binding method to use (\"on\" or \"one\").\r\n *\r\n * @param  {string|Array} type\r\n *         One or more event type(s).\r\n *\r\n * @param  {Function} listener\r\n *         A listener function.\r\n */\r\n\r\n\r\nvar listen = function listen(target, method, type, listener) {\r\n  validateTarget(target, target, method);\r\n\r\n  if (target.nodeName) {\r\n    Events[method](target, type, listener);\r\n  } else {\r\n    target[method](type, listener);\r\n  }\r\n};\r\n/**\r\n * Contains methods that provide event capabilities to an object which is passed\r\n * to {@link module:evented|evented}.\r\n *\r\n * @mixin EventedMixin\r\n */\r\n\r\n\r\nvar EventedMixin = {\r\n  /**\r\n   * Add a listener to an event (or events) on this object or another evented\r\n   * object.\r\n   *\r\n   * @param  {string|Array|Element|Object} targetOrType\r\n   *         If this is a string or array, it represents the event type(s)\r\n   *         that will trigger the listener.\r\n   *\r\n   *         Another evented object can be passed here instead, which will\r\n   *         cause the listener to listen for events on _that_ object.\r\n   *\r\n   *         In either case, the listener's `this` value will be bound to\r\n   *         this object.\r\n   *\r\n   * @param  {string|Array|Function} typeOrListener\r\n   *         If the first argument was a string or array, this should be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function.\r\n   */\r\n  on: function on() {\r\n    var _this = this;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\r\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\r\n        target = _normalizeListenArgs.target,\r\n        type = _normalizeListenArgs.type,\r\n        listener = _normalizeListenArgs.listener;\r\n\r\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\r\n\r\n    if (!isTargetingSelf) {\r\n      // If this object is disposed, remove the listener.\r\n      var removeListenerOnDispose = function removeListenerOnDispose() {\r\n        return _this.off(target, type, listener);\r\n      }; // Use the same function ID as the listener so we can remove it later it\r\n      // using the ID of the original listener.\r\n\r\n\r\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\r\n      // that if the target is disposed BEFORE this object, we remove the\r\n      // removal listener that was just added. Otherwise, we create a memory leak.\r\n\r\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\r\n        return _this.off('dispose', removeListenerOnDispose);\r\n      }; // Use the same function ID as the listener so we can remove it later\r\n      // it using the ID of the original listener.\r\n\r\n\r\n      removeRemoverOnTargetDispose.guid = listener.guid;\r\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\r\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Add a listener to an event (or events) on this object or another evented\r\n   * object. The listener will be called once per event and then removed.\r\n   *\r\n   * @param  {string|Array|Element|Object} targetOrType\r\n   *         If this is a string or array, it represents the event type(s)\r\n   *         that will trigger the listener.\r\n   *\r\n   *         Another evented object can be passed here instead, which will\r\n   *         cause the listener to listen for events on _that_ object.\r\n   *\r\n   *         In either case, the listener's `this` value will be bound to\r\n   *         this object.\r\n   *\r\n   * @param  {string|Array|Function} typeOrListener\r\n   *         If the first argument was a string or array, this should be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function.\r\n   */\r\n  one: function one() {\r\n    var _this2 = this;\r\n\r\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      args[_key2] = arguments[_key2];\r\n    }\r\n\r\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\r\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\r\n        target = _normalizeListenArgs2.target,\r\n        type = _normalizeListenArgs2.type,\r\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\r\n\r\n\r\n    if (isTargetingSelf) {\r\n      listen(target, 'one', type, listener); // Targeting another evented object.\r\n    } else {\r\n      // TODO: This wrapper is incorrect! It should only\r\n      //       remove the wrapper for the event type that called it.\r\n      //       Instead all listners are removed on the first trigger!\r\n      //       see https://github.com/videojs/video.js/issues/5962\r\n      var wrapper = function wrapper() {\r\n        _this2.off(target, type, wrapper);\r\n\r\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n          largs[_key3] = arguments[_key3];\r\n        }\r\n\r\n        listener.apply(null, largs);\r\n      }; // Use the same function ID as the listener so we can remove it later\r\n      // it using the ID of the original listener.\r\n\r\n\r\n      wrapper.guid = listener.guid;\r\n      listen(target, 'one', type, wrapper);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Add a listener to an event (or events) on this object or another evented\r\n   * object. The listener will only be called once for the first event that is triggered\r\n   * then removed.\r\n   *\r\n   * @param  {string|Array|Element|Object} targetOrType\r\n   *         If this is a string or array, it represents the event type(s)\r\n   *         that will trigger the listener.\r\n   *\r\n   *         Another evented object can be passed here instead, which will\r\n   *         cause the listener to listen for events on _that_ object.\r\n   *\r\n   *         In either case, the listener's `this` value will be bound to\r\n   *         this object.\r\n   *\r\n   * @param  {string|Array|Function} typeOrListener\r\n   *         If the first argument was a string or array, this should be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function.\r\n   */\r\n  any: function any() {\r\n    var _this3 = this;\r\n\r\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n      args[_key4] = arguments[_key4];\r\n    }\r\n\r\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\r\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\r\n        target = _normalizeListenArgs3.target,\r\n        type = _normalizeListenArgs3.type,\r\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\r\n\r\n\r\n    if (isTargetingSelf) {\r\n      listen(target, 'any', type, listener); // Targeting another evented object.\r\n    } else {\r\n      var wrapper = function wrapper() {\r\n        _this3.off(target, type, wrapper);\r\n\r\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\r\n          largs[_key5] = arguments[_key5];\r\n        }\r\n\r\n        listener.apply(null, largs);\r\n      }; // Use the same function ID as the listener so we can remove it later\r\n      // it using the ID of the original listener.\r\n\r\n\r\n      wrapper.guid = listener.guid;\r\n      listen(target, 'any', type, wrapper);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Removes listener(s) from event(s) on an evented object.\r\n   *\r\n   * @param  {string|Array|Element|Object} [targetOrType]\r\n   *         If this is a string or array, it represents the event type(s).\r\n   *\r\n   *         Another evented object can be passed here instead, in which case\r\n   *         ALL 3 arguments are _required_.\r\n   *\r\n   * @param  {string|Array|Function} [typeOrListener]\r\n   *         If the first argument was a string or array, this may be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function; otherwise, _all_ listeners bound to the\r\n   *         event type(s) will be removed.\r\n   */\r\n  off: function off$1(targetOrType, typeOrListener, listener) {\r\n    // Targeting this evented object.\r\n    if (!targetOrType || isValidEventType(targetOrType)) {\r\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\r\n    } else {\r\n      var target = targetOrType;\r\n      var type = typeOrListener; // Fail fast and in a meaningful way!\r\n\r\n      validateTarget(target, this, 'off');\r\n      validateEventType(type, this, 'off');\r\n      validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\r\n\r\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\r\n      // the same guid as the event listener in on().\r\n\r\n      this.off('dispose', listener);\r\n\r\n      if (target.nodeName) {\r\n        off(target, type, listener);\r\n        off(target, 'dispose', listener);\r\n      } else if (isEvented(target)) {\r\n        target.off(type, listener);\r\n        target.off('dispose', listener);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Fire an event on this evented object, causing its listeners to be called.\r\n   *\r\n   * @param   {string|Object} event\r\n   *          An event type or an object with a type property.\r\n   *\r\n   * @param   {Object} [hash]\r\n   *          An additional object to pass along to listeners.\r\n   *\r\n   * @return {boolean}\r\n   *          Whether or not the default behavior was prevented.\r\n   */\r\n  trigger: function trigger$1(event, hash) {\r\n    validateTarget(this.eventBusEl_, this, 'trigger');\r\n    var type = event && typeof event !== 'string' ? event.type : event;\r\n\r\n    if (!isValidEventType(type)) {\r\n      var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\r\n\r\n      if (event) {\r\n        (this.log || log$1).error(error);\r\n      } else {\r\n        throw new Error(error);\r\n      }\r\n    }\r\n\r\n    return trigger(this.eventBusEl_, event, hash);\r\n  }\r\n};\r\n/**\r\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\r\n *\r\n * @param  {Object} target\r\n *         The object to which to add event methods.\r\n *\r\n * @param  {Object} [options={}]\r\n *         Options for customizing the mixin behavior.\r\n *\r\n * @param  {string} [options.eventBusKey]\r\n *         By default, adds a `eventBusEl_` DOM element to the target object,\r\n *         which is used as an event bus. If the target object already has a\r\n *         DOM element that should be used, pass its key here.\r\n *\r\n * @return {Object}\r\n *         The target object.\r\n */\r\n\r\nfunction evented(target, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options = options,\r\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\r\n\r\n  if (eventBusKey) {\r\n    if (!target[eventBusKey].nodeName) {\r\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\r\n    }\r\n\r\n    target.eventBusEl_ = target[eventBusKey];\r\n  } else {\r\n    target.eventBusEl_ = createEl('span', {\r\n      className: 'vjs-event-bus'\r\n    });\r\n  }\r\n\r\n  assign(target, EventedMixin);\r\n\r\n  if (target.eventedCallbacks) {\r\n    target.eventedCallbacks.forEach(function (callback) {\r\n      callback();\r\n    });\r\n  } // When any evented object is disposed, it removes all its listeners.\r\n\r\n\r\n  target.on('dispose', function () {\r\n    target.off();\r\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\r\n      if (val && DomData.has(val)) {\r\n        DomData[\"delete\"](val);\r\n      }\r\n    });\r\n    window$1.setTimeout(function () {\r\n      target.eventBusEl_ = null;\r\n    }, 0);\r\n  });\r\n  return target;\r\n}\r\n\r\n/**\r\n * @file mixins/stateful.js\r\n * @module stateful\r\n */\r\n/**\r\n * Contains methods that provide statefulness to an object which is passed\r\n * to {@link module:stateful}.\r\n *\r\n * @mixin StatefulMixin\r\n */\r\n\r\nvar StatefulMixin = {\r\n  /**\r\n   * A hash containing arbitrary keys and values representing the state of\r\n   * the object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  state: {},\r\n\r\n  /**\r\n   * Set the state of an object by mutating its\r\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\r\n   *\r\n   * @fires   module:stateful~StatefulMixin#statechanged\r\n   * @param   {Object|Function} stateUpdates\r\n   *          A new set of properties to shallow-merge into the plugin state.\r\n   *          Can be a plain object or a function returning a plain object.\r\n   *\r\n   * @return {Object|undefined}\r\n   *          An object containing changes that occurred. If no changes\r\n   *          occurred, returns `undefined`.\r\n   */\r\n  setState: function setState(stateUpdates) {\r\n    var _this = this;\r\n\r\n    // Support providing the `stateUpdates` state as a function.\r\n    if (typeof stateUpdates === 'function') {\r\n      stateUpdates = stateUpdates();\r\n    }\r\n\r\n    var changes;\r\n    each(stateUpdates, function (value, key) {\r\n      // Record the change if the value is different from what's in the\r\n      // current state.\r\n      if (_this.state[key] !== value) {\r\n        changes = changes || {};\r\n        changes[key] = {\r\n          from: _this.state[key],\r\n          to: value\r\n        };\r\n      }\r\n\r\n      _this.state[key] = value;\r\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\r\n    // function. This allows us to not require that the target object be an\r\n    // evented object.\r\n\r\n    if (changes && isEvented(this)) {\r\n      /**\r\n       * An event triggered on an object that is both\r\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\r\n       * indicating that its state has changed.\r\n       *\r\n       * @event    module:stateful~StatefulMixin#statechanged\r\n       * @type     {Object}\r\n       * @property {Object} changes\r\n       *           A hash containing the properties that were changed and\r\n       *           the values they were changed `from` and `to`.\r\n       */\r\n      this.trigger({\r\n        changes: changes,\r\n        type: 'statechanged'\r\n      });\r\n    }\r\n\r\n    return changes;\r\n  }\r\n};\r\n/**\r\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\r\n * object.\r\n *\r\n * If the target object is {@link module:evented|evented} and has a\r\n * `handleStateChanged` method, that method will be automatically bound to the\r\n * `statechanged` event on itself.\r\n *\r\n * @param   {Object} target\r\n *          The object to be made stateful.\r\n *\r\n * @param   {Object} [defaultState]\r\n *          A default set of properties to populate the newly-stateful object's\r\n *          `state` property.\r\n *\r\n * @return {Object}\r\n *          Returns the `target`.\r\n */\r\n\r\nfunction stateful(target, defaultState) {\r\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\r\n  // added in that step.\r\n\r\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\r\n\r\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\r\n    target.on('statechanged', target.handleStateChanged);\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * @file string-cases.js\r\n * @module to-lower-case\r\n */\r\n\r\n/**\r\n * Lowercase the first letter of a string.\r\n *\r\n * @param {string} string\r\n *        String to be lowercased\r\n *\r\n * @return {string}\r\n *         The string with a lowercased first letter\r\n */\r\nvar toLowerCase = function toLowerCase(string) {\r\n  if (typeof string !== 'string') {\r\n    return string;\r\n  }\r\n\r\n  return string.replace(/./, function (w) {\r\n    return w.toLowerCase();\r\n  });\r\n};\r\n/**\r\n * Uppercase the first letter of a string.\r\n *\r\n * @param {string} string\r\n *        String to be uppercased\r\n *\r\n * @return {string}\r\n *         The string with an uppercased first letter\r\n */\r\n\r\nvar toTitleCase$1 = function toTitleCase(string) {\r\n  if (typeof string !== 'string') {\r\n    return string;\r\n  }\r\n\r\n  return string.replace(/./, function (w) {\r\n    return w.toUpperCase();\r\n  });\r\n};\r\n/**\r\n * Compares the TitleCase versions of the two strings for equality.\r\n *\r\n * @param {string} str1\r\n *        The first string to compare\r\n *\r\n * @param {string} str2\r\n *        The second string to compare\r\n *\r\n * @return {boolean}\r\n *         Whether the TitleCase versions of the strings are equal\r\n */\r\n\r\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\r\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\r\n};\r\n\r\n/**\r\n * @file merge-options.js\r\n * @module merge-options\r\n */\r\n/**\r\n * Merge two objects recursively.\r\n *\r\n * Performs a deep merge like\r\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\r\n * plain objects (not arrays, elements, or anything else).\r\n *\r\n * Non-plain object values will be copied directly from the right-most\r\n * argument.\r\n *\r\n * @static\r\n * @param   {Object[]} sources\r\n *          One or more objects to merge into a new object.\r\n *\r\n * @return {Object}\r\n *          A new object that is the merged result of all sources.\r\n */\r\n\r\nfunction mergeOptions$3() {\r\n  var result = {};\r\n\r\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    sources[_key] = arguments[_key];\r\n  }\r\n\r\n  sources.forEach(function (source) {\r\n    if (!source) {\r\n      return;\r\n    }\r\n\r\n    each(source, function (value, key) {\r\n      if (!isPlain(value)) {\r\n        result[key] = value;\r\n        return;\r\n      }\r\n\r\n      if (!isPlain(result[key])) {\r\n        result[key] = {};\r\n      }\r\n\r\n      result[key] = mergeOptions$3(result[key], value);\r\n    });\r\n  });\r\n  return result;\r\n}\r\n\r\nvar MapSham = /*#__PURE__*/function () {\r\n  function MapSham() {\r\n    this.map_ = {};\r\n  }\r\n\r\n  var _proto = MapSham.prototype;\r\n\r\n  _proto.has = function has(key) {\r\n    return key in this.map_;\r\n  };\r\n\r\n  _proto[\"delete\"] = function _delete(key) {\r\n    var has = this.has(key);\r\n    delete this.map_[key];\r\n    return has;\r\n  };\r\n\r\n  _proto.set = function set(key, value) {\r\n    this.map_[key] = value;\r\n    return this;\r\n  };\r\n\r\n  _proto.forEach = function forEach(callback, thisArg) {\r\n    for (var key in this.map_) {\r\n      callback.call(thisArg, this.map_[key], key, this);\r\n    }\r\n  };\r\n\r\n  return MapSham;\r\n}();\r\n\r\nvar Map$1 = window$1.Map ? window$1.Map : MapSham;\r\n\r\nvar SetSham = /*#__PURE__*/function () {\r\n  function SetSham() {\r\n    this.set_ = {};\r\n  }\r\n\r\n  var _proto = SetSham.prototype;\r\n\r\n  _proto.has = function has(key) {\r\n    return key in this.set_;\r\n  };\r\n\r\n  _proto[\"delete\"] = function _delete(key) {\r\n    var has = this.has(key);\r\n    delete this.set_[key];\r\n    return has;\r\n  };\r\n\r\n  _proto.add = function add(key) {\r\n    this.set_[key] = 1;\r\n    return this;\r\n  };\r\n\r\n  _proto.forEach = function forEach(callback, thisArg) {\r\n    for (var key in this.set_) {\r\n      callback.call(thisArg, key, key, this);\r\n    }\r\n  };\r\n\r\n  return SetSham;\r\n}();\r\n\r\nvar Set$1 = window$1.Set ? window$1.Set : SetSham;\r\n\r\n/**\r\n * Player Component - Base class for all UI objects\r\n *\r\n * @file component.js\r\n */\r\n/**\r\n * Base class for all UI Components.\r\n * Components are UI objects which represent both a javascript object and an element\r\n * in the DOM. They can be children of other components, and can have\r\n * children themselves.\r\n *\r\n * Components can also use methods from {@link EventTarget}\r\n */\r\n\r\nvar Component$1 = /*#__PURE__*/function () {\r\n  /**\r\n   * A callback that is called when a component is ready. Does not have any\r\n   * paramters and any callback value will be ignored.\r\n   *\r\n   * @callback Component~ReadyCallback\r\n   * @this Component\r\n   */\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of component options.\r\n   *\r\n   * @param {Object[]} [options.children]\r\n   *        An array of children objects to intialize this component with. Children objects have\r\n   *        a name property that will be used if more than one component of the same type needs to be\r\n   *        added.\r\n   *\r\n   * @param  {string} [options.className]\r\n   *         A class or space separated list of classes to add the component\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        Function that gets called when the `Component` is ready.\r\n   */\r\n  function Component(player, options, ready) {\r\n    var _this = this;\r\n\r\n    // The component might be the player itself and we can't pass `this` to super\r\n    if (!player && this.play) {\r\n      this.player_ = player = this; // eslint-disable-line\r\n    } else {\r\n      this.player_ = player;\r\n    }\r\n\r\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\r\n\r\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\r\n\r\n    this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\r\n\r\n    options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\r\n\r\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\r\n\r\n    if (!this.id_) {\r\n      // Don't require the player ID function in the case of mock players\r\n      var id = player && player.id && player.id() || 'no_player';\r\n      this.id_ = id + \"_component_\" + newGUID();\r\n    }\r\n\r\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\r\n\r\n    if (options.el) {\r\n      this.el_ = options.el;\r\n    } else if (options.createEl !== false) {\r\n      this.el_ = this.createEl();\r\n    }\r\n\r\n    if (options.className && this.el_) {\r\n      options.className.split(' ').forEach(function (c) {\r\n        return _this.addClass(c);\r\n      });\r\n    } // if evented is anything except false, we want to mixin in evented\r\n\r\n\r\n    if (options.evented !== false) {\r\n      // Make this an evented object and use `el_`, if available, as its event bus\r\n      evented(this, {\r\n        eventBusKey: this.el_ ? 'el_' : null\r\n      });\r\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\r\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\r\n    }\r\n\r\n    stateful(this, this.constructor.defaultState);\r\n    this.children_ = [];\r\n    this.childIndex_ = {};\r\n    this.childNameIndex_ = {};\r\n    this.setTimeoutIds_ = new Set$1();\r\n    this.setIntervalIds_ = new Set$1();\r\n    this.rafIds_ = new Set$1();\r\n    this.namedRafs_ = new Map$1();\r\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\r\n\r\n    if (options.initChildren !== false) {\r\n      this.initChildren();\r\n    } // Don't want to trigger ready here or it will go before init is actually\r\n    // finished for all children that run this constructor\r\n\r\n\r\n    this.ready(ready);\r\n\r\n    if (options.reportTouchActivity !== false) {\r\n      this.enableTouchActivity();\r\n    }\r\n  }\r\n  /**\r\n   * Dispose of the `Component` and all child components.\r\n   *\r\n   * @fires Component#dispose\r\n   *\r\n   * @param {Object} options\r\n   * @param {Element} options.originalEl element with which to replace player element\r\n   */\r\n\r\n\r\n  var _proto = Component.prototype;\r\n\r\n  _proto.dispose = function dispose(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    // Bail out if the component has already been disposed.\r\n    if (this.isDisposed_) {\r\n      return;\r\n    }\r\n\r\n    if (this.readyQueue_) {\r\n      this.readyQueue_.length = 0;\r\n    }\r\n    /**\r\n     * Triggered when a `Component` is disposed.\r\n     *\r\n     * @event Component#dispose\r\n     * @type {EventTarget~Event}\r\n     *\r\n     * @property {boolean} [bubbles=false]\r\n     *           set to false so that the dispose event does not\r\n     *           bubble up\r\n     */\r\n\r\n\r\n    this.trigger({\r\n      type: 'dispose',\r\n      bubbles: false\r\n    });\r\n    this.isDisposed_ = true; // Dispose all children.\r\n\r\n    if (this.children_) {\r\n      for (var i = this.children_.length - 1; i >= 0; i--) {\r\n        if (this.children_[i].dispose) {\r\n          this.children_[i].dispose();\r\n        }\r\n      }\r\n    } // Delete child references\r\n\r\n\r\n    this.children_ = null;\r\n    this.childIndex_ = null;\r\n    this.childNameIndex_ = null;\r\n    this.parentComponent_ = null;\r\n\r\n    if (this.el_) {\r\n      // Remove element from DOM\r\n      if (this.el_.parentNode) {\r\n        if (options.restoreEl) {\r\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\r\n        } else {\r\n          this.el_.parentNode.removeChild(this.el_);\r\n        }\r\n      }\r\n\r\n      this.el_ = null;\r\n    } // remove reference to the player after disposing of the element\r\n\r\n\r\n    this.player_ = null;\r\n  }\r\n  /**\r\n   * Determine whether or not this component has been disposed.\r\n   *\r\n   * @return {boolean}\r\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\r\n   */\r\n  ;\r\n\r\n  _proto.isDisposed = function isDisposed() {\r\n    return Boolean(this.isDisposed_);\r\n  }\r\n  /**\r\n   * Return the {@link Player} that the `Component` has attached to.\r\n   *\r\n   * @return {Player}\r\n   *         The player that this `Component` has attached to.\r\n   */\r\n  ;\r\n\r\n  _proto.player = function player() {\r\n    return this.player_;\r\n  }\r\n  /**\r\n   * Deep merge of options objects with new options.\r\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\r\n   *         The two properties get merged using {@link module:mergeOptions}\r\n   *\r\n   * @param {Object} obj\r\n   *        The object that contains new options.\r\n   *\r\n   * @return {Object}\r\n   *         A new object of `this.options_` and `obj` merged together.\r\n   */\r\n  ;\r\n\r\n  _proto.options = function options(obj) {\r\n    if (!obj) {\r\n      return this.options_;\r\n    }\r\n\r\n    this.options_ = mergeOptions$3(this.options_, obj);\r\n    return this.options_;\r\n  }\r\n  /**\r\n   * Get the `Component`s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The DOM element for this `Component`.\r\n   */\r\n  ;\r\n\r\n  _proto.el = function el() {\r\n    return this.el_;\r\n  }\r\n  /**\r\n   * Create the `Component`s DOM element.\r\n   *\r\n   * @param {string} [tagName]\r\n   *        Element's DOM node type. e.g. 'div'\r\n   *\r\n   * @param {Object} [properties]\r\n   *        An object of properties that should be set.\r\n   *\r\n   * @param {Object} [attributes]\r\n   *        An object of attributes that should be set.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\r\n    return createEl(tagName, properties, attributes);\r\n  }\r\n  /**\r\n   * Localize a string given the string in english.\r\n   *\r\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\r\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\r\n   *\r\n   * If a `defaultValue` is provided, it'll use that over `string`,\r\n   * if a value isn't found in provided language files.\r\n   * This is useful if you want to have a descriptive key for token replacement\r\n   * but have a succinct localized string and not require `en.json` to be included.\r\n   *\r\n   * Currently, it is used for the progress bar timing.\r\n   * ```js\r\n   * {\r\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\r\n   * }\r\n   * ```\r\n   * It is then used like so:\r\n   * ```js\r\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\r\n   *               [this.player_.currentTime(), this.player_.duration()],\r\n   *               '{1} of {2}');\r\n   * ```\r\n   *\r\n   * Which outputs something like: `01:23 of 24:56`.\r\n   *\r\n   *\r\n   * @param {string} string\r\n   *        The string to localize and the key to lookup in the language files.\r\n   * @param {string[]} [tokens]\r\n   *        If the current item has token replacements, provide the tokens here.\r\n   * @param {string} [defaultValue]\r\n   *        Defaults to `string`. Can be a default value to use for token replacement\r\n   *        if the lookup key is needed to be separate.\r\n   *\r\n   * @return {string}\r\n   *         The localized string or if no localization exists the english string.\r\n   */\r\n  ;\r\n\r\n  _proto.localize = function localize(string, tokens, defaultValue) {\r\n    if (defaultValue === void 0) {\r\n      defaultValue = string;\r\n    }\r\n\r\n    var code = this.player_.language && this.player_.language();\r\n    var languages = this.player_.languages && this.player_.languages();\r\n    var language = languages && languages[code];\r\n    var primaryCode = code && code.split('-')[0];\r\n    var primaryLang = languages && languages[primaryCode];\r\n    var localizedString = defaultValue;\r\n\r\n    if (language && language[string]) {\r\n      localizedString = language[string];\r\n    } else if (primaryLang && primaryLang[string]) {\r\n      localizedString = primaryLang[string];\r\n    }\r\n\r\n    if (tokens) {\r\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\r\n        var value = tokens[index - 1];\r\n        var ret = value;\r\n\r\n        if (typeof value === 'undefined') {\r\n          ret = match;\r\n        }\r\n\r\n        return ret;\r\n      });\r\n    }\r\n\r\n    return localizedString;\r\n  }\r\n  /**\r\n   * Handles language change for the player in components. Should be overriden by sub-components.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.handleLanguagechange = function handleLanguagechange() {}\r\n  /**\r\n   * Return the `Component`s DOM element. This is where children get inserted.\r\n   * This will usually be the the same as the element returned in {@link Component#el}.\r\n   *\r\n   * @return {Element}\r\n   *         The content element for this `Component`.\r\n   */\r\n  ;\r\n\r\n  _proto.contentEl = function contentEl() {\r\n    return this.contentEl_ || this.el_;\r\n  }\r\n  /**\r\n   * Get this `Component`s ID\r\n   *\r\n   * @return {string}\r\n   *         The id of this `Component`\r\n   */\r\n  ;\r\n\r\n  _proto.id = function id() {\r\n    return this.id_;\r\n  }\r\n  /**\r\n   * Get the `Component`s name. The name gets used to reference the `Component`\r\n   * and is set during registration.\r\n   *\r\n   * @return {string}\r\n   *         The name of this `Component`.\r\n   */\r\n  ;\r\n\r\n  _proto.name = function name() {\r\n    return this.name_;\r\n  }\r\n  /**\r\n   * Get an array of all child components\r\n   *\r\n   * @return {Array}\r\n   *         The children\r\n   */\r\n  ;\r\n\r\n  _proto.children = function children() {\r\n    return this.children_;\r\n  }\r\n  /**\r\n   * Returns the child `Component` with the given `id`.\r\n   *\r\n   * @param {string} id\r\n   *        The id of the child `Component` to get.\r\n   *\r\n   * @return {Component|undefined}\r\n   *         The child `Component` with the given `id` or undefined.\r\n   */\r\n  ;\r\n\r\n  _proto.getChildById = function getChildById(id) {\r\n    return this.childIndex_[id];\r\n  }\r\n  /**\r\n   * Returns the child `Component` with the given `name`.\r\n   *\r\n   * @param {string} name\r\n   *        The name of the child `Component` to get.\r\n   *\r\n   * @return {Component|undefined}\r\n   *         The child `Component` with the given `name` or undefined.\r\n   */\r\n  ;\r\n\r\n  _proto.getChild = function getChild(name) {\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    return this.childNameIndex_[name];\r\n  }\r\n  /**\r\n   * Returns the descendant `Component` following the givent\r\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\r\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\r\n   * component and 'baz' on the 'bar' component and return undefined\r\n   * if any of those don't exist.\r\n   *\r\n   * @param {...string[]|...string} names\r\n   *        The name of the child `Component` to get.\r\n   *\r\n   * @return {Component|undefined}\r\n   *         The descendant `Component` following the given descendant\r\n   *         `names` or undefined.\r\n   */\r\n  ;\r\n\r\n  _proto.getDescendant = function getDescendant() {\r\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      names[_key] = arguments[_key];\r\n    }\r\n\r\n    // flatten array argument into the main array\r\n    names = names.reduce(function (acc, n) {\r\n      return acc.concat(n);\r\n    }, []);\r\n    var currentChild = this;\r\n\r\n    for (var i = 0; i < names.length; i++) {\r\n      currentChild = currentChild.getChild(names[i]);\r\n\r\n      if (!currentChild || !currentChild.getChild) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    return currentChild;\r\n  }\r\n  /**\r\n   * Add a child `Component` inside the current `Component`.\r\n   *\r\n   *\r\n   * @param {string|Component} child\r\n   *        The name or instance of a child to add.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of options that will get passed to children of\r\n   *        the child.\r\n   *\r\n   * @param {number} [index=this.children_.length]\r\n   *        The index to attempt to add a child into.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that gets added as a child. When using a string the\r\n   *         `Component` will get created by this process.\r\n   */\r\n  ;\r\n\r\n  _proto.addChild = function addChild(child, options, index) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (index === void 0) {\r\n      index = this.children_.length;\r\n    }\r\n\r\n    var component;\r\n    var componentName; // If child is a string, create component with options\r\n\r\n    if (typeof child === 'string') {\r\n      componentName = toTitleCase$1(child);\r\n      var componentClassName = options.componentClass || componentName; // Set name through options\r\n\r\n      options.name = componentName; // Create a new object & element for this controls set\r\n      // If there's no .player_, this is a player\r\n\r\n      var ComponentClass = Component.getComponent(componentClassName);\r\n\r\n      if (!ComponentClass) {\r\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\r\n      } // data stored directly on the videojs object may be\r\n      // misidentified as a component to retain\r\n      // backwards-compatibility with 4.x. check to make sure the\r\n      // component class can be instantiated.\r\n\r\n\r\n      if (typeof ComponentClass !== 'function') {\r\n        return null;\r\n      }\r\n\r\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\r\n    } else {\r\n      component = child;\r\n    }\r\n\r\n    if (component.parentComponent_) {\r\n      component.parentComponent_.removeChild(component);\r\n    }\r\n\r\n    this.children_.splice(index, 0, component);\r\n    component.parentComponent_ = this;\r\n\r\n    if (typeof component.id === 'function') {\r\n      this.childIndex_[component.id()] = component;\r\n    } // If a name wasn't used to create the component, check if we can use the\r\n    // name function of the component\r\n\r\n\r\n    componentName = componentName || component.name && toTitleCase$1(component.name());\r\n\r\n    if (componentName) {\r\n      this.childNameIndex_[componentName] = component;\r\n      this.childNameIndex_[toLowerCase(componentName)] = component;\r\n    } // Add the UI object's element to the container div (box)\r\n    // Having an element is not required\r\n\r\n\r\n    if (typeof component.el === 'function' && component.el()) {\r\n      // If inserting before a component, insert before that component's element\r\n      var refNode = null;\r\n\r\n      if (this.children_[index + 1]) {\r\n        // Most children are components, but the video tech is an HTML element\r\n        if (this.children_[index + 1].el_) {\r\n          refNode = this.children_[index + 1].el_;\r\n        } else if (isEl(this.children_[index + 1])) {\r\n          refNode = this.children_[index + 1];\r\n        }\r\n      }\r\n\r\n      this.contentEl().insertBefore(component.el(), refNode);\r\n    } // Return so it can stored on parent object if desired.\r\n\r\n\r\n    return component;\r\n  }\r\n  /**\r\n   * Remove a child `Component` from this `Component`s list of children. Also removes\r\n   * the child `Component`s element from this `Component`s element.\r\n   *\r\n   * @param {Component} component\r\n   *        The child `Component` to remove.\r\n   */\r\n  ;\r\n\r\n  _proto.removeChild = function removeChild(component) {\r\n    if (typeof component === 'string') {\r\n      component = this.getChild(component);\r\n    }\r\n\r\n    if (!component || !this.children_) {\r\n      return;\r\n    }\r\n\r\n    var childFound = false;\r\n\r\n    for (var i = this.children_.length - 1; i >= 0; i--) {\r\n      if (this.children_[i] === component) {\r\n        childFound = true;\r\n        this.children_.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!childFound) {\r\n      return;\r\n    }\r\n\r\n    component.parentComponent_ = null;\r\n    this.childIndex_[component.id()] = null;\r\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\r\n    this.childNameIndex_[toLowerCase(component.name())] = null;\r\n    var compEl = component.el();\r\n\r\n    if (compEl && compEl.parentNode === this.contentEl()) {\r\n      this.contentEl().removeChild(component.el());\r\n    }\r\n  }\r\n  /**\r\n   * Add and initialize default child `Component`s based upon options.\r\n   */\r\n  ;\r\n\r\n  _proto.initChildren = function initChildren() {\r\n    var _this2 = this;\r\n\r\n    var children = this.options_.children;\r\n\r\n    if (children) {\r\n      // `this` is `parent`\r\n      var parentOptions = this.options_;\r\n\r\n      var handleAdd = function handleAdd(child) {\r\n        var name = child.name;\r\n        var opts = child.opts; // Allow options for children to be set at the parent options\r\n        // e.g. videojs(id, { controlBar: false });\r\n        // instead of videojs(id, { children: { controlBar: false });\r\n\r\n        if (parentOptions[name] !== undefined) {\r\n          opts = parentOptions[name];\r\n        } // Allow for disabling default components\r\n        // e.g. options['children']['posterImage'] = false\r\n\r\n\r\n        if (opts === false) {\r\n          return;\r\n        } // Allow options to be passed as a simple boolean if no configuration\r\n        // is necessary.\r\n\r\n\r\n        if (opts === true) {\r\n          opts = {};\r\n        } // We also want to pass the original player options\r\n        // to each component as well so they don't need to\r\n        // reach back into the player for options later.\r\n\r\n\r\n        opts.playerOptions = _this2.options_.playerOptions; // Create and add the child component.\r\n        // Add a direct reference to the child by name on the parent instance.\r\n        // If two of the same component are used, different names should be supplied\r\n        // for each\r\n\r\n        var newChild = _this2.addChild(name, opts);\r\n\r\n        if (newChild) {\r\n          _this2[name] = newChild;\r\n        }\r\n      }; // Allow for an array of children details to passed in the options\r\n\r\n\r\n      var workingChildren;\r\n      var Tech = Component.getComponent('Tech');\r\n\r\n      if (Array.isArray(children)) {\r\n        workingChildren = children;\r\n      } else {\r\n        workingChildren = Object.keys(children);\r\n      }\r\n\r\n      workingChildren // children that are in this.options_ but also in workingChildren  would\r\n      // give us extra children we do not want. So, we want to filter them out.\r\n      .concat(Object.keys(this.options_).filter(function (child) {\r\n        return !workingChildren.some(function (wchild) {\r\n          if (typeof wchild === 'string') {\r\n            return child === wchild;\r\n          }\r\n\r\n          return child === wchild.name;\r\n        });\r\n      })).map(function (child) {\r\n        var name;\r\n        var opts;\r\n\r\n        if (typeof child === 'string') {\r\n          name = child;\r\n          opts = children[name] || _this2.options_[name] || {};\r\n        } else {\r\n          name = child.name;\r\n          opts = child;\r\n        }\r\n\r\n        return {\r\n          name: name,\r\n          opts: opts\r\n        };\r\n      }).filter(function (child) {\r\n        // we have to make sure that child.name isn't in the techOrder since\r\n        // techs are registerd as Components but can't aren't compatible\r\n        // See https://github.com/videojs/video.js/issues/2772\r\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\r\n        return c && !Tech.isTech(c);\r\n      }).forEach(handleAdd);\r\n    }\r\n  }\r\n  /**\r\n   * Builds the default DOM class name. Should be overriden by sub-components.\r\n   *\r\n   * @return {string}\r\n   *         The DOM class name for this object.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    // Child classes can include a function that does:\r\n    // return 'CLASS NAME' + this._super();\r\n    return '';\r\n  }\r\n  /**\r\n   * Bind a listener to the component's ready state.\r\n   * Different from event listeners in that if the ready event has already happened\r\n   * it will trigger the function immediately.\r\n   *\r\n   * @return {Component}\r\n   *         Returns itself; method can be chained.\r\n   */\r\n  ;\r\n\r\n  _proto.ready = function ready(fn, sync) {\r\n    if (sync === void 0) {\r\n      sync = false;\r\n    }\r\n\r\n    if (!fn) {\r\n      return;\r\n    }\r\n\r\n    if (!this.isReady_) {\r\n      this.readyQueue_ = this.readyQueue_ || [];\r\n      this.readyQueue_.push(fn);\r\n      return;\r\n    }\r\n\r\n    if (sync) {\r\n      fn.call(this);\r\n    } else {\r\n      // Call the function asynchronously by default for consistency\r\n      this.setTimeout(fn, 1);\r\n    }\r\n  }\r\n  /**\r\n   * Trigger all the ready listeners for this `Component`.\r\n   *\r\n   * @fires Component#ready\r\n   */\r\n  ;\r\n\r\n  _proto.triggerReady = function triggerReady() {\r\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\r\n\r\n    this.setTimeout(function () {\r\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\r\n\r\n      this.readyQueue_ = [];\r\n\r\n      if (readyQueue && readyQueue.length > 0) {\r\n        readyQueue.forEach(function (fn) {\r\n          fn.call(this);\r\n        }, this);\r\n      } // Allow for using event listeners also\r\n\r\n      /**\r\n       * Triggered when a `Component` is ready.\r\n       *\r\n       * @event Component#ready\r\n       * @type {EventTarget~Event}\r\n       */\r\n\r\n\r\n      this.trigger('ready');\r\n    }, 1);\r\n  }\r\n  /**\r\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\r\n   * `contentEl()` or another custom context.\r\n   *\r\n   * @param {string} selector\r\n   *        A valid CSS selector, which will be passed to `querySelector`.\r\n   *\r\n   * @param {Element|string} [context=this.contentEl()]\r\n   *        A DOM element within which to query. Can also be a selector string in\r\n   *        which case the first matching element will get used as context. If\r\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\r\n   *        nothing it falls back to `document`.\r\n   *\r\n   * @return {Element|null}\r\n   *         the dom element that was found, or null\r\n   *\r\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\r\n   */\r\n  ;\r\n\r\n  _proto.$ = function $$1(selector, context) {\r\n    return $(selector, context || this.contentEl());\r\n  }\r\n  /**\r\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\r\n   * `contentEl()` or another custom context.\r\n   *\r\n   * @param {string} selector\r\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\r\n   *\r\n   * @param {Element|string} [context=this.contentEl()]\r\n   *        A DOM element within which to query. Can also be a selector string in\r\n   *        which case the first matching element will get used as context. If\r\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\r\n   *        nothing it falls back to `document`.\r\n   *\r\n   * @return {NodeList}\r\n   *         a list of dom elements that were found\r\n   *\r\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\r\n   */\r\n  ;\r\n\r\n  _proto.$$ = function $$$1(selector, context) {\r\n    return $$(selector, context || this.contentEl());\r\n  }\r\n  /**\r\n   * Check if a component's element has a CSS class name.\r\n   *\r\n   * @param {string} classToCheck\r\n   *        CSS class name to check.\r\n   *\r\n   * @return {boolean}\r\n   *         - True if the `Component` has the class.\r\n   *         - False if the `Component` does not have the class`\r\n   */\r\n  ;\r\n\r\n  _proto.hasClass = function hasClass$1(classToCheck) {\r\n    return hasClass(this.el_, classToCheck);\r\n  }\r\n  /**\r\n   * Add a CSS class name to the `Component`s element.\r\n   *\r\n   * @param {string} classToAdd\r\n   *        CSS class name to add\r\n   */\r\n  ;\r\n\r\n  _proto.addClass = function addClass$1(classToAdd) {\r\n    addClass(this.el_, classToAdd);\r\n  }\r\n  /**\r\n   * Remove a CSS class name from the `Component`s element.\r\n   *\r\n   * @param {string} classToRemove\r\n   *        CSS class name to remove\r\n   */\r\n  ;\r\n\r\n  _proto.removeClass = function removeClass$1(classToRemove) {\r\n    removeClass(this.el_, classToRemove);\r\n  }\r\n  /**\r\n   * Add or remove a CSS class name from the component's element.\r\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\r\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\r\n   *\r\n   * @param  {string} classToToggle\r\n   *         The class to add or remove based on (@link Component#hasClass}\r\n   *\r\n   * @param  {boolean|Dom~predicate} [predicate]\r\n   *         An {@link Dom~predicate} function or a boolean\r\n   */\r\n  ;\r\n\r\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\r\n    toggleClass(this.el_, classToToggle, predicate);\r\n  }\r\n  /**\r\n   * Show the `Component`s element if it is hidden by removing the\r\n   * 'vjs-hidden' class name from it.\r\n   */\r\n  ;\r\n\r\n  _proto.show = function show() {\r\n    this.removeClass('vjs-hidden');\r\n  }\r\n  /**\r\n   * Hide the `Component`s element if it is currently showing by adding the\r\n   * 'vjs-hidden` class name to it.\r\n   */\r\n  ;\r\n\r\n  _proto.hide = function hide() {\r\n    this.addClass('vjs-hidden');\r\n  }\r\n  /**\r\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\r\n   * class name to it. Used during fadeIn/fadeOut.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.lockShowing = function lockShowing() {\r\n    this.addClass('vjs-lock-showing');\r\n  }\r\n  /**\r\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\r\n   * class name from it. Used during fadeIn/fadeOut.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.unlockShowing = function unlockShowing() {\r\n    this.removeClass('vjs-lock-showing');\r\n  }\r\n  /**\r\n   * Get the value of an attribute on the `Component`s element.\r\n   *\r\n   * @param {string} attribute\r\n   *        Name of the attribute to get the value from.\r\n   *\r\n   * @return {string|null}\r\n   *         - The value of the attribute that was asked for.\r\n   *         - Can be an empty string on some browsers if the attribute does not exist\r\n   *           or has no value\r\n   *         - Most browsers will return null if the attibute does not exist or has\r\n   *           no value.\r\n   *\r\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\r\n   */\r\n  ;\r\n\r\n  _proto.getAttribute = function getAttribute$1(attribute) {\r\n    return getAttribute(this.el_, attribute);\r\n  }\r\n  /**\r\n   * Set the value of an attribute on the `Component`'s element\r\n   *\r\n   * @param {string} attribute\r\n   *        Name of the attribute to set.\r\n   *\r\n   * @param {string} value\r\n   *        Value to set the attribute to.\r\n   *\r\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\r\n   */\r\n  ;\r\n\r\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\r\n    setAttribute(this.el_, attribute, value);\r\n  }\r\n  /**\r\n   * Remove an attribute from the `Component`s element.\r\n   *\r\n   * @param {string} attribute\r\n   *        Name of the attribute to remove.\r\n   *\r\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\r\n   */\r\n  ;\r\n\r\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\r\n    removeAttribute(this.el_, attribute);\r\n  }\r\n  /**\r\n   * Get or set the width of the component based upon the CSS styles.\r\n   * See {@link Component#dimension} for more detailed information.\r\n   *\r\n   * @param {number|string} [num]\r\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\r\n   *\r\n   * @param {boolean} [skipListeners]\r\n   *        Skip the componentresize event trigger\r\n   *\r\n   * @return {number|string}\r\n   *         The width when getting, zero if there is no width. Can be a string\r\n   *           postpixed with '%' or 'px'.\r\n   */\r\n  ;\r\n\r\n  _proto.width = function width(num, skipListeners) {\r\n    return this.dimension('width', num, skipListeners);\r\n  }\r\n  /**\r\n   * Get or set the height of the component based upon the CSS styles.\r\n   * See {@link Component#dimension} for more detailed information.\r\n   *\r\n   * @param {number|string} [num]\r\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\r\n   *\r\n   * @param {boolean} [skipListeners]\r\n   *        Skip the componentresize event trigger\r\n   *\r\n   * @return {number|string}\r\n   *         The width when getting, zero if there is no width. Can be a string\r\n   *         postpixed with '%' or 'px'.\r\n   */\r\n  ;\r\n\r\n  _proto.height = function height(num, skipListeners) {\r\n    return this.dimension('height', num, skipListeners);\r\n  }\r\n  /**\r\n   * Set both the width and height of the `Component` element at the same time.\r\n   *\r\n   * @param  {number|string} width\r\n   *         Width to set the `Component`s element to.\r\n   *\r\n   * @param  {number|string} height\r\n   *         Height to set the `Component`s element to.\r\n   */\r\n  ;\r\n\r\n  _proto.dimensions = function dimensions(width, height) {\r\n    // Skip componentresize listeners on width for optimization\r\n    this.width(width, true);\r\n    this.height(height);\r\n  }\r\n  /**\r\n   * Get or set width or height of the `Component` element. This is the shared code\r\n   * for the {@link Component#width} and {@link Component#height}.\r\n   *\r\n   * Things to know:\r\n   * - If the width or height in an number this will return the number postfixed with 'px'.\r\n   * - If the width/height is a percent this will return the percent postfixed with '%'\r\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\r\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\r\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\r\n   *   for more information\r\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\r\n   *   and {@link {Component#currentHeight}\r\n   *\r\n   * @fires Component#componentresize\r\n   *\r\n   * @param {string} widthOrHeight\r\n   8        'width' or 'height'\r\n   *\r\n   * @param  {number|string} [num]\r\n   8         New dimension\r\n   *\r\n   * @param  {boolean} [skipListeners]\r\n   *         Skip componentresize event trigger\r\n   *\r\n   * @return {number}\r\n   *         The dimension when getting or 0 if unset\r\n   */\r\n  ;\r\n\r\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\r\n    if (num !== undefined) {\r\n      // Set to zero if null or literally NaN (NaN !== NaN)\r\n      if (num === null || num !== num) {\r\n        num = 0;\r\n      } // Check if using css width/height (% or px) and adjust\r\n\r\n\r\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\r\n        this.el_.style[widthOrHeight] = num;\r\n      } else if (num === 'auto') {\r\n        this.el_.style[widthOrHeight] = '';\r\n      } else {\r\n        this.el_.style[widthOrHeight] = num + 'px';\r\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\r\n\r\n\r\n      if (!skipListeners) {\r\n        /**\r\n         * Triggered when a component is resized.\r\n         *\r\n         * @event Component#componentresize\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('componentresize');\r\n      }\r\n\r\n      return;\r\n    } // Not setting a value, so getting it\r\n    // Make sure element exists\r\n\r\n\r\n    if (!this.el_) {\r\n      return 0;\r\n    } // Get dimension value from style\r\n\r\n\r\n    var val = this.el_.style[widthOrHeight];\r\n    var pxIndex = val.indexOf('px');\r\n\r\n    if (pxIndex !== -1) {\r\n      // Return the pixel value with no 'px'\r\n      return parseInt(val.slice(0, pxIndex), 10);\r\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\r\n    // If component has display:none, offset will return 0\r\n    // TODO: handle display:none and no dimension style using px\r\n\r\n\r\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\r\n  }\r\n  /**\r\n   * Get the computed width or the height of the component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @param {string} widthOrHeight\r\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\r\n   *\r\n   * @return {number}\r\n   *         The dimension that gets asked for or 0 if nothing was set\r\n   *         for that dimension.\r\n   */\r\n  ;\r\n\r\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\r\n    var computedWidthOrHeight = 0;\r\n\r\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\r\n      throw new Error('currentDimension only accepts width or height value');\r\n    }\r\n\r\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\r\n\r\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\r\n    // and we want to check the offset values.\r\n    // This code also runs wherever getComputedStyle doesn't exist.\r\n\r\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\r\n      var rule = \"offset\" + toTitleCase$1(widthOrHeight);\r\n      computedWidthOrHeight = this.el_[rule];\r\n    }\r\n\r\n    return computedWidthOrHeight;\r\n  }\r\n  /**\r\n   * An object that contains width and height values of the `Component`s\r\n   * computed style. Uses `window.getComputedStyle`.\r\n   *\r\n   * @typedef {Object} Component~DimensionObject\r\n   *\r\n   * @property {number} width\r\n   *           The width of the `Component`s computed style.\r\n   *\r\n   * @property {number} height\r\n   *           The height of the `Component`s computed style.\r\n   */\r\n\r\n  /**\r\n   * Get an object that contains computed width and height values of the\r\n   * component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @return {Component~DimensionObject}\r\n   *         The computed dimensions of the component's element.\r\n   */\r\n  ;\r\n\r\n  _proto.currentDimensions = function currentDimensions() {\r\n    return {\r\n      width: this.currentDimension('width'),\r\n      height: this.currentDimension('height')\r\n    };\r\n  }\r\n  /**\r\n   * Get the computed width of the component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @return {number}\r\n   *         The computed width of the component's element.\r\n   */\r\n  ;\r\n\r\n  _proto.currentWidth = function currentWidth() {\r\n    return this.currentDimension('width');\r\n  }\r\n  /**\r\n   * Get the computed height of the component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @return {number}\r\n   *         The computed height of the component's element.\r\n   */\r\n  ;\r\n\r\n  _proto.currentHeight = function currentHeight() {\r\n    return this.currentDimension('height');\r\n  }\r\n  /**\r\n   * Set the focus to this component\r\n   */\r\n  ;\r\n\r\n  _proto.focus = function focus() {\r\n    this.el_.focus();\r\n  }\r\n  /**\r\n   * Remove the focus from this component\r\n   */\r\n  ;\r\n\r\n  _proto.blur = function blur() {\r\n    this.el_.blur();\r\n  }\r\n  /**\r\n   * When this Component receives a `keydown` event which it does not process,\r\n   *  it passes the event to the Player for handling.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    if (this.player_) {\r\n      // We only stop propagation here because we want unhandled events to fall\r\n      // back to the browser. Exclude Tab for focus trapping.\r\n      if (!keycode.isEventKey(event, 'Tab')) {\r\n        event.stopPropagation();\r\n      }\r\n\r\n      this.player_.handleKeyDown(event);\r\n    }\r\n  }\r\n  /**\r\n   * Many components used to have a `handleKeyPress` method, which was poorly\r\n   * named because it listened to a `keydown` event. This method name now\r\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\r\n   * will not see their method calls stop working.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to be called.\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyPress = function handleKeyPress(event) {\r\n    this.handleKeyDown(event);\r\n  }\r\n  /**\r\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\r\n   * support toggling the controls through a tap on the video. They get enabled\r\n   * because every sub-component would have extra overhead otherwise.\r\n   *\r\n   * @private\r\n   * @fires Component#tap\r\n   * @listens Component#touchstart\r\n   * @listens Component#touchmove\r\n   * @listens Component#touchleave\r\n   * @listens Component#touchcancel\r\n   * @listens Component#touchend\r\n    */\r\n  ;\r\n\r\n  _proto.emitTapEvents = function emitTapEvents() {\r\n    // Track the start time so we can determine how long the touch lasted\r\n    var touchStart = 0;\r\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\r\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\r\n    // so 10 seems like a nice, round number.\r\n\r\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\r\n\r\n    var touchTimeThreshold = 200;\r\n    var couldBeTap;\r\n    this.on('touchstart', function (event) {\r\n      // If more than one finger, don't consider treating this as a click\r\n      if (event.touches.length === 1) {\r\n        // Copy pageX/pageY from the object\r\n        firstTouch = {\r\n          pageX: event.touches[0].pageX,\r\n          pageY: event.touches[0].pageY\r\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\r\n\r\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\r\n\r\n        couldBeTap = true;\r\n      }\r\n    });\r\n    this.on('touchmove', function (event) {\r\n      // If more than one finger, don't consider treating this as a click\r\n      if (event.touches.length > 1) {\r\n        couldBeTap = false;\r\n      } else if (firstTouch) {\r\n        // Some devices will throw touchmoves for all but the slightest of taps.\r\n        // So, if we moved only a small distance, this could still be a tap\r\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\r\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\r\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\r\n\r\n        if (touchDistance > tapMovementThreshold) {\r\n          couldBeTap = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    var noTap = function noTap() {\r\n      couldBeTap = false;\r\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\r\n\r\n\r\n    this.on('touchleave', noTap);\r\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\r\n    // event\r\n\r\n    this.on('touchend', function (event) {\r\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\r\n\r\n      if (couldBeTap === true) {\r\n        // Measure how long the touch lasted\r\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\r\n\r\n        if (touchTime < touchTimeThreshold) {\r\n          // Don't let browser turn this into a click\r\n          event.preventDefault();\r\n          /**\r\n           * Triggered when a `Component` is tapped.\r\n           *\r\n           * @event Component#tap\r\n           * @type {EventTarget~Event}\r\n           */\r\n\r\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\r\n          // type to tap, if the other event properties aren't exact after\r\n          // Events.fixEvent runs (e.g. event.target)\r\n        }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * This function reports user activity whenever touch events happen. This can get\r\n   * turned off by any sub-components that wants touch events to act another way.\r\n   *\r\n   * Report user touch activity when touch events occur. User activity gets used to\r\n   * determine when controls should show/hide. It is simple when it comes to mouse\r\n   * events, because any mouse event should show the controls. So we capture mouse\r\n   * events that bubble up to the player and report activity when that happens.\r\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\r\n   * controls. So touch events can't help us at the player level either.\r\n   *\r\n   * User activity gets checked asynchronously. So what could happen is a tap event\r\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\r\n   * the player. Which, if it reported user activity, would turn the controls right\r\n   * back on. We also don't want to completely block touch events from bubbling up.\r\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\r\n   * controls back on.\r\n   *\r\n   * @listens Component#touchstart\r\n   * @listens Component#touchmove\r\n   * @listens Component#touchend\r\n   * @listens Component#touchcancel\r\n   */\r\n  ;\r\n\r\n  _proto.enableTouchActivity = function enableTouchActivity() {\r\n    // Don't continue if the root player doesn't support reporting user activity\r\n    if (!this.player() || !this.player().reportUserActivity) {\r\n      return;\r\n    } // listener for reporting that the user is active\r\n\r\n\r\n    var report = bind(this.player(), this.player().reportUserActivity);\r\n    var touchHolding;\r\n    this.on('touchstart', function () {\r\n      report(); // For as long as the they are touching the device or have their mouse down,\r\n      // we consider them active even if they're not moving their finger or mouse.\r\n      // So we want to continue to update that they are active\r\n\r\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\r\n\r\n      touchHolding = this.setInterval(report, 250);\r\n    });\r\n\r\n    var touchEnd = function touchEnd(event) {\r\n      report(); // stop the interval that maintains activity if the touch is holding\r\n\r\n      this.clearInterval(touchHolding);\r\n    };\r\n\r\n    this.on('touchmove', report);\r\n    this.on('touchend', touchEnd);\r\n    this.on('touchcancel', touchEnd);\r\n  }\r\n  /**\r\n   * A callback that has no parameters and is bound into `Component`s context.\r\n   *\r\n   * @callback Component~GenericCallback\r\n   * @this Component\r\n   */\r\n\r\n  /**\r\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\r\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\r\n   * instead though:\r\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\r\n   *    {@link Component#dispose} gets called.\r\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\r\n   *\r\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\r\n   *         will cause its dispose listener not to get cleaned up! Please use\r\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\r\n   *\r\n   * @param {Component~GenericCallback} fn\r\n   *        The function that will be run after `timeout`.\r\n   *\r\n   * @param {number} timeout\r\n   *        Timeout in milliseconds to delay before executing the specified function.\r\n   *\r\n   * @return {number}\r\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\r\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\r\n   *         was set.\r\n   *\r\n   * @listens Component#dispose\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\r\n   */\r\n  ;\r\n\r\n  _proto.setTimeout = function setTimeout(fn, timeout) {\r\n    var _this3 = this;\r\n\r\n    // declare as variables so they are properly available in timeout function\r\n    // eslint-disable-next-line\r\n    var timeoutId;\r\n    fn = bind(this, fn);\r\n    this.clearTimersOnDispose_();\r\n    timeoutId = window$1.setTimeout(function () {\r\n      if (_this3.setTimeoutIds_.has(timeoutId)) {\r\n        _this3.setTimeoutIds_[\"delete\"](timeoutId);\r\n      }\r\n\r\n      fn();\r\n    }, timeout);\r\n    this.setTimeoutIds_.add(timeoutId);\r\n    return timeoutId;\r\n  }\r\n  /**\r\n   * Clears a timeout that gets created via `window.setTimeout` or\r\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\r\n   * use this function instead of `window.clearTimout`. If you don't your dispose\r\n   * listener will not get cleaned up until {@link Component#dispose}!\r\n   *\r\n   * @param {number} timeoutId\r\n   *        The id of the timeout to clear. The return value of\r\n   *        {@link Component#setTimeout} or `window.setTimeout`.\r\n   *\r\n   * @return {number}\r\n   *         Returns the timeout id that was cleared.\r\n   *\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\r\n   */\r\n  ;\r\n\r\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\r\n    if (this.setTimeoutIds_.has(timeoutId)) {\r\n      this.setTimeoutIds_[\"delete\"](timeoutId);\r\n      window$1.clearTimeout(timeoutId);\r\n    }\r\n\r\n    return timeoutId;\r\n  }\r\n  /**\r\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\r\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\r\n   * 1. It gets cleared via  {@link Component#clearInterval} when\r\n   *    {@link Component#dispose} gets called.\r\n   * 2. The function callback will be a {@link Component~GenericCallback}\r\n   *\r\n   * @param {Component~GenericCallback} fn\r\n   *        The function to run every `x` seconds.\r\n   *\r\n   * @param {number} interval\r\n   *        Execute the specified function every `x` milliseconds.\r\n   *\r\n   * @return {number}\r\n   *         Returns an id that can be used to identify the interval. It can also be be used in\r\n   *         {@link Component#clearInterval} to clear the interval.\r\n   *\r\n   * @listens Component#dispose\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\r\n   */\r\n  ;\r\n\r\n  _proto.setInterval = function setInterval(fn, interval) {\r\n    fn = bind(this, fn);\r\n    this.clearTimersOnDispose_();\r\n    var intervalId = window$1.setInterval(fn, interval);\r\n    this.setIntervalIds_.add(intervalId);\r\n    return intervalId;\r\n  }\r\n  /**\r\n   * Clears an interval that gets created via `window.setInterval` or\r\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\r\n   * use this function instead of `window.clearInterval`. If you don't your dispose\r\n   * listener will not get cleaned up until {@link Component#dispose}!\r\n   *\r\n   * @param {number} intervalId\r\n   *        The id of the interval to clear. The return value of\r\n   *        {@link Component#setInterval} or `window.setInterval`.\r\n   *\r\n   * @return {number}\r\n   *         Returns the interval id that was cleared.\r\n   *\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\r\n   */\r\n  ;\r\n\r\n  _proto.clearInterval = function clearInterval(intervalId) {\r\n    if (this.setIntervalIds_.has(intervalId)) {\r\n      this.setIntervalIds_[\"delete\"](intervalId);\r\n      window$1.clearInterval(intervalId);\r\n    }\r\n\r\n    return intervalId;\r\n  }\r\n  /**\r\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\r\n   * with a few extra bonuses:\r\n   *\r\n   * - Supports browsers that do not support rAF by falling back to\r\n   *   {@link Component#setTimeout}.\r\n   *\r\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\r\n   *   bound to the component).\r\n   *\r\n   * - Automatic cancellation of the rAF callback is handled if the component\r\n   *   is disposed before it is called.\r\n   *\r\n   * @param  {Component~GenericCallback} fn\r\n   *         A function that will be bound to this component and executed just\r\n   *         before the browser's next repaint.\r\n   *\r\n   * @return {number}\r\n   *         Returns an rAF ID that gets used to identify the timeout. It can\r\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\r\n   *         the animation frame callback.\r\n   *\r\n   * @listens Component#dispose\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\r\n   */\r\n  ;\r\n\r\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\r\n    var _this4 = this;\r\n\r\n    // Fall back to using a timer.\r\n    if (!this.supportsRaf_) {\r\n      return this.setTimeout(fn, 1000 / 60);\r\n    }\r\n\r\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\r\n    // eslint-disable-next-line\r\n\r\n    var id;\r\n    fn = bind(this, fn);\r\n    id = window$1.requestAnimationFrame(function () {\r\n      if (_this4.rafIds_.has(id)) {\r\n        _this4.rafIds_[\"delete\"](id);\r\n      }\r\n\r\n      fn();\r\n    });\r\n    this.rafIds_.add(id);\r\n    return id;\r\n  }\r\n  /**\r\n   * Request an animation frame, but only one named animation\r\n   * frame will be queued. Another will never be added until\r\n   * the previous one finishes.\r\n   *\r\n   * @param {string} name\r\n   *        The name to give this requestAnimationFrame\r\n   *\r\n   * @param  {Component~GenericCallback} fn\r\n   *         A function that will be bound to this component and executed just\r\n   *         before the browser's next repaint.\r\n   */\r\n  ;\r\n\r\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\r\n    var _this5 = this;\r\n\r\n    if (this.namedRafs_.has(name)) {\r\n      return;\r\n    }\r\n\r\n    this.clearTimersOnDispose_();\r\n    fn = bind(this, fn);\r\n    var id = this.requestAnimationFrame(function () {\r\n      fn();\r\n\r\n      if (_this5.namedRafs_.has(name)) {\r\n        _this5.namedRafs_[\"delete\"](name);\r\n      }\r\n    });\r\n    this.namedRafs_.set(name, id);\r\n    return name;\r\n  }\r\n  /**\r\n   * Cancels a current named animation frame if it exists.\r\n   *\r\n   * @param {string} name\r\n   *        The name of the requestAnimationFrame to cancel.\r\n   */\r\n  ;\r\n\r\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\r\n    if (!this.namedRafs_.has(name)) {\r\n      return;\r\n    }\r\n\r\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\r\n    this.namedRafs_[\"delete\"](name);\r\n  }\r\n  /**\r\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\r\n   * (rAF).\r\n   *\r\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\r\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\r\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\r\n   *\r\n   * @param {number} id\r\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\r\n   *\r\n   * @return {number}\r\n   *         Returns the rAF ID that was cleared.\r\n   *\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\r\n   */\r\n  ;\r\n\r\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\r\n    // Fall back to using a timer.\r\n    if (!this.supportsRaf_) {\r\n      return this.clearTimeout(id);\r\n    }\r\n\r\n    if (this.rafIds_.has(id)) {\r\n      this.rafIds_[\"delete\"](id);\r\n      window$1.cancelAnimationFrame(id);\r\n    }\r\n\r\n    return id;\r\n  }\r\n  /**\r\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\r\n   * and `setInterval`, clearing on dispose.\r\n   *\r\n   * > Previously each timer added and removed dispose listeners on it's own.\r\n   * For better performance it was decided to batch them all, and use `Set`s\r\n   * to track outstanding timer ids.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\r\n    var _this6 = this;\r\n\r\n    if (this.clearingTimersOnDispose_) {\r\n      return;\r\n    }\r\n\r\n    this.clearingTimersOnDispose_ = true;\r\n    this.one('dispose', function () {\r\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\r\n        var idName = _ref[0],\r\n            cancelName = _ref[1];\r\n\r\n        // for a `Set` key will actually be the value again\r\n        // so forEach((val, val) =>` but for maps we want to use\r\n        // the key.\r\n        _this6[idName].forEach(function (val, key) {\r\n          return _this6[cancelName](key);\r\n        });\r\n      });\r\n      _this6.clearingTimersOnDispose_ = false;\r\n    });\r\n  }\r\n  /**\r\n   * Register a `Component` with `videojs` given the name and the component.\r\n   *\r\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\r\n   *         should be registered using {@link Tech.registerTech} or\r\n   *         {@link videojs:videojs.registerTech}.\r\n   *\r\n   * > NOTE: This function can also be seen on videojs as\r\n   *         {@link videojs:videojs.registerComponent}.\r\n   *\r\n   * @param {string} name\r\n   *        The name of the `Component` to register.\r\n   *\r\n   * @param {Component} ComponentToRegister\r\n   *        The `Component` class to register.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that was registered.\r\n   */\r\n  ;\r\n\r\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\r\n    if (typeof name !== 'string' || !name) {\r\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\r\n    }\r\n\r\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\r\n\r\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\r\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\r\n\r\n    if (isTech || !isComp) {\r\n      var reason;\r\n\r\n      if (isTech) {\r\n        reason = 'techs must be registered using Tech.registerTech()';\r\n      } else {\r\n        reason = 'must be a Component subclass';\r\n      }\r\n\r\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\r\n    }\r\n\r\n    name = toTitleCase$1(name);\r\n\r\n    if (!Component.components_) {\r\n      Component.components_ = {};\r\n    }\r\n\r\n    var Player = Component.getComponent('Player');\r\n\r\n    if (name === 'Player' && Player && Player.players) {\r\n      var players = Player.players;\r\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\r\n      // in Players.players. So, we must loop through and verify that the value\r\n      // for each item is not null. This allows registration of the Player component\r\n      // after all players have been disposed or before any were created.\r\n\r\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\r\n        return players[pname];\r\n      }).every(Boolean)) {\r\n        throw new Error('Can not register Player component after player has been created.');\r\n      }\r\n    }\r\n\r\n    Component.components_[name] = ComponentToRegister;\r\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\r\n    return ComponentToRegister;\r\n  }\r\n  /**\r\n   * Get a `Component` based on the name it was registered with.\r\n   *\r\n   * @param {string} name\r\n   *        The Name of the component to get.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that got registered under the given name.\r\n   */\r\n  ;\r\n\r\n  Component.getComponent = function getComponent(name) {\r\n    if (!name || !Component.components_) {\r\n      return;\r\n    }\r\n\r\n    return Component.components_[name];\r\n  };\r\n\r\n  return Component;\r\n}();\r\n/**\r\n * Whether or not this component supports `requestAnimationFrame`.\r\n *\r\n * This is exposed primarily for testing purposes.\r\n *\r\n * @private\r\n * @type {Boolean}\r\n */\r\n\r\n\r\nComponent$1.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\r\nComponent$1.registerComponent('Component', Component$1);\r\n\r\n/**\r\n * @file time-ranges.js\r\n * @module time-ranges\r\n */\r\n/**\r\n * Returns the time for the specified index at the start or end\r\n * of a TimeRange object.\r\n *\r\n * @typedef    {Function} TimeRangeIndex\r\n *\r\n * @param      {number} [index=0]\r\n *             The range number to return the time for.\r\n *\r\n * @return     {number}\r\n *             The time offset at the specified index.\r\n *\r\n * @deprecated The index argument must be provided.\r\n *             In the future, leaving it out will throw an error.\r\n */\r\n\r\n/**\r\n * An object that contains ranges of time.\r\n *\r\n * @typedef  {Object} TimeRange\r\n *\r\n * @property {number} length\r\n *           The number of time ranges represented by this object.\r\n *\r\n * @property {module:time-ranges~TimeRangeIndex} start\r\n *           Returns the time offset at which a specified time range begins.\r\n *\r\n * @property {module:time-ranges~TimeRangeIndex} end\r\n *           Returns the time offset at which a specified time range ends.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\r\n */\r\n\r\n/**\r\n * Check if any of the time ranges are over the maximum index.\r\n *\r\n * @private\r\n * @param   {string} fnName\r\n *          The function name to use for logging\r\n *\r\n * @param   {number} index\r\n *          The index to check\r\n *\r\n * @param   {number} maxIndex\r\n *          The maximum possible index\r\n *\r\n * @throws  {Error} if the timeRanges provided are over the maxIndex\r\n */\r\n\r\nfunction rangeCheck(fnName, index, maxIndex) {\r\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\r\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\r\n  }\r\n}\r\n/**\r\n * Get the time for the specified index at the start or end\r\n * of a TimeRange object.\r\n *\r\n * @private\r\n * @param      {string} fnName\r\n *             The function name to use for logging\r\n *\r\n * @param      {string} valueIndex\r\n *             The property that should be used to get the time. should be\r\n *             'start' or 'end'\r\n *\r\n * @param      {Array} ranges\r\n *             An array of time ranges\r\n *\r\n * @param      {Array} [rangeIndex=0]\r\n *             The index to start the search at\r\n *\r\n * @return     {number}\r\n *             The time that offset at the specified index.\r\n *\r\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\r\n * @throws     {Error} if rangeIndex is more than the length of ranges\r\n */\r\n\r\n\r\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\r\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\r\n  return ranges[rangeIndex][valueIndex];\r\n}\r\n/**\r\n * Create a time range object given ranges of time.\r\n *\r\n * @private\r\n * @param   {Array} [ranges]\r\n *          An array of time ranges.\r\n */\r\n\r\n\r\nfunction createTimeRangesObj(ranges) {\r\n  var timeRangesObj;\r\n\r\n  if (ranges === undefined || ranges.length === 0) {\r\n    timeRangesObj = {\r\n      length: 0,\r\n      start: function start() {\r\n        throw new Error('This TimeRanges object is empty');\r\n      },\r\n      end: function end() {\r\n        throw new Error('This TimeRanges object is empty');\r\n      }\r\n    };\r\n  } else {\r\n    timeRangesObj = {\r\n      length: ranges.length,\r\n      start: getRange.bind(null, 'start', 0, ranges),\r\n      end: getRange.bind(null, 'end', 1, ranges)\r\n    };\r\n  }\r\n\r\n  if (window$1.Symbol && window$1.Symbol.iterator) {\r\n    timeRangesObj[window$1.Symbol.iterator] = function () {\r\n      return (ranges || []).values();\r\n    };\r\n  }\r\n\r\n  return timeRangesObj;\r\n}\r\n/**\r\n * Create a `TimeRange` object which mimics an\r\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\r\n *\r\n * @param {number|Array[]} start\r\n *        The start of a single range (a number) or an array of ranges (an\r\n *        array of arrays of two numbers each).\r\n *\r\n * @param {number} end\r\n *        The end of a single range. Cannot be used with the array form of\r\n *        the `start` argument.\r\n */\r\n\r\n\r\nfunction createTimeRanges(start, end) {\r\n  if (Array.isArray(start)) {\r\n    return createTimeRangesObj(start);\r\n  } else if (start === undefined || end === undefined) {\r\n    return createTimeRangesObj();\r\n  }\r\n\r\n  return createTimeRangesObj([[start, end]]);\r\n}\r\n\r\n/**\r\n * @file buffer.js\r\n * @module buffer\r\n */\r\n/**\r\n * Compute the percentage of the media that has been buffered.\r\n *\r\n * @param {TimeRange} buffered\r\n *        The current `TimeRange` object representing buffered time ranges\r\n *\r\n * @param {number} duration\r\n *        Total duration of the media\r\n *\r\n * @return {number}\r\n *         Percent buffered of the total duration in decimal form.\r\n */\r\n\r\nfunction bufferedPercent(buffered, duration) {\r\n  var bufferedDuration = 0;\r\n  var start;\r\n  var end;\r\n\r\n  if (!duration) {\r\n    return 0;\r\n  }\r\n\r\n  if (!buffered || !buffered.length) {\r\n    buffered = createTimeRanges(0, 0);\r\n  }\r\n\r\n  for (var i = 0; i < buffered.length; i++) {\r\n    start = buffered.start(i);\r\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\r\n\r\n    if (end > duration) {\r\n      end = duration;\r\n    }\r\n\r\n    bufferedDuration += end - start;\r\n  }\r\n\r\n  return bufferedDuration / duration;\r\n}\r\n\r\n/**\r\n * @file media-error.js\r\n */\r\n/**\r\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\r\n *\r\n * @param {number|string|Object|MediaError} value\r\n *        This can be of multiple types:\r\n *        - number: should be a standard error code\r\n *        - string: an error message (the code will be 0)\r\n *        - Object: arbitrary properties\r\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\r\n *        - `MediaError` (video.js): will return itself if it's already a\r\n *          video.js `MediaError` object.\r\n *\r\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\r\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\r\n *\r\n * @class MediaError\r\n */\r\n\r\nfunction MediaError(value) {\r\n  // Allow redundant calls to this constructor to avoid having `instanceof`\r\n  // checks peppered around the code.\r\n  if (value instanceof MediaError) {\r\n    return value;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    this.code = value;\r\n  } else if (typeof value === 'string') {\r\n    // default code is zero, so this is a custom error\r\n    this.message = value;\r\n  } else if (isObject(value)) {\r\n    // We assign the `code` property manually because native `MediaError` objects\r\n    // do not expose it as an own/enumerable property of the object.\r\n    if (typeof value.code === 'number') {\r\n      this.code = value.code;\r\n    }\r\n\r\n    assign(this, value);\r\n  }\r\n\r\n  if (!this.message) {\r\n    this.message = MediaError.defaultMessages[this.code] || '';\r\n  }\r\n}\r\n/**\r\n * The error code that refers two one of the defined `MediaError` types\r\n *\r\n * @type {Number}\r\n */\r\n\r\n\r\nMediaError.prototype.code = 0;\r\n/**\r\n * An optional message that to show with the error. Message is not part of the HTML5\r\n * video spec but allows for more informative custom errors.\r\n *\r\n * @type {String}\r\n */\r\n\r\nMediaError.prototype.message = '';\r\n/**\r\n * An optional status code that can be set by plugins to allow even more detail about\r\n * the error. For example a plugin might provide a specific HTTP status code and an\r\n * error message for that code. Then when the plugin gets that error this class will\r\n * know how to display an error message for it. This allows a custom message to show\r\n * up on the `Player` error overlay.\r\n *\r\n * @type {Array}\r\n */\r\n\r\nMediaError.prototype.status = null;\r\n/**\r\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\r\n * specification listed under {@link MediaError} for more information.\r\n *\r\n * @enum {array}\r\n * @readonly\r\n * @property {string} 0 - MEDIA_ERR_CUSTOM\r\n * @property {string} 1 - MEDIA_ERR_ABORTED\r\n * @property {string} 2 - MEDIA_ERR_NETWORK\r\n * @property {string} 3 - MEDIA_ERR_DECODE\r\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\r\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\r\n */\r\n\r\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\r\n/**\r\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\r\n *\r\n * @type {Array}\r\n * @constant\r\n */\r\n\r\nMediaError.defaultMessages = {\r\n  1: 'You aborted the media playback',\r\n  2: 'A network error caused the media download to fail part-way.',\r\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\r\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\r\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\r\n}; // Add types as properties on MediaError\r\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\r\n\r\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\r\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\r\n\r\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\r\n} // jsdocs for instance/static members added above\r\n\r\n/**\r\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\r\n *\r\n * @param  {Object}  value\r\n *         An object that may or may not be `Promise`-like.\r\n *\r\n * @return {boolean}\r\n *         Whether or not the object is `Promise`-like.\r\n */\r\nfunction isPromise(value) {\r\n  return value !== undefined && value !== null && typeof value.then === 'function';\r\n}\r\n/**\r\n * Silence a Promise-like object.\r\n *\r\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\r\n * play promise\" rejection error messages.\r\n *\r\n * @param  {Object} value\r\n *         An object that may or may not be `Promise`-like.\r\n */\r\n\r\nfunction silencePromise(value) {\r\n  if (isPromise(value)) {\r\n    value.then(null, function (e) {});\r\n  }\r\n}\r\n\r\n/**\r\n * @file text-track-list-converter.js Utilities for capturing text track state and\r\n * re-creating tracks based on a capture.\r\n *\r\n * @module text-track-list-converter\r\n */\r\n\r\n/**\r\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\r\n * represents the {@link TextTrack}'s state.\r\n *\r\n * @param {TextTrack} track\r\n *        The text track to query.\r\n *\r\n * @return {Object}\r\n *         A serializable javascript representation of the TextTrack.\r\n * @private\r\n */\r\nvar trackToJson_ = function trackToJson_(track) {\r\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\r\n    if (track[prop]) {\r\n      acc[prop] = track[prop];\r\n    }\r\n\r\n    return acc;\r\n  }, {\r\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\r\n      return {\r\n        startTime: cue.startTime,\r\n        endTime: cue.endTime,\r\n        text: cue.text,\r\n        id: cue.id\r\n      };\r\n    })\r\n  });\r\n  return ret;\r\n};\r\n/**\r\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\r\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\r\n * {@link text-track-list-converter:jsonToTextTracks}.\r\n *\r\n * @param {Tech} tech\r\n *        The tech object to query\r\n *\r\n * @return {Array}\r\n *         A serializable javascript representation of the {@link Tech}s\r\n *         {@link TextTrackList}.\r\n */\r\n\r\n\r\nvar textTracksToJson = function textTracksToJson(tech) {\r\n  var trackEls = tech.$$('track');\r\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\r\n    return t.track;\r\n  });\r\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\r\n    var json = trackToJson_(trackEl.track);\r\n\r\n    if (trackEl.src) {\r\n      json.src = trackEl.src;\r\n    }\r\n\r\n    return json;\r\n  });\r\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\r\n    return trackObjs.indexOf(track) === -1;\r\n  }).map(trackToJson_));\r\n};\r\n/**\r\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\r\n * object {@link TextTrack} representations.\r\n *\r\n * @param {Array} json\r\n *        An array of `TextTrack` representation objects, like those that would be\r\n *        produced by `textTracksToJson`.\r\n *\r\n * @param {Tech} tech\r\n *        The `Tech` to create the `TextTrack`s on.\r\n */\r\n\r\n\r\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\r\n  json.forEach(function (track) {\r\n    var addedTrack = tech.addRemoteTextTrack(track).track;\r\n\r\n    if (!track.src && track.cues) {\r\n      track.cues.forEach(function (cue) {\r\n        return addedTrack.addCue(cue);\r\n      });\r\n    }\r\n  });\r\n  return tech.textTracks();\r\n};\r\n\r\nvar textTrackConverter = {\r\n  textTracksToJson: textTracksToJson,\r\n  jsonToTextTracks: jsonToTextTracks,\r\n  trackToJson_: trackToJson_\r\n};\r\n\r\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\r\n/**\r\n * The `ModalDialog` displays over the video and its controls, which blocks\r\n * interaction with the player until it is closed.\r\n *\r\n * Modal dialogs include a \"Close\" button and will close when that button\r\n * is activated - or when ESC is pressed anywhere.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ModalDialog = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(ModalDialog, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Mixed} [options.content=undefined]\r\n   *        Provide customized content for this modal.\r\n   *\r\n   * @param {string} [options.description]\r\n   *        A text description for the modal, primarily for accessibility.\r\n   *\r\n   * @param {boolean} [options.fillAlways=false]\r\n   *        Normally, modals are automatically filled only the first time\r\n   *        they open. This tells the modal to refresh its content\r\n   *        every time it opens.\r\n   *\r\n   * @param {string} [options.label]\r\n   *        A text label for the modal, primarily for accessibility.\r\n   *\r\n   * @param {boolean} [options.pauseOnOpen=true]\r\n   *        If `true`, playback will will be paused if playing when\r\n   *        the modal opens, and resumed when it closes.\r\n   *\r\n   * @param {boolean} [options.temporary=true]\r\n   *        If `true`, the modal can only be opened once; it will be\r\n   *        disposed as soon as it's closed.\r\n   *\r\n   * @param {boolean} [options.uncloseable=false]\r\n   *        If `true`, the user will not be able to close the modal\r\n   *        through the UI in the normal ways. Programmatic closing is\r\n   *        still possible.\r\n   */\r\n  function ModalDialog(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n\r\n    _this.handleKeyDown_ = function (e) {\r\n      return _this.handleKeyDown(e);\r\n    };\r\n\r\n    _this.close_ = function (e) {\r\n      return _this.close(e);\r\n    };\r\n\r\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\r\n\r\n    _this.closeable(!_this.options_.uncloseable);\r\n\r\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\r\n    // because we only want the contents of the modal in the contentEl\r\n    // (not the UI elements like the close button).\r\n\r\n\r\n    _this.contentEl_ = createEl('div', {\r\n      className: MODAL_CLASS_NAME + \"-content\"\r\n    }, {\r\n      role: 'document'\r\n    });\r\n    _this.descEl_ = createEl('p', {\r\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\r\n      id: _this.el().getAttribute('aria-describedby')\r\n    });\r\n    textContent(_this.descEl_, _this.description());\r\n\r\n    _this.el_.appendChild(_this.descEl_);\r\n\r\n    _this.el_.appendChild(_this.contentEl_);\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `ModalDialog`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The DOM element that gets created.\r\n   */\r\n\r\n\r\n  var _proto = ModalDialog.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: this.buildCSSClass(),\r\n      tabIndex: -1\r\n    }, {\r\n      'aria-describedby': this.id() + \"_description\",\r\n      'aria-hidden': 'true',\r\n      'aria-label': this.label(),\r\n      'role': 'dialog'\r\n    });\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n    this.descEl_ = null;\r\n    this.previouslyActiveEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  ;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Returns the label string for this modal. Primarily used for accessibility.\r\n   *\r\n   * @return {string}\r\n   *         the localized or raw label of this modal.\r\n   */\r\n  ;\r\n\r\n  _proto.label = function label() {\r\n    return this.localize(this.options_.label || 'Modal Window');\r\n  }\r\n  /**\r\n   * Returns the description string for this modal. Primarily used for\r\n   * accessibility.\r\n   *\r\n   * @return {string}\r\n   *         The localized or raw description of this modal.\r\n   */\r\n  ;\r\n\r\n  _proto.description = function description() {\r\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\r\n\r\n    if (this.closeable()) {\r\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\r\n    }\r\n\r\n    return desc;\r\n  }\r\n  /**\r\n   * Opens the modal.\r\n   *\r\n   * @fires ModalDialog#beforemodalopen\r\n   * @fires ModalDialog#modalopen\r\n   */\r\n  ;\r\n\r\n  _proto.open = function open() {\r\n    if (!this.opened_) {\r\n      var player = this.player();\r\n      /**\r\n        * Fired just before a `ModalDialog` is opened.\r\n        *\r\n        * @event ModalDialog#beforemodalopen\r\n        * @type {EventTarget~Event}\r\n        */\r\n\r\n      this.trigger('beforemodalopen');\r\n      this.opened_ = true; // Fill content if the modal has never opened before and\r\n      // never been filled.\r\n\r\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\r\n        this.fill();\r\n      } // If the player was playing, pause it and take note of its previously\r\n      // playing state.\r\n\r\n\r\n      this.wasPlaying_ = !player.paused();\r\n\r\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\r\n        player.pause();\r\n      }\r\n\r\n      this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\r\n\r\n      this.hadControls_ = player.controls();\r\n      player.controls(false);\r\n      this.show();\r\n      this.conditionalFocus_();\r\n      this.el().setAttribute('aria-hidden', 'false');\r\n      /**\r\n        * Fired just after a `ModalDialog` is opened.\r\n        *\r\n        * @event ModalDialog#modalopen\r\n        * @type {EventTarget~Event}\r\n        */\r\n\r\n      this.trigger('modalopen');\r\n      this.hasBeenOpened_ = true;\r\n    }\r\n  }\r\n  /**\r\n   * If the `ModalDialog` is currently open or closed.\r\n   *\r\n   * @param  {boolean} [value]\r\n   *         If given, it will open (`true`) or close (`false`) the modal.\r\n   *\r\n   * @return {boolean}\r\n   *         the current open state of the modaldialog\r\n   */\r\n  ;\r\n\r\n  _proto.opened = function opened(value) {\r\n    if (typeof value === 'boolean') {\r\n      this[value ? 'open' : 'close']();\r\n    }\r\n\r\n    return this.opened_;\r\n  }\r\n  /**\r\n   * Closes the modal, does nothing if the `ModalDialog` is\r\n   * not open.\r\n   *\r\n   * @fires ModalDialog#beforemodalclose\r\n   * @fires ModalDialog#modalclose\r\n   */\r\n  ;\r\n\r\n  _proto.close = function close() {\r\n    if (!this.opened_) {\r\n      return;\r\n    }\r\n\r\n    var player = this.player();\r\n    /**\r\n      * Fired just before a `ModalDialog` is closed.\r\n      *\r\n      * @event ModalDialog#beforemodalclose\r\n      * @type {EventTarget~Event}\r\n      */\r\n\r\n    this.trigger('beforemodalclose');\r\n    this.opened_ = false;\r\n\r\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\r\n      player.play();\r\n    }\r\n\r\n    this.off('keydown', this.handleKeyDown_);\r\n\r\n    if (this.hadControls_) {\r\n      player.controls(true);\r\n    }\r\n\r\n    this.hide();\r\n    this.el().setAttribute('aria-hidden', 'true');\r\n    /**\r\n      * Fired just after a `ModalDialog` is closed.\r\n      *\r\n      * @event ModalDialog#modalclose\r\n      * @type {EventTarget~Event}\r\n      */\r\n\r\n    this.trigger('modalclose');\r\n    this.conditionalBlur_();\r\n\r\n    if (this.options_.temporary) {\r\n      this.dispose();\r\n    }\r\n  }\r\n  /**\r\n   * Check to see if the `ModalDialog` is closeable via the UI.\r\n   *\r\n   * @param  {boolean} [value]\r\n   *         If given as a boolean, it will set the `closeable` option.\r\n   *\r\n   * @return {boolean}\r\n   *         Returns the final value of the closable option.\r\n   */\r\n  ;\r\n\r\n  _proto.closeable = function closeable(value) {\r\n    if (typeof value === 'boolean') {\r\n      var closeable = this.closeable_ = !!value;\r\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\r\n\r\n      if (closeable && !close) {\r\n        // The close button should be a child of the modal - not its\r\n        // content element, so temporarily change the content element.\r\n        var temp = this.contentEl_;\r\n        this.contentEl_ = this.el_;\r\n        close = this.addChild('closeButton', {\r\n          controlText: 'Close Modal Dialog'\r\n        });\r\n        this.contentEl_ = temp;\r\n        this.on(close, 'close', this.close_);\r\n      } // If this is being made uncloseable and has a close button, remove it.\r\n\r\n\r\n      if (!closeable && close) {\r\n        this.off(close, 'close', this.close_);\r\n        this.removeChild(close);\r\n        close.dispose();\r\n      }\r\n    }\r\n\r\n    return this.closeable_;\r\n  }\r\n  /**\r\n   * Fill the modal's content element with the modal's \"content\" option.\r\n   * The content element will be emptied before this change takes place.\r\n   */\r\n  ;\r\n\r\n  _proto.fill = function fill() {\r\n    this.fillWith(this.content());\r\n  }\r\n  /**\r\n   * Fill the modal's content element with arbitrary content.\r\n   * The content element will be emptied before this change takes place.\r\n   *\r\n   * @fires ModalDialog#beforemodalfill\r\n   * @fires ModalDialog#modalfill\r\n   *\r\n   * @param {Mixed} [content]\r\n   *        The same rules apply to this as apply to the `content` option.\r\n   */\r\n  ;\r\n\r\n  _proto.fillWith = function fillWith(content) {\r\n    var contentEl = this.contentEl();\r\n    var parentEl = contentEl.parentNode;\r\n    var nextSiblingEl = contentEl.nextSibling;\r\n    /**\r\n      * Fired just before a `ModalDialog` is filled with content.\r\n      *\r\n      * @event ModalDialog#beforemodalfill\r\n      * @type {EventTarget~Event}\r\n      */\r\n\r\n    this.trigger('beforemodalfill');\r\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\r\n    // manipulation to avoid modifying the live DOM multiple times.\r\n\r\n    parentEl.removeChild(contentEl);\r\n    this.empty();\r\n    insertContent(contentEl, content);\r\n    /**\r\n     * Fired just after a `ModalDialog` is filled with content.\r\n     *\r\n     * @event ModalDialog#modalfill\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\r\n\r\n    if (nextSiblingEl) {\r\n      parentEl.insertBefore(contentEl, nextSiblingEl);\r\n    } else {\r\n      parentEl.appendChild(contentEl);\r\n    } // make sure that the close button is last in the dialog DOM\r\n\r\n\r\n    var closeButton = this.getChild('closeButton');\r\n\r\n    if (closeButton) {\r\n      parentEl.appendChild(closeButton.el_);\r\n    }\r\n  }\r\n  /**\r\n   * Empties the content element. This happens anytime the modal is filled.\r\n   *\r\n   * @fires ModalDialog#beforemodalempty\r\n   * @fires ModalDialog#modalempty\r\n   */\r\n  ;\r\n\r\n  _proto.empty = function empty() {\r\n    /**\r\n    * Fired just before a `ModalDialog` is emptied.\r\n    *\r\n    * @event ModalDialog#beforemodalempty\r\n    * @type {EventTarget~Event}\r\n    */\r\n    this.trigger('beforemodalempty');\r\n    emptyEl(this.contentEl());\r\n    /**\r\n    * Fired just after a `ModalDialog` is emptied.\r\n    *\r\n    * @event ModalDialog#modalempty\r\n    * @type {EventTarget~Event}\r\n    */\r\n\r\n    this.trigger('modalempty');\r\n  }\r\n  /**\r\n   * Gets or sets the modal content, which gets normalized before being\r\n   * rendered into the DOM.\r\n   *\r\n   * This does not update the DOM or fill the modal, but it is called during\r\n   * that process.\r\n   *\r\n   * @param  {Mixed} [value]\r\n   *         If defined, sets the internal content value to be used on the\r\n   *         next call(s) to `fill`. This value is normalized before being\r\n   *         inserted. To \"clear\" the internal content value, pass `null`.\r\n   *\r\n   * @return {Mixed}\r\n   *         The current content of the modal dialog\r\n   */\r\n  ;\r\n\r\n  _proto.content = function content(value) {\r\n    if (typeof value !== 'undefined') {\r\n      this.content_ = value;\r\n    }\r\n\r\n    return this.content_;\r\n  }\r\n  /**\r\n   * conditionally focus the modal dialog if focus was previously on the player.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.conditionalFocus_ = function conditionalFocus_() {\r\n    var activeEl = document.activeElement;\r\n    var playerEl = this.player_.el_;\r\n    this.previouslyActiveEl_ = null;\r\n\r\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\r\n      this.previouslyActiveEl_ = activeEl;\r\n      this.focus();\r\n    }\r\n  }\r\n  /**\r\n   * conditionally blur the element and refocus the last focused element\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.conditionalBlur_ = function conditionalBlur_() {\r\n    if (this.previouslyActiveEl_) {\r\n      this.previouslyActiveEl_.focus();\r\n      this.previouslyActiveEl_ = null;\r\n    }\r\n  }\r\n  /**\r\n   * Keydown handler. Attached when modal is focused.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Do not allow keydowns to reach out of the modal dialog.\r\n    event.stopPropagation();\r\n\r\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\r\n      event.preventDefault();\r\n      this.close();\r\n      return;\r\n    } // exit early if it isn't a tab key\r\n\r\n\r\n    if (!keycode.isEventKey(event, 'Tab')) {\r\n      return;\r\n    }\r\n\r\n    var focusableEls = this.focusableEls_();\r\n    var activeEl = this.el_.querySelector(':focus');\r\n    var focusIndex;\r\n\r\n    for (var i = 0; i < focusableEls.length; i++) {\r\n      if (activeEl === focusableEls[i]) {\r\n        focusIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (document.activeElement === this.el_) {\r\n      focusIndex = 0;\r\n    }\r\n\r\n    if (event.shiftKey && focusIndex === 0) {\r\n      focusableEls[focusableEls.length - 1].focus();\r\n      event.preventDefault();\r\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\r\n      focusableEls[0].focus();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  /**\r\n   * get all focusable elements\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.focusableEls_ = function focusableEls_() {\r\n    var allChildren = this.el_.querySelectorAll('*');\r\n    return Array.prototype.filter.call(allChildren, function (child) {\r\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\r\n    });\r\n  };\r\n\r\n  return ModalDialog;\r\n}(Component$1);\r\n/**\r\n * Default options for `ModalDialog` default options.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nModalDialog.prototype.options_ = {\r\n  pauseOnOpen: true,\r\n  temporary: true\r\n};\r\nComponent$1.registerComponent('ModalDialog', ModalDialog);\r\n\r\n/**\r\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\r\n * {@link VideoTrackList}\r\n *\r\n * @extends EventTarget\r\n */\r\n\r\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\r\n  _inheritsLoose(TrackList, _EventTarget);\r\n\r\n  /**\r\n   * Create an instance of this class\r\n   *\r\n   * @param {Track[]} tracks\r\n   *        A list of tracks to initialize the list with.\r\n   *\r\n   * @abstract\r\n   */\r\n  function TrackList(tracks) {\r\n    var _this;\r\n\r\n    if (tracks === void 0) {\r\n      tracks = [];\r\n    }\r\n\r\n    _this = _EventTarget.call(this) || this;\r\n    _this.tracks_ = [];\r\n    /**\r\n     * @memberof TrackList\r\n     * @member {number} length\r\n     *         The current number of `Track`s in the this Trackist.\r\n     * @instance\r\n     */\r\n\r\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\r\n      get: function get() {\r\n        return this.tracks_.length;\r\n      }\r\n    });\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      _this.addTrack(tracks[i]);\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add a {@link Track} to the `TrackList`\r\n   *\r\n   * @param {Track} track\r\n   *        The audio, video, or text track to add to the list.\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  var _proto = TrackList.prototype;\r\n\r\n  _proto.addTrack = function addTrack(track) {\r\n    var _this2 = this;\r\n\r\n    var index = this.tracks_.length;\r\n\r\n    if (!('' + index in this)) {\r\n      Object.defineProperty(this, index, {\r\n        get: function get() {\r\n          return this.tracks_[index];\r\n        }\r\n      });\r\n    } // Do not add duplicate tracks\r\n\r\n\r\n    if (this.tracks_.indexOf(track) === -1) {\r\n      this.tracks_.push(track);\r\n      /**\r\n       * Triggered when a track is added to a track list.\r\n       *\r\n       * @event TrackList#addtrack\r\n       * @type {EventTarget~Event}\r\n       * @property {Track} track\r\n       *           A reference to track that was added.\r\n       */\r\n\r\n      this.trigger({\r\n        track: track,\r\n        type: 'addtrack',\r\n        target: this\r\n      });\r\n    }\r\n    /**\r\n     * Triggered when a track label is changed.\r\n     *\r\n     * @event TrackList#addtrack\r\n     * @type {EventTarget~Event}\r\n     * @property {Track} track\r\n     *           A reference to track that was added.\r\n     */\r\n\r\n\r\n    track.labelchange_ = function () {\r\n      _this2.trigger({\r\n        track: track,\r\n        type: 'labelchange',\r\n        target: _this2\r\n      });\r\n    };\r\n\r\n    if (isEvented(track)) {\r\n      track.addEventListener('labelchange', track.labelchange_);\r\n    }\r\n  }\r\n  /**\r\n   * Remove a {@link Track} from the `TrackList`\r\n   *\r\n   * @param {Track} rtrack\r\n   *        The audio, video, or text track to remove from the list.\r\n   *\r\n   * @fires TrackList#removetrack\r\n   */\r\n  ;\r\n\r\n  _proto.removeTrack = function removeTrack(rtrack) {\r\n    var track;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      if (this[i] === rtrack) {\r\n        track = this[i];\r\n\r\n        if (track.off) {\r\n          track.off();\r\n        }\r\n\r\n        this.tracks_.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!track) {\r\n      return;\r\n    }\r\n    /**\r\n     * Triggered when a track is removed from track list.\r\n     *\r\n     * @event TrackList#removetrack\r\n     * @type {EventTarget~Event}\r\n     * @property {Track} track\r\n     *           A reference to track that was removed.\r\n     */\r\n\r\n\r\n    this.trigger({\r\n      track: track,\r\n      type: 'removetrack',\r\n      target: this\r\n    });\r\n  }\r\n  /**\r\n   * Get a Track from the TrackList by a tracks id\r\n   *\r\n   * @param {string} id - the id of the track to get\r\n   * @method getTrackById\r\n   * @return {Track}\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.getTrackById = function getTrackById(id) {\r\n    var result = null;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      var track = this[i];\r\n\r\n      if (track.id === id) {\r\n        result = track;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return TrackList;\r\n}(EventTarget$2);\r\n/**\r\n * Triggered when a different track is selected/enabled.\r\n *\r\n * @event TrackList#change\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Events that can be called with on + eventName. See {@link EventHandler}.\r\n *\r\n * @property {Object} TrackList#allowedEvents_\r\n * @private\r\n */\r\n\r\n\r\nTrackList.prototype.allowedEvents_ = {\r\n  change: 'change',\r\n  addtrack: 'addtrack',\r\n  removetrack: 'removetrack',\r\n  labelchange: 'labelchange'\r\n}; // emulate attribute EventHandler support to allow for feature detection\r\n\r\nfor (var event in TrackList.prototype.allowedEvents_) {\r\n  TrackList.prototype['on' + event] = null;\r\n}\r\n\r\n/**\r\n * Anywhere we call this function we diverge from the spec\r\n * as we only support one enabled audiotrack at a time\r\n *\r\n * @param {AudioTrackList} list\r\n *        list to work on\r\n *\r\n * @param {AudioTrack} track\r\n *        The track to skip\r\n *\r\n * @private\r\n */\r\n\r\nvar disableOthers$1 = function disableOthers(list, track) {\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\r\n      continue;\r\n    } // another audio track is enabled, disable it\r\n\r\n\r\n    list[i].enabled = false;\r\n  }\r\n};\r\n/**\r\n * The current list of {@link AudioTrack} for a media file.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\r\n * @extends TrackList\r\n */\r\n\r\n\r\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\r\n  _inheritsLoose(AudioTrackList, _TrackList);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {AudioTrack[]} [tracks=[]]\r\n   *        A list of `AudioTrack` to instantiate the list with.\r\n   */\r\n  function AudioTrackList(tracks) {\r\n    var _this;\r\n\r\n    if (tracks === void 0) {\r\n      tracks = [];\r\n    }\r\n\r\n    // make sure only 1 track is enabled\r\n    // sorted from last index to first index\r\n    for (var i = tracks.length - 1; i >= 0; i--) {\r\n      if (tracks[i].enabled) {\r\n        disableOthers$1(tracks, tracks[i]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    _this = _TrackList.call(this, tracks) || this;\r\n    _this.changing_ = false;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\r\n   *\r\n   * @param {AudioTrack} track\r\n   *        The AudioTrack to add to the list\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  var _proto = AudioTrackList.prototype;\r\n\r\n  _proto.addTrack = function addTrack(track) {\r\n    var _this2 = this;\r\n\r\n    if (track.enabled) {\r\n      disableOthers$1(this, track);\r\n    }\r\n\r\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\r\n\r\n\r\n    if (!track.addEventListener) {\r\n      return;\r\n    }\r\n\r\n    track.enabledChange_ = function () {\r\n      // when we are disabling other tracks (since we don't support\r\n      // more than one track at a time) we will set changing_\r\n      // to true so that we don't trigger additional change events\r\n      if (_this2.changing_) {\r\n        return;\r\n      }\r\n\r\n      _this2.changing_ = true;\r\n      disableOthers$1(_this2, track);\r\n      _this2.changing_ = false;\r\n\r\n      _this2.trigger('change');\r\n    };\r\n    /**\r\n     * @listens AudioTrack#enabledchange\r\n     * @fires TrackList#change\r\n     */\r\n\r\n\r\n    track.addEventListener('enabledchange', track.enabledChange_);\r\n  };\r\n\r\n  _proto.removeTrack = function removeTrack(rtrack) {\r\n    _TrackList.prototype.removeTrack.call(this, rtrack);\r\n\r\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\r\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\r\n      rtrack.enabledChange_ = null;\r\n    }\r\n  };\r\n\r\n  return AudioTrackList;\r\n}(TrackList);\r\n\r\n/**\r\n * Un-select all other {@link VideoTrack}s that are selected.\r\n *\r\n * @param {VideoTrackList} list\r\n *        list to work on\r\n *\r\n * @param {VideoTrack} track\r\n *        The track to skip\r\n *\r\n * @private\r\n */\r\n\r\nvar disableOthers = function disableOthers(list, track) {\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\r\n      continue;\r\n    } // another video track is enabled, disable it\r\n\r\n\r\n    list[i].selected = false;\r\n  }\r\n};\r\n/**\r\n * The current list of {@link VideoTrack} for a video.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\r\n * @extends TrackList\r\n */\r\n\r\n\r\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\r\n  _inheritsLoose(VideoTrackList, _TrackList);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {VideoTrack[]} [tracks=[]]\r\n   *        A list of `VideoTrack` to instantiate the list with.\r\n   */\r\n  function VideoTrackList(tracks) {\r\n    var _this;\r\n\r\n    if (tracks === void 0) {\r\n      tracks = [];\r\n    }\r\n\r\n    // make sure only 1 track is enabled\r\n    // sorted from last index to first index\r\n    for (var i = tracks.length - 1; i >= 0; i--) {\r\n      if (tracks[i].selected) {\r\n        disableOthers(tracks, tracks[i]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    _this = _TrackList.call(this, tracks) || this;\r\n    _this.changing_ = false;\r\n    /**\r\n     * @member {number} VideoTrackList#selectedIndex\r\n     *         The current index of the selected {@link VideoTrack`}.\r\n     */\r\n\r\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\r\n      get: function get() {\r\n        for (var _i = 0; _i < this.length; _i++) {\r\n          if (this[_i].selected) {\r\n            return _i;\r\n          }\r\n        }\r\n\r\n        return -1;\r\n      },\r\n      set: function set() {}\r\n    });\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\r\n   *\r\n   * @param {VideoTrack} track\r\n   *        The VideoTrack to add to the list\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  var _proto = VideoTrackList.prototype;\r\n\r\n  _proto.addTrack = function addTrack(track) {\r\n    var _this2 = this;\r\n\r\n    if (track.selected) {\r\n      disableOthers(this, track);\r\n    }\r\n\r\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\r\n\r\n\r\n    if (!track.addEventListener) {\r\n      return;\r\n    }\r\n\r\n    track.selectedChange_ = function () {\r\n      if (_this2.changing_) {\r\n        return;\r\n      }\r\n\r\n      _this2.changing_ = true;\r\n      disableOthers(_this2, track);\r\n      _this2.changing_ = false;\r\n\r\n      _this2.trigger('change');\r\n    };\r\n    /**\r\n     * @listens VideoTrack#selectedchange\r\n     * @fires TrackList#change\r\n     */\r\n\r\n\r\n    track.addEventListener('selectedchange', track.selectedChange_);\r\n  };\r\n\r\n  _proto.removeTrack = function removeTrack(rtrack) {\r\n    _TrackList.prototype.removeTrack.call(this, rtrack);\r\n\r\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\r\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\r\n      rtrack.selectedChange_ = null;\r\n    }\r\n  };\r\n\r\n  return VideoTrackList;\r\n}(TrackList);\r\n\r\n/**\r\n * The current list of {@link TextTrack} for a media file.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\r\n * @extends TrackList\r\n */\r\n\r\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\r\n  _inheritsLoose(TextTrackList, _TrackList);\r\n\r\n  function TextTrackList() {\r\n    return _TrackList.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = TextTrackList.prototype;\r\n\r\n  /**\r\n   * Add a {@link TextTrack} to the `TextTrackList`\r\n   *\r\n   * @param {TextTrack} track\r\n   *        The text track to add to the list.\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n  _proto.addTrack = function addTrack(track) {\r\n    var _this = this;\r\n\r\n    _TrackList.prototype.addTrack.call(this, track);\r\n\r\n    if (!this.queueChange_) {\r\n      this.queueChange_ = function () {\r\n        return _this.queueTrigger('change');\r\n      };\r\n    }\r\n\r\n    if (!this.triggerSelectedlanguagechange) {\r\n      this.triggerSelectedlanguagechange_ = function () {\r\n        return _this.trigger('selectedlanguagechange');\r\n      };\r\n    }\r\n    /**\r\n     * @listens TextTrack#modechange\r\n     * @fires TrackList#change\r\n     */\r\n\r\n\r\n    track.addEventListener('modechange', this.queueChange_);\r\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\r\n\r\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\r\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\r\n    }\r\n  };\r\n\r\n  _proto.removeTrack = function removeTrack(rtrack) {\r\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\r\n\r\n\r\n    if (rtrack.removeEventListener) {\r\n      if (this.queueChange_) {\r\n        rtrack.removeEventListener('modechange', this.queueChange_);\r\n      }\r\n\r\n      if (this.selectedlanguagechange_) {\r\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\r\n      }\r\n    }\r\n  };\r\n\r\n  return TextTrackList;\r\n}(TrackList);\r\n\r\n/**\r\n * @file html-track-element-list.js\r\n */\r\n\r\n/**\r\n * The current list of {@link HtmlTrackElement}s.\r\n */\r\nvar HtmlTrackElementList = /*#__PURE__*/function () {\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {HtmlTrackElement[]} [tracks=[]]\r\n   *        A list of `HtmlTrackElement` to instantiate the list with.\r\n   */\r\n  function HtmlTrackElementList(trackElements) {\r\n    if (trackElements === void 0) {\r\n      trackElements = [];\r\n    }\r\n\r\n    this.trackElements_ = [];\r\n    /**\r\n     * @memberof HtmlTrackElementList\r\n     * @member {number} length\r\n     *         The current number of `Track`s in the this Trackist.\r\n     * @instance\r\n     */\r\n\r\n    Object.defineProperty(this, 'length', {\r\n      get: function get() {\r\n        return this.trackElements_.length;\r\n      }\r\n    });\r\n\r\n    for (var i = 0, length = trackElements.length; i < length; i++) {\r\n      this.addTrackElement_(trackElements[i]);\r\n    }\r\n  }\r\n  /**\r\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\r\n   *\r\n   * @param {HtmlTrackElement} trackElement\r\n   *        The track element to add to the list.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var _proto = HtmlTrackElementList.prototype;\r\n\r\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\r\n    var index = this.trackElements_.length;\r\n\r\n    if (!('' + index in this)) {\r\n      Object.defineProperty(this, index, {\r\n        get: function get() {\r\n          return this.trackElements_[index];\r\n        }\r\n      });\r\n    } // Do not add duplicate elements\r\n\r\n\r\n    if (this.trackElements_.indexOf(trackElement) === -1) {\r\n      this.trackElements_.push(trackElement);\r\n    }\r\n  }\r\n  /**\r\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\r\n   * {@link TextTrack}.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        The track associated with a track element.\r\n   *\r\n   * @return {HtmlTrackElement|undefined}\r\n   *         The track element that was found or undefined.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\r\n    var trackElement_;\r\n\r\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\r\n      if (track === this.trackElements_[i].track) {\r\n        trackElement_ = this.trackElements_[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    return trackElement_;\r\n  }\r\n  /**\r\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\r\n   *\r\n   * @param {HtmlTrackElement} trackElement\r\n   *        The track element to remove from the list.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\r\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\r\n      if (trackElement === this.trackElements_[i]) {\r\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\r\n          this.trackElements_[i].track.off();\r\n        }\r\n\r\n        if (typeof this.trackElements_[i].off === 'function') {\r\n          this.trackElements_[i].off();\r\n        }\r\n\r\n        this.trackElements_.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return HtmlTrackElementList;\r\n}();\r\n\r\n/**\r\n * @file text-track-cue-list.js\r\n */\r\n\r\n/**\r\n * @typedef {Object} TextTrackCueList~TextTrackCue\r\n *\r\n * @property {string} id\r\n *           The unique id for this text track cue\r\n *\r\n * @property {number} startTime\r\n *           The start time for this text track cue\r\n *\r\n * @property {number} endTime\r\n *           The end time for this text track cue\r\n *\r\n * @property {boolean} pauseOnExit\r\n *           Pause when the end time is reached if true.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\r\n */\r\n\r\n/**\r\n * A List of TextTrackCues.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\r\n */\r\nvar TextTrackCueList = /*#__PURE__*/function () {\r\n  /**\r\n   * Create an instance of this class..\r\n   *\r\n   * @param {Array} cues\r\n   *        A list of cues to be initialized with\r\n   */\r\n  function TextTrackCueList(cues) {\r\n    TextTrackCueList.prototype.setCues_.call(this, cues);\r\n    /**\r\n     * @memberof TextTrackCueList\r\n     * @member {number} length\r\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\r\n     * @instance\r\n     */\r\n\r\n    Object.defineProperty(this, 'length', {\r\n      get: function get() {\r\n        return this.length_;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * A setter for cues in this list. Creates getters\r\n   * an an index for the cues.\r\n   *\r\n   * @param {Array} cues\r\n   *        An array of cues to set\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var _proto = TextTrackCueList.prototype;\r\n\r\n  _proto.setCues_ = function setCues_(cues) {\r\n    var oldLength = this.length || 0;\r\n    var i = 0;\r\n    var l = cues.length;\r\n    this.cues_ = cues;\r\n    this.length_ = cues.length;\r\n\r\n    var defineProp = function defineProp(index) {\r\n      if (!('' + index in this)) {\r\n        Object.defineProperty(this, '' + index, {\r\n          get: function get() {\r\n            return this.cues_[index];\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    if (oldLength < l) {\r\n      i = oldLength;\r\n\r\n      for (; i < l; i++) {\r\n        defineProp.call(this, i);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\r\n   *\r\n   * @param {string} id\r\n   *        The id of the cue that should be searched for.\r\n   *\r\n   * @return {TextTrackCueList~TextTrackCue|null}\r\n   *         A single cue or null if none was found.\r\n   */\r\n  ;\r\n\r\n  _proto.getCueById = function getCueById(id) {\r\n    var result = null;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      var cue = this[i];\r\n\r\n      if (cue.id === id) {\r\n        result = cue;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return TextTrackCueList;\r\n}();\r\n\r\n/**\r\n * @file track-kinds.js\r\n */\r\n\r\n/**\r\n * All possible `VideoTrackKind`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\r\n * @typedef VideoTrack~Kind\r\n * @enum\r\n */\r\nvar VideoTrackKind = {\r\n  alternative: 'alternative',\r\n  captions: 'captions',\r\n  main: 'main',\r\n  sign: 'sign',\r\n  subtitles: 'subtitles',\r\n  commentary: 'commentary'\r\n};\r\n/**\r\n * All possible `AudioTrackKind`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\r\n * @typedef AudioTrack~Kind\r\n * @enum\r\n */\r\n\r\nvar AudioTrackKind = {\r\n  'alternative': 'alternative',\r\n  'descriptions': 'descriptions',\r\n  'main': 'main',\r\n  'main-desc': 'main-desc',\r\n  'translation': 'translation',\r\n  'commentary': 'commentary'\r\n};\r\n/**\r\n * All possible `TextTrackKind`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\r\n * @typedef TextTrack~Kind\r\n * @enum\r\n */\r\n\r\nvar TextTrackKind = {\r\n  subtitles: 'subtitles',\r\n  captions: 'captions',\r\n  descriptions: 'descriptions',\r\n  chapters: 'chapters',\r\n  metadata: 'metadata'\r\n};\r\n/**\r\n * All possible `TextTrackMode`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\r\n * @typedef TextTrack~Mode\r\n * @enum\r\n */\r\n\r\nvar TextTrackMode = {\r\n  disabled: 'disabled',\r\n  hidden: 'hidden',\r\n  showing: 'showing'\r\n};\r\n\r\n/**\r\n * A Track class that contains all of the common functionality for {@link AudioTrack},\r\n * {@link VideoTrack}, and {@link TextTrack}.\r\n *\r\n * > Note: This class should not be used directly\r\n *\r\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\r\n * @extends EventTarget\r\n * @abstract\r\n */\r\n\r\nvar Track = /*#__PURE__*/function (_EventTarget) {\r\n  _inheritsLoose(Track, _EventTarget);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        Object of option names and values\r\n   *\r\n   * @param {string} [options.kind='']\r\n   *        A valid kind for the track type you are creating.\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this AudioTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @abstract\r\n   */\r\n  function Track(options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _EventTarget.call(this) || this;\r\n    var trackProps = {\r\n      id: options.id || 'vjs_track_' + newGUID(),\r\n      kind: options.kind || '',\r\n      language: options.language || ''\r\n    };\r\n    var label = options.label || '';\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} id\r\n     *         The id of this track. Cannot be changed after creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} kind\r\n     *         The kind of track that this is. Cannot be changed after creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} language\r\n     *         The two letter language code for this track. Cannot be changed after\r\n     *         creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    var _loop = function _loop(key) {\r\n      Object.defineProperty(_assertThisInitialized(_this), key, {\r\n        get: function get() {\r\n          return trackProps[key];\r\n        },\r\n        set: function set() {}\r\n      });\r\n    };\r\n\r\n    for (var key in trackProps) {\r\n      _loop(key);\r\n    }\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} label\r\n     *         The label of this track. Cannot be changed after creation.\r\n     * @instance\r\n     *\r\n     * @fires Track#labelchange\r\n     */\r\n\r\n\r\n    Object.defineProperty(_assertThisInitialized(_this), 'label', {\r\n      get: function get() {\r\n        return label;\r\n      },\r\n      set: function set(newLabel) {\r\n        if (newLabel !== label) {\r\n          label = newLabel;\r\n          /**\r\n           * An event that fires when label changes on this track.\r\n           *\r\n           * > Note: This is not part of the spec!\r\n           *\r\n           * @event Track#labelchange\r\n           * @type {EventTarget~Event}\r\n           */\r\n\r\n          this.trigger('labelchange');\r\n        }\r\n      }\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  return Track;\r\n}(EventTarget$2);\r\n\r\n/**\r\n * @file url.js\r\n * @module url\r\n */\r\n/**\r\n * @typedef {Object} url:URLObject\r\n *\r\n * @property {string} protocol\r\n *           The protocol of the url that was parsed.\r\n *\r\n * @property {string} hostname\r\n *           The hostname of the url that was parsed.\r\n *\r\n * @property {string} port\r\n *           The port of the url that was parsed.\r\n *\r\n * @property {string} pathname\r\n *           The pathname of the url that was parsed.\r\n *\r\n * @property {string} search\r\n *           The search query of the url that was parsed.\r\n *\r\n * @property {string} hash\r\n *           The hash of the url that was parsed.\r\n *\r\n * @property {string} host\r\n *           The host of the url that was parsed.\r\n */\r\n\r\n/**\r\n * Resolve and parse the elements of a URL.\r\n *\r\n * @function\r\n * @param    {String} url\r\n *           The url to parse\r\n *\r\n * @return   {url:URLObject}\r\n *           An object of url details\r\n */\r\n\r\nvar parseUrl = function parseUrl(url) {\r\n  // This entire method can be replace with URL once we are able to drop IE11\r\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\r\n\r\n  var a = document.createElement('a');\r\n  a.href = url; // Copy the specific URL properties to a new object\r\n  // This is also needed for IE because the anchor loses its\r\n  // properties when it's removed from the dom\r\n\r\n  var details = {};\r\n\r\n  for (var i = 0; i < props.length; i++) {\r\n    details[props[i]] = a[props[i]];\r\n  } // IE adds the port to the host property unlike everyone else. If\r\n  // a port identifier is added for standard ports, strip it.\r\n\r\n\r\n  if (details.protocol === 'http:') {\r\n    details.host = details.host.replace(/:80$/, '');\r\n  }\r\n\r\n  if (details.protocol === 'https:') {\r\n    details.host = details.host.replace(/:443$/, '');\r\n  }\r\n\r\n  if (!details.protocol) {\r\n    details.protocol = window$1.location.protocol;\r\n  }\r\n  /* istanbul ignore if */\r\n\r\n\r\n  if (!details.host) {\r\n    details.host = window$1.location.host;\r\n  }\r\n\r\n  return details;\r\n};\r\n/**\r\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\r\n *\r\n * @function\r\n * @param    {string} url\r\n *           URL to make absolute\r\n *\r\n * @return   {string}\r\n *           Absolute URL\r\n *\r\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\r\n */\r\n\r\nvar getAbsoluteURL = function getAbsoluteURL(url) {\r\n  // Check if absolute URL\r\n  if (!url.match(/^https?:\\/\\//)) {\r\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\r\n    // add the url to an anchor and let the browser parse the URL\r\n    var a = document.createElement('a');\r\n    a.href = url;\r\n    url = a.href;\r\n  }\r\n\r\n  return url;\r\n};\r\n/**\r\n * Returns the extension of the passed file name. It will return an empty string\r\n * if passed an invalid path.\r\n *\r\n * @function\r\n * @param    {string} path\r\n *           The fileName path like '/path/to/file.mp4'\r\n *\r\n * @return  {string}\r\n *           The extension in lower case or an empty string if no\r\n *           extension could be found.\r\n */\r\n\r\nvar getFileExtension = function getFileExtension(path) {\r\n  if (typeof path === 'string') {\r\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\r\n    var pathParts = splitPathRe.exec(path);\r\n\r\n    if (pathParts) {\r\n      return pathParts.pop().toLowerCase();\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n/**\r\n * Returns whether the url passed is a cross domain request or not.\r\n *\r\n * @function\r\n * @param    {string} url\r\n *           The url to check.\r\n *\r\n * @param    {Object} [winLoc]\r\n *           the domain to check the url against, defaults to window.location\r\n *\r\n * @param    {string} [winLoc.protocol]\r\n *           The window location protocol defaults to window.location.protocol\r\n *\r\n * @param    {string} [winLoc.host]\r\n *           The window location host defaults to window.location.host\r\n *\r\n * @return   {boolean}\r\n *           Whether it is a cross domain request or not.\r\n */\r\n\r\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\r\n  if (winLoc === void 0) {\r\n    winLoc = window$1.location;\r\n  }\r\n\r\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\r\n\r\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\r\n  // IE8 doesn't know location.origin, so we won't rely on it here\r\n\r\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\r\n  return crossOrigin;\r\n};\r\n\r\nvar Url = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  parseUrl: parseUrl,\r\n  getAbsoluteURL: getAbsoluteURL,\r\n  getFileExtension: getFileExtension,\r\n  isCrossOrigin: isCrossOrigin\r\n});\r\n\r\n/**\r\n * Takes a webvtt file contents and parses it into cues\r\n *\r\n * @param {string} srcContent\r\n *        webVTT file contents\r\n *\r\n * @param {TextTrack} track\r\n *        TextTrack to add cues to. Cues come from the srcContent.\r\n *\r\n * @private\r\n */\r\n\r\nvar parseCues = function parseCues(srcContent, track) {\r\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\r\n  var errors = [];\r\n\r\n  parser.oncue = function (cue) {\r\n    track.addCue(cue);\r\n  };\r\n\r\n  parser.onparsingerror = function (error) {\r\n    errors.push(error);\r\n  };\r\n\r\n  parser.onflush = function () {\r\n    track.trigger({\r\n      type: 'loadeddata',\r\n      target: track\r\n    });\r\n  };\r\n\r\n  parser.parse(srcContent);\r\n\r\n  if (errors.length > 0) {\r\n    if (window$1.console && window$1.console.groupCollapsed) {\r\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\r\n    }\r\n\r\n    errors.forEach(function (error) {\r\n      return log$1.error(error);\r\n    });\r\n\r\n    if (window$1.console && window$1.console.groupEnd) {\r\n      window$1.console.groupEnd();\r\n    }\r\n  }\r\n\r\n  parser.flush();\r\n};\r\n/**\r\n * Load a `TextTrack` from a specified url.\r\n *\r\n * @param {string} src\r\n *        Url to load track from.\r\n *\r\n * @param {TextTrack} track\r\n *        Track to add cues to. Comes from the content at the end of `url`.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nvar loadTrack = function loadTrack(src, track) {\r\n  var opts = {\r\n    uri: src\r\n  };\r\n  var crossOrigin = isCrossOrigin(src);\r\n\r\n  if (crossOrigin) {\r\n    opts.cors = crossOrigin;\r\n  }\r\n\r\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\r\n\r\n  if (withCredentials) {\r\n    opts.withCredentials = withCredentials;\r\n  }\r\n\r\n  XHR(opts, bind(this, function (err, response, responseBody) {\r\n    if (err) {\r\n      return log$1.error(err, response);\r\n    }\r\n\r\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\r\n    // NOTE: this is only used for the alt/video.novtt.js build\r\n\r\n    if (typeof window$1.WebVTT !== 'function') {\r\n      if (track.tech_) {\r\n        // to prevent use before define eslint error, we define loadHandler\r\n        // as a let here\r\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\r\n          if (event.type === 'vttjserror') {\r\n            log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\r\n            return;\r\n          }\r\n\r\n          return parseCues(responseBody, track);\r\n        });\r\n      }\r\n    } else {\r\n      parseCues(responseBody, track);\r\n    }\r\n  }));\r\n};\r\n/**\r\n * A representation of a single `TextTrack`.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\r\n * @extends Track\r\n */\r\n\r\n\r\nvar TextTrack = /*#__PURE__*/function (_Track) {\r\n  _inheritsLoose(TextTrack, _Track);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} options={}\r\n   *        Object of option names and values\r\n   *\r\n   * @param {Tech} options.tech\r\n   *        A reference to the tech that owns this TextTrack.\r\n   *\r\n   * @param {TextTrack~Kind} [options.kind='subtitles']\r\n   *        A valid text track kind.\r\n   *\r\n   * @param {TextTrack~Mode} [options.mode='disabled']\r\n   *        A valid text track mode.\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this TextTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {string} [options.srclang='']\r\n   *        A valid two character language code. An alternative, but deprioritized\r\n   *        version of `options.language`\r\n   *\r\n   * @param {string} [options.src]\r\n   *        A url to TextTrack cues.\r\n   *\r\n   * @param {boolean} [options.default]\r\n   *        If this track should default to on or off.\r\n   */\r\n  function TextTrack(options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (!options.tech) {\r\n      throw new Error('A tech was not provided.');\r\n    }\r\n\r\n    var settings = mergeOptions$3(options, {\r\n      kind: TextTrackKind[options.kind] || 'subtitles',\r\n      language: options.language || options.srclang || ''\r\n    });\r\n    var mode = TextTrackMode[settings.mode] || 'disabled';\r\n    var default_ = settings[\"default\"];\r\n\r\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\r\n      mode = 'hidden';\r\n    }\r\n\r\n    _this = _Track.call(this, settings) || this;\r\n    _this.tech_ = settings.tech;\r\n    _this.cues_ = [];\r\n    _this.activeCues_ = [];\r\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\r\n    var cues = new TextTrackCueList(_this.cues_);\r\n    var activeCues = new TextTrackCueList(_this.activeCues_);\r\n    var changed = false;\r\n    _this.timeupdateHandler = bind(_assertThisInitialized(_this), function (event) {\r\n      if (event === void 0) {\r\n        event = {};\r\n      }\r\n\r\n      if (this.tech_.isDisposed()) {\r\n        return;\r\n      }\r\n\r\n      if (!this.tech_.isReady_) {\r\n        if (event.type !== 'timeupdate') {\r\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\r\n        }\r\n\r\n        return;\r\n      } // Accessing this.activeCues for the side-effects of updating itself\r\n      // due to its nature as a getter function. Do not remove or cues will\r\n      // stop updating!\r\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\r\n\r\n\r\n      this.activeCues = this.activeCues;\r\n\r\n      if (changed) {\r\n        this.trigger('cuechange');\r\n        changed = false;\r\n      }\r\n\r\n      if (event.type !== 'timeupdate') {\r\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\r\n      }\r\n    });\r\n\r\n    var disposeHandler = function disposeHandler() {\r\n      _this.stopTracking();\r\n    };\r\n\r\n    _this.tech_.one('dispose', disposeHandler);\r\n\r\n    if (mode !== 'disabled') {\r\n      _this.startTracking();\r\n    }\r\n\r\n    Object.defineProperties(_assertThisInitialized(_this), {\r\n      /**\r\n       * @memberof TextTrack\r\n       * @member {boolean} default\r\n       *         If this track was set to be on or off by default. Cannot be changed after\r\n       *         creation.\r\n       * @instance\r\n       *\r\n       * @readonly\r\n       */\r\n      \"default\": {\r\n        get: function get() {\r\n          return default_;\r\n        },\r\n        set: function set() {}\r\n      },\r\n\r\n      /**\r\n       * @memberof TextTrack\r\n       * @member {string} mode\r\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\r\n       *         not be set if setting to an invalid mode.\r\n       * @instance\r\n       *\r\n       * @fires TextTrack#modechange\r\n       */\r\n      mode: {\r\n        get: function get() {\r\n          return mode;\r\n        },\r\n        set: function set(newMode) {\r\n          if (!TextTrackMode[newMode]) {\r\n            return;\r\n          }\r\n\r\n          if (mode === newMode) {\r\n            return;\r\n          }\r\n\r\n          mode = newMode;\r\n\r\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\r\n            // On-demand load.\r\n            loadTrack(this.src, this);\r\n          }\r\n\r\n          this.stopTracking();\r\n\r\n          if (mode !== 'disabled') {\r\n            this.startTracking();\r\n          }\r\n          /**\r\n           * An event that fires when mode changes on this track. This allows\r\n           * the TextTrackList that holds this track to act accordingly.\r\n           *\r\n           * > Note: This is not part of the spec!\r\n           *\r\n           * @event TextTrack#modechange\r\n           * @type {EventTarget~Event}\r\n           */\r\n\r\n\r\n          this.trigger('modechange');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @memberof TextTrack\r\n       * @member {TextTrackCueList} cues\r\n       *         The text track cue list for this TextTrack.\r\n       * @instance\r\n       */\r\n      cues: {\r\n        get: function get() {\r\n          if (!this.loaded_) {\r\n            return null;\r\n          }\r\n\r\n          return cues;\r\n        },\r\n        set: function set() {}\r\n      },\r\n\r\n      /**\r\n       * @memberof TextTrack\r\n       * @member {TextTrackCueList} activeCues\r\n       *         The list text track cues that are currently active for this TextTrack.\r\n       * @instance\r\n       */\r\n      activeCues: {\r\n        get: function get() {\r\n          if (!this.loaded_) {\r\n            return null;\r\n          } // nothing to do\r\n\r\n\r\n          if (this.cues.length === 0) {\r\n            return activeCues;\r\n          }\r\n\r\n          var ct = this.tech_.currentTime();\r\n          var active = [];\r\n\r\n          for (var i = 0, l = this.cues.length; i < l; i++) {\r\n            var cue = this.cues[i];\r\n\r\n            if (cue.startTime <= ct && cue.endTime >= ct) {\r\n              active.push(cue);\r\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\r\n              active.push(cue);\r\n            }\r\n          }\r\n\r\n          changed = false;\r\n\r\n          if (active.length !== this.activeCues_.length) {\r\n            changed = true;\r\n          } else {\r\n            for (var _i = 0; _i < active.length; _i++) {\r\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\r\n                changed = true;\r\n              }\r\n            }\r\n          }\r\n\r\n          this.activeCues_ = active;\r\n          activeCues.setCues_(this.activeCues_);\r\n          return activeCues;\r\n        },\r\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\r\n        set: function set() {}\r\n      }\r\n    });\r\n\r\n    if (settings.src) {\r\n      _this.src = settings.src;\r\n\r\n      if (!_this.preload_) {\r\n        // Tracks will load on-demand.\r\n        // Act like we're loaded for other purposes.\r\n        _this.loaded_ = true;\r\n      }\r\n\r\n      if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\r\n        loadTrack(_this.src, _assertThisInitialized(_this));\r\n      }\r\n    } else {\r\n      _this.loaded_ = true;\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = TextTrack.prototype;\r\n\r\n  _proto.startTracking = function startTracking() {\r\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\r\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler); // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\r\n\r\n    this.tech_.on('timeupdate', this.timeupdateHandler);\r\n  };\r\n\r\n  _proto.stopTracking = function stopTracking() {\r\n    if (this.rvf_) {\r\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\r\n      this.rvf_ = undefined;\r\n    }\r\n\r\n    this.tech_.off('timeupdate', this.timeupdateHandler);\r\n  }\r\n  /**\r\n   * Add a cue to the internal list of cues.\r\n   *\r\n   * @param {TextTrack~Cue} cue\r\n   *        The cue to add to our internal list\r\n   */\r\n  ;\r\n\r\n  _proto.addCue = function addCue(originalCue) {\r\n    var cue = originalCue;\r\n\r\n    if (cue.constructor && cue.constructor.name !== 'VTTCue') {\r\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\r\n\r\n      for (var prop in originalCue) {\r\n        if (!(prop in cue)) {\r\n          cue[prop] = originalCue[prop];\r\n        }\r\n      } // make sure that `id` is copied over\r\n\r\n\r\n      cue.id = originalCue.id;\r\n      cue.originalCue_ = originalCue;\r\n    }\r\n\r\n    var tracks = this.tech_.textTracks();\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      if (tracks[i] !== this) {\r\n        tracks[i].removeCue(cue);\r\n      }\r\n    }\r\n\r\n    this.cues_.push(cue);\r\n    this.cues.setCues_(this.cues_);\r\n  }\r\n  /**\r\n   * Remove a cue from our internal list\r\n   *\r\n   * @param {TextTrack~Cue} removeCue\r\n   *        The cue to remove from our internal list\r\n   */\r\n  ;\r\n\r\n  _proto.removeCue = function removeCue(_removeCue) {\r\n    var i = this.cues_.length;\r\n\r\n    while (i--) {\r\n      var cue = this.cues_[i];\r\n\r\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\r\n        this.cues_.splice(i, 1);\r\n        this.cues.setCues_(this.cues_);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return TextTrack;\r\n}(Track);\r\n/**\r\n * cuechange - One or more cues in the track have become active or stopped being active.\r\n */\r\n\r\n\r\nTextTrack.prototype.allowedEvents_ = {\r\n  cuechange: 'cuechange'\r\n};\r\n\r\n/**\r\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\r\n * only one `AudioTrack` in the list will be enabled at a time.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\r\n * @extends Track\r\n */\r\n\r\nvar AudioTrack = /*#__PURE__*/function (_Track) {\r\n  _inheritsLoose(AudioTrack, _Track);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        Object of option names and values\r\n   *\r\n   * @param {AudioTrack~Kind} [options.kind='']\r\n   *        A valid audio track kind\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this AudioTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {boolean} [options.enabled]\r\n   *        If this track is the one that is currently playing. If this track is part of\r\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\r\n   */\r\n  function AudioTrack(options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var settings = mergeOptions$3(options, {\r\n      kind: AudioTrackKind[options.kind] || ''\r\n    });\r\n    _this = _Track.call(this, settings) || this;\r\n    var enabled = false;\r\n    /**\r\n     * @memberof AudioTrack\r\n     * @member {boolean} enabled\r\n     *         If this `AudioTrack` is enabled or not. When setting this will\r\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\r\n     * @instance\r\n     *\r\n     * @fires VideoTrack#selectedchange\r\n     */\r\n\r\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\r\n      get: function get() {\r\n        return enabled;\r\n      },\r\n      set: function set(newEnabled) {\r\n        // an invalid or unchanged value\r\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\r\n          return;\r\n        }\r\n\r\n        enabled = newEnabled;\r\n        /**\r\n         * An event that fires when enabled changes on this track. This allows\r\n         * the AudioTrackList that holds this track to act accordingly.\r\n         *\r\n         * > Note: This is not part of the spec! Native tracks will do\r\n         *         this internally without an event.\r\n         *\r\n         * @event AudioTrack#enabledchange\r\n         * @type {EventTarget~Event}\r\n         */\r\n\r\n        this.trigger('enabledchange');\r\n      }\r\n    }); // if the user sets this track to selected then\r\n    // set selected to that true value otherwise\r\n    // we keep it false\r\n\r\n    if (settings.enabled) {\r\n      _this.enabled = settings.enabled;\r\n    }\r\n\r\n    _this.loaded_ = true;\r\n    return _this;\r\n  }\r\n\r\n  return AudioTrack;\r\n}(Track);\r\n\r\n/**\r\n * A representation of a single `VideoTrack`.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\r\n * @extends Track\r\n */\r\n\r\nvar VideoTrack = /*#__PURE__*/function (_Track) {\r\n  _inheritsLoose(VideoTrack, _Track);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        Object of option names and values\r\n   *\r\n   * @param {string} [options.kind='']\r\n   *        A valid {@link VideoTrack~Kind}\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this AudioTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {boolean} [options.selected]\r\n   *        If this track is the one that is currently playing.\r\n   */\r\n  function VideoTrack(options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var settings = mergeOptions$3(options, {\r\n      kind: VideoTrackKind[options.kind] || ''\r\n    });\r\n    _this = _Track.call(this, settings) || this;\r\n    var selected = false;\r\n    /**\r\n     * @memberof VideoTrack\r\n     * @member {boolean} selected\r\n     *         If this `VideoTrack` is selected or not. When setting this will\r\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\r\n     * @instance\r\n     *\r\n     * @fires VideoTrack#selectedchange\r\n     */\r\n\r\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\r\n      get: function get() {\r\n        return selected;\r\n      },\r\n      set: function set(newSelected) {\r\n        // an invalid or unchanged value\r\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\r\n          return;\r\n        }\r\n\r\n        selected = newSelected;\r\n        /**\r\n         * An event that fires when selected changes on this track. This allows\r\n         * the VideoTrackList that holds this track to act accordingly.\r\n         *\r\n         * > Note: This is not part of the spec! Native tracks will do\r\n         *         this internally without an event.\r\n         *\r\n         * @event VideoTrack#selectedchange\r\n         * @type {EventTarget~Event}\r\n         */\r\n\r\n        this.trigger('selectedchange');\r\n      }\r\n    }); // if the user sets this track to selected then\r\n    // set selected to that true value otherwise\r\n    // we keep it false\r\n\r\n    if (settings.selected) {\r\n      _this.selected = settings.selected;\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  return VideoTrack;\r\n}(Track);\r\n\r\n/**\r\n * @memberof HTMLTrackElement\r\n * @typedef {HTMLTrackElement~ReadyState}\r\n * @enum {number}\r\n */\r\n\r\nvar NONE = 0;\r\nvar LOADING = 1;\r\nvar LOADED = 2;\r\nvar ERROR = 3;\r\n/**\r\n * A single track represented in the DOM.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\r\n * @extends EventTarget\r\n */\r\n\r\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\r\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} options={}\r\n   *        Object of option names and values\r\n   *\r\n   * @param {Tech} options.tech\r\n   *        A reference to the tech that owns this HTMLTrackElement.\r\n   *\r\n   * @param {TextTrack~Kind} [options.kind='subtitles']\r\n   *        A valid text track kind.\r\n   *\r\n   * @param {TextTrack~Mode} [options.mode='disabled']\r\n   *        A valid text track mode.\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this TextTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {string} [options.srclang='']\r\n   *        A valid two character language code. An alternative, but deprioritized\r\n   *        version of `options.language`\r\n   *\r\n   * @param {string} [options.src]\r\n   *        A url to TextTrack cues.\r\n   *\r\n   * @param {boolean} [options.default]\r\n   *        If this track should default to on or off.\r\n   */\r\n  function HTMLTrackElement(options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _EventTarget.call(this) || this;\r\n    var readyState;\r\n    var track = new TextTrack(options);\r\n    _this.kind = track.kind;\r\n    _this.src = track.src;\r\n    _this.srclang = track.language;\r\n    _this.label = track.label;\r\n    _this[\"default\"] = track[\"default\"];\r\n    Object.defineProperties(_assertThisInitialized(_this), {\r\n      /**\r\n       * @memberof HTMLTrackElement\r\n       * @member {HTMLTrackElement~ReadyState} readyState\r\n       *         The current ready state of the track element.\r\n       * @instance\r\n       */\r\n      readyState: {\r\n        get: function get() {\r\n          return readyState;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @memberof HTMLTrackElement\r\n       * @member {TextTrack} track\r\n       *         The underlying TextTrack object.\r\n       * @instance\r\n       *\r\n       */\r\n      track: {\r\n        get: function get() {\r\n          return track;\r\n        }\r\n      }\r\n    });\r\n    readyState = NONE;\r\n    /**\r\n     * @listens TextTrack#loadeddata\r\n     * @fires HTMLTrackElement#load\r\n     */\r\n\r\n    track.addEventListener('loadeddata', function () {\r\n      readyState = LOADED;\r\n\r\n      _this.trigger({\r\n        type: 'load',\r\n        target: _assertThisInitialized(_this)\r\n      });\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  return HTMLTrackElement;\r\n}(EventTarget$2);\r\n\r\nHTMLTrackElement.prototype.allowedEvents_ = {\r\n  load: 'load'\r\n};\r\nHTMLTrackElement.NONE = NONE;\r\nHTMLTrackElement.LOADING = LOADING;\r\nHTMLTrackElement.LOADED = LOADED;\r\nHTMLTrackElement.ERROR = ERROR;\r\n\r\n/*\r\n * This file contains all track properties that are used in\r\n * player.js, tech.js, html5.js and possibly other techs in the future.\r\n */\r\n\r\nvar NORMAL = {\r\n  audio: {\r\n    ListClass: AudioTrackList,\r\n    TrackClass: AudioTrack,\r\n    capitalName: 'Audio'\r\n  },\r\n  video: {\r\n    ListClass: VideoTrackList,\r\n    TrackClass: VideoTrack,\r\n    capitalName: 'Video'\r\n  },\r\n  text: {\r\n    ListClass: TextTrackList,\r\n    TrackClass: TextTrack,\r\n    capitalName: 'Text'\r\n  }\r\n};\r\nObject.keys(NORMAL).forEach(function (type) {\r\n  NORMAL[type].getterName = type + \"Tracks\";\r\n  NORMAL[type].privateName = type + \"Tracks_\";\r\n});\r\nvar REMOTE = {\r\n  remoteText: {\r\n    ListClass: TextTrackList,\r\n    TrackClass: TextTrack,\r\n    capitalName: 'RemoteText',\r\n    getterName: 'remoteTextTracks',\r\n    privateName: 'remoteTextTracks_'\r\n  },\r\n  remoteTextEl: {\r\n    ListClass: HtmlTrackElementList,\r\n    TrackClass: HTMLTrackElement,\r\n    capitalName: 'RemoteTextTrackEls',\r\n    getterName: 'remoteTextTrackEls',\r\n    privateName: 'remoteTextTrackEls_'\r\n  }\r\n};\r\n\r\nvar ALL = _extends({}, NORMAL, REMOTE);\r\n\r\nREMOTE.names = Object.keys(REMOTE);\r\nNORMAL.names = Object.keys(NORMAL);\r\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\r\n\r\n/**\r\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\r\n * that just contains the src url alone.\r\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\r\n   * `var SourceString = 'http://example.com/some-video.mp4';`\r\n *\r\n * @typedef {Object|string} Tech~SourceObject\r\n *\r\n * @property {string} src\r\n *           The url to the source\r\n *\r\n * @property {string} type\r\n *           The mime type of the source\r\n */\r\n\r\n/**\r\n * A function used by {@link Tech} to create a new {@link TextTrack}.\r\n *\r\n * @private\r\n *\r\n * @param {Tech} self\r\n *        An instance of the Tech class.\r\n *\r\n * @param {string} kind\r\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\r\n *\r\n * @param {string} [label]\r\n *        Label to identify the text track\r\n *\r\n * @param {string} [language]\r\n *        Two letter language abbreviation\r\n *\r\n * @param {Object} [options={}]\r\n *        An object with additional text track options\r\n *\r\n * @return {TextTrack}\r\n *          The text track that was created.\r\n */\r\n\r\nfunction createTrackHelper(self, kind, label, language, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var tracks = self.textTracks();\r\n  options.kind = kind;\r\n\r\n  if (label) {\r\n    options.label = label;\r\n  }\r\n\r\n  if (language) {\r\n    options.language = language;\r\n  }\r\n\r\n  options.tech = self;\r\n  var track = new ALL.text.TrackClass(options);\r\n  tracks.addTrack(track);\r\n  return track;\r\n}\r\n/**\r\n * This is the base class for media playback technology controllers, such as\r\n * {@link HTML5}\r\n *\r\n * @extends Component\r\n */\r\n\r\n\r\nvar Tech = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Tech, _Component);\r\n\r\n  /**\r\n  * Create an instance of this Tech.\r\n  *\r\n  * @param {Object} [options]\r\n  *        The key/value store of player options.\r\n  *\r\n  * @param {Component~ReadyCallback} ready\r\n  *        Callback function to call when the `HTML5` Tech is ready.\r\n  */\r\n  function Tech(options, ready) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (ready === void 0) {\r\n      ready = function ready() {};\r\n    }\r\n\r\n    // we don't want the tech to report user activity automatically.\r\n    // This is done manually in addControlsListeners\r\n    options.reportTouchActivity = false;\r\n    _this = _Component.call(this, null, options, ready) || this;\r\n\r\n    _this.onDurationChange_ = function (e) {\r\n      return _this.onDurationChange(e);\r\n    };\r\n\r\n    _this.trackProgress_ = function (e) {\r\n      return _this.trackProgress(e);\r\n    };\r\n\r\n    _this.trackCurrentTime_ = function (e) {\r\n      return _this.trackCurrentTime(e);\r\n    };\r\n\r\n    _this.stopTrackingCurrentTime_ = function (e) {\r\n      return _this.stopTrackingCurrentTime(e);\r\n    };\r\n\r\n    _this.disposeSourceHandler_ = function (e) {\r\n      return _this.disposeSourceHandler(e);\r\n    };\r\n\r\n    _this.queuedHanders_ = new Set(); // keep track of whether the current source has played at all to\r\n    // implement a very limited played()\r\n\r\n    _this.hasStarted_ = false;\r\n\r\n    _this.on('playing', function () {\r\n      this.hasStarted_ = true;\r\n    });\r\n\r\n    _this.on('loadstart', function () {\r\n      this.hasStarted_ = false;\r\n    });\r\n\r\n    ALL.names.forEach(function (name) {\r\n      var props = ALL[name];\r\n\r\n      if (options && options[props.getterName]) {\r\n        _this[props.privateName] = options[props.getterName];\r\n      }\r\n    }); // Manually track progress in cases where the browser/tech doesn't report it.\r\n\r\n    if (!_this.featuresProgressEvents) {\r\n      _this.manualProgressOn();\r\n    } // Manually track timeupdates in cases where the browser/tech doesn't report it.\r\n\r\n\r\n    if (!_this.featuresTimeupdateEvents) {\r\n      _this.manualTimeUpdatesOn();\r\n    }\r\n\r\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\r\n      if (options[\"native\" + track + \"Tracks\"] === false) {\r\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\r\n      }\r\n    });\r\n\r\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\r\n      _this.featuresNativeTextTracks = false;\r\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\r\n      _this.featuresNativeTextTracks = true;\r\n    }\r\n\r\n    if (!_this.featuresNativeTextTracks) {\r\n      _this.emulateTextTracks();\r\n    }\r\n\r\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\r\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\r\n\r\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\r\n\r\n\r\n    if (!options.nativeControlsForTouch) {\r\n      _this.emitTapEvents();\r\n    }\r\n\r\n    if (_this.constructor) {\r\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * A special function to trigger source set in a way that will allow player\r\n   * to re-trigger if the player or tech are not ready yet.\r\n   *\r\n   * @fires Tech#sourceset\r\n   * @param {string} src The source string at the time of the source changing.\r\n   */\r\n\r\n\r\n  var _proto = Tech.prototype;\r\n\r\n  _proto.triggerSourceset = function triggerSourceset(src) {\r\n    var _this2 = this;\r\n\r\n    if (!this.isReady_) {\r\n      // on initial ready we have to trigger source set\r\n      // 1ms after ready so that player can watch for it.\r\n      this.one('ready', function () {\r\n        return _this2.setTimeout(function () {\r\n          return _this2.triggerSourceset(src);\r\n        }, 1);\r\n      });\r\n    }\r\n    /**\r\n     * Fired when the source is set on the tech causing the media element\r\n     * to reload.\r\n     *\r\n     * @see {@link Player#event:sourceset}\r\n     * @event Tech#sourceset\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n\r\n    this.trigger({\r\n      src: src,\r\n      type: 'sourceset'\r\n    });\r\n  }\r\n  /* Fallbacks for unsupported event types\r\n  ================================================================================ */\r\n\r\n  /**\r\n   * Polyfill the `progress` event for browsers that don't support it natively.\r\n   *\r\n   * @see {@link Tech#trackProgress}\r\n   */\r\n  ;\r\n\r\n  _proto.manualProgressOn = function manualProgressOn() {\r\n    this.on('durationchange', this.onDurationChange_);\r\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\r\n\r\n    this.one('ready', this.trackProgress_);\r\n  }\r\n  /**\r\n   * Turn off the polyfill for `progress` events that was created in\r\n   * {@link Tech#manualProgressOn}\r\n   */\r\n  ;\r\n\r\n  _proto.manualProgressOff = function manualProgressOff() {\r\n    this.manualProgress = false;\r\n    this.stopTrackingProgress();\r\n    this.off('durationchange', this.onDurationChange_);\r\n  }\r\n  /**\r\n   * This is used to trigger a `progress` event when the buffered percent changes. It\r\n   * sets an interval function that will be called every 500 milliseconds to check if the\r\n   * buffer end percent has changed.\r\n   *\r\n   * > This function is called by {@link Tech#manualProgressOn}\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `ready` event that caused this to run.\r\n   *\r\n   * @listens Tech#ready\r\n   * @fires Tech#progress\r\n   */\r\n  ;\r\n\r\n  _proto.trackProgress = function trackProgress(event) {\r\n    this.stopTrackingProgress();\r\n    this.progressInterval = this.setInterval(bind(this, function () {\r\n      // Don't trigger unless buffered amount is greater than last time\r\n      var numBufferedPercent = this.bufferedPercent();\r\n\r\n      if (this.bufferedPercent_ !== numBufferedPercent) {\r\n        /**\r\n         * See {@link Player#progress}\r\n         *\r\n         * @event Tech#progress\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('progress');\r\n      }\r\n\r\n      this.bufferedPercent_ = numBufferedPercent;\r\n\r\n      if (numBufferedPercent === 1) {\r\n        this.stopTrackingProgress();\r\n      }\r\n    }), 500);\r\n  }\r\n  /**\r\n   * Update our internal duration on a `durationchange` event by calling\r\n   * {@link Tech#duration}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `durationchange` event that caused this to run.\r\n   *\r\n   * @listens Tech#durationchange\r\n   */\r\n  ;\r\n\r\n  _proto.onDurationChange = function onDurationChange(event) {\r\n    this.duration_ = this.duration();\r\n  }\r\n  /**\r\n   * Get and create a `TimeRange` object for buffering.\r\n   *\r\n   * @return {TimeRange}\r\n   *         The time range object that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.buffered = function buffered() {\r\n    return createTimeRanges(0, 0);\r\n  }\r\n  /**\r\n   * Get the percentage of the current video that is currently buffered.\r\n   *\r\n   * @return {number}\r\n   *         A number from 0 to 1 that represents the decimal percentage of the\r\n   *         video that is buffered.\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.bufferedPercent = function bufferedPercent$1() {\r\n    return bufferedPercent(this.buffered(), this.duration_);\r\n  }\r\n  /**\r\n   * Turn off the polyfill for `progress` events that was created in\r\n   * {@link Tech#manualProgressOn}\r\n   * Stop manually tracking progress events by clearing the interval that was set in\r\n   * {@link Tech#trackProgress}.\r\n   */\r\n  ;\r\n\r\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\r\n    this.clearInterval(this.progressInterval);\r\n  }\r\n  /**\r\n   * Polyfill the `timeupdate` event for browsers that don't support it.\r\n   *\r\n   * @see {@link Tech#trackCurrentTime}\r\n   */\r\n  ;\r\n\r\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\r\n    this.manualTimeUpdates = true;\r\n    this.on('play', this.trackCurrentTime_);\r\n    this.on('pause', this.stopTrackingCurrentTime_);\r\n  }\r\n  /**\r\n   * Turn off the polyfill for `timeupdate` events that was created in\r\n   * {@link Tech#manualTimeUpdatesOn}\r\n   */\r\n  ;\r\n\r\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\r\n    this.manualTimeUpdates = false;\r\n    this.stopTrackingCurrentTime();\r\n    this.off('play', this.trackCurrentTime_);\r\n    this.off('pause', this.stopTrackingCurrentTime_);\r\n  }\r\n  /**\r\n   * Sets up an interval function to track current time and trigger `timeupdate` every\r\n   * 250 milliseconds.\r\n   *\r\n   * @listens Tech#play\r\n   * @triggers Tech#timeupdate\r\n   */\r\n  ;\r\n\r\n  _proto.trackCurrentTime = function trackCurrentTime() {\r\n    if (this.currentTimeInterval) {\r\n      this.stopTrackingCurrentTime();\r\n    }\r\n\r\n    this.currentTimeInterval = this.setInterval(function () {\r\n      /**\r\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\r\n       *\r\n       * @event Tech#timeupdate\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger({\r\n        type: 'timeupdate',\r\n        target: this,\r\n        manuallyTriggered: true\r\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\r\n    }, 250);\r\n  }\r\n  /**\r\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\r\n   * `timeupdate` event is no longer triggered.\r\n   *\r\n   * @listens {Tech#pause}\r\n   */\r\n  ;\r\n\r\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\r\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\r\n    // the progress bar won't make it all the way to the end\r\n\r\n    this.trigger({\r\n      type: 'timeupdate',\r\n      target: this,\r\n      manuallyTriggered: true\r\n    });\r\n  }\r\n  /**\r\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\r\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\r\n   *\r\n   * @fires Component#dispose\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    // clear out all tracks because we can't reuse them between techs\r\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\r\n\r\n    if (this.manualProgress) {\r\n      this.manualProgressOff();\r\n    }\r\n\r\n    if (this.manualTimeUpdates) {\r\n      this.manualTimeUpdatesOff();\r\n    }\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\r\n   *\r\n   * > Note: Techs without source handlers should call this between sources for `video`\r\n   *         & `audio` tracks. You don't want to use them between tracks!\r\n   *\r\n   * @param {string[]|string} types\r\n   *        TrackList names to clear, valid names are `video`, `audio`, and\r\n   *        `text`.\r\n   */\r\n  ;\r\n\r\n  _proto.clearTracks = function clearTracks(types) {\r\n    var _this3 = this;\r\n\r\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\r\n\r\n    types.forEach(function (type) {\r\n      var list = _this3[type + \"Tracks\"]() || [];\r\n      var i = list.length;\r\n\r\n      while (i--) {\r\n        var track = list[i];\r\n\r\n        if (type === 'text') {\r\n          _this3.removeRemoteTextTrack(track);\r\n        }\r\n\r\n        list.removeTrack(track);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Remove any TextTracks added via addRemoteTextTrack that are\r\n   * flagged for automatic garbage collection\r\n   */\r\n  ;\r\n\r\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\r\n    var list = this.autoRemoteTextTracks_ || [];\r\n    var i = list.length;\r\n\r\n    while (i--) {\r\n      var track = list[i];\r\n      this.removeRemoteTextTrack(track);\r\n    }\r\n  }\r\n  /**\r\n   * Reset the tech, which will removes all sources and reset the internal readyState.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.reset = function reset() {}\r\n  /**\r\n   * Get the value of `crossOrigin` from the tech.\r\n   *\r\n   * @abstract\r\n   *\r\n   * @see {Html5#crossOrigin}\r\n   */\r\n  ;\r\n\r\n  _proto.crossOrigin = function crossOrigin() {}\r\n  /**\r\n   * Set the value of `crossOrigin` on the tech.\r\n   *\r\n   * @abstract\r\n   *\r\n   * @param {string} crossOrigin the crossOrigin value\r\n   * @see {Html5#setCrossOrigin}\r\n   */\r\n  ;\r\n\r\n  _proto.setCrossOrigin = function setCrossOrigin() {}\r\n  /**\r\n   * Get or set an error on the Tech.\r\n   *\r\n   * @param {MediaError} [err]\r\n   *        Error to set on the Tech\r\n   *\r\n   * @return {MediaError|null}\r\n   *         The current error object on the tech, or null if there isn't one.\r\n   */\r\n  ;\r\n\r\n  _proto.error = function error(err) {\r\n    if (err !== undefined) {\r\n      this.error_ = new MediaError(err);\r\n      this.trigger('error');\r\n    }\r\n\r\n    return this.error_;\r\n  }\r\n  /**\r\n   * Returns the `TimeRange`s that have been played through for the current source.\r\n   *\r\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\r\n   *         It only checks whether the source has played at all or not.\r\n   *\r\n   * @return {TimeRange}\r\n   *         - A single time range if this video has played\r\n   *         - An empty set of ranges if not.\r\n   */\r\n  ;\r\n\r\n  _proto.played = function played() {\r\n    if (this.hasStarted_) {\r\n      return createTimeRanges(0, 0);\r\n    }\r\n\r\n    return createTimeRanges();\r\n  }\r\n  /**\r\n   * Start playback\r\n   *\r\n   * @abstract\r\n   *\r\n   * @see {Html5#play}\r\n   */\r\n  ;\r\n\r\n  _proto.play = function play() {}\r\n  /**\r\n   * Set whether we are scrubbing or not\r\n   *\r\n   * @abstract\r\n   *\r\n   * @see {Html5#setScrubbing}\r\n   */\r\n  ;\r\n\r\n  _proto.setScrubbing = function setScrubbing() {}\r\n  /**\r\n   * Get whether we are scrubbing or not\r\n   *\r\n   * @abstract\r\n   *\r\n   * @see {Html5#scrubbing}\r\n   */\r\n  ;\r\n\r\n  _proto.scrubbing = function scrubbing() {}\r\n  /**\r\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\r\n   * previously called.\r\n   *\r\n   * @fires Tech#timeupdate\r\n   */\r\n  ;\r\n\r\n  _proto.setCurrentTime = function setCurrentTime() {\r\n    // improve the accuracy of manual timeupdates\r\n    if (this.manualTimeUpdates) {\r\n      /**\r\n       * A manual `timeupdate` event.\r\n       *\r\n       * @event Tech#timeupdate\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger({\r\n        type: 'timeupdate',\r\n        target: this,\r\n        manuallyTriggered: true\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\r\n   * {@link TextTrackList} events.\r\n   *\r\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\r\n   *\r\n   * @fires Tech#audiotrackchange\r\n   * @fires Tech#videotrackchange\r\n   * @fires Tech#texttrackchange\r\n   */\r\n  ;\r\n\r\n  _proto.initTrackListeners = function initTrackListeners() {\r\n    var _this4 = this;\r\n\r\n    /**\r\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\r\n      *\r\n      * @event Tech#audiotrackchange\r\n      * @type {EventTarget~Event}\r\n      */\r\n\r\n    /**\r\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\r\n      *\r\n      * @event Tech#videotrackchange\r\n      * @type {EventTarget~Event}\r\n      */\r\n\r\n    /**\r\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\r\n      *\r\n      * @event Tech#texttrackchange\r\n      * @type {EventTarget~Event}\r\n      */\r\n    NORMAL.names.forEach(function (name) {\r\n      var props = NORMAL[name];\r\n\r\n      var trackListChanges = function trackListChanges() {\r\n        _this4.trigger(name + \"trackchange\");\r\n      };\r\n\r\n      var tracks = _this4[props.getterName]();\r\n\r\n      tracks.addEventListener('removetrack', trackListChanges);\r\n      tracks.addEventListener('addtrack', trackListChanges);\r\n\r\n      _this4.on('dispose', function () {\r\n        tracks.removeEventListener('removetrack', trackListChanges);\r\n        tracks.removeEventListener('addtrack', trackListChanges);\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Emulate TextTracks using vtt.js if necessary\r\n   *\r\n   * @fires Tech#vttjsloaded\r\n   * @fires Tech#vttjserror\r\n   */\r\n  ;\r\n\r\n  _proto.addWebVttScript_ = function addWebVttScript_() {\r\n    var _this5 = this;\r\n\r\n    if (window$1.WebVTT) {\r\n      return;\r\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\r\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\r\n    // before inserting the WebVTT script\r\n\r\n\r\n    if (document.body.contains(this.el())) {\r\n      // load via require if available and vtt.js script location was not passed in\r\n      // as an option. novtt builds will turn the above require call into an empty object\r\n      // which will cause this if check to always fail.\r\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\r\n        this.trigger('vttjsloaded');\r\n        return;\r\n      } // load vtt.js via the script location option or the cdn of no location was\r\n      // passed in\r\n\r\n\r\n      var script = document.createElement('script');\r\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\r\n\r\n      script.onload = function () {\r\n        /**\r\n         * Fired when vtt.js is loaded.\r\n         *\r\n         * @event Tech#vttjsloaded\r\n         * @type {EventTarget~Event}\r\n         */\r\n        _this5.trigger('vttjsloaded');\r\n      };\r\n\r\n      script.onerror = function () {\r\n        /**\r\n         * Fired when vtt.js was not loaded due to an error\r\n         *\r\n         * @event Tech#vttjsloaded\r\n         * @type {EventTarget~Event}\r\n         */\r\n        _this5.trigger('vttjserror');\r\n      };\r\n\r\n      this.on('dispose', function () {\r\n        script.onload = null;\r\n        script.onerror = null;\r\n      }); // but have not loaded yet and we set it to true before the inject so that\r\n      // we don't overwrite the injected window.WebVTT if it loads right away\r\n\r\n      window$1.WebVTT = true;\r\n      this.el().parentNode.appendChild(script);\r\n    } else {\r\n      this.ready(this.addWebVttScript_);\r\n    }\r\n  }\r\n  /**\r\n   * Emulate texttracks\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.emulateTextTracks = function emulateTextTracks() {\r\n    var _this6 = this;\r\n\r\n    var tracks = this.textTracks();\r\n    var remoteTracks = this.remoteTextTracks();\r\n\r\n    var handleAddTrack = function handleAddTrack(e) {\r\n      return tracks.addTrack(e.track);\r\n    };\r\n\r\n    var handleRemoveTrack = function handleRemoveTrack(e) {\r\n      return tracks.removeTrack(e.track);\r\n    };\r\n\r\n    remoteTracks.on('addtrack', handleAddTrack);\r\n    remoteTracks.on('removetrack', handleRemoveTrack);\r\n    this.addWebVttScript_();\r\n\r\n    var updateDisplay = function updateDisplay() {\r\n      return _this6.trigger('texttrackchange');\r\n    };\r\n\r\n    var textTracksChanges = function textTracksChanges() {\r\n      updateDisplay();\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        var track = tracks[i];\r\n        track.removeEventListener('cuechange', updateDisplay);\r\n\r\n        if (track.mode === 'showing') {\r\n          track.addEventListener('cuechange', updateDisplay);\r\n        }\r\n      }\r\n    };\r\n\r\n    textTracksChanges();\r\n    tracks.addEventListener('change', textTracksChanges);\r\n    tracks.addEventListener('addtrack', textTracksChanges);\r\n    tracks.addEventListener('removetrack', textTracksChanges);\r\n    this.on('dispose', function () {\r\n      remoteTracks.off('addtrack', handleAddTrack);\r\n      remoteTracks.off('removetrack', handleRemoveTrack);\r\n      tracks.removeEventListener('change', textTracksChanges);\r\n      tracks.removeEventListener('addtrack', textTracksChanges);\r\n      tracks.removeEventListener('removetrack', textTracksChanges);\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        var track = tracks[i];\r\n        track.removeEventListener('cuechange', updateDisplay);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Create and returns a remote {@link TextTrack} object.\r\n   *\r\n   * @param {string} kind\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\r\n   *\r\n   * @param {string} [label]\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [language]\r\n   *        Two letter language abbreviation\r\n   *\r\n   * @return {TextTrack}\r\n   *         The TextTrack that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\r\n    if (!kind) {\r\n      throw new Error('TextTrack kind is required but was not provided');\r\n    }\r\n\r\n    return createTrackHelper(this, kind, label, language);\r\n  }\r\n  /**\r\n   * Create an emulated TextTrack for use by addRemoteTextTrack\r\n   *\r\n   * This is intended to be overridden by classes that inherit from\r\n   * Tech in order to create native or custom TextTracks.\r\n   *\r\n   * @param {Object} options\r\n   *        The object should contain the options to initialize the TextTrack with.\r\n   *\r\n   * @param {string} [options.kind]\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\r\n   *\r\n   * @param {string} [options.label].\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [options.language]\r\n   *        Two letter language abbreviation.\r\n   *\r\n   * @return {HTMLTrackElement}\r\n   *         The track element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\r\n    var track = mergeOptions$3(options, {\r\n      tech: this\r\n    });\r\n    return new REMOTE.remoteTextEl.TrackClass(track);\r\n  }\r\n  /**\r\n   * Creates a remote text track object and returns an html track element.\r\n   *\r\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\r\n   *\r\n   * @param {Object} options\r\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\r\n   *\r\n   * @param {boolean} [manualCleanup=true]\r\n   *        - When false: the TextTrack will be automatically removed from the video\r\n   *          element whenever the source changes\r\n   *        - When True: The TextTrack will have to be cleaned up manually\r\n   *\r\n   * @return {HTMLTrackElement}\r\n   *         An Html Track Element.\r\n   *\r\n   * @deprecated The default functionality for this function will be equivalent\r\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\r\n   *             also be removed.\r\n   */\r\n  ;\r\n\r\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\r\n    var _this7 = this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var htmlTrackElement = this.createRemoteTextTrack(options);\r\n\r\n    if (manualCleanup !== true && manualCleanup !== false) {\r\n      // deprecation warning\r\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\r\n      manualCleanup = true;\r\n    } // store HTMLTrackElement and TextTrack to remote list\r\n\r\n\r\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\r\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\r\n\r\n    if (manualCleanup !== true) {\r\n      // create the TextTrackList if it doesn't exist\r\n      this.ready(function () {\r\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\r\n      });\r\n    }\r\n\r\n    return htmlTrackElement;\r\n  }\r\n  /**\r\n   * Remove a remote text track from the remote `TextTrackList`.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        `TextTrack` to remove from the `TextTrackList`\r\n   */\r\n  ;\r\n\r\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\r\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\r\n\r\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\r\n    this.remoteTextTracks().removeTrack(track);\r\n    this.autoRemoteTextTracks_.removeTrack(track);\r\n  }\r\n  /**\r\n   * Gets available media playback quality metrics as specified by the W3C's Media\r\n   * Playback Quality API.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\r\n   *\r\n   * @return {Object}\r\n   *         An object with supported media playback quality metrics\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\r\n    return {};\r\n  }\r\n  /**\r\n   * Attempt to create a floating video window always on top of other windows\r\n   * so that users may continue consuming media while they interact with other\r\n   * content sites, or applications on their device.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\r\n   *\r\n   * @return {Promise|undefined}\r\n   *         A promise with a Picture-in-Picture window if the browser supports\r\n   *         Promises (or one was passed in as an option). It returns undefined\r\n   *         otherwise.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (PromiseClass) {\r\n      return PromiseClass.reject();\r\n    }\r\n  }\r\n  /**\r\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\r\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\r\n    return true;\r\n  }\r\n  /**\r\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\r\n  /**\r\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\r\n   *\r\n   * @param {function} cb\r\n   * @return {number} request id\r\n   */\r\n  ;\r\n\r\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\r\n    var _this8 = this;\r\n\r\n    var id = newGUID();\r\n\r\n    if (!this.isReady_ || this.paused()) {\r\n      this.queuedHanders_.add(id);\r\n      this.one('playing', function () {\r\n        if (_this8.queuedHanders_.has(id)) {\r\n          _this8.queuedHanders_[\"delete\"](id);\r\n\r\n          cb();\r\n        }\r\n      });\r\n    } else {\r\n      this.requestNamedAnimationFrame(id, cb);\r\n    }\r\n\r\n    return id;\r\n  }\r\n  /**\r\n   * A fallback implementation of cancelVideoFrameCallback\r\n   *\r\n   * @param {number} id id of callback to be cancelled\r\n   */\r\n  ;\r\n\r\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\r\n    if (this.queuedHanders_.has(id)) {\r\n      this.queuedHanders_[\"delete\"](id);\r\n    } else {\r\n      this.cancelNamedAnimationFrame(id);\r\n    }\r\n  }\r\n  /**\r\n   * A method to set a poster from a `Tech`.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.setPoster = function setPoster() {}\r\n  /**\r\n   * A method to check for the presence of the 'playsinline' <video> attribute.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.playsinline = function playsinline() {}\r\n  /**\r\n   * A method to set or unset the 'playsinline' <video> attribute.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.setPlaysinline = function setPlaysinline() {}\r\n  /**\r\n   * Attempt to force override of native audio tracks.\r\n   *\r\n   * @param {boolean} override - If set to true native audio will be overridden,\r\n   * otherwise native audio will potentially be used.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\r\n  /**\r\n   * Attempt to force override of native video tracks.\r\n   *\r\n   * @param {boolean} override - If set to true native video will be overridden,\r\n   * otherwise native video will potentially be used.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\r\n  /*\r\n   * Check if the tech can support the given mime-type.\r\n   *\r\n   * The base tech does not support any type, but source handlers might\r\n   * overwrite this.\r\n   *\r\n   * @param  {string} type\r\n   *         The mimetype to check for support\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or empty string\r\n   *\r\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.canPlayType = function canPlayType() {\r\n    return '';\r\n  }\r\n  /**\r\n   * Check if the type is supported by this tech.\r\n   *\r\n   * The base tech does not support any type, but source handlers might\r\n   * overwrite this.\r\n   *\r\n   * @param {string} type\r\n   *        The media type to check\r\n   * @return {string} Returns the native video element's response\r\n   */\r\n  ;\r\n\r\n  Tech.canPlayType = function canPlayType() {\r\n    return '';\r\n  }\r\n  /**\r\n   * Check if the tech can support the given source\r\n   *\r\n   * @param {Object} srcObj\r\n   *        The source object\r\n   * @param {Object} options\r\n   *        The options passed to the tech\r\n   * @return {string} 'probably', 'maybe', or '' (empty string)\r\n   */\r\n  ;\r\n\r\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\r\n    return Tech.canPlayType(srcObj.type);\r\n  }\r\n  /*\r\n   * Return whether the argument is a Tech or not.\r\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\r\n   *\r\n   * @param {Object} component\r\n   *        The item to check\r\n   *\r\n   * @return {boolean}\r\n   *         Whether it is a tech or not\r\n   *         - True if it is a tech\r\n   *         - False if it is not\r\n   */\r\n  ;\r\n\r\n  Tech.isTech = function isTech(component) {\r\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\r\n  }\r\n  /**\r\n   * Registers a `Tech` into a shared list for videojs.\r\n   *\r\n   * @param {string} name\r\n   *        Name of the `Tech` to register.\r\n   *\r\n   * @param {Object} tech\r\n   *        The `Tech` class to register.\r\n   */\r\n  ;\r\n\r\n  Tech.registerTech = function registerTech(name, tech) {\r\n    if (!Tech.techs_) {\r\n      Tech.techs_ = {};\r\n    }\r\n\r\n    if (!Tech.isTech(tech)) {\r\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\r\n    }\r\n\r\n    if (!Tech.canPlayType) {\r\n      throw new Error('Techs must have a static canPlayType method on them');\r\n    }\r\n\r\n    if (!Tech.canPlaySource) {\r\n      throw new Error('Techs must have a static canPlaySource method on them');\r\n    }\r\n\r\n    name = toTitleCase$1(name);\r\n    Tech.techs_[name] = tech;\r\n    Tech.techs_[toLowerCase(name)] = tech;\r\n\r\n    if (name !== 'Tech') {\r\n      // camel case the techName for use in techOrder\r\n      Tech.defaultTechOrder_.push(name);\r\n    }\r\n\r\n    return tech;\r\n  }\r\n  /**\r\n   * Get a `Tech` from the shared list by name.\r\n   *\r\n   * @param {string} name\r\n   *        `camelCase` or `TitleCase` name of the Tech to get\r\n   *\r\n   * @return {Tech|undefined}\r\n   *         The `Tech` or undefined if there was no tech with the name requested.\r\n   */\r\n  ;\r\n\r\n  Tech.getTech = function getTech(name) {\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    if (Tech.techs_ && Tech.techs_[name]) {\r\n      return Tech.techs_[name];\r\n    }\r\n\r\n    name = toTitleCase$1(name);\r\n\r\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\r\n      log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\r\n      return window$1.videojs[name];\r\n    }\r\n  };\r\n\r\n  return Tech;\r\n}(Component$1);\r\n/**\r\n * Get the {@link VideoTrackList}\r\n *\r\n * @returns {VideoTrackList}\r\n * @method Tech.prototype.videoTracks\r\n */\r\n\r\n/**\r\n * Get the {@link AudioTrackList}\r\n *\r\n * @returns {AudioTrackList}\r\n * @method Tech.prototype.audioTracks\r\n */\r\n\r\n/**\r\n * Get the {@link TextTrackList}\r\n *\r\n * @returns {TextTrackList}\r\n * @method Tech.prototype.textTracks\r\n */\r\n\r\n/**\r\n * Get the remote element {@link TextTrackList}\r\n *\r\n * @returns {TextTrackList}\r\n * @method Tech.prototype.remoteTextTracks\r\n */\r\n\r\n/**\r\n * Get the remote element {@link HtmlTrackElementList}\r\n *\r\n * @returns {HtmlTrackElementList}\r\n * @method Tech.prototype.remoteTextTrackEls\r\n */\r\n\r\n\r\nALL.names.forEach(function (name) {\r\n  var props = ALL[name];\r\n\r\n  Tech.prototype[props.getterName] = function () {\r\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\r\n    return this[props.privateName];\r\n  };\r\n});\r\n/**\r\n * List of associated text tracks\r\n *\r\n * @type {TextTrackList}\r\n * @private\r\n * @property Tech#textTracks_\r\n */\r\n\r\n/**\r\n * List of associated audio tracks.\r\n *\r\n * @type {AudioTrackList}\r\n * @private\r\n * @property Tech#audioTracks_\r\n */\r\n\r\n/**\r\n * List of associated video tracks.\r\n *\r\n * @type {VideoTrackList}\r\n * @private\r\n * @property Tech#videoTracks_\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports volume control.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresVolumeControl = true;\r\n/**\r\n * Boolean indicating whether the `Tech` supports muting volume.\r\n *\r\n * @type {bolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresMuteControl = true;\r\n/**\r\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\r\n * Resizing plugins using request fullscreen reloads the plugin\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresFullscreenResize = false;\r\n/**\r\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\r\n * plays. Examples:\r\n *   - Set player to play 2x (twice) as fast\r\n *   - Set player to play 0.5x (half) as fast\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresPlaybackRate = false;\r\n/**\r\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\r\n * not triggered by video-js-swf. This will be used to determine if\r\n * {@link Tech#manualProgressOn} should be called.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresProgressEvents = false;\r\n/**\r\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\r\n *\r\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\r\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\r\n * a new source.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresSourceset = false;\r\n/**\r\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\r\n * not triggered by video-js-swf. This will be used to determine if\r\n * {@link Tech#manualTimeUpdates} should be called.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresTimeupdateEvents = false;\r\n/**\r\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\r\n * This will help us integrate with native `TextTrack`s if the browser supports them.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresNativeTextTracks = false;\r\n/**\r\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nTech.prototype.featuresVideoFrameCallback = false;\r\n/**\r\n * A functional mixin for techs that want to use the Source Handler pattern.\r\n * Source handlers are scripts for handling specific formats.\r\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\r\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\r\n * Example: `Tech.withSourceHandlers.call(MyTech);`\r\n *\r\n * @param {Tech} _Tech\r\n *        The tech to add source handler functions to.\r\n *\r\n * @mixes Tech~SourceHandlerAdditions\r\n */\r\n\r\nTech.withSourceHandlers = function (_Tech) {\r\n  /**\r\n   * Register a source handler\r\n   *\r\n   * @param {Function} handler\r\n   *        The source handler class\r\n   *\r\n   * @param {number} [index]\r\n   *        Register it at the following index\r\n   */\r\n  _Tech.registerSourceHandler = function (handler, index) {\r\n    var handlers = _Tech.sourceHandlers;\r\n\r\n    if (!handlers) {\r\n      handlers = _Tech.sourceHandlers = [];\r\n    }\r\n\r\n    if (index === undefined) {\r\n      // add to the end of the list\r\n      index = handlers.length;\r\n    }\r\n\r\n    handlers.splice(index, 0, handler);\r\n  };\r\n  /**\r\n   * Check if the tech can support the given type. Also checks the\r\n   * Techs sourceHandlers.\r\n   *\r\n   * @param {string} type\r\n   *         The mimetype to check.\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or '' (empty string)\r\n   */\r\n\r\n\r\n  _Tech.canPlayType = function (type) {\r\n    var handlers = _Tech.sourceHandlers || [];\r\n    var can;\r\n\r\n    for (var i = 0; i < handlers.length; i++) {\r\n      can = handlers[i].canPlayType(type);\r\n\r\n      if (can) {\r\n        return can;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  };\r\n  /**\r\n   * Returns the first source handler that supports the source.\r\n   *\r\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\r\n   *\r\n   * @param {Tech~SourceObject} source\r\n   *        The source object\r\n   *\r\n   * @param {Object} options\r\n   *        The options passed to the tech\r\n   *\r\n   * @return {SourceHandler|null}\r\n   *          The first source handler that supports the source or null if\r\n   *          no SourceHandler supports the source\r\n   */\r\n\r\n\r\n  _Tech.selectSourceHandler = function (source, options) {\r\n    var handlers = _Tech.sourceHandlers || [];\r\n    var can;\r\n\r\n    for (var i = 0; i < handlers.length; i++) {\r\n      can = handlers[i].canHandleSource(source, options);\r\n\r\n      if (can) {\r\n        return handlers[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n  /**\r\n   * Check if the tech can support the given source.\r\n   *\r\n   * @param {Tech~SourceObject} srcObj\r\n   *        The source object\r\n   *\r\n   * @param {Object} options\r\n   *        The options passed to the tech\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or '' (empty string)\r\n   */\r\n\r\n\r\n  _Tech.canPlaySource = function (srcObj, options) {\r\n    var sh = _Tech.selectSourceHandler(srcObj, options);\r\n\r\n    if (sh) {\r\n      return sh.canHandleSource(srcObj, options);\r\n    }\r\n\r\n    return '';\r\n  };\r\n  /**\r\n   * When using a source handler, prefer its implementation of\r\n   * any function normally provided by the tech.\r\n   */\r\n\r\n\r\n  var deferrable = ['seekable', 'seeking', 'duration'];\r\n  /**\r\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\r\n   * function if it exists, with a fallback to the Techs seekable function.\r\n   *\r\n   * @method _Tech.seekable\r\n   */\r\n\r\n  /**\r\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\r\n   * function if it exists, otherwise it will fallback to the techs duration function.\r\n   *\r\n   * @method _Tech.duration\r\n   */\r\n\r\n  deferrable.forEach(function (fnName) {\r\n    var originalFn = this[fnName];\r\n\r\n    if (typeof originalFn !== 'function') {\r\n      return;\r\n    }\r\n\r\n    this[fnName] = function () {\r\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\r\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\r\n      }\r\n\r\n      return originalFn.apply(this, arguments);\r\n    };\r\n  }, _Tech.prototype);\r\n  /**\r\n   * Create a function for setting the source using a source object\r\n   * and source handlers.\r\n   * Should never be called unless a source handler was found.\r\n   *\r\n   * @param {Tech~SourceObject} source\r\n   *        A source object with src and type keys\r\n   */\r\n\r\n  _Tech.prototype.setSource = function (source) {\r\n    var sh = _Tech.selectSourceHandler(source, this.options_);\r\n\r\n    if (!sh) {\r\n      // Fall back to a native source hander when unsupported sources are\r\n      // deliberately set\r\n      if (_Tech.nativeSourceHandler) {\r\n        sh = _Tech.nativeSourceHandler;\r\n      } else {\r\n        log$1.error('No source handler found for the current source.');\r\n      }\r\n    } // Dispose any existing source handler\r\n\r\n\r\n    this.disposeSourceHandler();\r\n    this.off('dispose', this.disposeSourceHandler_);\r\n\r\n    if (sh !== _Tech.nativeSourceHandler) {\r\n      this.currentSource_ = source;\r\n    }\r\n\r\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\r\n    this.one('dispose', this.disposeSourceHandler_);\r\n  };\r\n  /**\r\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\r\n   *\r\n   * @listens Tech#dispose\r\n   */\r\n\r\n\r\n  _Tech.prototype.disposeSourceHandler = function () {\r\n    // if we have a source and get another one\r\n    // then we are loading something new\r\n    // than clear all of our current tracks\r\n    if (this.currentSource_) {\r\n      this.clearTracks(['audio', 'video']);\r\n      this.currentSource_ = null;\r\n    } // always clean up auto-text tracks\r\n\r\n\r\n    this.cleanupAutoTextTracks();\r\n\r\n    if (this.sourceHandler_) {\r\n      if (this.sourceHandler_.dispose) {\r\n        this.sourceHandler_.dispose();\r\n      }\r\n\r\n      this.sourceHandler_ = null;\r\n    }\r\n  };\r\n}; // The base Tech class needs to be registered as a Component. It is the only\r\n// Tech that can be registered as a Component.\r\n\r\n\r\nComponent$1.registerComponent('Tech', Tech);\r\nTech.registerTech('Tech', Tech);\r\n/**\r\n * A list of techs that should be added to techOrder on Players\r\n *\r\n * @private\r\n */\r\n\r\nTech.defaultTechOrder_ = [];\r\n\r\n/**\r\n * @file middleware.js\r\n * @module middleware\r\n */\r\nvar middlewares = {};\r\nvar middlewareInstances = {};\r\nvar TERMINATOR = {};\r\n/**\r\n * A middleware object is a plain JavaScript object that has methods that\r\n * match the {@link Tech} methods found in the lists of allowed\r\n * {@link module:middleware.allowedGetters|getters},\r\n * {@link module:middleware.allowedSetters|setters}, and\r\n * {@link module:middleware.allowedMediators|mediators}.\r\n *\r\n * @typedef {Object} MiddlewareObject\r\n */\r\n\r\n/**\r\n * A middleware factory function that should return a\r\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\r\n *\r\n * This factory will be called for each player when needed, with the player\r\n * passed in as an argument.\r\n *\r\n * @callback MiddlewareFactory\r\n * @param {Player} player\r\n *        A Video.js player.\r\n */\r\n\r\n/**\r\n * Define a middleware that the player should use by way of a factory function\r\n * that returns a middleware object.\r\n *\r\n * @param  {string} type\r\n *         The MIME type to match or `\"*\"` for all MIME types.\r\n *\r\n * @param  {MiddlewareFactory} middleware\r\n *         A middleware factory function that will be executed for\r\n *         matching types.\r\n */\r\n\r\nfunction use(type, middleware) {\r\n  middlewares[type] = middlewares[type] || [];\r\n  middlewares[type].push(middleware);\r\n}\r\n/**\r\n * Asynchronously sets a source using middleware by recursing through any\r\n * matching middlewares and calling `setSource` on each, passing along the\r\n * previous returned value each time.\r\n *\r\n * @param  {Player} player\r\n *         A {@link Player} instance.\r\n *\r\n * @param  {Tech~SourceObject} src\r\n *         A source object.\r\n *\r\n * @param  {Function}\r\n *         The next middleware to run.\r\n */\r\n\r\nfunction setSource(player, src, next) {\r\n  player.setTimeout(function () {\r\n    return setSourceHelper(src, middlewares[src.type], next, player);\r\n  }, 1);\r\n}\r\n/**\r\n * When the tech is set, passes the tech to each middleware's `setTech` method.\r\n *\r\n * @param {Object[]} middleware\r\n *        An array of middleware instances.\r\n *\r\n * @param {Tech} tech\r\n *        A Video.js tech.\r\n */\r\n\r\nfunction setTech(middleware, tech) {\r\n  middleware.forEach(function (mw) {\r\n    return mw.setTech && mw.setTech(tech);\r\n  });\r\n}\r\n/**\r\n * Calls a getter on the tech first, through each middleware\r\n * from right to left to the player.\r\n *\r\n * @param  {Object[]} middleware\r\n *         An array of middleware instances.\r\n *\r\n * @param  {Tech} tech\r\n *         The current tech.\r\n *\r\n * @param  {string} method\r\n *         A method name.\r\n *\r\n * @return {Mixed}\r\n *         The final value from the tech after middleware has intercepted it.\r\n */\r\n\r\nfunction get(middleware, tech, method) {\r\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\r\n}\r\n/**\r\n * Takes the argument given to the player and calls the setter method on each\r\n * middleware from left to right to the tech.\r\n *\r\n * @param  {Object[]} middleware\r\n *         An array of middleware instances.\r\n *\r\n * @param  {Tech} tech\r\n *         The current tech.\r\n *\r\n * @param  {string} method\r\n *         A method name.\r\n *\r\n * @param  {Mixed} arg\r\n *         The value to set on the tech.\r\n *\r\n * @return {Mixed}\r\n *         The return value of the `method` of the `tech`.\r\n */\r\n\r\nfunction set(middleware, tech, method, arg) {\r\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\r\n}\r\n/**\r\n * Takes the argument given to the player and calls the `call` version of the\r\n * method on each middleware from left to right.\r\n *\r\n * Then, call the passed in method on the tech and return the result unchanged\r\n * back to the player, through middleware, this time from right to left.\r\n *\r\n * @param  {Object[]} middleware\r\n *         An array of middleware instances.\r\n *\r\n * @param  {Tech} tech\r\n *         The current tech.\r\n *\r\n * @param  {string} method\r\n *         A method name.\r\n *\r\n * @param  {Mixed} arg\r\n *         The value to set on the tech.\r\n *\r\n * @return {Mixed}\r\n *         The return value of the `method` of the `tech`, regardless of the\r\n *         return values of middlewares.\r\n */\r\n\r\nfunction mediate(middleware, tech, method, arg) {\r\n  if (arg === void 0) {\r\n    arg = null;\r\n  }\r\n\r\n  var callMethod = 'call' + toTitleCase$1(method);\r\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\r\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\r\n  // prevent confusion if a techs method actually returns null.\r\n\r\n  var returnValue = terminated ? null : tech[method](middlewareValue);\r\n  executeRight(middleware, method, returnValue, terminated);\r\n  return returnValue;\r\n}\r\n/**\r\n * Enumeration of allowed getters where the keys are method names.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvar allowedGetters = {\r\n  buffered: 1,\r\n  currentTime: 1,\r\n  duration: 1,\r\n  muted: 1,\r\n  played: 1,\r\n  paused: 1,\r\n  seekable: 1,\r\n  volume: 1,\r\n  ended: 1\r\n};\r\n/**\r\n * Enumeration of allowed setters where the keys are method names.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvar allowedSetters = {\r\n  setCurrentTime: 1,\r\n  setMuted: 1,\r\n  setVolume: 1\r\n};\r\n/**\r\n * Enumeration of allowed mediators where the keys are method names.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvar allowedMediators = {\r\n  play: 1,\r\n  pause: 1\r\n};\r\n\r\nfunction middlewareIterator(method) {\r\n  return function (value, mw) {\r\n    // if the previous middleware terminated, pass along the termination\r\n    if (value === TERMINATOR) {\r\n      return TERMINATOR;\r\n    }\r\n\r\n    if (mw[method]) {\r\n      return mw[method](value);\r\n    }\r\n\r\n    return value;\r\n  };\r\n}\r\n\r\nfunction executeRight(mws, method, value, terminated) {\r\n  for (var i = mws.length - 1; i >= 0; i--) {\r\n    var mw = mws[i];\r\n\r\n    if (mw[method]) {\r\n      mw[method](terminated, value);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Clear the middleware cache for a player.\r\n *\r\n * @param  {Player} player\r\n *         A {@link Player} instance.\r\n */\r\n\r\n\r\nfunction clearCacheForPlayer(player) {\r\n  middlewareInstances[player.id()] = null;\r\n}\r\n/**\r\n * {\r\n *  [playerId]: [[mwFactory, mwInstance], ...]\r\n * }\r\n *\r\n * @private\r\n */\r\n\r\nfunction getOrCreateFactory(player, mwFactory) {\r\n  var mws = middlewareInstances[player.id()];\r\n  var mw = null;\r\n\r\n  if (mws === undefined || mws === null) {\r\n    mw = mwFactory(player);\r\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\r\n    return mw;\r\n  }\r\n\r\n  for (var i = 0; i < mws.length; i++) {\r\n    var _mws$i = mws[i],\r\n        mwf = _mws$i[0],\r\n        mwi = _mws$i[1];\r\n\r\n    if (mwf !== mwFactory) {\r\n      continue;\r\n    }\r\n\r\n    mw = mwi;\r\n  }\r\n\r\n  if (mw === null) {\r\n    mw = mwFactory(player);\r\n    mws.push([mwFactory, mw]);\r\n  }\r\n\r\n  return mw;\r\n}\r\n\r\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\r\n  if (src === void 0) {\r\n    src = {};\r\n  }\r\n\r\n  if (middleware === void 0) {\r\n    middleware = [];\r\n  }\r\n\r\n  if (acc === void 0) {\r\n    acc = [];\r\n  }\r\n\r\n  if (lastRun === void 0) {\r\n    lastRun = false;\r\n  }\r\n\r\n  var _middleware = middleware,\r\n      mwFactory = _middleware[0],\r\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\r\n\r\n\r\n  if (typeof mwFactory === 'string') {\r\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\r\n    // then call the mw's setSource method\r\n  } else if (mwFactory) {\r\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\r\n\r\n    if (!mw.setSource) {\r\n      acc.push(mw);\r\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\r\n    }\r\n\r\n    mw.setSource(assign({}, src), function (err, _src) {\r\n      // something happened, try the next middleware on the current level\r\n      // make sure to use the old src\r\n      if (err) {\r\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\r\n      } // we've succeeded, now we need to go deeper\r\n\r\n\r\n      acc.push(mw); // if it's the same type, continue down the current chain\r\n      // otherwise, we want to go down the new chain\r\n\r\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\r\n    });\r\n  } else if (mwrest.length) {\r\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\r\n  } else if (lastRun) {\r\n    next(src, acc);\r\n  } else {\r\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Mimetypes\r\n *\r\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\r\n * @typedef Mimetypes~Kind\r\n * @enum\r\n */\r\n\r\nvar MimetypesKind = {\r\n  opus: 'video/ogg',\r\n  ogv: 'video/ogg',\r\n  mp4: 'video/mp4',\r\n  mov: 'video/mp4',\r\n  m4v: 'video/mp4',\r\n  mkv: 'video/x-matroska',\r\n  m4a: 'audio/mp4',\r\n  mp3: 'audio/mpeg',\r\n  aac: 'audio/aac',\r\n  caf: 'audio/x-caf',\r\n  flac: 'audio/flac',\r\n  oga: 'audio/ogg',\r\n  wav: 'audio/wav',\r\n  m3u8: 'application/x-mpegURL',\r\n  mpd: 'application/dash+xml',\r\n  jpg: 'image/jpeg',\r\n  jpeg: 'image/jpeg',\r\n  gif: 'image/gif',\r\n  png: 'image/png',\r\n  svg: 'image/svg+xml',\r\n  webp: 'image/webp'\r\n};\r\n/**\r\n * Get the mimetype of a given src url if possible\r\n *\r\n * @param {string} src\r\n *        The url to the src\r\n *\r\n * @return {string}\r\n *         return the mimetype if it was known or empty string otherwise\r\n */\r\n\r\nvar getMimetype = function getMimetype(src) {\r\n  if (src === void 0) {\r\n    src = '';\r\n  }\r\n\r\n  var ext = getFileExtension(src);\r\n  var mimetype = MimetypesKind[ext.toLowerCase()];\r\n  return mimetype || '';\r\n};\r\n/**\r\n * Find the mime type of a given source string if possible. Uses the player\r\n * source cache.\r\n *\r\n * @param {Player} player\r\n *        The player object\r\n *\r\n * @param {string} src\r\n *        The source string\r\n *\r\n * @return {string}\r\n *         The type that was found\r\n */\r\n\r\nvar findMimetype = function findMimetype(player, src) {\r\n  if (!src) {\r\n    return '';\r\n  } // 1. check for the type in the `source` cache\r\n\r\n\r\n  if (player.cache_.source.src === src && player.cache_.source.type) {\r\n    return player.cache_.source.type;\r\n  } // 2. see if we have this source in our `currentSources` cache\r\n\r\n\r\n  var matchingSources = player.cache_.sources.filter(function (s) {\r\n    return s.src === src;\r\n  });\r\n\r\n  if (matchingSources.length) {\r\n    return matchingSources[0].type;\r\n  } // 3. look for the src url in source elements and use the type there\r\n\r\n\r\n  var sources = player.$$('source');\r\n\r\n  for (var i = 0; i < sources.length; i++) {\r\n    var s = sources[i];\r\n\r\n    if (s.type && s.src && s.src === src) {\r\n      return s.type;\r\n    }\r\n  } // 4. finally fallback to our list of mime types based on src url extension\r\n\r\n\r\n  return getMimetype(src);\r\n};\r\n\r\n/**\r\n * @module filter-source\r\n */\r\n/**\r\n * Filter out single bad source objects or multiple source objects in an\r\n * array. Also flattens nested source object arrays into a 1 dimensional\r\n * array of source objects.\r\n *\r\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\r\n *        The src object to filter\r\n *\r\n * @return {Tech~SourceObject[]}\r\n *         An array of sourceobjects containing only valid sources\r\n *\r\n * @private\r\n */\r\n\r\nvar filterSource = function filterSource(src) {\r\n  // traverse array\r\n  if (Array.isArray(src)) {\r\n    var newsrc = [];\r\n    src.forEach(function (srcobj) {\r\n      srcobj = filterSource(srcobj);\r\n\r\n      if (Array.isArray(srcobj)) {\r\n        newsrc = newsrc.concat(srcobj);\r\n      } else if (isObject(srcobj)) {\r\n        newsrc.push(srcobj);\r\n      }\r\n    });\r\n    src = newsrc;\r\n  } else if (typeof src === 'string' && src.trim()) {\r\n    // convert string into object\r\n    src = [fixSource({\r\n      src: src\r\n    })];\r\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\r\n    // src is already valid\r\n    src = [fixSource(src)];\r\n  } else {\r\n    // invalid source, turn it into an empty array\r\n    src = [];\r\n  }\r\n\r\n  return src;\r\n};\r\n/**\r\n * Checks src mimetype, adding it when possible\r\n *\r\n * @param {Tech~SourceObject} src\r\n *        The src object to check\r\n * @return {Tech~SourceObject}\r\n *        src Object with known type\r\n */\r\n\r\n\r\nfunction fixSource(src) {\r\n  if (!src.type) {\r\n    var mimetype = getMimetype(src.src);\r\n\r\n    if (mimetype) {\r\n      src.type = mimetype;\r\n    }\r\n  }\r\n\r\n  return src;\r\n}\r\n\r\n/**\r\n * The `MediaLoader` is the `Component` that decides which playback technology to load\r\n * when a player is initialized.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MediaLoader = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(MediaLoader, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should attach to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function that is run when this component is ready.\r\n   */\r\n  function MediaLoader(player, options, ready) {\r\n    var _this;\r\n\r\n    // MediaLoader has no element\r\n    var options_ = mergeOptions$3({\r\n      createEl: false\r\n    }, options);\r\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\r\n    // load the first supported playback technology.\r\n\r\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\r\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\r\n        var techName = toTitleCase$1(j[i]);\r\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\r\n        // Remove once that deprecated behavior is removed.\r\n\r\n        if (!techName) {\r\n          tech = Component$1.getComponent(techName);\r\n        } // Check if the browser supports this technology\r\n\r\n\r\n        if (tech && tech.isSupported()) {\r\n          player.loadTech_(techName);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // Loop through playback technologies (e.g. HTML5) and check for support.\r\n      // Then load the best source.\r\n      // A few assumptions here:\r\n      //   All playback technologies respect preload false.\r\n      player.src(options.playerOptions.sources);\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  return MediaLoader;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('MediaLoader', MediaLoader);\r\n\r\n/**\r\n * Component which is clickable or keyboard actionable, but is not a\r\n * native HTML button.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(ClickableComponent, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param  {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param  {Object} [options]\r\n   *         The key/value store of component options.\r\n   *\r\n   * @param  {function} [options.clickHandler]\r\n   *         The function to call when the button is clicked / activated\r\n   *\r\n   * @param  {string} [options.controlText]\r\n   *         The text to set on the button\r\n   *\r\n   * @param  {string} [options.className]\r\n   *         A class or space separated list of classes to add the component\r\n   *\r\n   */\r\n  function ClickableComponent(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n\r\n    if (_this.options_.controlText) {\r\n      _this.controlText(_this.options_.controlText);\r\n    }\r\n\r\n    _this.handleMouseOver_ = function (e) {\r\n      return _this.handleMouseOver(e);\r\n    };\r\n\r\n    _this.handleMouseOut_ = function (e) {\r\n      return _this.handleMouseOut(e);\r\n    };\r\n\r\n    _this.handleClick_ = function (e) {\r\n      return _this.handleClick(e);\r\n    };\r\n\r\n    _this.handleKeyDown_ = function (e) {\r\n      return _this.handleKeyDown(e);\r\n    };\r\n\r\n    _this.emitTapEvents();\r\n\r\n    _this.enable();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `ClickableComponent`s DOM element.\r\n   *\r\n   * @param {string} [tag=div]\r\n   *        The element's node type.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        An object of properties that should be set on the element.\r\n   *\r\n   * @param {Object} [attributes={}]\r\n   *        An object of attributes that should be set on the element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  var _proto = ClickableComponent.prototype;\r\n\r\n  _proto.createEl = function createEl$1(tag, props, attributes) {\r\n    if (tag === void 0) {\r\n      tag = 'div';\r\n    }\r\n\r\n    if (props === void 0) {\r\n      props = {};\r\n    }\r\n\r\n    if (attributes === void 0) {\r\n      attributes = {};\r\n    }\r\n\r\n    props = assign({\r\n      className: this.buildCSSClass(),\r\n      tabIndex: 0\r\n    }, props);\r\n\r\n    if (tag === 'button') {\r\n      log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\r\n    } // Add ARIA attributes for clickable element which is not a native HTML button\r\n\r\n\r\n    attributes = assign({\r\n      role: 'button'\r\n    }, attributes);\r\n    this.tabIndex_ = props.tabIndex;\r\n    var el = createEl(tag, props, attributes);\r\n    el.appendChild(createEl('span', {\r\n      className: 'vjs-icon-placeholder'\r\n    }, {\r\n      'aria-hidden': true\r\n    }));\r\n    this.createControlTextEl(el);\r\n    return el;\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    // remove controlTextEl_ on dispose\r\n    this.controlTextEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Create a control text element on this `ClickableComponent`\r\n   *\r\n   * @param {Element} [el]\r\n   *        Parent element for the control text.\r\n   *\r\n   * @return {Element}\r\n   *         The control text element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createControlTextEl = function createControlTextEl(el) {\r\n    this.controlTextEl_ = createEl('span', {\r\n      className: 'vjs-control-text'\r\n    }, {\r\n      // let the screen reader user know that the text of the element may change\r\n      'aria-live': 'polite'\r\n    });\r\n\r\n    if (el) {\r\n      el.appendChild(this.controlTextEl_);\r\n    }\r\n\r\n    this.controlText(this.controlText_, el);\r\n    return this.controlTextEl_;\r\n  }\r\n  /**\r\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\r\n   *\r\n   * @param {string} [text]\r\n   *        Control text for element.\r\n   *\r\n   * @param {Element} [el=this.el()]\r\n   *        Element to set the title on.\r\n   *\r\n   * @return {string}\r\n   *         - The control text when getting\r\n   */\r\n  ;\r\n\r\n  _proto.controlText = function controlText(text, el) {\r\n    if (el === void 0) {\r\n      el = this.el();\r\n    }\r\n\r\n    if (text === undefined) {\r\n      return this.controlText_ || 'Need Text';\r\n    }\r\n\r\n    var localizedText = this.localize(text);\r\n    this.controlText_ = text;\r\n    textContent(this.controlTextEl_, localizedText);\r\n\r\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\r\n      // Set title attribute if only an icon is shown\r\n      el.setAttribute('title', localizedText);\r\n    }\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  ;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Enable this `ClickableComponent`\r\n   */\r\n  ;\r\n\r\n  _proto.enable = function enable() {\r\n    if (!this.enabled_) {\r\n      this.enabled_ = true;\r\n      this.removeClass('vjs-disabled');\r\n      this.el_.setAttribute('aria-disabled', 'false');\r\n\r\n      if (typeof this.tabIndex_ !== 'undefined') {\r\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\r\n      }\r\n\r\n      this.on(['tap', 'click'], this.handleClick_);\r\n      this.on('keydown', this.handleKeyDown_);\r\n    }\r\n  }\r\n  /**\r\n   * Disable this `ClickableComponent`\r\n   */\r\n  ;\r\n\r\n  _proto.disable = function disable() {\r\n    this.enabled_ = false;\r\n    this.addClass('vjs-disabled');\r\n    this.el_.setAttribute('aria-disabled', 'true');\r\n\r\n    if (typeof this.tabIndex_ !== 'undefined') {\r\n      this.el_.removeAttribute('tabIndex');\r\n    }\r\n\r\n    this.off('mouseover', this.handleMouseOver_);\r\n    this.off('mouseout', this.handleMouseOut_);\r\n    this.off(['tap', 'click'], this.handleClick_);\r\n    this.off('keydown', this.handleKeyDown_);\r\n  }\r\n  /**\r\n   * Handles language change in ClickableComponent for the player in components\r\n   *\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.handleLanguagechange = function handleLanguagechange() {\r\n    this.controlText(this.controlText_);\r\n  }\r\n  /**\r\n   * Event handler that is called when a `ClickableComponent` receives a\r\n   * `click` or `tap` event.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `tap` or `click` event that caused this function to be called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    if (this.options_.clickHandler) {\r\n      this.options_.clickHandler.call(this, arguments);\r\n    }\r\n  }\r\n  /**\r\n   * Event handler that is called when a `ClickableComponent` receives a\r\n   * `keydown` event.\r\n   *\r\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Support Space or Enter key operation to fire a click event. Also,\r\n    // prevent the event from propagating through the DOM and triggering\r\n    // Player hotkeys.\r\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.trigger('click');\r\n    } else {\r\n      // Pass keypress handling up for unsupported keys\r\n      _Component.prototype.handleKeyDown.call(this, event);\r\n    }\r\n  };\r\n\r\n  return ClickableComponent;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\r\n\r\n/**\r\n * A `ClickableComponent` that handles showing the poster image for the player.\r\n *\r\n * @extends ClickableComponent\r\n */\r\n\r\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\r\n  _inheritsLoose(PosterImage, _ClickableComponent);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should attach to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PosterImage(player, options) {\r\n    var _this;\r\n\r\n    _this = _ClickableComponent.call(this, player, options) || this;\r\n\r\n    _this.update();\r\n\r\n    _this.update_ = function (e) {\r\n      return _this.update(e);\r\n    };\r\n\r\n    player.on('posterchange', _this.update_);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Clean up and dispose of the `PosterImage`.\r\n   */\r\n\r\n\r\n  var _proto = PosterImage.prototype;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.player().off('posterchange', this.update_);\r\n\r\n    _ClickableComponent.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Create the `PosterImage`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var el = createEl('div', {\r\n      className: 'vjs-poster',\r\n      // Don't want poster to be tabbable.\r\n      tabIndex: -1\r\n    });\r\n    return el;\r\n  }\r\n  /**\r\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\r\n   *\r\n   * @listens Player#posterchange\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `Player#posterchange` event that triggered this function.\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(event) {\r\n    var url = this.player().poster();\r\n    this.setSrc(url); // If there's no poster source we should display:none on this component\r\n    // so it's not still clickable or right-clickable\r\n\r\n    if (url) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n  /**\r\n   * Set the source of the `PosterImage` depending on the display method.\r\n   *\r\n   * @param {string} url\r\n   *        The URL to the source for the `PosterImage`.\r\n   */\r\n  ;\r\n\r\n  _proto.setSrc = function setSrc(url) {\r\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\r\n    // this will throw an extra error\r\n\r\n    if (url) {\r\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\r\n    }\r\n\r\n    this.el_.style.backgroundImage = backgroundImage;\r\n  }\r\n  /**\r\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\r\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   * @listens keydown\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    // We don't want a click to trigger playback when controls are disabled\r\n    if (!this.player_.controls()) {\r\n      return;\r\n    }\r\n\r\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\r\n\r\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\r\n    // calling .focus() on the video element causes the video to go black,\r\n    // so we avoid it in that specific case\r\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\r\n      this.player_.tech(true).focus();\r\n    }\r\n\r\n    if (this.player_.paused()) {\r\n      silencePromise(this.player_.play());\r\n    } else {\r\n      this.player_.pause();\r\n    }\r\n  };\r\n\r\n  return PosterImage;\r\n}(ClickableComponent);\r\n\r\nComponent$1.registerComponent('PosterImage', PosterImage);\r\n\r\nvar darkGray = '#222';\r\nvar lightGray = '#ccc';\r\nvar fontMap = {\r\n  monospace: 'monospace',\r\n  sansSerif: 'sans-serif',\r\n  serif: 'serif',\r\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\r\n  monospaceSerif: '\"Courier New\", monospace',\r\n  proportionalSansSerif: 'sans-serif',\r\n  proportionalSerif: 'serif',\r\n  casual: '\"Comic Sans MS\", Impact, fantasy',\r\n  script: '\"Monotype Corsiva\", cursive',\r\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\r\n};\r\n/**\r\n * Construct an rgba color from a given hex color code.\r\n *\r\n * @param {number} color\r\n *        Hex number for color, like #f0e or #f604e2.\r\n *\r\n * @param {number} opacity\r\n *        Value for opacity, 0.0 - 1.0.\r\n *\r\n * @return {string}\r\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\r\n */\r\n\r\nfunction constructColor(color, opacity) {\r\n  var hex;\r\n\r\n  if (color.length === 4) {\r\n    // color looks like \"#f0e\"\r\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\r\n  } else if (color.length === 7) {\r\n    // color looks like \"#f604e2\"\r\n    hex = color.slice(1);\r\n  } else {\r\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\r\n  }\r\n\r\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\r\n}\r\n/**\r\n * Try to update the style of a DOM element. Some style changes will throw an error,\r\n * particularly in IE8. Those should be noops.\r\n *\r\n * @param {Element} el\r\n *        The DOM element to be styled.\r\n *\r\n * @param {string} style\r\n *        The CSS property on the element that should be styled.\r\n *\r\n * @param {string} rule\r\n *        The style rule that should be applied to the property.\r\n *\r\n * @private\r\n */\r\n\r\nfunction tryUpdateStyle(el, style, rule) {\r\n  try {\r\n    el.style[style] = rule;\r\n  } catch (e) {\r\n    // Satisfies linter.\r\n    return;\r\n  }\r\n}\r\n/**\r\n * The component for displaying text track cues.\r\n *\r\n * @extends Component\r\n */\r\n\r\n\r\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(TextTrackDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when `TextTrackDisplay` is ready.\r\n   */\r\n  function TextTrackDisplay(player, options, ready) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options, ready) || this;\r\n\r\n    var updateDisplayHandler = function updateDisplayHandler(e) {\r\n      return _this.updateDisplay(e);\r\n    };\r\n\r\n    player.on('loadstart', function (e) {\r\n      return _this.toggleDisplay(e);\r\n    });\r\n    player.on('texttrackchange', updateDisplayHandler);\r\n    player.on('loadedmetadata', function (e) {\r\n      return _this.preselectTrack(e);\r\n    }); // This used to be called during player init, but was causing an error\r\n    // if a track should show by default and the display hadn't loaded yet.\r\n    // Should probably be moved to an external track loader when we support\r\n    // tracks that don't need a display.\r\n\r\n    player.ready(bind(_assertThisInitialized(_this), function () {\r\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\r\n        this.hide();\r\n        return;\r\n      }\r\n\r\n      player.on('fullscreenchange', updateDisplayHandler);\r\n      player.on('playerresize', updateDisplayHandler);\r\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\r\n      player.on('dispose', function () {\r\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\r\n      });\r\n      var tracks = this.options_.playerOptions.tracks || [];\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        this.player_.addRemoteTextTrack(tracks[i], true);\r\n      }\r\n\r\n      this.preselectTrack();\r\n    }));\r\n    return _this;\r\n  }\r\n  /**\r\n  * Preselect a track following this precedence:\r\n  * - matches the previously selected {@link TextTrack}'s language and kind\r\n  * - matches the previously selected {@link TextTrack}'s language only\r\n  * - is the first default captions track\r\n  * - is the first default descriptions track\r\n  *\r\n  * @listens Player#loadstart\r\n  */\r\n\r\n\r\n  var _proto = TextTrackDisplay.prototype;\r\n\r\n  _proto.preselectTrack = function preselectTrack() {\r\n    var modes = {\r\n      captions: 1,\r\n      subtitles: 1\r\n    };\r\n    var trackList = this.player_.textTracks();\r\n    var userPref = this.player_.cache_.selectedLanguage;\r\n    var firstDesc;\r\n    var firstCaptions;\r\n    var preferredTrack;\r\n\r\n    for (var i = 0; i < trackList.length; i++) {\r\n      var track = trackList[i];\r\n\r\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\r\n        // Always choose the track that matches both language and kind\r\n        if (track.kind === userPref.kind) {\r\n          preferredTrack = track; // or choose the first track that matches language\r\n        } else if (!preferredTrack) {\r\n          preferredTrack = track;\r\n        } // clear everything if offTextTrackMenuItem was clicked\r\n\r\n      } else if (userPref && !userPref.enabled) {\r\n        preferredTrack = null;\r\n        firstDesc = null;\r\n        firstCaptions = null;\r\n      } else if (track[\"default\"]) {\r\n        if (track.kind === 'descriptions' && !firstDesc) {\r\n          firstDesc = track;\r\n        } else if (track.kind in modes && !firstCaptions) {\r\n          firstCaptions = track;\r\n        }\r\n      }\r\n    } // The preferredTrack matches the user preference and takes\r\n    // precedence over all the other tracks.\r\n    // So, display the preferredTrack before the first default track\r\n    // and the subtitles/captions track before the descriptions track\r\n\r\n\r\n    if (preferredTrack) {\r\n      preferredTrack.mode = 'showing';\r\n    } else if (firstCaptions) {\r\n      firstCaptions.mode = 'showing';\r\n    } else if (firstDesc) {\r\n      firstDesc.mode = 'showing';\r\n    }\r\n  }\r\n  /**\r\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\r\n   * There are only two states:\r\n   * - 'shown'\r\n   * - 'hidden'\r\n   *\r\n   * @listens Player#loadstart\r\n   */\r\n  ;\r\n\r\n  _proto.toggleDisplay = function toggleDisplay() {\r\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n  /**\r\n   * Create the {@link Component}'s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-text-track-display'\r\n    }, {\r\n      'translate': 'yes',\r\n      'aria-live': 'off',\r\n      'aria-atomic': 'true'\r\n    });\r\n  }\r\n  /**\r\n   * Clear all displayed {@link TextTrack}s.\r\n   */\r\n  ;\r\n\r\n  _proto.clearDisplay = function clearDisplay() {\r\n    if (typeof window$1.WebVTT === 'function') {\r\n      window$1.WebVTT.processCues(window$1, [], this.el_);\r\n    }\r\n  }\r\n  /**\r\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\r\n   * a {@link Player#fullscreenchange} is fired.\r\n   *\r\n   * @listens Player#texttrackchange\r\n   * @listens Player#fullscreenchange\r\n   */\r\n  ;\r\n\r\n  _proto.updateDisplay = function updateDisplay() {\r\n    var tracks = this.player_.textTracks();\r\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\r\n    this.clearDisplay();\r\n\r\n    if (allowMultipleShowingTracks) {\r\n      var showingTracks = [];\r\n\r\n      for (var _i = 0; _i < tracks.length; ++_i) {\r\n        var track = tracks[_i];\r\n\r\n        if (track.mode !== 'showing') {\r\n          continue;\r\n        }\r\n\r\n        showingTracks.push(track);\r\n      }\r\n\r\n      this.updateForTrack(showingTracks);\r\n      return;\r\n    } //  Track display prioritization model: if multiple tracks are 'showing',\r\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\r\n    //  otherwise display the first 'descriptions' track which is 'showing'\r\n\r\n\r\n    var descriptionsTrack = null;\r\n    var captionsSubtitlesTrack = null;\r\n    var i = tracks.length;\r\n\r\n    while (i--) {\r\n      var _track = tracks[i];\r\n\r\n      if (_track.mode === 'showing') {\r\n        if (_track.kind === 'descriptions') {\r\n          descriptionsTrack = _track;\r\n        } else {\r\n          captionsSubtitlesTrack = _track;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (captionsSubtitlesTrack) {\r\n      if (this.getAttribute('aria-live') !== 'off') {\r\n        this.setAttribute('aria-live', 'off');\r\n      }\r\n\r\n      this.updateForTrack(captionsSubtitlesTrack);\r\n    } else if (descriptionsTrack) {\r\n      if (this.getAttribute('aria-live') !== 'assertive') {\r\n        this.setAttribute('aria-live', 'assertive');\r\n      }\r\n\r\n      this.updateForTrack(descriptionsTrack);\r\n    }\r\n  }\r\n  /**\r\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        Text track object containing active cues to style.\r\n   */\r\n  ;\r\n\r\n  _proto.updateDisplayState = function updateDisplayState(track) {\r\n    var overrides = this.player_.textTrackSettings.getValues();\r\n    var cues = track.activeCues;\r\n    var i = cues.length;\r\n\r\n    while (i--) {\r\n      var cue = cues[i];\r\n\r\n      if (!cue) {\r\n        continue;\r\n      }\r\n\r\n      var cueDiv = cue.displayState;\r\n\r\n      if (overrides.color) {\r\n        cueDiv.firstChild.style.color = overrides.color;\r\n      }\r\n\r\n      if (overrides.textOpacity) {\r\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\r\n      }\r\n\r\n      if (overrides.backgroundColor) {\r\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\r\n      }\r\n\r\n      if (overrides.backgroundOpacity) {\r\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\r\n      }\r\n\r\n      if (overrides.windowColor) {\r\n        if (overrides.windowOpacity) {\r\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\r\n        } else {\r\n          cueDiv.style.backgroundColor = overrides.windowColor;\r\n        }\r\n      }\r\n\r\n      if (overrides.edgeStyle) {\r\n        if (overrides.edgeStyle === 'dropshadow') {\r\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\r\n        } else if (overrides.edgeStyle === 'raised') {\r\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\r\n        } else if (overrides.edgeStyle === 'depressed') {\r\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\r\n        } else if (overrides.edgeStyle === 'uniform') {\r\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\r\n        }\r\n      }\r\n\r\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\r\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\r\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\r\n        cueDiv.style.height = 'auto';\r\n        cueDiv.style.top = 'auto';\r\n      }\r\n\r\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\r\n        if (overrides.fontFamily === 'small-caps') {\r\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\r\n        } else {\r\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\r\n   *\r\n   * @param {TextTrack|TextTrack[]} tracks\r\n   *        Text track object or text track array to be added to the list.\r\n   */\r\n  ;\r\n\r\n  _proto.updateForTrack = function updateForTrack(tracks) {\r\n    if (!Array.isArray(tracks)) {\r\n      tracks = [tracks];\r\n    }\r\n\r\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\r\n      return !track.activeCues;\r\n    })) {\r\n      return;\r\n    }\r\n\r\n    var cues = []; // push all active track cues\r\n\r\n    for (var i = 0; i < tracks.length; ++i) {\r\n      var track = tracks[i];\r\n\r\n      for (var j = 0; j < track.activeCues.length; ++j) {\r\n        cues.push(track.activeCues[j]);\r\n      }\r\n    } // removes all cues before it processes new ones\r\n\r\n\r\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\r\n\r\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\r\n      var _track2 = tracks[_i2];\r\n\r\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\r\n        var cueEl = _track2.activeCues[_j].displayState;\r\n        addClass(cueEl, 'vjs-text-track-cue');\r\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\r\n\r\n        if (_track2.language) {\r\n          setAttribute(cueEl, 'lang', _track2.language);\r\n        }\r\n      }\r\n\r\n      if (this.player_.textTrackSettings) {\r\n        this.updateDisplayState(_track2);\r\n      }\r\n    }\r\n  };\r\n\r\n  return TextTrackDisplay;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\r\n\r\n/**\r\n * A loading spinner for use during waiting/loading events.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(LoadingSpinner, _Component);\r\n\r\n  function LoadingSpinner() {\r\n    return _Component.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = LoadingSpinner.prototype;\r\n\r\n  /**\r\n   * Create the `LoadingSpinner`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The dom element that gets created.\r\n   */\r\n  _proto.createEl = function createEl$1() {\r\n    var isAudio = this.player_.isAudio();\r\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\r\n    var controlText = createEl('span', {\r\n      className: 'vjs-control-text',\r\n      textContent: this.localize('{1} is loading.', [playerType])\r\n    });\r\n\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-loading-spinner',\r\n      dir: 'ltr'\r\n    });\r\n\r\n    el.appendChild(controlText);\r\n    return el;\r\n  };\r\n\r\n  return LoadingSpinner;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\r\n\r\n/**\r\n * Base class for all buttons.\r\n *\r\n * @extends ClickableComponent\r\n */\r\n\r\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\r\n  _inheritsLoose(Button, _ClickableComponent);\r\n\r\n  function Button() {\r\n    return _ClickableComponent.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Button.prototype;\r\n\r\n  /**\r\n   * Create the `Button`s DOM element.\r\n   *\r\n   * @param {string} [tag=\"button\"]\r\n   *        The element's node type. This argument is IGNORED: no matter what\r\n   *        is passed, it will always create a `button` element.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        An object of properties that should be set on the element.\r\n   *\r\n   * @param {Object} [attributes={}]\r\n   *        An object of attributes that should be set on the element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  _proto.createEl = function createEl$1(tag, props, attributes) {\r\n    if (props === void 0) {\r\n      props = {};\r\n    }\r\n\r\n    if (attributes === void 0) {\r\n      attributes = {};\r\n    }\r\n\r\n    tag = 'button';\r\n    props = assign({\r\n      className: this.buildCSSClass()\r\n    }, props); // Add attributes for button element\r\n\r\n    attributes = assign({\r\n      // Necessary since the default button type is \"submit\"\r\n      type: 'button'\r\n    }, attributes);\r\n\r\n    var el = createEl(tag, props, attributes);\r\n\r\n    el.appendChild(createEl('span', {\r\n      className: 'vjs-icon-placeholder'\r\n    }, {\r\n      'aria-hidden': true\r\n    }));\r\n    this.createControlTextEl(el);\r\n    return el;\r\n  }\r\n  /**\r\n   * Add a child `Component` inside of this `Button`.\r\n   *\r\n   * @param {string|Component} child\r\n   *        The name or instance of a child to add.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of options that will get passed to children of\r\n   *        the child.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that gets added as a child. When using a string the\r\n   *         `Component` will get created by this process.\r\n   *\r\n   * @deprecated since version 5\r\n   */\r\n  ;\r\n\r\n  _proto.addChild = function addChild(child, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var className = this.constructor.name;\r\n    log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\r\n\r\n    return Component$1.prototype.addChild.call(this, child, options);\r\n  }\r\n  /**\r\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\r\n   * {@link Button#disable}.\r\n   */\r\n  ;\r\n\r\n  _proto.enable = function enable() {\r\n    _ClickableComponent.prototype.enable.call(this);\r\n\r\n    this.el_.removeAttribute('disabled');\r\n  }\r\n  /**\r\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\r\n   * {@link Button#enable}.\r\n   */\r\n  ;\r\n\r\n  _proto.disable = function disable() {\r\n    _ClickableComponent.prototype.disable.call(this);\r\n\r\n    this.el_.setAttribute('disabled', 'disabled');\r\n  }\r\n  /**\r\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\r\n   * press.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to get called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Ignore Space or Enter key operation, which is handled by the browser for\r\n    // a button - though not for its super class, ClickableComponent. Also,\r\n    // prevent the event from propagating through the DOM and triggering Player\r\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\r\n    // handle it.\r\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\r\n      event.stopPropagation();\r\n      return;\r\n    } // Pass keypress handling up for unsupported keys\r\n\r\n\r\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\r\n  };\r\n\r\n  return Button;\r\n}(ClickableComponent);\r\n\r\nComponent$1.registerComponent('Button', Button);\r\n\r\n/**\r\n * The initial play button that shows before the video has played. The hiding of the\r\n * `BigPlayButton` get done via CSS and `Player` states.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(BigPlayButton, _Button);\r\n\r\n  function BigPlayButton(player, options) {\r\n    var _this;\r\n\r\n    _this = _Button.call(this, player, options) || this;\r\n    _this.mouseused_ = false;\r\n\r\n    _this.on('mousedown', function (e) {\r\n      return _this.handleMouseDown(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\r\n   */\r\n\r\n\r\n  var _proto = BigPlayButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-big-play-button';\r\n  }\r\n  /**\r\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\r\n   * for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\r\n\r\n    if (this.mouseused_ && event.clientX && event.clientY) {\r\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\r\n      silencePromise(playPromise);\r\n\r\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\r\n      // calling .focus() on the video element causes the video to go black,\r\n      // so we avoid it in that specific case\r\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\r\n        this.player_.tech(true).focus();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var cb = this.player_.getChild('controlBar');\r\n    var playToggle = cb && cb.getChild('playToggle');\r\n\r\n    if (!playToggle) {\r\n      this.player_.tech(true).focus();\r\n      return;\r\n    }\r\n\r\n    var playFocus = function playFocus() {\r\n      return playToggle.focus();\r\n    };\r\n\r\n    if (isPromise(playPromise)) {\r\n      playPromise.then(playFocus, function () {});\r\n    } else {\r\n      this.setTimeout(playFocus, 1);\r\n    }\r\n  };\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    this.mouseused_ = false;\r\n\r\n    _Button.prototype.handleKeyDown.call(this, event);\r\n  };\r\n\r\n  _proto.handleMouseDown = function handleMouseDown(event) {\r\n    this.mouseused_ = true;\r\n  };\r\n\r\n  return BigPlayButton;\r\n}(Button);\r\n/**\r\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nBigPlayButton.prototype.controlText_ = 'Play Video';\r\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\r\n\r\n/**\r\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\r\n * it gets clicked.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar CloseButton = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(CloseButton, _Button);\r\n\r\n  /**\r\n  * Creates an instance of the this class.\r\n  *\r\n  * @param  {Player} player\r\n  *         The `Player` that this class should be attached to.\r\n  *\r\n  * @param  {Object} [options]\r\n  *         The key/value store of player options.\r\n  */\r\n  function CloseButton(player, options) {\r\n    var _this;\r\n\r\n    _this = _Button.call(this, player, options) || this;\r\n\r\n    _this.controlText(options && options.controlText || _this.localize('Close'));\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n  * Builds the default DOM `className`.\r\n  *\r\n  * @return {string}\r\n  *         The DOM `className` for this object.\r\n  */\r\n\r\n\r\n  var _proto = CloseButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * This gets called when a `CloseButton` gets clicked. See\r\n   * {@link ClickableComponent#handleClick} for more information on when\r\n   * this will be triggered\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   * @fires CloseButton#close\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    /**\r\n     * Triggered when the a `CloseButton` is clicked.\r\n     *\r\n     * @event CloseButton#close\r\n     * @type {EventTarget~Event}\r\n     *\r\n     * @property {boolean} [bubbles=false]\r\n     *           set to false so that the close event does not\r\n     *           bubble up to parents if there is no listener\r\n     */\r\n    this.trigger({\r\n      type: 'close',\r\n      bubbles: false\r\n    });\r\n  }\r\n  /**\r\n   * Event handler that is called when a `CloseButton` receives a\r\n   * `keydown` event.\r\n   *\r\n   * By default, if the key is Esc, it will trigger a `click` event.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Esc button will trigger `click` event\r\n    if (keycode.isEventKey(event, 'Esc')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.trigger('click');\r\n    } else {\r\n      // Pass keypress handling up for unsupported keys\r\n      _Button.prototype.handleKeyDown.call(this, event);\r\n    }\r\n  };\r\n\r\n  return CloseButton;\r\n}(Button);\r\n\r\nComponent$1.registerComponent('CloseButton', CloseButton);\r\n\r\n/**\r\n * Button to toggle between play and pause.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar PlayToggle = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(PlayToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlayToggle(player, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\r\n\r\n    options.replay = options.replay === undefined || options.replay;\r\n\r\n    _this.on(player, 'play', function (e) {\r\n      return _this.handlePlay(e);\r\n    });\r\n\r\n    _this.on(player, 'pause', function (e) {\r\n      return _this.handlePause(e);\r\n    });\r\n\r\n    if (options.replay) {\r\n      _this.on(player, 'ended', function (e) {\r\n        return _this.handleEnded(e);\r\n      });\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = PlayToggle.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * This gets called when an `PlayToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    if (this.player_.paused()) {\r\n      silencePromise(this.player_.play());\r\n    } else {\r\n      this.player_.pause();\r\n    }\r\n  }\r\n  /**\r\n   * This gets called once after the video has ended and the user seeks so that\r\n   * we can change the replay button back to a play button.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#seeked\r\n   */\r\n  ;\r\n\r\n  _proto.handleSeeked = function handleSeeked(event) {\r\n    this.removeClass('vjs-ended');\r\n\r\n    if (this.player_.paused()) {\r\n      this.handlePause(event);\r\n    } else {\r\n      this.handlePlay(event);\r\n    }\r\n  }\r\n  /**\r\n   * Add the vjs-playing class to the element so it can change appearance.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#play\r\n   */\r\n  ;\r\n\r\n  _proto.handlePlay = function handlePlay(event) {\r\n    this.removeClass('vjs-ended');\r\n    this.removeClass('vjs-paused');\r\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\r\n\r\n    this.controlText('Pause');\r\n  }\r\n  /**\r\n   * Add the vjs-paused class to the element so it can change appearance.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#pause\r\n   */\r\n  ;\r\n\r\n  _proto.handlePause = function handlePause(event) {\r\n    this.removeClass('vjs-playing');\r\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\r\n\r\n    this.controlText('Play');\r\n  }\r\n  /**\r\n   * Add the vjs-ended class to the element so it can change appearance\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#ended\r\n   */\r\n  ;\r\n\r\n  _proto.handleEnded = function handleEnded(event) {\r\n    var _this2 = this;\r\n\r\n    this.removeClass('vjs-playing');\r\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\r\n\r\n    this.controlText('Replay'); // on the next seek remove the replay button\r\n\r\n    this.one(this.player_, 'seeked', function (e) {\r\n      return _this2.handleSeeked(e);\r\n    });\r\n  };\r\n\r\n  return PlayToggle;\r\n}(Button);\r\n/**\r\n * The text that should display over the `PlayToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPlayToggle.prototype.controlText_ = 'Play';\r\nComponent$1.registerComponent('PlayToggle', PlayToggle);\r\n\r\n/**\r\n * @file format-time.js\r\n * @module format-time\r\n */\r\n\r\n/**\r\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\r\n * seconds) will force a number of leading zeros to cover the length of the\r\n * guide.\r\n *\r\n * @private\r\n * @param  {number} seconds\r\n *         Number of seconds to be turned into a string\r\n *\r\n * @param  {number} guide\r\n *         Number (in seconds) to model the string after\r\n *\r\n * @return {string}\r\n *         Time formatted as H:MM:SS or M:SS\r\n */\r\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\r\n  seconds = seconds < 0 ? 0 : seconds;\r\n  var s = Math.floor(seconds % 60);\r\n  var m = Math.floor(seconds / 60 % 60);\r\n  var h = Math.floor(seconds / 3600);\r\n  var gm = Math.floor(guide / 60 % 60);\r\n  var gh = Math.floor(guide / 3600); // handle invalid times\r\n\r\n  if (isNaN(seconds) || seconds === Infinity) {\r\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\r\n    // will add the minimum number of fields specified by the guide\r\n    h = m = s = '-';\r\n  } // Check if we need to show hours\r\n\r\n\r\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\r\n  // Always show at least one digit of minutes.\r\n\r\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\r\n\r\n  s = s < 10 ? '0' + s : s;\r\n  return h + m + s;\r\n}; // Internal pointer to the current implementation.\r\n\r\n\r\nvar implementation = defaultImplementation;\r\n/**\r\n * Replaces the default formatTime implementation with a custom implementation.\r\n *\r\n * @param {Function} customImplementation\r\n *        A function which will be used in place of the default formatTime\r\n *        implementation. Will receive the current time in seconds and the\r\n *        guide (in seconds) as arguments.\r\n */\r\n\r\nfunction setFormatTime(customImplementation) {\r\n  implementation = customImplementation;\r\n}\r\n/**\r\n * Resets formatTime to the default implementation.\r\n */\r\n\r\nfunction resetFormatTime() {\r\n  implementation = defaultImplementation;\r\n}\r\n/**\r\n * Delegates to either the default time formatting function or a custom\r\n * function supplied via `setFormatTime`.\r\n *\r\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\r\n * guide (in seconds) will force a number of leading zeros to cover the\r\n * length of the guide.\r\n *\r\n * @static\r\n * @example  formatTime(125, 600) === \"02:05\"\r\n * @param    {number} seconds\r\n *           Number of seconds to be turned into a string\r\n *\r\n * @param    {number} guide\r\n *           Number (in seconds) to model the string after\r\n *\r\n * @return   {string}\r\n *           Time formatted as H:MM:SS or M:SS\r\n */\r\n\r\nfunction formatTime(seconds, guide) {\r\n  if (guide === void 0) {\r\n    guide = seconds;\r\n  }\r\n\r\n  return implementation(seconds, guide);\r\n}\r\n\r\n/**\r\n * Displays time information about the video\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(TimeDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TimeDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n\r\n    _this.on(player, ['timeupdate', 'ended'], function (e) {\r\n      return _this.updateContent(e);\r\n    });\r\n\r\n    _this.updateTextNode_();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = TimeDisplay.prototype;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var className = this.buildCSSClass();\r\n\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: className + \" vjs-time-control vjs-control\"\r\n    });\r\n\r\n    var span = createEl('span', {\r\n      className: 'vjs-control-text',\r\n      textContent: this.localize(this.labelText_) + \"\\xA0\"\r\n    }, {\r\n      role: 'presentation'\r\n    });\r\n    el.appendChild(span);\r\n    this.contentEl_ = createEl('span', {\r\n      className: className + \"-display\"\r\n    }, {\r\n      // tell screen readers not to automatically read the time as it changes\r\n      'aria-live': 'off',\r\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\r\n      // treat them as a break between items in the DOM when using arrow keys\r\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\r\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\r\n      'role': 'presentation'\r\n    });\r\n    el.appendChild(this.contentEl_);\r\n    return el;\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n    this.textNode_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Updates the time display text node with a new time\r\n   *\r\n   * @param {number} [time=0] the time to update to\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.updateTextNode_ = function updateTextNode_(time) {\r\n    var _this2 = this;\r\n\r\n    if (time === void 0) {\r\n      time = 0;\r\n    }\r\n\r\n    time = formatTime(time);\r\n\r\n    if (this.formattedTime_ === time) {\r\n      return;\r\n    }\r\n\r\n    this.formattedTime_ = time;\r\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\r\n      if (!_this2.contentEl_) {\r\n        return;\r\n      }\r\n\r\n      var oldNode = _this2.textNode_;\r\n\r\n      if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\r\n        oldNode = null;\r\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\r\n      }\r\n\r\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\r\n\r\n      if (!_this2.textNode_) {\r\n        return;\r\n      }\r\n\r\n      if (oldNode) {\r\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\r\n      } else {\r\n        _this2.contentEl_.appendChild(_this2.textNode_);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * To be filled out in the child class, should update the displayed time\r\n   * in accordance with the fact that the current time has changed.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate`  event that caused this to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   */\r\n  ;\r\n\r\n  _proto.updateContent = function updateContent(event) {};\r\n\r\n  return TimeDisplay;\r\n}(Component$1);\r\n/**\r\n * The text that is added to the `TimeDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nTimeDisplay.prototype.labelText_ = 'Time';\r\n/**\r\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\n\r\nTimeDisplay.prototype.controlText_ = 'Time';\r\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\r\n\r\n/**\r\n * Displays the current time\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\r\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\r\n\r\n  function CurrentTimeDisplay() {\r\n    return _TimeDisplay.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = CurrentTimeDisplay.prototype;\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-current-time';\r\n  }\r\n  /**\r\n   * Update current time display\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` event that caused this function to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   */\r\n  ;\r\n\r\n  _proto.updateContent = function updateContent(event) {\r\n    // Allows for smooth scrubbing, when player can't keep up.\r\n    var time;\r\n\r\n    if (this.player_.ended()) {\r\n      time = this.player_.duration();\r\n    } else {\r\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\r\n    }\r\n\r\n    this.updateTextNode_(time);\r\n  };\r\n\r\n  return CurrentTimeDisplay;\r\n}(TimeDisplay);\r\n/**\r\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\r\n/**\r\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\n\r\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\r\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\r\n\r\n/**\r\n * Displays the duration\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\r\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function DurationDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _TimeDisplay.call(this, player, options) || this;\r\n\r\n    var updateContent = function updateContent(e) {\r\n      return _this.updateContent(e);\r\n    }; // we do not want to/need to throttle duration changes,\r\n    // as they should always display the changed duration as\r\n    // it has changed\r\n\r\n\r\n    _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\r\n    // but the durationchange on the user agent will not fire.\r\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\r\n\r\n\r\n    _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\r\n    // listeners could have broken dependent applications/libraries. These\r\n    // can likely be removed for 7.0.\r\n\r\n\r\n    _this.on(player, 'loadedmetadata', updateContent);\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = DurationDisplay.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-duration';\r\n  }\r\n  /**\r\n   * Update duration time display.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\r\n   *        this function to be called.\r\n   *\r\n   * @listens Player#durationchange\r\n   * @listens Player#timeupdate\r\n   * @listens Player#loadedmetadata\r\n   */\r\n  ;\r\n\r\n  _proto.updateContent = function updateContent(event) {\r\n    var duration = this.player_.duration();\r\n    this.updateTextNode_(duration);\r\n  };\r\n\r\n  return DurationDisplay;\r\n}(TimeDisplay);\r\n/**\r\n * The text that is added to the `DurationDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nDurationDisplay.prototype.labelText_ = 'Duration';\r\n/**\r\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\n\r\nDurationDisplay.prototype.controlText_ = 'Duration';\r\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\r\n\r\n/**\r\n * The separator between the current time and duration.\r\n * Can be hidden if it's not needed in the design.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TimeDivider = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(TimeDivider, _Component);\r\n\r\n  function TimeDivider() {\r\n    return _Component.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = TimeDivider.prototype;\r\n\r\n  /**\r\n   * Create the component's DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  _proto.createEl = function createEl() {\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-time-control vjs-time-divider'\r\n    }, {\r\n      // this element and its contents can be hidden from assistive techs since\r\n      // it is made extraneous by the announcement of the control text\r\n      // for the current time and duration displays\r\n      'aria-hidden': true\r\n    });\r\n\r\n    var div = _Component.prototype.createEl.call(this, 'div');\r\n\r\n    var span = _Component.prototype.createEl.call(this, 'span', {\r\n      textContent: '/'\r\n    });\r\n\r\n    div.appendChild(span);\r\n    el.appendChild(div);\r\n    return el;\r\n  };\r\n\r\n  return TimeDivider;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('TimeDivider', TimeDivider);\r\n\r\n/**\r\n * Displays the time left in the video\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\r\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function RemainingTimeDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _TimeDisplay.call(this, player, options) || this;\r\n\r\n    _this.on(player, 'durationchange', function (e) {\r\n      return _this.updateContent(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = RemainingTimeDisplay.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-remaining-time';\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var el = _TimeDisplay.prototype.createEl.call(this);\r\n\r\n    if (this.options_.displayNegative !== false) {\r\n      el.insertBefore(createEl('span', {}, {\r\n        'aria-hidden': true\r\n      }, '-'), this.contentEl_);\r\n    }\r\n\r\n    return el;\r\n  }\r\n  /**\r\n   * Update remaining time display.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` or `durationchange` event that caused this to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   * @listens Player#durationchange\r\n   */\r\n  ;\r\n\r\n  _proto.updateContent = function updateContent(event) {\r\n    if (typeof this.player_.duration() !== 'number') {\r\n      return;\r\n    }\r\n\r\n    var time; // @deprecated We should only use remainingTimeDisplay\r\n    // as of video.js 7\r\n\r\n    if (this.player_.ended()) {\r\n      time = 0;\r\n    } else if (this.player_.remainingTimeDisplay) {\r\n      time = this.player_.remainingTimeDisplay();\r\n    } else {\r\n      time = this.player_.remainingTime();\r\n    }\r\n\r\n    this.updateTextNode_(time);\r\n  };\r\n\r\n  return RemainingTimeDisplay;\r\n}(TimeDisplay);\r\n/**\r\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\r\n/**\r\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\n\r\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\r\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\r\n\r\n/**\r\n * Displays the live indicator when duration is Infinity.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(LiveDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function LiveDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n\r\n    _this.updateShowing();\r\n\r\n    _this.on(_this.player(), 'durationchange', function (e) {\r\n      return _this.updateShowing(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = LiveDisplay.prototype;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-live-control vjs-control'\r\n    });\r\n\r\n    this.contentEl_ = createEl('div', {\r\n      className: 'vjs-live-display'\r\n    }, {\r\n      'aria-live': 'off'\r\n    });\r\n    this.contentEl_.appendChild(createEl('span', {\r\n      className: 'vjs-control-text',\r\n      textContent: this.localize('Stream Type') + \"\\xA0\"\r\n    }));\r\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\r\n    el.appendChild(this.contentEl_);\r\n    return el;\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\r\n   * it accordingly\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#durationchange} event that caused this function to run.\r\n   *\r\n   * @listens Player#durationchange\r\n   */\r\n  ;\r\n\r\n  _proto.updateShowing = function updateShowing(event) {\r\n    if (this.player().duration() === Infinity) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  return LiveDisplay;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\r\n\r\n/**\r\n * Displays the live indicator when duration is Infinity.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar SeekToLive = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(SeekToLive, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function SeekToLive(player, options) {\r\n    var _this;\r\n\r\n    _this = _Button.call(this, player, options) || this;\r\n\r\n    _this.updateLiveEdgeStatus();\r\n\r\n    if (_this.player_.liveTracker) {\r\n      _this.updateLiveEdgeStatusHandler_ = function (e) {\r\n        return _this.updateLiveEdgeStatus(e);\r\n      };\r\n\r\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = SeekToLive.prototype;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var el = _Button.prototype.createEl.call(this, 'button', {\r\n      className: 'vjs-seek-to-live-control vjs-control'\r\n    });\r\n\r\n    this.textEl_ = createEl('span', {\r\n      className: 'vjs-seek-to-live-text',\r\n      textContent: this.localize('LIVE')\r\n    }, {\r\n      'aria-hidden': 'true'\r\n    });\r\n    el.appendChild(this.textEl_);\r\n    return el;\r\n  }\r\n  /**\r\n   * Update the state of this button if we are at the live edge\r\n   * or not\r\n   */\r\n  ;\r\n\r\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\r\n    // default to live edge\r\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\r\n      this.setAttribute('aria-disabled', true);\r\n      this.addClass('vjs-at-live-edge');\r\n      this.controlText('Seek to live, currently playing live');\r\n    } else {\r\n      this.setAttribute('aria-disabled', false);\r\n      this.removeClass('vjs-at-live-edge');\r\n      this.controlText('Seek to live, currently behind live');\r\n    }\r\n  }\r\n  /**\r\n   * On click bring us as near to the live point as possible.\r\n   * This requires that we wait for the next `live-seekable-change`\r\n   * event which will happen every segment length seconds.\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick() {\r\n    this.player_.liveTracker.seekToLiveEdge();\r\n  }\r\n  /**\r\n   * Dispose of the element and stop tracking\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    if (this.player_.liveTracker) {\r\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\r\n    }\r\n\r\n    this.textEl_ = null;\r\n\r\n    _Button.prototype.dispose.call(this);\r\n  };\r\n\r\n  return SeekToLive;\r\n}(Button);\r\n\r\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\r\nComponent$1.registerComponent('SeekToLive', SeekToLive);\r\n\r\n/**\r\n * Keep a number between a min and a max value\r\n *\r\n * @param {number} number\r\n *        The number to clamp\r\n *\r\n * @param {number} min\r\n *        The minimum value\r\n * @param {number} max\r\n *        The maximum value\r\n *\r\n * @return {number}\r\n *         the clamped number\r\n */\r\nvar clamp = function clamp(number, min, max) {\r\n  number = Number(number);\r\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\r\n};\r\n\r\n/**\r\n * The base functionality for a slider. Can be vertical or horizontal.\r\n * For instance the volume bar or the seek bar on a video is a slider.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Slider = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Slider, _Component);\r\n\r\n  /**\r\n  * Create an instance of this class\r\n  *\r\n  * @param {Player} player\r\n  *        The `Player` that this class should be attached to.\r\n  *\r\n  * @param {Object} [options]\r\n  *        The key/value store of player options.\r\n  */\r\n  function Slider(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n\r\n    _this.handleMouseDown_ = function (e) {\r\n      return _this.handleMouseDown(e);\r\n    };\r\n\r\n    _this.handleMouseUp_ = function (e) {\r\n      return _this.handleMouseUp(e);\r\n    };\r\n\r\n    _this.handleKeyDown_ = function (e) {\r\n      return _this.handleKeyDown(e);\r\n    };\r\n\r\n    _this.handleClick_ = function (e) {\r\n      return _this.handleClick(e);\r\n    };\r\n\r\n    _this.handleMouseMove_ = function (e) {\r\n      return _this.handleMouseMove(e);\r\n    };\r\n\r\n    _this.update_ = function (e) {\r\n      return _this.update(e);\r\n    }; // Set property names to bar to match with the child Slider class is looking for\r\n\r\n\r\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\r\n\r\n    _this.vertical(!!_this.options_.vertical);\r\n\r\n    _this.enable();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Are controls are currently enabled for this slider or not.\r\n   *\r\n   * @return {boolean}\r\n   *         true if controls are enabled, false otherwise\r\n   */\r\n\r\n\r\n  var _proto = Slider.prototype;\r\n\r\n  _proto.enabled = function enabled() {\r\n    return this.enabled_;\r\n  }\r\n  /**\r\n   * Enable controls for this slider if they are disabled\r\n   */\r\n  ;\r\n\r\n  _proto.enable = function enable() {\r\n    if (this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    this.on('mousedown', this.handleMouseDown_);\r\n    this.on('touchstart', this.handleMouseDown_);\r\n    this.on('keydown', this.handleKeyDown_);\r\n    this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\r\n\r\n    this.on(this.player_, 'controlsvisible', this.update);\r\n\r\n    if (this.playerEvent) {\r\n      this.on(this.player_, this.playerEvent, this.update);\r\n    }\r\n\r\n    this.removeClass('disabled');\r\n    this.setAttribute('tabindex', 0);\r\n    this.enabled_ = true;\r\n  }\r\n  /**\r\n   * Disable controls for this slider if they are enabled\r\n   */\r\n  ;\r\n\r\n  _proto.disable = function disable() {\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    var doc = this.bar.el_.ownerDocument;\r\n    this.off('mousedown', this.handleMouseDown_);\r\n    this.off('touchstart', this.handleMouseDown_);\r\n    this.off('keydown', this.handleKeyDown_);\r\n    this.off('click', this.handleClick_);\r\n    this.off(this.player_, 'controlsvisible', this.update_);\r\n    this.off(doc, 'mousemove', this.handleMouseMove_);\r\n    this.off(doc, 'mouseup', this.handleMouseUp_);\r\n    this.off(doc, 'touchmove', this.handleMouseMove_);\r\n    this.off(doc, 'touchend', this.handleMouseUp_);\r\n    this.removeAttribute('tabindex');\r\n    this.addClass('disabled');\r\n\r\n    if (this.playerEvent) {\r\n      this.off(this.player_, this.playerEvent, this.update);\r\n    }\r\n\r\n    this.enabled_ = false;\r\n  }\r\n  /**\r\n   * Create the `Slider`s DOM element.\r\n   *\r\n   * @param {string} type\r\n   *        Type of element to create.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        List of properties in Object form.\r\n   *\r\n   * @param {Object} [attributes={}]\r\n   *        list of attributes in Object form.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl(type, props, attributes) {\r\n    if (props === void 0) {\r\n      props = {};\r\n    }\r\n\r\n    if (attributes === void 0) {\r\n      attributes = {};\r\n    }\r\n\r\n    // Add the slider element class to all sub classes\r\n    props.className = props.className + ' vjs-slider';\r\n    props = assign({\r\n      tabIndex: 0\r\n    }, props);\r\n    attributes = assign({\r\n      'role': 'slider',\r\n      'aria-valuenow': 0,\r\n      'aria-valuemin': 0,\r\n      'aria-valuemax': 100,\r\n      'tabIndex': 0\r\n    }, attributes);\r\n    return _Component.prototype.createEl.call(this, type, props, attributes);\r\n  }\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   * @fires Slider#slideractive\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseDown = function handleMouseDown(event) {\r\n    var doc = this.bar.el_.ownerDocument;\r\n\r\n    if (event.type === 'mousedown') {\r\n      event.preventDefault();\r\n    } // Do not call preventDefault() on touchstart in Chrome\r\n    // to avoid console warnings. Use a 'touch-action: none' style\r\n    // instead to prevent unintented scrolling.\r\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\r\n\r\n\r\n    if (event.type === 'touchstart' && !IS_CHROME) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    blockTextSelection();\r\n    this.addClass('vjs-sliding');\r\n    /**\r\n     * Triggered when the slider is in an active state\r\n     *\r\n     * @event Slider#slideractive\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('slideractive');\r\n    this.on(doc, 'mousemove', this.handleMouseMove_);\r\n    this.on(doc, 'mouseup', this.handleMouseUp_);\r\n    this.on(doc, 'touchmove', this.handleMouseMove_);\r\n    this.on(doc, 'touchend', this.handleMouseUp_);\r\n    this.handleMouseMove(event, true);\r\n  }\r\n  /**\r\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\r\n   * The `mousemove` and `touchmove` events will only only trigger this function during\r\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\r\n   * {@link Slider#handleMouseUp}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\r\n   *        this function\r\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\r\n   *\r\n   * @listens mousemove\r\n   * @listens touchmove\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseMove = function handleMouseMove(event) {}\r\n  /**\r\n   * Handle `mouseup` or `touchend` events on the `Slider`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mouseup` or `touchend` event that triggered this function.\r\n   *\r\n   * @listens touchend\r\n   * @listens mouseup\r\n   * @fires Slider#sliderinactive\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseUp = function handleMouseUp() {\r\n    var doc = this.bar.el_.ownerDocument;\r\n    unblockTextSelection();\r\n    this.removeClass('vjs-sliding');\r\n    /**\r\n     * Triggered when the slider is no longer in an active state.\r\n     *\r\n     * @event Slider#sliderinactive\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('sliderinactive');\r\n    this.off(doc, 'mousemove', this.handleMouseMove_);\r\n    this.off(doc, 'mouseup', this.handleMouseUp_);\r\n    this.off(doc, 'touchmove', this.handleMouseMove_);\r\n    this.off(doc, 'touchend', this.handleMouseUp_);\r\n    this.update();\r\n  }\r\n  /**\r\n   * Update the progress bar of the `Slider`.\r\n   *\r\n   * @return {number}\r\n   *          The percentage of progress the progress bar represents as a\r\n   *          number from 0 to 1.\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update() {\r\n    var _this2 = this;\r\n\r\n    // In VolumeBar init we have a setTimeout for update that pops and update\r\n    // to the end of the execution stack. The player is destroyed before then\r\n    // update will cause an error\r\n    // If there's no bar...\r\n    if (!this.el_ || !this.bar) {\r\n      return;\r\n    } // clamp progress between 0 and 1\r\n    // and only round to four decimal places, as we round to two below\r\n\r\n\r\n    var progress = this.getProgress();\r\n\r\n    if (progress === this.progress_) {\r\n      return progress;\r\n    }\r\n\r\n    this.progress_ = progress;\r\n    this.requestNamedAnimationFrame('Slider#update', function () {\r\n      // Set the new bar width or height\r\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\r\n\r\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\r\n    });\r\n    return progress;\r\n  }\r\n  /**\r\n   * Get the percentage of the bar that should be filled\r\n   * but clamped and rounded.\r\n   *\r\n   * @return {number}\r\n   *         percentage filled that the slider is\r\n   */\r\n  ;\r\n\r\n  _proto.getProgress = function getProgress() {\r\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\r\n  }\r\n  /**\r\n   * Calculate distance for slider\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @return {number}\r\n   *         The current position of the Slider.\r\n   *         - position.x for vertical `Slider`s\r\n   *         - position.y for horizontal `Slider`s\r\n   */\r\n  ;\r\n\r\n  _proto.calculateDistance = function calculateDistance(event) {\r\n    var position = getPointerPosition(this.el_, event);\r\n\r\n    if (this.vertical()) {\r\n      return position.y;\r\n    }\r\n\r\n    return position.x;\r\n  }\r\n  /**\r\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\r\n   * arrow keys. This function will only be called when the slider has focus. See\r\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the `keydown` event that caused this function to run.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Left and Down Arrows\r\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.stepBack(); // Up and Right Arrows\r\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.stepForward();\r\n    } else {\r\n      // Pass keydown handling up for unsupported keys\r\n      _Component.prototype.handleKeyDown.call(this, event);\r\n    }\r\n  }\r\n  /**\r\n   * Listener for click events on slider, used to prevent clicks\r\n   *   from bubbling up to parent elements like button menus.\r\n   *\r\n   * @param {Object} event\r\n   *        Event that caused this object to run\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n  /**\r\n   * Get/set if slider is horizontal for vertical\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true if slider is vertical,\r\n   *        - false is horizontal\r\n   *\r\n   * @return {boolean}\r\n   *         - true if slider is vertical, and getting\r\n   *         - false if the slider is horizontal, and getting\r\n   */\r\n  ;\r\n\r\n  _proto.vertical = function vertical(bool) {\r\n    if (bool === undefined) {\r\n      return this.vertical_ || false;\r\n    }\r\n\r\n    this.vertical_ = !!bool;\r\n\r\n    if (this.vertical_) {\r\n      this.addClass('vjs-slider-vertical');\r\n    } else {\r\n      this.addClass('vjs-slider-horizontal');\r\n    }\r\n  };\r\n\r\n  return Slider;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('Slider', Slider);\r\n\r\nvar percentify = function percentify(time, end) {\r\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\r\n};\r\n/**\r\n * Shows loading progress\r\n *\r\n * @extends Component\r\n */\r\n\r\n\r\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(LoadProgressBar, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function LoadProgressBar(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.partEls_ = [];\r\n\r\n    _this.on(player, 'progress', function (e) {\r\n      return _this.update(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = LoadProgressBar.prototype;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-load-progress'\r\n    });\r\n\r\n    var wrapper = createEl('span', {\r\n      className: 'vjs-control-text'\r\n    });\r\n    var loadedText = createEl('span', {\r\n      textContent: this.localize('Loaded')\r\n    });\r\n    var separator = document.createTextNode(': ');\r\n    this.percentageEl_ = createEl('span', {\r\n      className: 'vjs-control-text-loaded-percentage',\r\n      textContent: '0%'\r\n    });\r\n    el.appendChild(wrapper);\r\n    wrapper.appendChild(loadedText);\r\n    wrapper.appendChild(separator);\r\n    wrapper.appendChild(this.percentageEl_);\r\n    return el;\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.partEls_ = null;\r\n    this.percentageEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Update progress bar\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `progress` event that caused this function to run.\r\n   *\r\n   * @listens Player#progress\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(event) {\r\n    var _this2 = this;\r\n\r\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\r\n      var liveTracker = _this2.player_.liveTracker;\r\n\r\n      var buffered = _this2.player_.buffered();\r\n\r\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\r\n\r\n      var bufferedEnd = _this2.player_.bufferedEnd();\r\n\r\n      var children = _this2.partEls_;\r\n      var percent = percentify(bufferedEnd, duration);\r\n\r\n      if (_this2.percent_ !== percent) {\r\n        // update the width of the progress bar\r\n        _this2.el_.style.width = percent; // update the control-text\r\n\r\n        textContent(_this2.percentageEl_, percent);\r\n        _this2.percent_ = percent;\r\n      } // add child elements to represent the individual buffered time ranges\r\n\r\n\r\n      for (var i = 0; i < buffered.length; i++) {\r\n        var start = buffered.start(i);\r\n        var end = buffered.end(i);\r\n        var part = children[i];\r\n\r\n        if (!part) {\r\n          part = _this2.el_.appendChild(createEl());\r\n          children[i] = part;\r\n        } //  only update if changed\r\n\r\n\r\n        if (part.dataset.start === start && part.dataset.end === end) {\r\n          continue;\r\n        }\r\n\r\n        part.dataset.start = start;\r\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\r\n\r\n        part.style.left = percentify(start, bufferedEnd);\r\n        part.style.width = percentify(end - start, bufferedEnd);\r\n      } // remove unused buffered range elements\r\n\r\n\r\n      for (var _i = children.length; _i > buffered.length; _i--) {\r\n        _this2.el_.removeChild(children[_i - 1]);\r\n      }\r\n\r\n      children.length = buffered.length;\r\n    });\r\n  };\r\n\r\n  return LoadProgressBar;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\r\n\r\n/**\r\n * Time tooltips display a time above the progress bar.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(TimeTooltip, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The {@link Player} that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TimeTooltip(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the time tooltip DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = TimeTooltip.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-time-tooltip'\r\n    }, {\r\n      'aria-hidden': 'true'\r\n    });\r\n  }\r\n  /**\r\n   * Updates the position of the time tooltip relative to the `SeekBar`.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\r\n    var tooltipRect = findPosition(this.el_);\r\n    var playerRect = getBoundingClientRect(this.player_.el());\r\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\r\n    // for example, if the player isn't in the DOM for testing\r\n\r\n    if (!playerRect || !tooltipRect) {\r\n      return;\r\n    } // This is the space left of the `seekBarPoint` available within the bounds\r\n    // of the player. We calculate any gap between the left edge of the player\r\n    // and the left edge of the `SeekBar` and add the number of pixels in the\r\n    // `SeekBar` before hitting the `seekBarPoint`\r\n\r\n\r\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\r\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\r\n    // to the right edge of the `SeekBar` and add to that any gap between the\r\n    // right edge of the `SeekBar` and the player.\r\n\r\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\r\n    // further to the right to center it over the `seekBarPoint`.\r\n\r\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\r\n    // the results of the space calculations above.\r\n\r\n    if (spaceLeftOfPoint < pullTooltipBy) {\r\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\r\n    } else if (spaceRightOfPoint < pullTooltipBy) {\r\n      pullTooltipBy = spaceRightOfPoint;\r\n    } // Due to the imprecision of decimal/ratio based calculations and varying\r\n    // rounding behaviors, there are cases where the spacing adjustment is off\r\n    // by a pixel or two. This adds insurance to these calculations.\r\n\r\n\r\n    if (pullTooltipBy < 0) {\r\n      pullTooltipBy = 0;\r\n    } else if (pullTooltipBy > tooltipRect.width) {\r\n      pullTooltipBy = tooltipRect.width;\r\n    } // prevent small width fluctuations within 0.4px from\r\n    // changing the value below.\r\n    // This really helps for live to prevent the play\r\n    // progress time tooltip from jittering\r\n\r\n\r\n    pullTooltipBy = Math.round(pullTooltipBy);\r\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\r\n    this.write(content);\r\n  }\r\n  /**\r\n   * Write the time to the tooltip DOM element.\r\n   *\r\n   * @param {string} content\r\n   *        The formatted time for the tooltip.\r\n   */\r\n  ;\r\n\r\n  _proto.write = function write(content) {\r\n    textContent(this.el_, content);\r\n  }\r\n  /**\r\n   * Updates the position of the time tooltip relative to the `SeekBar`.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   *\r\n   * @param {number} time\r\n   *        The time to update the tooltip to, not used during live playback\r\n   *\r\n   * @param {Function} cb\r\n   *        A function that will be called during the request animation frame\r\n   *        for tooltips that need to do additional animations from the default\r\n   */\r\n  ;\r\n\r\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\r\n    var _this2 = this;\r\n\r\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\r\n      var content;\r\n\r\n      var duration = _this2.player_.duration();\r\n\r\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\r\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\r\n\r\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\r\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\r\n      } else {\r\n        content = formatTime(time, duration);\r\n      }\r\n\r\n      _this2.update(seekBarRect, seekBarPoint, content);\r\n\r\n      if (cb) {\r\n        cb();\r\n      }\r\n    });\r\n  };\r\n\r\n  return TimeTooltip;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\r\n\r\n/**\r\n * Used by {@link SeekBar} to display media playback progress as part of the\r\n * {@link ProgressControl}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(PlayProgressBar, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The {@link Player} that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlayProgressBar(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the the DOM element for this class.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = PlayProgressBar.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-play-progress vjs-slider-bar'\r\n    }, {\r\n      'aria-hidden': 'true'\r\n    });\r\n  }\r\n  /**\r\n   * Enqueues updates to its own DOM as well as the DOM of its\r\n   * {@link TimeTooltip} child.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(seekBarRect, seekBarPoint) {\r\n    var timeTooltip = this.getChild('timeTooltip');\r\n\r\n    if (!timeTooltip) {\r\n      return;\r\n    }\r\n\r\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\r\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\r\n  };\r\n\r\n  return PlayProgressBar;\r\n}(Component$1);\r\n/**\r\n * Default options for {@link PlayProgressBar}.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nPlayProgressBar.prototype.options_ = {\r\n  children: []\r\n}; // Time tooltips should not be added to a player on mobile devices\r\n\r\nif (!IS_IOS && !IS_ANDROID) {\r\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\r\n}\r\n\r\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\r\n\r\n/**\r\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\r\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\r\n * indicating the time which is represented by a given point in the\r\n * {@link ProgressControl}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(MouseTimeDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The {@link Player} that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MouseTimeDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the DOM element for this class.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = MouseTimeDisplay.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-mouse-display'\r\n    });\r\n  }\r\n  /**\r\n   * Enqueues updates to its own DOM as well as the DOM of its\r\n   * {@link TimeTooltip} child.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(seekBarRect, seekBarPoint) {\r\n    var _this2 = this;\r\n\r\n    var time = seekBarPoint * this.player_.duration();\r\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\r\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\r\n    });\r\n  };\r\n\r\n  return MouseTimeDisplay;\r\n}(Component$1);\r\n/**\r\n * Default options for `MouseTimeDisplay`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nMouseTimeDisplay.prototype.options_ = {\r\n  children: ['timeTooltip']\r\n};\r\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\r\n\r\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\r\n\r\nvar PAGE_KEY_MULTIPLIER = 12;\r\n/**\r\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\r\n * as its `bar`.\r\n *\r\n * @extends Slider\r\n */\r\n\r\nvar SeekBar = /*#__PURE__*/function (_Slider) {\r\n  _inheritsLoose(SeekBar, _Slider);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function SeekBar(player, options) {\r\n    var _this;\r\n\r\n    _this = _Slider.call(this, player, options) || this;\r\n\r\n    _this.setEventHandlers_();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Sets the event handlers\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var _proto = SeekBar.prototype;\r\n\r\n  _proto.setEventHandlers_ = function setEventHandlers_() {\r\n    var _this2 = this;\r\n\r\n    this.update_ = bind(this, this.update);\r\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\r\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\r\n\r\n    if (this.player_.liveTracker) {\r\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\r\n    } // when playing, let's ensure we smoothly update the play progress bar\r\n    // via an interval\r\n\r\n\r\n    this.updateInterval = null;\r\n\r\n    this.enableIntervalHandler_ = function (e) {\r\n      return _this2.enableInterval_(e);\r\n    };\r\n\r\n    this.disableIntervalHandler_ = function (e) {\r\n      return _this2.disableInterval_(e);\r\n    };\r\n\r\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\r\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\r\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\r\n\r\n    if ('hidden' in document && 'visibilityState' in document) {\r\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\r\n    }\r\n  };\r\n\r\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\r\n    if (document.visibilityState === 'hidden') {\r\n      this.cancelNamedAnimationFrame('SeekBar#update');\r\n      this.cancelNamedAnimationFrame('Slider#update');\r\n      this.disableInterval_(e);\r\n    } else {\r\n      if (!this.player_.ended() && !this.player_.paused()) {\r\n        this.enableInterval_();\r\n      } // we just switched back to the page and someone may be looking, so, update ASAP\r\n\r\n\r\n      this.update();\r\n    }\r\n  };\r\n\r\n  _proto.enableInterval_ = function enableInterval_() {\r\n    if (this.updateInterval) {\r\n      return;\r\n    }\r\n\r\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\r\n  };\r\n\r\n  _proto.disableInterval_ = function disableInterval_(e) {\r\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\r\n      return;\r\n    }\r\n\r\n    if (!this.updateInterval) {\r\n      return;\r\n    }\r\n\r\n    this.clearInterval(this.updateInterval);\r\n    this.updateInterval = null;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Slider.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-progress-holder'\r\n    }, {\r\n      'aria-label': this.localize('Progress Bar')\r\n    });\r\n  }\r\n  /**\r\n   * This function updates the play progress bar and accessibility\r\n   * attributes to whatever is passed in.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` or `ended` event that caused this to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   *\r\n   * @return {number}\r\n   *          The current percent at a number from 0-1\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(event) {\r\n    var _this3 = this;\r\n\r\n    // ignore updates while the tab is hidden\r\n    if (document.visibilityState === 'hidden') {\r\n      return;\r\n    }\r\n\r\n    var percent = _Slider.prototype.update.call(this);\r\n\r\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\r\n      var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\r\n      var liveTracker = _this3.player_.liveTracker;\r\n\r\n      var duration = _this3.player_.duration();\r\n\r\n      if (liveTracker && liveTracker.isLive()) {\r\n        duration = _this3.player_.liveTracker.liveCurrentTime();\r\n      }\r\n\r\n      if (_this3.percent_ !== percent) {\r\n        // machine readable value of progress bar (percentage complete)\r\n        _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\r\n\r\n        _this3.percent_ = percent;\r\n      }\r\n\r\n      if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\r\n        // human readable value of progress bar (time complete)\r\n        _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\r\n\r\n        _this3.currentTime_ = currentTime;\r\n        _this3.duration_ = duration;\r\n      } // update the progress bar time tooltip with the current time\r\n\r\n\r\n      if (_this3.bar) {\r\n        _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\r\n      }\r\n    });\r\n    return percent;\r\n  }\r\n  /**\r\n   * Prevent liveThreshold from causing seeks to seem like they\r\n   * are not happening from a user perspective.\r\n   *\r\n   * @param {number} ct\r\n   *        current time to seek to\r\n   */\r\n  ;\r\n\r\n  _proto.userSeek_ = function userSeek_(ct) {\r\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\r\n      this.player_.liveTracker.nextSeekedFromUser();\r\n    }\r\n\r\n    this.player_.currentTime(ct);\r\n  }\r\n  /**\r\n   * Get the value of current time but allows for smooth scrubbing,\r\n   * when player can't keep up.\r\n   *\r\n   * @return {number}\r\n   *         The current time value to display\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.getCurrentTime_ = function getCurrentTime_() {\r\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\r\n  }\r\n  /**\r\n   * Get the percentage of media played so far.\r\n   *\r\n   * @return {number}\r\n   *         The percentage of media played so far (0 to 1).\r\n   */\r\n  ;\r\n\r\n  _proto.getPercent = function getPercent() {\r\n    var currentTime = this.getCurrentTime_();\r\n    var percent;\r\n    var liveTracker = this.player_.liveTracker;\r\n\r\n    if (liveTracker && liveTracker.isLive()) {\r\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\r\n\r\n      if (liveTracker.atLiveEdge()) {\r\n        percent = 1;\r\n      }\r\n    } else {\r\n      percent = currentTime / this.player_.duration();\r\n    }\r\n\r\n    return percent;\r\n  }\r\n  /**\r\n   * Handle mouse down on seek bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousedown` event that caused this to run.\r\n   *\r\n   * @listens mousedown\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseDown = function handleMouseDown(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    } // Stop event propagation to prevent double fire in progress-control.js\r\n\r\n\r\n    event.stopPropagation();\r\n    this.videoWasPlaying = !this.player_.paused();\r\n    this.player_.pause();\r\n\r\n    _Slider.prototype.handleMouseDown.call(this, event);\r\n  }\r\n  /**\r\n   * Handle mouse move on seek bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousemove` event that caused this to run.\r\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\r\n   *\r\n   * @listens mousemove\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseMove = function handleMouseMove(event, mouseDown) {\r\n    if (mouseDown === void 0) {\r\n      mouseDown = false;\r\n    }\r\n\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    if (!mouseDown && !this.player_.scrubbing()) {\r\n      this.player_.scrubbing(true);\r\n    }\r\n\r\n    var newTime;\r\n    var distance = this.calculateDistance(event);\r\n    var liveTracker = this.player_.liveTracker;\r\n\r\n    if (!liveTracker || !liveTracker.isLive()) {\r\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\r\n\r\n      if (newTime === this.player_.duration()) {\r\n        newTime = newTime - 0.1;\r\n      }\r\n    } else {\r\n      if (distance >= 0.99) {\r\n        liveTracker.seekToLiveEdge();\r\n        return;\r\n      }\r\n\r\n      var seekableStart = liveTracker.seekableStart();\r\n      var seekableEnd = liveTracker.liveCurrentTime();\r\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\r\n\r\n      if (newTime >= seekableEnd) {\r\n        newTime = seekableEnd;\r\n      } // Compensate for precision differences so that currentTime is not less\r\n      // than seekable start\r\n\r\n\r\n      if (newTime <= seekableStart) {\r\n        newTime = seekableStart + 0.1;\r\n      } // On android seekableEnd can be Infinity sometimes,\r\n      // this will cause newTime to be Infinity, which is\r\n      // not a valid currentTime.\r\n\r\n\r\n      if (newTime === Infinity) {\r\n        return;\r\n      }\r\n    } // Set new time (tell player to seek to new time)\r\n\r\n\r\n    this.userSeek_(newTime);\r\n  };\r\n\r\n  _proto.enable = function enable() {\r\n    _Slider.prototype.enable.call(this);\r\n\r\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\r\n\r\n    if (!mouseTimeDisplay) {\r\n      return;\r\n    }\r\n\r\n    mouseTimeDisplay.show();\r\n  };\r\n\r\n  _proto.disable = function disable() {\r\n    _Slider.prototype.disable.call(this);\r\n\r\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\r\n\r\n    if (!mouseTimeDisplay) {\r\n      return;\r\n    }\r\n\r\n    mouseTimeDisplay.hide();\r\n  }\r\n  /**\r\n   * Handle mouse up on seek bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mouseup` event that caused this to run.\r\n   *\r\n   * @listens mouseup\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseUp = function handleMouseUp(event) {\r\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\r\n\r\n\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.player_.scrubbing(false);\r\n    /**\r\n     * Trigger timeupdate because we're done seeking and the time has changed.\r\n     * This is particularly useful for if the player is paused to time the time displays.\r\n     *\r\n     * @event Tech#timeupdate\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.player_.trigger({\r\n      type: 'timeupdate',\r\n      target: this,\r\n      manuallyTriggered: true\r\n    });\r\n\r\n    if (this.videoWasPlaying) {\r\n      silencePromise(this.player_.play());\r\n    } else {\r\n      // We're done seeking and the time has changed.\r\n      // If the player is paused, make sure we display the correct time on the seek bar.\r\n      this.update_();\r\n    }\r\n  }\r\n  /**\r\n   * Move more quickly fast forward for keyboard-only users\r\n   */\r\n  ;\r\n\r\n  _proto.stepForward = function stepForward() {\r\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\r\n  }\r\n  /**\r\n   * Move more quickly rewind for keyboard-only users\r\n   */\r\n  ;\r\n\r\n  _proto.stepBack = function stepBack() {\r\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\r\n  }\r\n  /**\r\n   * Toggles the playback state of the player\r\n   * This gets called when enter or space is used on the seekbar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.handleAction = function handleAction(event) {\r\n    if (this.player_.paused()) {\r\n      this.player_.play();\r\n    } else {\r\n      this.player_.pause();\r\n    }\r\n  }\r\n  /**\r\n   * Called when this SeekBar has focus and a key gets pressed down.\r\n   * Supports the following keys:\r\n   *\r\n   *   Space or Enter key fire a click event\r\n   *   Home key moves to start of the timeline\r\n   *   End key moves to end of the timeline\r\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\r\n   *   PageDown key moves back a larger step than ArrowDown\r\n   *   PageUp key moves forward a large step\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    var liveTracker = this.player_.liveTracker;\r\n\r\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.handleAction(event);\r\n    } else if (keycode.isEventKey(event, 'Home')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.userSeek_(0);\r\n    } else if (keycode.isEventKey(event, 'End')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      if (liveTracker && liveTracker.isLive()) {\r\n        this.userSeek_(liveTracker.liveCurrentTime());\r\n      } else {\r\n        this.userSeek_(this.player_.duration());\r\n      }\r\n    } else if (/^[0-9]$/.test(keycode(event))) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\r\n\r\n      if (liveTracker && liveTracker.isLive()) {\r\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\r\n      } else {\r\n        this.userSeek_(this.player_.duration() * gotoFraction);\r\n      }\r\n    } else if (keycode.isEventKey(event, 'PgDn')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\r\n    } else if (keycode.isEventKey(event, 'PgUp')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\r\n    } else {\r\n      // Pass keydown handling up for unsupported keys\r\n      _Slider.prototype.handleKeyDown.call(this, event);\r\n    }\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.disableInterval_();\r\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\r\n\r\n    if (this.player_.liveTracker) {\r\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\r\n    }\r\n\r\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\r\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\r\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\r\n\r\n    if ('hidden' in document && 'visibilityState' in document) {\r\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\r\n    }\r\n\r\n    _Slider.prototype.dispose.call(this);\r\n  };\r\n\r\n  return SeekBar;\r\n}(Slider);\r\n/**\r\n * Default options for the `SeekBar`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nSeekBar.prototype.options_ = {\r\n  children: ['loadProgressBar', 'playProgressBar'],\r\n  barName: 'playProgressBar'\r\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\r\n\r\nif (!IS_IOS && !IS_ANDROID) {\r\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\r\n}\r\n\r\nComponent$1.registerComponent('SeekBar', SeekBar);\r\n\r\n/**\r\n * The Progress Control component contains the seek bar, load progress,\r\n * and play progress.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ProgressControl = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(ProgressControl, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function ProgressControl(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\r\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\r\n\r\n    _this.handleMouseUpHandler_ = function (e) {\r\n      return _this.handleMouseUp(e);\r\n    };\r\n\r\n    _this.handleMouseDownHandler_ = function (e) {\r\n      return _this.handleMouseDown(e);\r\n    };\r\n\r\n    _this.enable();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = ProgressControl.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-progress-control vjs-control'\r\n    });\r\n  }\r\n  /**\r\n   * When the mouse moves over the `ProgressControl`, the pointer position\r\n   * gets passed down to the `MouseTimeDisplay` component.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousemove` event that caused this function to run.\r\n   *\r\n   * @listen mousemove\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseMove = function handleMouseMove(event) {\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (!seekBar) {\r\n      return;\r\n    }\r\n\r\n    var playProgressBar = seekBar.getChild('playProgressBar');\r\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\r\n\r\n    if (!playProgressBar && !mouseTimeDisplay) {\r\n      return;\r\n    }\r\n\r\n    var seekBarEl = seekBar.el();\r\n    var seekBarRect = findPosition(seekBarEl);\r\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\r\n    // that it's possible to trigger this behavior outside the boundaries of\r\n    // the `SeekBar`. This ensures we stay within it at all times.\r\n\r\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\r\n\r\n    if (mouseTimeDisplay) {\r\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\r\n    }\r\n\r\n    if (playProgressBar) {\r\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\r\n    }\r\n  }\r\n  /**\r\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\r\n   *\r\n   * @method ProgressControl#throttledHandleMouseSeek\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousemove` event that caused this function to run.\r\n   *\r\n   * @listen mousemove\r\n   * @listen touchmove\r\n   */\r\n\r\n  /**\r\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousemove\r\n   * @listens touchmove\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      seekBar.handleMouseMove(event);\r\n    }\r\n  }\r\n  /**\r\n   * Are controls are currently enabled for this progress control.\r\n   *\r\n   * @return {boolean}\r\n   *         true if controls are enabled, false otherwise\r\n   */\r\n  ;\r\n\r\n  _proto.enabled = function enabled() {\r\n    return this.enabled_;\r\n  }\r\n  /**\r\n   * Disable all controls on the progress control and its children\r\n   */\r\n  ;\r\n\r\n  _proto.disable = function disable() {\r\n    this.children().forEach(function (child) {\r\n      return child.disable && child.disable();\r\n    });\r\n\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\r\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\r\n    this.removeListenersAddedOnMousedownAndTouchstart();\r\n    this.addClass('disabled');\r\n    this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\r\n\r\n    if (this.player_.scrubbing()) {\r\n      var seekBar = this.getChild('seekBar');\r\n      this.player_.scrubbing(false);\r\n\r\n      if (seekBar.videoWasPlaying) {\r\n        silencePromise(this.player_.play());\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Enable all controls on the progress control and its children\r\n   */\r\n  ;\r\n\r\n  _proto.enable = function enable() {\r\n    this.children().forEach(function (child) {\r\n      return child.enable && child.enable();\r\n    });\r\n\r\n    if (this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\r\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\r\n    this.removeClass('disabled');\r\n    this.enabled_ = true;\r\n  }\r\n  /**\r\n   * Cleanup listeners after the user finishes interacting with the progress controls\r\n   */\r\n  ;\r\n\r\n  _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\r\n    var doc = this.el_.ownerDocument;\r\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\r\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\r\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\r\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\r\n  }\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseDown = function handleMouseDown(event) {\r\n    var doc = this.el_.ownerDocument;\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      seekBar.handleMouseDown(event);\r\n    }\r\n\r\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\r\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\r\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\r\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\r\n  }\r\n  /**\r\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mouseup` or `touchend` event that triggered this function.\r\n   *\r\n   * @listens touchend\r\n   * @listens mouseup\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseUp = function handleMouseUp(event) {\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      seekBar.handleMouseUp(event);\r\n    }\r\n\r\n    this.removeListenersAddedOnMousedownAndTouchstart();\r\n  };\r\n\r\n  return ProgressControl;\r\n}(Component$1);\r\n/**\r\n * Default options for `ProgressControl`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nProgressControl.prototype.options_ = {\r\n  children: ['seekBar']\r\n};\r\nComponent$1.registerComponent('ProgressControl', ProgressControl);\r\n\r\n/**\r\n * Toggle Picture-in-Picture mode\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(PictureInPictureToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @listens Player#enterpictureinpicture\r\n   * @listens Player#leavepictureinpicture\r\n   */\r\n  function PictureInPictureToggle(player, options) {\r\n    var _this;\r\n\r\n    _this = _Button.call(this, player, options) || this;\r\n\r\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\r\n      return _this.handlePictureInPictureChange(e);\r\n    });\r\n\r\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\r\n      return _this.handlePictureInPictureEnabledChange(e);\r\n    });\r\n\r\n    _this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], function () {\r\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\r\n      var isSourceAudio = player.currentType().substring(0, 5) === 'audio';\r\n\r\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\r\n        if (player.isInPictureInPicture()) {\r\n          player.exitPictureInPicture();\r\n        }\r\n\r\n        _this.hide();\r\n      } else {\r\n        _this.show();\r\n      }\r\n    }); // TODO: Deactivate button on player emptied event.\r\n\r\n\r\n    _this.disable();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = PictureInPictureToggle.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Enables or disables button based on document.pictureInPictureEnabled property value\r\n   * or on value returned by player.disablePictureInPicture() method.\r\n   */\r\n  ;\r\n\r\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\r\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\r\n      this.enable();\r\n    } else {\r\n      this.disable();\r\n    }\r\n  }\r\n  /**\r\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens Player#enterpictureinpicture\r\n   * @listens Player#leavepictureinpicture\r\n   */\r\n  ;\r\n\r\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\r\n    if (this.player_.isInPictureInPicture()) {\r\n      this.controlText('Exit Picture-in-Picture');\r\n    } else {\r\n      this.controlText('Picture-in-Picture');\r\n    }\r\n\r\n    this.handlePictureInPictureEnabledChange();\r\n  }\r\n  /**\r\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    if (!this.player_.isInPictureInPicture()) {\r\n      this.player_.requestPictureInPicture();\r\n    } else {\r\n      this.player_.exitPictureInPicture();\r\n    }\r\n  };\r\n\r\n  return PictureInPictureToggle;\r\n}(Button);\r\n/**\r\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\r\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\r\n\r\n/**\r\n * Toggle fullscreen video\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(FullscreenToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function FullscreenToggle(player, options) {\r\n    var _this;\r\n\r\n    _this = _Button.call(this, player, options) || this;\r\n\r\n    _this.on(player, 'fullscreenchange', function (e) {\r\n      return _this.handleFullscreenChange(e);\r\n    });\r\n\r\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\r\n      _this.disable();\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = FullscreenToggle.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Handles fullscreenchange on the player and change control text accordingly.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#fullscreenchange} event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens Player#fullscreenchange\r\n   */\r\n  ;\r\n\r\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\r\n    if (this.player_.isFullscreen()) {\r\n      this.controlText('Non-Fullscreen');\r\n    } else {\r\n      this.controlText('Fullscreen');\r\n    }\r\n  }\r\n  /**\r\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    if (!this.player_.isFullscreen()) {\r\n      this.player_.requestFullscreen();\r\n    } else {\r\n      this.player_.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  return FullscreenToggle;\r\n}(Button);\r\n/**\r\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\r\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\r\n\r\n/**\r\n * Check if volume control is supported and if it isn't hide the\r\n * `Component` that was passed  using the `vjs-hidden` class.\r\n *\r\n * @param {Component} self\r\n *        The component that should be hidden if volume is unsupported\r\n *\r\n * @param {Player} player\r\n *        A reference to the player\r\n *\r\n * @private\r\n */\r\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\r\n  // hide volume controls when they're not supported by the current tech\r\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\r\n    self.addClass('vjs-hidden');\r\n  }\r\n\r\n  self.on(player, 'loadstart', function () {\r\n    if (!player.tech_.featuresVolumeControl) {\r\n      self.addClass('vjs-hidden');\r\n    } else {\r\n      self.removeClass('vjs-hidden');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Shows volume level\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(VolumeLevel, _Component);\r\n\r\n  function VolumeLevel() {\r\n    return _Component.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = VolumeLevel.prototype;\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  _proto.createEl = function createEl() {\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-level'\r\n    });\r\n\r\n    el.appendChild(_Component.prototype.createEl.call(this, 'span', {\r\n      className: 'vjs-control-text'\r\n    }));\r\n    return el;\r\n  };\r\n\r\n  return VolumeLevel;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\r\n\r\n/**\r\n * Volume level tooltips display a volume above or side by side the volume bar.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(VolumeLevelTooltip, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The {@link Player} that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumeLevelTooltip(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the volume tooltip DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = VolumeLevelTooltip.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-tooltip'\r\n    }, {\r\n      'aria-hidden': 'true'\r\n    });\r\n  }\r\n  /**\r\n   * Updates the position of the tooltip relative to the `VolumeBar` and\r\n   * its content text.\r\n   *\r\n   * @param {Object} rangeBarRect\r\n   *        The `ClientRect` for the {@link VolumeBar} element.\r\n   *\r\n   * @param {number} rangeBarPoint\r\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\r\n   *        from the left edge of the {@link VolumeBar}\r\n   *\r\n   * @param {boolean} vertical\r\n   *        Referees to the Volume control position\r\n   *        in the control bar{@link VolumeControl}\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\r\n    if (!vertical) {\r\n      var tooltipRect = getBoundingClientRect(this.el_);\r\n      var playerRect = getBoundingClientRect(this.player_.el());\r\n      var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\r\n\r\n      if (!playerRect || !tooltipRect) {\r\n        return;\r\n      }\r\n\r\n      var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\r\n      var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\r\n      var pullTooltipBy = tooltipRect.width / 2;\r\n\r\n      if (spaceLeftOfPoint < pullTooltipBy) {\r\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\r\n      } else if (spaceRightOfPoint < pullTooltipBy) {\r\n        pullTooltipBy = spaceRightOfPoint;\r\n      }\r\n\r\n      if (pullTooltipBy < 0) {\r\n        pullTooltipBy = 0;\r\n      } else if (pullTooltipBy > tooltipRect.width) {\r\n        pullTooltipBy = tooltipRect.width;\r\n      }\r\n\r\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\r\n    }\r\n\r\n    this.write(content + \"%\");\r\n  }\r\n  /**\r\n   * Write the volume to the tooltip DOM element.\r\n   *\r\n   * @param {string} content\r\n   *        The formatted volume for the tooltip.\r\n   */\r\n  ;\r\n\r\n  _proto.write = function write(content) {\r\n    textContent(this.el_, content);\r\n  }\r\n  /**\r\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\r\n   *\r\n   * @param {Object} rangeBarRect\r\n   *        The `ClientRect` for the {@link VolumeBar} element.\r\n   *\r\n   * @param {number} rangeBarPoint\r\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\r\n   *        from the left edge of the {@link VolumeBar}\r\n   *\r\n   * @param {boolean} vertical\r\n   *        Referees to the Volume control position\r\n   *        in the control bar{@link VolumeControl}\r\n   *\r\n   * @param {number} volume\r\n   *        The volume level to update the tooltip to\r\n   *\r\n   * @param {Function} cb\r\n   *        A function that will be called during the request animation frame\r\n   *        for tooltips that need to do additional animations from the default\r\n   */\r\n  ;\r\n\r\n  _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\r\n    var _this2 = this;\r\n\r\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\r\n      _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\r\n\r\n      if (cb) {\r\n        cb();\r\n      }\r\n    });\r\n  };\r\n\r\n  return VolumeLevelTooltip;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\r\n\r\n/**\r\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\r\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\r\n * indicating the volume level which is represented by a given point in the\r\n * {@link VolumeBar}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(MouseVolumeLevelDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The {@link Player} that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MouseVolumeLevelDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the DOM element for this class.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = MouseVolumeLevelDisplay.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-mouse-display'\r\n    });\r\n  }\r\n  /**\r\n   * Enquires updates to its own DOM as well as the DOM of its\r\n   * {@link VolumeLevelTooltip} child.\r\n   *\r\n   * @param {Object} rangeBarRect\r\n   *        The `ClientRect` for the {@link VolumeBar} element.\r\n   *\r\n   * @param {number} rangeBarPoint\r\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\r\n   *        from the left edge of the {@link VolumeBar}\r\n   *\r\n   * @param {boolean} vertical\r\n   *        Referees to the Volume control position\r\n   *        in the control bar{@link VolumeControl}\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\r\n    var _this2 = this;\r\n\r\n    var volume = 100 * rangeBarPoint;\r\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\r\n      if (vertical) {\r\n        _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\r\n      } else {\r\n        _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\r\n      }\r\n    });\r\n  };\r\n\r\n  return MouseVolumeLevelDisplay;\r\n}(Component$1);\r\n/**\r\n * Default options for `MouseVolumeLevelDisplay`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nMouseVolumeLevelDisplay.prototype.options_ = {\r\n  children: ['volumeLevelTooltip']\r\n};\r\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\r\n\r\n/**\r\n * The bar that contains the volume level and can be clicked on to adjust the level\r\n *\r\n * @extends Slider\r\n */\r\n\r\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\r\n  _inheritsLoose(VolumeBar, _Slider);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumeBar(player, options) {\r\n    var _this;\r\n\r\n    _this = _Slider.call(this, player, options) || this;\r\n\r\n    _this.on('slideractive', function (e) {\r\n      return _this.updateLastVolume_(e);\r\n    });\r\n\r\n    _this.on(player, 'volumechange', function (e) {\r\n      return _this.updateARIAAttributes(e);\r\n    });\r\n\r\n    player.ready(function () {\r\n      return _this.updateARIAAttributes();\r\n    });\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = VolumeBar.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Slider.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-bar vjs-slider-bar'\r\n    }, {\r\n      'aria-label': this.localize('Volume Level'),\r\n      'aria-live': 'polite'\r\n    });\r\n  }\r\n  /**\r\n   * Handle mouse down on volume bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousedown` event that caused this to run.\r\n   *\r\n   * @listens mousedown\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseDown = function handleMouseDown(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    _Slider.prototype.handleMouseDown.call(this, event);\r\n  }\r\n  /**\r\n   * Handle movement events on the {@link VolumeMenuButton}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens mousemove\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseMove = function handleMouseMove(event) {\r\n    var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\r\n\r\n    if (mouseVolumeLevelDisplay) {\r\n      var volumeBarEl = this.el();\r\n      var volumeBarRect = getBoundingClientRect(volumeBarEl);\r\n      var vertical = this.vertical();\r\n      var volumeBarPoint = getPointerPosition(volumeBarEl, event);\r\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\r\n      // that it's possible to trigger this behavior outside the boundaries of\r\n      // the `VolumeBar`. This ensures we stay within it at all times.\r\n\r\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\r\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\r\n    }\r\n\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    this.checkMuted();\r\n    this.player_.volume(this.calculateDistance(event));\r\n  }\r\n  /**\r\n   * If the player is muted unmute it.\r\n   */\r\n  ;\r\n\r\n  _proto.checkMuted = function checkMuted() {\r\n    if (this.player_.muted()) {\r\n      this.player_.muted(false);\r\n    }\r\n  }\r\n  /**\r\n   * Get percent of volume level\r\n   *\r\n   * @return {number}\r\n   *         Volume level percent as a decimal number.\r\n   */\r\n  ;\r\n\r\n  _proto.getPercent = function getPercent() {\r\n    if (this.player_.muted()) {\r\n      return 0;\r\n    }\r\n\r\n    return this.player_.volume();\r\n  }\r\n  /**\r\n   * Increase volume level for keyboard users\r\n   */\r\n  ;\r\n\r\n  _proto.stepForward = function stepForward() {\r\n    this.checkMuted();\r\n    this.player_.volume(this.player_.volume() + 0.1);\r\n  }\r\n  /**\r\n   * Decrease volume level for keyboard users\r\n   */\r\n  ;\r\n\r\n  _proto.stepBack = function stepBack() {\r\n    this.checkMuted();\r\n    this.player_.volume(this.player_.volume() - 0.1);\r\n  }\r\n  /**\r\n   * Update ARIA accessibility attributes\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `volumechange` event that caused this function to run.\r\n   *\r\n   * @listens Player#volumechange\r\n   */\r\n  ;\r\n\r\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\r\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\r\n    this.el_.setAttribute('aria-valuenow', ariaValue);\r\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\r\n  }\r\n  /**\r\n   * Returns the current value of the player volume as a percentage\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\r\n    return Math.round(this.player_.volume() * 100);\r\n  }\r\n  /**\r\n   * When user starts dragging the VolumeBar, store the volume and listen for\r\n   * the end of the drag. When the drag ends, if the volume was set to zero,\r\n   * set lastVolume to the stored volume.\r\n   *\r\n   * @listens slideractive\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.updateLastVolume_ = function updateLastVolume_() {\r\n    var _this2 = this;\r\n\r\n    var volumeBeforeDrag = this.player_.volume();\r\n    this.one('sliderinactive', function () {\r\n      if (_this2.player_.volume() === 0) {\r\n        _this2.player_.lastVolume_(volumeBeforeDrag);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VolumeBar;\r\n}(Slider);\r\n/**\r\n * Default options for the `VolumeBar`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nVolumeBar.prototype.options_ = {\r\n  children: ['volumeLevel'],\r\n  barName: 'volumeLevel'\r\n}; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\r\n\r\nif (!IS_IOS && !IS_ANDROID) {\r\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\r\n}\r\n/**\r\n * Call the update event for this Slider when this event happens on the player.\r\n *\r\n * @type {string}\r\n */\r\n\r\n\r\nVolumeBar.prototype.playerEvent = 'volumechange';\r\nComponent$1.registerComponent('VolumeBar', VolumeBar);\r\n\r\n/**\r\n * The component for controlling the volume level\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumeControl = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(VolumeControl, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumeControl(player, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\r\n    // the VolumeBar is turned on.\r\n\r\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\r\n      options.volumeBar = options.volumeBar || {};\r\n      options.volumeBar.vertical = options.vertical;\r\n    }\r\n\r\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\r\n\r\n    checkVolumeSupport(_assertThisInitialized(_this), player);\r\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\r\n\r\n    _this.handleMouseUpHandler_ = function (e) {\r\n      return _this.handleMouseUp(e);\r\n    };\r\n\r\n    _this.on('mousedown', function (e) {\r\n      return _this.handleMouseDown(e);\r\n    });\r\n\r\n    _this.on('touchstart', function (e) {\r\n      return _this.handleMouseDown(e);\r\n    });\r\n\r\n    _this.on('mousemove', function (e) {\r\n      return _this.handleMouseMove(e);\r\n    }); // while the slider is active (the mouse has been pressed down and\r\n    // is dragging) or in focus we do not want to hide the VolumeBar\r\n\r\n\r\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\r\n      _this.volumeBar.addClass('vjs-slider-active');\r\n\r\n      _this.addClass('vjs-slider-active');\r\n\r\n      _this.trigger('slideractive');\r\n    });\r\n\r\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\r\n      _this.volumeBar.removeClass('vjs-slider-active');\r\n\r\n      _this.removeClass('vjs-slider-active');\r\n\r\n      _this.trigger('sliderinactive');\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = VolumeControl.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    var orientationClass = 'vjs-volume-horizontal';\r\n\r\n    if (this.options_.vertical) {\r\n      orientationClass = 'vjs-volume-vertical';\r\n    }\r\n\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: \"vjs-volume-control vjs-control \" + orientationClass\r\n    });\r\n  }\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseDown = function handleMouseDown(event) {\r\n    var doc = this.el_.ownerDocument;\r\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\r\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\r\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\r\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\r\n  }\r\n  /**\r\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mouseup` or `touchend` event that triggered this function.\r\n   *\r\n   * @listens touchend\r\n   * @listens mouseup\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseUp = function handleMouseUp(event) {\r\n    var doc = this.el_.ownerDocument;\r\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\r\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\r\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\r\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\r\n  }\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseMove = function handleMouseMove(event) {\r\n    this.volumeBar.handleMouseMove(event);\r\n  };\r\n\r\n  return VolumeControl;\r\n}(Component$1);\r\n/**\r\n * Default options for the `VolumeControl`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nVolumeControl.prototype.options_ = {\r\n  children: ['volumeBar']\r\n};\r\nComponent$1.registerComponent('VolumeControl', VolumeControl);\r\n\r\n/**\r\n * Check if muting volume is supported and if it isn't hide the mute toggle\r\n * button.\r\n *\r\n * @param {Component} self\r\n *        A reference to the mute toggle button\r\n *\r\n * @param {Player} player\r\n *        A reference to the player\r\n *\r\n * @private\r\n */\r\nvar checkMuteSupport = function checkMuteSupport(self, player) {\r\n  // hide mute toggle button if it's not supported by the current tech\r\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\r\n    self.addClass('vjs-hidden');\r\n  }\r\n\r\n  self.on(player, 'loadstart', function () {\r\n    if (!player.tech_.featuresMuteControl) {\r\n      self.addClass('vjs-hidden');\r\n    } else {\r\n      self.removeClass('vjs-hidden');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * A button component for muting the audio.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar MuteToggle = /*#__PURE__*/function (_Button) {\r\n  _inheritsLoose(MuteToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MuteToggle(player, options) {\r\n    var _this;\r\n\r\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\r\n\r\n    checkMuteSupport(_assertThisInitialized(_this), player);\r\n\r\n    _this.on(player, ['loadstart', 'volumechange'], function (e) {\r\n      return _this.update(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = MuteToggle.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * This gets called when an `MuteToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    var vol = this.player_.volume();\r\n    var lastVolume = this.player_.lastVolume_();\r\n\r\n    if (vol === 0) {\r\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\r\n      this.player_.volume(volumeToSet);\r\n      this.player_.muted(false);\r\n    } else {\r\n      this.player_.muted(this.player_.muted() ? false : true);\r\n    }\r\n  }\r\n  /**\r\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\r\n   * on the player.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#loadstart} event if this function was called\r\n   *        through an event.\r\n   *\r\n   * @listens Player#loadstart\r\n   * @listens Player#volumechange\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(event) {\r\n    this.updateIcon_();\r\n    this.updateControlText_();\r\n  }\r\n  /**\r\n   * Update the appearance of the `MuteToggle` icon.\r\n   *\r\n   * Possible states (given `level` variable below):\r\n   * - 0: crossed out\r\n   * - 1: zero bars of volume\r\n   * - 2: one bar of volume\r\n   * - 3: two bars of volume\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.updateIcon_ = function updateIcon_() {\r\n    var vol = this.player_.volume();\r\n    var level = 3; // in iOS when a player is loaded with muted attribute\r\n    // and volume is changed with a native mute button\r\n    // we want to make sure muted state is updated\r\n\r\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\r\n      this.player_.muted(this.player_.tech_.el_.muted);\r\n    }\r\n\r\n    if (vol === 0 || this.player_.muted()) {\r\n      level = 0;\r\n    } else if (vol < 0.33) {\r\n      level = 1;\r\n    } else if (vol < 0.67) {\r\n      level = 2;\r\n    } // TODO improve muted icon classes\r\n\r\n\r\n    for (var i = 0; i < 4; i++) {\r\n      removeClass(this.el_, \"vjs-vol-\" + i);\r\n    }\r\n\r\n    addClass(this.el_, \"vjs-vol-\" + level);\r\n  }\r\n  /**\r\n   * If `muted` has changed on the player, update the control text\r\n   * (`title` attribute on `vjs-mute-control` element and content of\r\n   * `vjs-control-text` element).\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.updateControlText_ = function updateControlText_() {\r\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\r\n    var text = soundOff ? 'Unmute' : 'Mute';\r\n\r\n    if (this.controlText() !== text) {\r\n      this.controlText(text);\r\n    }\r\n  };\r\n\r\n  return MuteToggle;\r\n}(Button);\r\n/**\r\n * The text that should display over the `MuteToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nMuteToggle.prototype.controlText_ = 'Mute';\r\nComponent$1.registerComponent('MuteToggle', MuteToggle);\r\n\r\n/**\r\n * A Component to contain the MuteToggle and VolumeControl so that\r\n * they can work together.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumePanel = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(VolumePanel, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumePanel(player, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (typeof options.inline !== 'undefined') {\r\n      options.inline = options.inline;\r\n    } else {\r\n      options.inline = true;\r\n    } // pass the inline option down to the VolumeControl as vertical if\r\n    // the VolumeControl is on.\r\n\r\n\r\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\r\n      options.volumeControl = options.volumeControl || {};\r\n      options.volumeControl.vertical = !options.inline;\r\n    }\r\n\r\n    _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\r\n\r\n    _this.handleKeyPressHandler_ = function (e) {\r\n      return _this.handleKeyPress(e);\r\n    };\r\n\r\n    _this.on(player, ['loadstart'], function (e) {\r\n      return _this.volumePanelState_(e);\r\n    });\r\n\r\n    _this.on(_this.muteToggle, 'keyup', function (e) {\r\n      return _this.handleKeyPress(e);\r\n    });\r\n\r\n    _this.on(_this.volumeControl, 'keyup', function (e) {\r\n      return _this.handleVolumeControlKeyUp(e);\r\n    });\r\n\r\n    _this.on('keydown', function (e) {\r\n      return _this.handleKeyPress(e);\r\n    });\r\n\r\n    _this.on('mouseover', function (e) {\r\n      return _this.handleMouseOver(e);\r\n    });\r\n\r\n    _this.on('mouseout', function (e) {\r\n      return _this.handleMouseOut(e);\r\n    }); // while the slider is active (the mouse has been pressed down and\r\n    // is dragging) we do not want to hide the VolumeBar\r\n\r\n\r\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\r\n\r\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add vjs-slider-active class to the VolumePanel\r\n   *\r\n   * @listens VolumeControl#slideractive\r\n   * @private\r\n   */\r\n\r\n\r\n  var _proto = VolumePanel.prototype;\r\n\r\n  _proto.sliderActive_ = function sliderActive_() {\r\n    this.addClass('vjs-slider-active');\r\n  }\r\n  /**\r\n   * Removes vjs-slider-active class to the VolumePanel\r\n   *\r\n   * @listens VolumeControl#sliderinactive\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.sliderInactive_ = function sliderInactive_() {\r\n    this.removeClass('vjs-slider-active');\r\n  }\r\n  /**\r\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\r\n   * depending on MuteToggle and VolumeControl state\r\n   *\r\n   * @listens Player#loadstart\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.volumePanelState_ = function volumePanelState_() {\r\n    // hide volume panel if neither volume control or mute toggle\r\n    // are displayed\r\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\r\n      this.addClass('vjs-hidden');\r\n    } // if only mute toggle is visible we don't want\r\n    // volume panel expanding when hovered or active\r\n\r\n\r\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\r\n      this.addClass('vjs-mute-toggle-only');\r\n    }\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    var orientationClass = 'vjs-volume-panel-horizontal';\r\n\r\n    if (!this.options_.inline) {\r\n      orientationClass = 'vjs-volume-panel-vertical';\r\n    }\r\n\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\r\n    });\r\n  }\r\n  /**\r\n   * Dispose of the `volume-panel` and all child components.\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.handleMouseOut();\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\r\n   * the volume panel and sets focus on `MuteToggle`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keyup` event that caused this function to be called.\r\n   *\r\n   * @listens keyup\r\n   */\r\n  ;\r\n\r\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\r\n    if (keycode.isEventKey(event, 'Esc')) {\r\n      this.muteToggle.focus();\r\n    }\r\n  }\r\n  /**\r\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\r\n   * Turns on listening for `mouseover` event. When they happen it\r\n   * calls `this.handleMouseOver`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mouseover` event that caused this function to be called.\r\n   *\r\n   * @listens mouseover\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseOver = function handleMouseOver(event) {\r\n    this.addClass('vjs-hover');\r\n    on(document, 'keyup', this.handleKeyPressHandler_);\r\n  }\r\n  /**\r\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\r\n   * Turns on listening for `mouseout` event. When they happen it\r\n   * calls `this.handleMouseOut`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mouseout` event that caused this function to be called.\r\n   *\r\n   * @listens mouseout\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseOut = function handleMouseOut(event) {\r\n    this.removeClass('vjs-hover');\r\n    off(document, 'keyup', this.handleKeyPressHandler_);\r\n  }\r\n  /**\r\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\r\n   * looking for ESC, which hides the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The keypress that triggered this event.\r\n   *\r\n   * @listens keydown | keyup\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyPress = function handleKeyPress(event) {\r\n    if (keycode.isEventKey(event, 'Esc')) {\r\n      this.handleMouseOut();\r\n    }\r\n  };\r\n\r\n  return VolumePanel;\r\n}(Component$1);\r\n/**\r\n * Default options for the `VolumeControl`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nVolumePanel.prototype.options_ = {\r\n  children: ['muteToggle', 'volumeControl']\r\n};\r\nComponent$1.registerComponent('VolumePanel', VolumePanel);\r\n\r\n/**\r\n * The Menu component is used to build popup menus, including subtitle and\r\n * captions selection menus.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Menu = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Menu, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        the player that this component should attach to\r\n   *\r\n   * @param {Object} [options]\r\n   *        Object of option names and values\r\n   *\r\n   */\r\n  function Menu(player, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n\r\n    if (options) {\r\n      _this.menuButton_ = options.menuButton;\r\n    }\r\n\r\n    _this.focusedChild_ = -1;\r\n\r\n    _this.on('keydown', function (e) {\r\n      return _this.handleKeyDown(e);\r\n    }); // All the menu item instances share the same blur handler provided by the menu container.\r\n\r\n\r\n    _this.boundHandleBlur_ = function (e) {\r\n      return _this.handleBlur(e);\r\n    };\r\n\r\n    _this.boundHandleTapClick_ = function (e) {\r\n      return _this.handleTapClick(e);\r\n    };\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add event listeners to the {@link MenuItem}.\r\n   *\r\n   * @param {Object} component\r\n   *        The instance of the `MenuItem` to add listeners to.\r\n   *\r\n   */\r\n\r\n\r\n  var _proto = Menu.prototype;\r\n\r\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\r\n    if (!(component instanceof Component$1)) {\r\n      return;\r\n    }\r\n\r\n    this.on(component, 'blur', this.boundHandleBlur_);\r\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\r\n  }\r\n  /**\r\n   * Remove event listeners from the {@link MenuItem}.\r\n   *\r\n   * @param {Object} component\r\n   *        The instance of the `MenuItem` to remove listeners.\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\r\n    if (!(component instanceof Component$1)) {\r\n      return;\r\n    }\r\n\r\n    this.off(component, 'blur', this.boundHandleBlur_);\r\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\r\n  }\r\n  /**\r\n   * This method will be called indirectly when the component has been added\r\n   * before the component adds to the new menu instance by `addItem`.\r\n   * In this case, the original menu instance will remove the component\r\n   * by calling `removeChild`.\r\n   *\r\n   * @param {Object} component\r\n   *        The instance of the `MenuItem`\r\n   */\r\n  ;\r\n\r\n  _proto.removeChild = function removeChild(component) {\r\n    if (typeof component === 'string') {\r\n      component = this.getChild(component);\r\n    }\r\n\r\n    this.removeEventListenerForItem(component);\r\n\r\n    _Component.prototype.removeChild.call(this, component);\r\n  }\r\n  /**\r\n   * Add a {@link MenuItem} to the menu.\r\n   *\r\n   * @param {Object|string} component\r\n   *        The name or instance of the `MenuItem` to add.\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.addItem = function addItem(component) {\r\n    var childComponent = this.addChild(component);\r\n\r\n    if (childComponent) {\r\n      this.addEventListenerForItem(childComponent);\r\n    }\r\n  }\r\n  /**\r\n   * Create the `Menu`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         the element that was created\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var contentElType = this.options_.contentElType || 'ul';\r\n    this.contentEl_ = createEl(contentElType, {\r\n      className: 'vjs-menu-content'\r\n    });\r\n    this.contentEl_.setAttribute('role', 'menu');\r\n\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      append: this.contentEl_,\r\n      className: 'vjs-menu'\r\n    });\r\n\r\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\r\n    // where a click on the parent is significant\r\n\r\n    on(el, 'click', function (event) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n    });\r\n    return el;\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n    this.boundHandleBlur_ = null;\r\n    this.boundHandleTapClick_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Called when a `MenuItem` loses focus.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `blur` event that caused this function to be called.\r\n   *\r\n   * @listens blur\r\n   */\r\n  ;\r\n\r\n  _proto.handleBlur = function handleBlur(event) {\r\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\r\n\r\n    if (!this.children().some(function (element) {\r\n      return element.el() === relatedTarget;\r\n    })) {\r\n      var btn = this.menuButton_;\r\n\r\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\r\n        btn.unpressButton();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Called when a `MenuItem` gets clicked or tapped.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `click` or `tap` event that caused this function to be called.\r\n   *\r\n   * @listens click,tap\r\n   */\r\n  ;\r\n\r\n  _proto.handleTapClick = function handleTapClick(event) {\r\n    // Unpress the associated MenuButton, and move focus back to it\r\n    if (this.menuButton_) {\r\n      this.menuButton_.unpressButton();\r\n      var childComponents = this.children();\r\n\r\n      if (!Array.isArray(childComponents)) {\r\n        return;\r\n      }\r\n\r\n      var foundComponent = childComponents.filter(function (component) {\r\n        return component.el() === event.target;\r\n      })[0];\r\n\r\n      if (!foundComponent) {\r\n        return;\r\n      } // don't focus menu button if item is a caption settings item\r\n      // because focus will move elsewhere\r\n\r\n\r\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\r\n        this.menuButton_.focus();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        A `keydown` event that happened on the menu.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Left and Down Arrows\r\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.stepForward(); // Up and Right Arrows\r\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.stepBack();\r\n    }\r\n  }\r\n  /**\r\n   * Move to next (lower) menu item for keyboard users.\r\n   */\r\n  ;\r\n\r\n  _proto.stepForward = function stepForward() {\r\n    var stepChild = 0;\r\n\r\n    if (this.focusedChild_ !== undefined) {\r\n      stepChild = this.focusedChild_ + 1;\r\n    }\r\n\r\n    this.focus(stepChild);\r\n  }\r\n  /**\r\n   * Move to previous (higher) menu item for keyboard users.\r\n   */\r\n  ;\r\n\r\n  _proto.stepBack = function stepBack() {\r\n    var stepChild = 0;\r\n\r\n    if (this.focusedChild_ !== undefined) {\r\n      stepChild = this.focusedChild_ - 1;\r\n    }\r\n\r\n    this.focus(stepChild);\r\n  }\r\n  /**\r\n   * Set focus on a {@link MenuItem} in the `Menu`.\r\n   *\r\n   * @param {Object|string} [item=0]\r\n   *        Index of child item set focus on.\r\n   */\r\n  ;\r\n\r\n  _proto.focus = function focus(item) {\r\n    if (item === void 0) {\r\n      item = 0;\r\n    }\r\n\r\n    var children = this.children().slice();\r\n    var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\r\n\r\n    if (haveTitle) {\r\n      children.shift();\r\n    }\r\n\r\n    if (children.length > 0) {\r\n      if (item < 0) {\r\n        item = 0;\r\n      } else if (item >= children.length) {\r\n        item = children.length - 1;\r\n      }\r\n\r\n      this.focusedChild_ = item;\r\n      children[item].el_.focus();\r\n    }\r\n  };\r\n\r\n  return Menu;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('Menu', Menu);\r\n\r\n/**\r\n * A `MenuButton` class for any popup {@link Menu}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MenuButton = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(MenuButton, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MenuButton(player, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _Component.call(this, player, options) || this;\r\n    _this.menuButton_ = new Button(player, options);\r\n\r\n    _this.menuButton_.controlText(_this.controlText_);\r\n\r\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\r\n\r\n\r\n    var buttonClass = Button.prototype.buildCSSClass();\r\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\r\n\r\n    _this.menuButton_.removeClass('vjs-control');\r\n\r\n    _this.addChild(_this.menuButton_);\r\n\r\n    _this.update();\r\n\r\n    _this.enabled_ = true;\r\n\r\n    var handleClick = function handleClick(e) {\r\n      return _this.handleClick(e);\r\n    };\r\n\r\n    _this.handleMenuKeyUp_ = function (e) {\r\n      return _this.handleMenuKeyUp(e);\r\n    };\r\n\r\n    _this.on(_this.menuButton_, 'tap', handleClick);\r\n\r\n    _this.on(_this.menuButton_, 'click', handleClick);\r\n\r\n    _this.on(_this.menuButton_, 'keydown', function (e) {\r\n      return _this.handleKeyDown(e);\r\n    });\r\n\r\n    _this.on(_this.menuButton_, 'mouseenter', function () {\r\n      _this.addClass('vjs-hover');\r\n\r\n      _this.menu.show();\r\n\r\n      on(document, 'keyup', _this.handleMenuKeyUp_);\r\n    });\r\n\r\n    _this.on('mouseleave', function (e) {\r\n      return _this.handleMouseLeave(e);\r\n    });\r\n\r\n    _this.on('keydown', function (e) {\r\n      return _this.handleSubmenuKeyDown(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Update the menu based on the current state of its items.\r\n   */\r\n\r\n\r\n  var _proto = MenuButton.prototype;\r\n\r\n  _proto.update = function update() {\r\n    var menu = this.createMenu();\r\n\r\n    if (this.menu) {\r\n      this.menu.dispose();\r\n      this.removeChild(this.menu);\r\n    }\r\n\r\n    this.menu = menu;\r\n    this.addChild(menu);\r\n    /**\r\n     * Track the state of the menu button\r\n     *\r\n     * @type {Boolean}\r\n     * @private\r\n     */\r\n\r\n    this.buttonPressed_ = false;\r\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\r\n\r\n    if (this.items && this.items.length <= this.hideThreshold_) {\r\n      this.hide();\r\n      this.menu.contentEl_.removeAttribute('role');\r\n    } else {\r\n      this.show();\r\n      this.menu.contentEl_.setAttribute('role', 'menu');\r\n    }\r\n  }\r\n  /**\r\n   * Create the menu and add all items to it.\r\n   *\r\n   * @return {Menu}\r\n   *         The constructed menu\r\n   */\r\n  ;\r\n\r\n  _proto.createMenu = function createMenu() {\r\n    var menu = new Menu(this.player_, {\r\n      menuButton: this\r\n    });\r\n    /**\r\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\r\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\r\n     * it here because every time we run `createMenu` we need to reset the value.\r\n     *\r\n     * @protected\r\n     * @type {Number}\r\n     */\r\n\r\n    this.hideThreshold_ = 0; // Add a title list item to the top\r\n\r\n    if (this.options_.title) {\r\n      var titleEl = createEl('li', {\r\n        className: 'vjs-menu-title',\r\n        textContent: toTitleCase$1(this.options_.title),\r\n        tabIndex: -1\r\n      });\r\n      var titleComponent = new Component$1(this.player_, {\r\n        el: titleEl\r\n      });\r\n      menu.addItem(titleComponent);\r\n    }\r\n\r\n    this.items = this.createItems();\r\n\r\n    if (this.items) {\r\n      // Add menu items to the menu\r\n      for (var i = 0; i < this.items.length; i++) {\r\n        menu.addItem(this.items[i]);\r\n      }\r\n    }\r\n\r\n    return menu;\r\n  }\r\n  /**\r\n   * Create the list of menu items. Specific to each subclass.\r\n   *\r\n   * @abstract\r\n   */\r\n  ;\r\n\r\n  _proto.createItems = function createItems() {}\r\n  /**\r\n   * Create the `MenuButtons`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: this.buildWrapperCSSClass()\r\n    }, {});\r\n  }\r\n  /**\r\n   * Allow sub components to stack CSS class names for the wrapper element\r\n   *\r\n   * @return {string}\r\n   *         The constructed wrapper DOM `className`\r\n   */\r\n  ;\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\r\n\r\n    if (this.options_.inline === true) {\r\n      menuButtonClass += '-inline';\r\n    } else {\r\n      menuButtonClass += '-popup';\r\n    } // TODO: Fix the CSS so that this isn't necessary\r\n\r\n\r\n    var buttonClass = Button.prototype.buildCSSClass();\r\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  ;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\r\n\r\n    if (this.options_.inline === true) {\r\n      menuButtonClass += '-inline';\r\n    } else {\r\n      menuButtonClass += '-popup';\r\n    }\r\n\r\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Get or set the localized control text that will be used for accessibility.\r\n   *\r\n   * > NOTE: This will come from the internal `menuButton_` element.\r\n   *\r\n   * @param {string} [text]\r\n   *        Control text for element.\r\n   *\r\n   * @param {Element} [el=this.menuButton_.el()]\r\n   *        Element to set the title on.\r\n   *\r\n   * @return {string}\r\n   *         - The control text when getting\r\n   */\r\n  ;\r\n\r\n  _proto.controlText = function controlText(text, el) {\r\n    if (el === void 0) {\r\n      el = this.menuButton_.el();\r\n    }\r\n\r\n    return this.menuButton_.controlText(text, el);\r\n  }\r\n  /**\r\n   * Dispose of the `menu-button` and all child components.\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.handleMouseLeave();\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Handle a click on a `MenuButton`.\r\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    if (this.buttonPressed_) {\r\n      this.unpressButton();\r\n    } else {\r\n      this.pressButton();\r\n    }\r\n  }\r\n  /**\r\n   * Handle `mouseleave` for `MenuButton`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mouseleave` event that caused this function to be called.\r\n   *\r\n   * @listens mouseleave\r\n   */\r\n  ;\r\n\r\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\r\n    this.removeClass('vjs-hover');\r\n    off(document, 'keyup', this.handleMenuKeyUp_);\r\n  }\r\n  /**\r\n   * Set the focus to the actual button, not to this element\r\n   */\r\n  ;\r\n\r\n  _proto.focus = function focus() {\r\n    this.menuButton_.focus();\r\n  }\r\n  /**\r\n   * Remove the focus from the actual button, not this element\r\n   */\r\n  ;\r\n\r\n  _proto.blur = function blur() {\r\n    this.menuButton_.blur();\r\n  }\r\n  /**\r\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\r\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    // Escape or Tab unpress the 'button'\r\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\r\n      if (this.buttonPressed_) {\r\n        this.unpressButton();\r\n      } // Don't preventDefault for Tab key - we still want to lose focus\r\n\r\n\r\n      if (!keycode.isEventKey(event, 'Tab')) {\r\n        event.preventDefault(); // Set focus back to the menu button's button\r\n\r\n        this.menuButton_.focus();\r\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\r\n\r\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\r\n      if (!this.buttonPressed_) {\r\n        event.preventDefault();\r\n        this.pressButton();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\r\n   * the constructor.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        Key press event\r\n   *\r\n   * @listens keyup\r\n   */\r\n  ;\r\n\r\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\r\n    // Escape hides popup menu\r\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\r\n      this.removeClass('vjs-hover');\r\n    }\r\n  }\r\n  /**\r\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\r\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\r\n   * stop working.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to be called.\r\n   */\r\n  ;\r\n\r\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\r\n    this.handleSubmenuKeyDown(event);\r\n  }\r\n  /**\r\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\r\n   * the constructor.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        Key press event\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\r\n    // Escape or Tab unpress the 'button'\r\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\r\n      if (this.buttonPressed_) {\r\n        this.unpressButton();\r\n      } // Don't preventDefault for Tab key - we still want to lose focus\r\n\r\n\r\n      if (!keycode.isEventKey(event, 'Tab')) {\r\n        event.preventDefault(); // Set focus back to the menu button's button\r\n\r\n        this.menuButton_.focus();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Put the current `MenuButton` into a pressed state.\r\n   */\r\n  ;\r\n\r\n  _proto.pressButton = function pressButton() {\r\n    if (this.enabled_) {\r\n      this.buttonPressed_ = true;\r\n      this.menu.show();\r\n      this.menu.lockShowing();\r\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\r\n      // undesired scrolling behavior when the player is in an iframe\r\n\r\n      if (IS_IOS && isInFrame()) {\r\n        // Return early so that the menu isn't focused\r\n        return;\r\n      }\r\n\r\n      this.menu.focus();\r\n    }\r\n  }\r\n  /**\r\n   * Take the current `MenuButton` out of a pressed state.\r\n   */\r\n  ;\r\n\r\n  _proto.unpressButton = function unpressButton() {\r\n    if (this.enabled_) {\r\n      this.buttonPressed_ = false;\r\n      this.menu.unlockShowing();\r\n      this.menu.hide();\r\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\r\n    }\r\n  }\r\n  /**\r\n   * Disable the `MenuButton`. Don't allow it to be clicked.\r\n   */\r\n  ;\r\n\r\n  _proto.disable = function disable() {\r\n    this.unpressButton();\r\n    this.enabled_ = false;\r\n    this.addClass('vjs-disabled');\r\n    this.menuButton_.disable();\r\n  }\r\n  /**\r\n   * Enable the `MenuButton`. Allow it to be clicked.\r\n   */\r\n  ;\r\n\r\n  _proto.enable = function enable() {\r\n    this.enabled_ = true;\r\n    this.removeClass('vjs-disabled');\r\n    this.menuButton_.enable();\r\n  };\r\n\r\n  return MenuButton;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('MenuButton', MenuButton);\r\n\r\n/**\r\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\r\n *\r\n * @extends MenuButton\r\n */\r\n\r\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\r\n  _inheritsLoose(TrackButton, _MenuButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TrackButton(player, options) {\r\n    var _this;\r\n\r\n    var tracks = options.tracks;\r\n    _this = _MenuButton.call(this, player, options) || this;\r\n\r\n    if (_this.items.length <= 1) {\r\n      _this.hide();\r\n    }\r\n\r\n    if (!tracks) {\r\n      return _assertThisInitialized(_this);\r\n    }\r\n\r\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\r\n    tracks.addEventListener('removetrack', updateHandler);\r\n    tracks.addEventListener('addtrack', updateHandler);\r\n    tracks.addEventListener('labelchange', updateHandler);\r\n\r\n    _this.player_.on('ready', updateHandler);\r\n\r\n    _this.player_.on('dispose', function () {\r\n      tracks.removeEventListener('removetrack', updateHandler);\r\n      tracks.removeEventListener('addtrack', updateHandler);\r\n      tracks.removeEventListener('labelchange', updateHandler);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  return TrackButton;\r\n}(MenuButton);\r\n\r\nComponent$1.registerComponent('TrackButton', TrackButton);\r\n\r\n/**\r\n * @file menu-keys.js\r\n */\r\n\r\n/**\r\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\r\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\r\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\r\n  * @typedef MenuKeys\r\n  * @array\r\n  */\r\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\r\n\r\n/**\r\n * The component for a menu item. `<li>`\r\n *\r\n * @extends ClickableComponent\r\n */\r\n\r\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\r\n  _inheritsLoose(MenuItem, _ClickableComponent);\r\n\r\n  /**\r\n   * Creates an instance of the this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   *\r\n   */\r\n  function MenuItem(player, options) {\r\n    var _this;\r\n\r\n    _this = _ClickableComponent.call(this, player, options) || this;\r\n    _this.selectable = options.selectable;\r\n    _this.isSelected_ = options.selected || false;\r\n    _this.multiSelectable = options.multiSelectable;\r\n\r\n    _this.selected(_this.isSelected_);\r\n\r\n    if (_this.selectable) {\r\n      if (_this.multiSelectable) {\r\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\r\n      } else {\r\n        _this.el_.setAttribute('role', 'menuitemradio');\r\n      }\r\n    } else {\r\n      _this.el_.setAttribute('role', 'menuitem');\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `MenuItem's DOM element\r\n   *\r\n   * @param {string} [type=li]\r\n   *        Element's node type, not actually used, always set to `li`.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        An object of properties that should be set on the element\r\n   *\r\n   * @param {Object} [attrs={}]\r\n   *        An object of attributes that should be set on the element\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  var _proto = MenuItem.prototype;\r\n\r\n  _proto.createEl = function createEl$1(type, props, attrs) {\r\n    // The control is textual, not just an icon\r\n    this.nonIconControl = true;\r\n\r\n    var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\r\n      className: 'vjs-menu-item',\r\n      tabIndex: -1\r\n    }, props), attrs); // swap icon with menu item text.\r\n\r\n\r\n    el.replaceChild(createEl('span', {\r\n      className: 'vjs-menu-item-text',\r\n      textContent: this.localize(this.options_.label)\r\n    }), el.querySelector('.vjs-icon-placeholder'));\r\n    return el;\r\n  }\r\n  /**\r\n   * Ignore keys which are used by the menu, but pass any other ones up. See\r\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    if (!MenuKeys.some(function (key) {\r\n      return keycode.isEventKey(event, key);\r\n    })) {\r\n      // Pass keydown handling up for unused keys\r\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\r\n    }\r\n  }\r\n  /**\r\n   * Any click on a `MenuItem` puts it into the selected state.\r\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    this.selected(true);\r\n  }\r\n  /**\r\n   * Set the state for this menu item as selected or not.\r\n   *\r\n   * @param {boolean} selected\r\n   *        if the menu item is selected or not\r\n   */\r\n  ;\r\n\r\n  _proto.selected = function selected(_selected) {\r\n    if (this.selectable) {\r\n      if (_selected) {\r\n        this.addClass('vjs-selected');\r\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\r\n        // so indicate selected state to screen reader in the control text.\r\n\r\n        this.controlText(', selected');\r\n        this.isSelected_ = true;\r\n      } else {\r\n        this.removeClass('vjs-selected');\r\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\r\n\r\n        this.controlText('');\r\n        this.isSelected_ = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return MenuItem;\r\n}(ClickableComponent);\r\n\r\nComponent$1.registerComponent('MenuItem', MenuItem);\r\n\r\n/**\r\n * The specific menu item type for selecting a language within a text track kind\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\r\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TextTrackMenuItem(player, options) {\r\n    var _this;\r\n\r\n    var track = options.track;\r\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\r\n\r\n    options.label = track.label || track.language || 'Unknown';\r\n    options.selected = track.mode === 'showing';\r\n    _this = _MenuItem.call(this, player, options) || this;\r\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\r\n    // out empty kinds.\r\n\r\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\r\n\r\n    var changeHandler = function changeHandler() {\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\r\n    };\r\n\r\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\r\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\r\n    };\r\n\r\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\r\n    tracks.addEventListener('change', changeHandler);\r\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\r\n\r\n    _this.on('dispose', function () {\r\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\r\n      tracks.removeEventListener('change', changeHandler);\r\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\r\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\r\n    // associated track's mode changes. Without something like\r\n    // Object.observe() (also not present on iOS7), it's not\r\n    // possible to detect changes to the mode attribute and polyfill\r\n    // the change event. As a poor substitute, we manually dispatch\r\n    // change events whenever the controls modify the mode.\r\n\r\n\r\n    if (tracks.onchange === undefined) {\r\n      var event;\r\n\r\n      _this.on(['tap', 'click'], function () {\r\n        if (typeof window$1.Event !== 'object') {\r\n          // Android 2.3 throws an Illegal Constructor error for window.Event\r\n          try {\r\n            event = new window$1.Event('change');\r\n          } catch (err) {// continue regardless of error\r\n          }\r\n        }\r\n\r\n        if (!event) {\r\n          event = document.createEvent('Event');\r\n          event.initEvent('change', true, true);\r\n        }\r\n\r\n        tracks.dispatchEvent(event);\r\n      });\r\n    } // set the default state based on current tracks\r\n\r\n\r\n    _this.handleTracksChange();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  var _proto = TextTrackMenuItem.prototype;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    var referenceTrack = this.track;\r\n    var tracks = this.player_.textTracks();\r\n\r\n    _MenuItem.prototype.handleClick.call(this, event);\r\n\r\n    if (!tracks) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\r\n      // skip it. We do not want to affect tracks of incompatible kind(s).\r\n\r\n      if (this.kinds.indexOf(track.kind) === -1) {\r\n        continue;\r\n      } // If this text track is the component's track and it is not showing,\r\n      // set it to showing.\r\n\r\n\r\n      if (track === referenceTrack) {\r\n        if (track.mode !== 'showing') {\r\n          track.mode = 'showing';\r\n        } // If this text track is not the component's track and it is not\r\n        // disabled, set it to disabled.\r\n\r\n      } else if (track.mode !== 'disabled') {\r\n        track.mode = 'disabled';\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Handle text track list change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `change` event that caused this function to be called.\r\n   *\r\n   * @listens TextTrackList#change\r\n   */\r\n  ;\r\n\r\n  _proto.handleTracksChange = function handleTracksChange(event) {\r\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\r\n    // screen readers to read the appended control text unnecessarily\r\n\r\n    if (shouldBeSelected !== this.isSelected_) {\r\n      this.selected(shouldBeSelected);\r\n    }\r\n  };\r\n\r\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\r\n    if (this.track.mode === 'showing') {\r\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\r\n\r\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\r\n        return;\r\n      }\r\n\r\n      this.player_.cache_.selectedLanguage = {\r\n        enabled: true,\r\n        language: this.track.language,\r\n        kind: this.track.kind\r\n      };\r\n    }\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    // remove reference to track object on dispose\r\n    this.track = null;\r\n\r\n    _MenuItem.prototype.dispose.call(this);\r\n  };\r\n\r\n  return TextTrackMenuItem;\r\n}(MenuItem);\r\n\r\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\r\n\r\n/**\r\n * A special menu item for turning of a specific type of text track\r\n *\r\n * @extends TextTrackMenuItem\r\n */\r\n\r\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\r\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function OffTextTrackMenuItem(player, options) {\r\n    // Create pseudo track info\r\n    // Requires options['kind']\r\n    options.track = {\r\n      player: player,\r\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\r\n      // since they are now stored in the `kinds` property of all instances of\r\n      // TextTrackMenuItem, but this will remain for backwards compatibility\r\n      kind: options.kind,\r\n      kinds: options.kinds,\r\n      \"default\": false,\r\n      mode: 'disabled'\r\n    };\r\n\r\n    if (!options.kinds) {\r\n      options.kinds = [options.kind];\r\n    }\r\n\r\n    if (options.label) {\r\n      options.track.label = options.label;\r\n    } else {\r\n      options.track.label = options.kinds.join(' and ') + ' off';\r\n    } // MenuItem is selectable\r\n\r\n\r\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\r\n\r\n    options.multiSelectable = false;\r\n    return _TextTrackMenuItem.call(this, player, options) || this;\r\n  }\r\n  /**\r\n   * Handle text track change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run\r\n   */\r\n\r\n\r\n  var _proto = OffTextTrackMenuItem.prototype;\r\n\r\n  _proto.handleTracksChange = function handleTracksChange(event) {\r\n    var tracks = this.player().textTracks();\r\n    var shouldBeSelected = true;\r\n\r\n    for (var i = 0, l = tracks.length; i < l; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\r\n        shouldBeSelected = false;\r\n        break;\r\n      }\r\n    } // Prevent redundant selected() calls because they may cause\r\n    // screen readers to read the appended control text unnecessarily\r\n\r\n\r\n    if (shouldBeSelected !== this.isSelected_) {\r\n      this.selected(shouldBeSelected);\r\n    }\r\n  };\r\n\r\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\r\n    var tracks = this.player().textTracks();\r\n    var allHidden = true;\r\n\r\n    for (var i = 0, l = tracks.length; i < l; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\r\n        allHidden = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (allHidden) {\r\n      this.player_.cache_.selectedLanguage = {\r\n        enabled: false\r\n      };\r\n    }\r\n  };\r\n\r\n  return OffTextTrackMenuItem;\r\n}(TextTrackMenuItem);\r\n\r\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\r\n\r\n/**\r\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\r\n *\r\n * @extends MenuButton\r\n */\r\n\r\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\r\n  _inheritsLoose(TextTrackButton, _TrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TextTrackButton(player, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options.tracks = player.textTracks();\r\n    return _TrackButton.call(this, player, options) || this;\r\n  }\r\n  /**\r\n   * Create a menu item for each text track\r\n   *\r\n   * @param {TextTrackMenuItem[]} [items=[]]\r\n   *        Existing array of items to use during creation\r\n   *\r\n   * @return {TextTrackMenuItem[]}\r\n   *         Array of menu items that were created\r\n   */\r\n\r\n\r\n  var _proto = TextTrackButton.prototype;\r\n\r\n  _proto.createItems = function createItems(items, TrackMenuItem) {\r\n    if (items === void 0) {\r\n      items = [];\r\n    }\r\n\r\n    if (TrackMenuItem === void 0) {\r\n      TrackMenuItem = TextTrackMenuItem;\r\n    }\r\n\r\n    // Label is an override for the [track] off label\r\n    // USed to localise captions/subtitles\r\n    var label;\r\n\r\n    if (this.label_) {\r\n      label = this.label_ + \" off\";\r\n    } // Add an OFF menu item to turn all tracks off\r\n\r\n\r\n    items.push(new OffTextTrackMenuItem(this.player_, {\r\n      kinds: this.kinds_,\r\n      kind: this.kind_,\r\n      label: label\r\n    }));\r\n    this.hideThreshold_ += 1;\r\n    var tracks = this.player_.textTracks();\r\n\r\n    if (!Array.isArray(this.kinds_)) {\r\n      this.kinds_ = [this.kind_];\r\n    }\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\r\n\r\n      if (this.kinds_.indexOf(track.kind) > -1) {\r\n        var item = new TrackMenuItem(this.player_, {\r\n          track: track,\r\n          kinds: this.kinds_,\r\n          kind: this.kind_,\r\n          // MenuItem is selectable\r\n          selectable: true,\r\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\r\n          multiSelectable: false\r\n        });\r\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\r\n        items.push(item);\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return TextTrackButton;\r\n}(TrackButton);\r\n\r\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\r\n\r\n/**\r\n * The chapter track menu item\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\r\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function ChaptersTrackMenuItem(player, options) {\r\n    var _this;\r\n\r\n    var track = options.track;\r\n    var cue = options.cue;\r\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\r\n\r\n    options.selectable = true;\r\n    options.multiSelectable = false;\r\n    options.label = cue.text;\r\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\r\n    _this = _MenuItem.call(this, player, options) || this;\r\n    _this.track = track;\r\n    _this.cue = cue;\r\n    return _this;\r\n  }\r\n  /**\r\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  var _proto = ChaptersTrackMenuItem.prototype;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    _MenuItem.prototype.handleClick.call(this);\r\n\r\n    this.player_.currentTime(this.cue.startTime);\r\n  };\r\n\r\n  return ChaptersTrackMenuItem;\r\n}(MenuItem);\r\n\r\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\r\n\r\n/**\r\n * The button component for toggling and selecting chapters\r\n * Chapters act much differently than other text tracks\r\n * Cues are navigation vs. other tracks of alternative languages\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\r\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this function is ready.\r\n   */\r\n  function ChaptersButton(player, options, ready) {\r\n    var _this;\r\n\r\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\r\n\r\n    _this.selectCurrentItem_ = function () {\r\n      _this.items.forEach(function (item) {\r\n        item.selected(_this.track_.activeCues[0] === item.cue);\r\n      });\r\n    };\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = ChaptersButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Update the menu based on the current state of its items.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        An event that triggered this function to run.\r\n   *\r\n   * @listens TextTrackList#addtrack\r\n   * @listens TextTrackList#removetrack\r\n   * @listens TextTrackList#change\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(event) {\r\n    if (event && event.track && event.track.kind !== 'chapters') {\r\n      return;\r\n    }\r\n\r\n    var track = this.findChaptersTrack();\r\n\r\n    if (track !== this.track_) {\r\n      this.setTrack(track);\r\n\r\n      _TextTrackButton.prototype.update.call(this);\r\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\r\n      // Update the menu initially or if the number of cues has changed since set\r\n      _TextTrackButton.prototype.update.call(this);\r\n    }\r\n  }\r\n  /**\r\n   * Set the currently selected track for the chapters button.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        The new track to select. Nothing will change if this is the currently selected\r\n   *        track.\r\n   */\r\n  ;\r\n\r\n  _proto.setTrack = function setTrack(track) {\r\n    if (this.track_ === track) {\r\n      return;\r\n    }\r\n\r\n    if (!this.updateHandler_) {\r\n      this.updateHandler_ = this.update.bind(this);\r\n    } // here this.track_ refers to the old track instance\r\n\r\n\r\n    if (this.track_) {\r\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\r\n\r\n      if (remoteTextTrackEl) {\r\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\r\n      }\r\n\r\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\r\n      this.track_ = null;\r\n    }\r\n\r\n    this.track_ = track; // here this.track_ refers to the new track instance\r\n\r\n    if (this.track_) {\r\n      this.track_.mode = 'hidden';\r\n\r\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\r\n\r\n      if (_remoteTextTrackEl) {\r\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\r\n      }\r\n\r\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\r\n    }\r\n  }\r\n  /**\r\n   * Find the track object that is currently in use by this ChaptersButton\r\n   *\r\n   * @return {TextTrack|undefined}\r\n   *         The current track or undefined if none was found.\r\n   */\r\n  ;\r\n\r\n  _proto.findChaptersTrack = function findChaptersTrack() {\r\n    var tracks = this.player_.textTracks() || [];\r\n\r\n    for (var i = tracks.length - 1; i >= 0; i--) {\r\n      // We will always choose the last track as our chaptersTrack\r\n      var track = tracks[i];\r\n\r\n      if (track.kind === this.kind_) {\r\n        return track;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get the caption for the ChaptersButton based on the track label. This will also\r\n   * use the current tracks localized kind as a fallback if a label does not exist.\r\n   *\r\n   * @return {string}\r\n   *         The tracks current label or the localized track kind.\r\n   */\r\n  ;\r\n\r\n  _proto.getMenuCaption = function getMenuCaption() {\r\n    if (this.track_ && this.track_.label) {\r\n      return this.track_.label;\r\n    }\r\n\r\n    return this.localize(toTitleCase$1(this.kind_));\r\n  }\r\n  /**\r\n   * Create menu from chapter track\r\n   *\r\n   * @return {Menu}\r\n   *         New menu for the chapter buttons\r\n   */\r\n  ;\r\n\r\n  _proto.createMenu = function createMenu() {\r\n    this.options_.title = this.getMenuCaption();\r\n    return _TextTrackButton.prototype.createMenu.call(this);\r\n  }\r\n  /**\r\n   * Create a menu item for each text track\r\n   *\r\n   * @return {TextTrackMenuItem[]}\r\n   *         Array of menu items\r\n   */\r\n  ;\r\n\r\n  _proto.createItems = function createItems() {\r\n    var items = [];\r\n\r\n    if (!this.track_) {\r\n      return items;\r\n    }\r\n\r\n    var cues = this.track_.cues;\r\n\r\n    if (!cues) {\r\n      return items;\r\n    }\r\n\r\n    for (var i = 0, l = cues.length; i < l; i++) {\r\n      var cue = cues[i];\r\n      var mi = new ChaptersTrackMenuItem(this.player_, {\r\n        track: this.track_,\r\n        cue: cue\r\n      });\r\n      items.push(mi);\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return ChaptersButton;\r\n}(TextTrackButton);\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nChaptersButton.prototype.kind_ = 'chapters';\r\n/**\r\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\nChaptersButton.prototype.controlText_ = 'Chapters';\r\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\r\n\r\n/**\r\n * The button component for toggling and selecting descriptions\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\r\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this component is ready.\r\n   */\r\n  function DescriptionsButton(player, options, ready) {\r\n    var _this;\r\n\r\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\r\n    var tracks = player.textTracks();\r\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\r\n    tracks.addEventListener('change', changeHandler);\r\n\r\n    _this.on('dispose', function () {\r\n      tracks.removeEventListener('change', changeHandler);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Handle text track change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run\r\n   *\r\n   * @listens TextTrackList#change\r\n   */\r\n\r\n\r\n  var _proto = DescriptionsButton.prototype;\r\n\r\n  _proto.handleTracksChange = function handleTracksChange(event) {\r\n    var tracks = this.player().textTracks();\r\n    var disabled = false; // Check whether a track of a different kind is showing\r\n\r\n    for (var i = 0, l = tracks.length; i < l; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\r\n        disabled = true;\r\n        break;\r\n      }\r\n    } // If another track is showing, disable this menu button\r\n\r\n\r\n    if (disabled) {\r\n      this.disable();\r\n    } else {\r\n      this.enable();\r\n    }\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  ;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  return DescriptionsButton;\r\n}(TextTrackButton);\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nDescriptionsButton.prototype.kind_ = 'descriptions';\r\n/**\r\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\r\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\r\n\r\n/**\r\n * The button component for toggling and selecting subtitles\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\r\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this component is ready.\r\n   */\r\n  function SubtitlesButton(player, options, ready) {\r\n    return _TextTrackButton.call(this, player, options, ready) || this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = SubtitlesButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  return SubtitlesButton;\r\n}(TextTrackButton);\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nSubtitlesButton.prototype.kind_ = 'subtitles';\r\n/**\r\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\r\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\r\n\r\n/**\r\n * The menu item for caption track settings menu\r\n *\r\n * @extends TextTrackMenuItem\r\n */\r\n\r\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\r\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function CaptionSettingsMenuItem(player, options) {\r\n    var _this;\r\n\r\n    options.track = {\r\n      player: player,\r\n      kind: options.kind,\r\n      label: options.kind + ' settings',\r\n      selectable: false,\r\n      \"default\": false,\r\n      mode: 'disabled'\r\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\r\n\r\n    options.selectable = false;\r\n    options.name = 'CaptionSettingsMenuItem';\r\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\r\n\r\n    _this.addClass('vjs-texttrack-settings');\r\n\r\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  var _proto = CaptionSettingsMenuItem.prototype;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    this.player().getChild('textTrackSettings').open();\r\n  };\r\n\r\n  return CaptionSettingsMenuItem;\r\n}(TextTrackMenuItem);\r\n\r\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\r\n\r\n/**\r\n * The button component for toggling and selecting captions\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\r\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this component is ready.\r\n   */\r\n  function CaptionsButton(player, options, ready) {\r\n    return _TextTrackButton.call(this, player, options, ready) || this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = CaptionsButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Create caption menu items\r\n   *\r\n   * @return {CaptionSettingsMenuItem[]}\r\n   *         The array of current menu items.\r\n   */\r\n  ;\r\n\r\n  _proto.createItems = function createItems() {\r\n    var items = [];\r\n\r\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\r\n      items.push(new CaptionSettingsMenuItem(this.player_, {\r\n        kind: this.kind_\r\n      }));\r\n      this.hideThreshold_ += 1;\r\n    }\r\n\r\n    return _TextTrackButton.prototype.createItems.call(this, items);\r\n  };\r\n\r\n  return CaptionsButton;\r\n}(TextTrackButton);\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nCaptionsButton.prototype.kind_ = 'captions';\r\n/**\r\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\nCaptionsButton.prototype.controlText_ = 'Captions';\r\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\r\n\r\n/**\r\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\r\n * in the SubsCapsMenu.\r\n *\r\n * @extends TextTrackMenuItem\r\n */\r\n\r\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\r\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\r\n\r\n  function SubsCapsMenuItem() {\r\n    return _TextTrackMenuItem.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = SubsCapsMenuItem.prototype;\r\n\r\n  _proto.createEl = function createEl$1(type, props, attrs) {\r\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\r\n\r\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\r\n\r\n    if (this.options_.track.kind === 'captions') {\r\n      parentSpan.appendChild(createEl('span', {\r\n        className: 'vjs-icon-placeholder'\r\n      }, {\r\n        'aria-hidden': true\r\n      }));\r\n      parentSpan.appendChild(createEl('span', {\r\n        className: 'vjs-control-text',\r\n        // space added as the text will visually flow with the\r\n        // label\r\n        textContent: \" \" + this.localize('Captions')\r\n      }));\r\n    }\r\n\r\n    return el;\r\n  };\r\n\r\n  return SubsCapsMenuItem;\r\n}(TextTrackMenuItem);\r\n\r\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\r\n\r\n/**\r\n * The button component for toggling and selecting captions and/or subtitles\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\r\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\r\n\r\n  function SubsCapsButton(player, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\r\n    // \"captions and subtitles\" other locales use \"subtitles\"\r\n\r\n    _this.label_ = 'subtitles';\r\n\r\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\r\n      _this.label_ = 'captions';\r\n    }\r\n\r\n    _this.menuButton_.controlText(toTitleCase$1(_this.label_));\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = SubsCapsButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Create caption/subtitles menu items\r\n   *\r\n   * @return {CaptionSettingsMenuItem[]}\r\n   *         The array of current menu items.\r\n   */\r\n  ;\r\n\r\n  _proto.createItems = function createItems() {\r\n    var items = [];\r\n\r\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\r\n      items.push(new CaptionSettingsMenuItem(this.player_, {\r\n        kind: this.label_\r\n      }));\r\n      this.hideThreshold_ += 1;\r\n    }\r\n\r\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\r\n    return items;\r\n  };\r\n\r\n  return SubsCapsButton;\r\n}(TextTrackButton);\r\n/**\r\n * `kind`s of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {array}\r\n * @private\r\n */\r\n\r\n\r\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\r\n/**\r\n * The text that should display over the `SubsCapsButton`s controls.\r\n *\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\r\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\r\n\r\n/**\r\n * An {@link AudioTrack} {@link MenuItem}\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\r\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function AudioTrackMenuItem(player, options) {\r\n    var _this;\r\n\r\n    var track = options.track;\r\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\r\n\r\n    options.label = track.label || track.language || 'Unknown';\r\n    options.selected = track.enabled;\r\n    _this = _MenuItem.call(this, player, options) || this;\r\n    _this.track = track;\r\n\r\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\r\n\r\n    var changeHandler = function changeHandler() {\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\r\n    };\r\n\r\n    tracks.addEventListener('change', changeHandler);\r\n\r\n    _this.on('dispose', function () {\r\n      tracks.removeEventListener('change', changeHandler);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = AudioTrackMenuItem.prototype;\r\n\r\n  _proto.createEl = function createEl$1(type, props, attrs) {\r\n    var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\r\n\r\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\r\n\r\n    if (this.options_.track.kind === 'main-desc') {\r\n      parentSpan.appendChild(createEl('span', {\r\n        className: 'vjs-icon-placeholder'\r\n      }, {\r\n        'aria-hidden': true\r\n      }));\r\n      parentSpan.appendChild(createEl('span', {\r\n        className: 'vjs-control-text',\r\n        textContent: ' ' + this.localize('Descriptions')\r\n      }));\r\n    }\r\n\r\n    return el;\r\n  }\r\n  /**\r\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\r\n   * for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\r\n    // off for us.\r\n\r\n\r\n    this.track.enabled = true; // when native audio tracks are used, we want to make sure that other tracks are turned off\r\n\r\n    if (this.player_.tech_.featuresNativeAudioTracks) {\r\n      var tracks = this.player_.audioTracks();\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        var track = tracks[i]; // skip the current track since we enabled it above\r\n\r\n        if (track === this.track) {\r\n          continue;\r\n        }\r\n\r\n        track.enabled = track === this.track;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Handle any {@link AudioTrack} change.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link AudioTrackList#change} event that caused this to run.\r\n   *\r\n   * @listens AudioTrackList#change\r\n   */\r\n  ;\r\n\r\n  _proto.handleTracksChange = function handleTracksChange(event) {\r\n    this.selected(this.track.enabled);\r\n  };\r\n\r\n  return AudioTrackMenuItem;\r\n}(MenuItem);\r\n\r\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\r\n\r\n/**\r\n * The base class for buttons that toggle specific {@link AudioTrack} types.\r\n *\r\n * @extends TrackButton\r\n */\r\n\r\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\r\n  _inheritsLoose(AudioTrackButton, _TrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function AudioTrackButton(player, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options.tracks = player.audioTracks();\r\n    return _TrackButton.call(this, player, options) || this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  var _proto = AudioTrackButton.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Create a menu item for each audio track\r\n   *\r\n   * @param {AudioTrackMenuItem[]} [items=[]]\r\n   *        An array of existing menu items to use.\r\n   *\r\n   * @return {AudioTrackMenuItem[]}\r\n   *         An array of menu items\r\n   */\r\n  ;\r\n\r\n  _proto.createItems = function createItems(items) {\r\n    if (items === void 0) {\r\n      items = [];\r\n    }\r\n\r\n    // if there's only one audio track, there no point in showing it\r\n    this.hideThreshold_ = 1;\r\n    var tracks = this.player_.audioTracks();\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i];\r\n      items.push(new AudioTrackMenuItem(this.player_, {\r\n        track: track,\r\n        // MenuItem is selectable\r\n        selectable: true,\r\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\r\n        multiSelectable: false\r\n      }));\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return AudioTrackButton;\r\n}(TrackButton);\r\n/**\r\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\r\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\r\n\r\n/**\r\n * The specific menu item type for selecting a playback rate.\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\r\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlaybackRateMenuItem(player, options) {\r\n    var _this;\r\n\r\n    var label = options.rate;\r\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\r\n\r\n    options.label = label;\r\n    options.selected = rate === player.playbackRate();\r\n    options.selectable = true;\r\n    options.multiSelectable = false;\r\n    _this = _MenuItem.call(this, player, options) || this;\r\n    _this.label = label;\r\n    _this.rate = rate;\r\n\r\n    _this.on(player, 'ratechange', function (e) {\r\n      return _this.update(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  var _proto = PlaybackRateMenuItem.prototype;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    _MenuItem.prototype.handleClick.call(this);\r\n\r\n    this.player().playbackRate(this.rate);\r\n  }\r\n  /**\r\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `ratechange` event that caused this function to run.\r\n   *\r\n   * @listens Player#ratechange\r\n   */\r\n  ;\r\n\r\n  _proto.update = function update(event) {\r\n    this.selected(this.player().playbackRate() === this.rate);\r\n  };\r\n\r\n  return PlaybackRateMenuItem;\r\n}(MenuItem);\r\n/**\r\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPlaybackRateMenuItem.prototype.contentElType = 'button';\r\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\r\n\r\n/**\r\n * The component for controlling the playback rate.\r\n *\r\n * @extends MenuButton\r\n */\r\n\r\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\r\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlaybackRateMenuButton(player, options) {\r\n    var _this;\r\n\r\n    _this = _MenuButton.call(this, player, options) || this;\r\n\r\n    _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\r\n\r\n    _this.updateVisibility();\r\n\r\n    _this.updateLabel();\r\n\r\n    _this.on(player, 'loadstart', function (e) {\r\n      return _this.updateVisibility(e);\r\n    });\r\n\r\n    _this.on(player, 'ratechange', function (e) {\r\n      return _this.updateLabel(e);\r\n    });\r\n\r\n    _this.on(player, 'playbackrateschange', function (e) {\r\n      return _this.handlePlaybackRateschange(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  var _proto = PlaybackRateMenuButton.prototype;\r\n\r\n  _proto.createEl = function createEl$1() {\r\n    var el = _MenuButton.prototype.createEl.call(this);\r\n\r\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\r\n    this.labelEl_ = createEl('div', {\r\n      className: 'vjs-playback-rate-value',\r\n      id: this.labelElId_,\r\n      textContent: '1x'\r\n    });\r\n    el.appendChild(this.labelEl_);\r\n    return el;\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.labelEl_ = null;\r\n\r\n    _MenuButton.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  ;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Create the list of menu items. Specific to each subclass.\r\n   *\r\n   */\r\n  ;\r\n\r\n  _proto.createItems = function createItems() {\r\n    var rates = this.playbackRates();\r\n    var items = [];\r\n\r\n    for (var i = rates.length - 1; i >= 0; i--) {\r\n      items.push(new PlaybackRateMenuItem(this.player(), {\r\n        rate: rates[i] + 'x'\r\n      }));\r\n    }\r\n\r\n    return items;\r\n  }\r\n  /**\r\n   * Updates ARIA accessibility attributes\r\n   */\r\n  ;\r\n\r\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\r\n    // Current playback rate\r\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\r\n  }\r\n  /**\r\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n  ;\r\n\r\n  _proto.handleClick = function handleClick(event) {\r\n    // select next rate option\r\n    var currentRate = this.player().playbackRate();\r\n    var rates = this.playbackRates();\r\n    var currentIndex = rates.indexOf(currentRate); // this get the next rate and it will select first one if the last one currently selected\r\n\r\n    var newIndex = (currentIndex + 1) % rates.length;\r\n    this.player().playbackRate(rates[newIndex]);\r\n  }\r\n  /**\r\n   * On playbackrateschange, update the menu to account for the new items.\r\n   *\r\n   * @listens Player#playbackrateschange\r\n   */\r\n  ;\r\n\r\n  _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\r\n    this.update();\r\n  }\r\n  /**\r\n   * Get possible playback rates\r\n   *\r\n   * @return {Array}\r\n   *         All possible playback rates\r\n   */\r\n  ;\r\n\r\n  _proto.playbackRates = function playbackRates() {\r\n    var player = this.player();\r\n    return player.playbackRates && player.playbackRates() || [];\r\n  }\r\n  /**\r\n   * Get whether playback rates is supported by the tech\r\n   * and an array of playback rates exists\r\n   *\r\n   * @return {boolean}\r\n   *         Whether changing playback rate is supported\r\n   */\r\n  ;\r\n\r\n  _proto.playbackRateSupported = function playbackRateSupported() {\r\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\r\n  }\r\n  /**\r\n   * Hide playback rate controls when they're no playback rate options to select\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#loadstart\r\n   */\r\n  ;\r\n\r\n  _proto.updateVisibility = function updateVisibility(event) {\r\n    if (this.playbackRateSupported()) {\r\n      this.removeClass('vjs-hidden');\r\n    } else {\r\n      this.addClass('vjs-hidden');\r\n    }\r\n  }\r\n  /**\r\n   * Update button label when rate changed\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#ratechange\r\n   */\r\n  ;\r\n\r\n  _proto.updateLabel = function updateLabel(event) {\r\n    if (this.playbackRateSupported()) {\r\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\r\n    }\r\n  };\r\n\r\n  return PlaybackRateMenuButton;\r\n}(MenuButton);\r\n/**\r\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\r\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\r\n\r\n/**\r\n * Just an empty spacer element that can be used as an append point for plugins, etc.\r\n * Also can be used to create space between elements when necessary.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Spacer = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Spacer, _Component);\r\n\r\n  function Spacer() {\r\n    return _Component.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Spacer.prototype;\r\n\r\n  /**\r\n  * Builds the default DOM `className`.\r\n  *\r\n  * @return {string}\r\n  *         The DOM `className` for this object.\r\n  */\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl(tag, props, attributes) {\r\n    if (tag === void 0) {\r\n      tag = 'div';\r\n    }\r\n\r\n    if (props === void 0) {\r\n      props = {};\r\n    }\r\n\r\n    if (attributes === void 0) {\r\n      attributes = {};\r\n    }\r\n\r\n    if (!props.className) {\r\n      props.className = this.buildCSSClass();\r\n    }\r\n\r\n    return _Component.prototype.createEl.call(this, tag, props, attributes);\r\n  };\r\n\r\n  return Spacer;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('Spacer', Spacer);\r\n\r\n/**\r\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\r\n *\r\n * @extends Spacer\r\n */\r\n\r\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\r\n  _inheritsLoose(CustomControlSpacer, _Spacer);\r\n\r\n  function CustomControlSpacer() {\r\n    return _Spacer.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = CustomControlSpacer.prototype;\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Spacer.prototype.createEl.call(this, 'div', {\r\n      className: this.buildCSSClass(),\r\n      // No-flex/table-cell mode requires there be some content\r\n      // in the cell to fill the remaining space of the table.\r\n      textContent: \"\\xA0\"\r\n    });\r\n  };\r\n\r\n  return CustomControlSpacer;\r\n}(Spacer);\r\n\r\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\r\n\r\n/**\r\n * Container of main controls.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ControlBar = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(ControlBar, _Component);\r\n\r\n  function ControlBar() {\r\n    return _Component.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = ControlBar.prototype;\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-control-bar',\r\n      dir: 'ltr'\r\n    });\r\n  };\r\n\r\n  return ControlBar;\r\n}(Component$1);\r\n/**\r\n * Default options for `ControlBar`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nControlBar.prototype.options_ = {\r\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\r\n};\r\n\r\nif ('exitPictureInPicture' in document) {\r\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\r\n}\r\n\r\nComponent$1.registerComponent('ControlBar', ControlBar);\r\n\r\n/**\r\n * A display that indicates an error has occurred. This means that the video\r\n * is unplayable.\r\n *\r\n * @extends ModalDialog\r\n */\r\n\r\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\r\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param  {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param  {Object} [options]\r\n   *         The key/value store of player options.\r\n   */\r\n  function ErrorDisplay(player, options) {\r\n    var _this;\r\n\r\n    _this = _ModalDialog.call(this, player, options) || this;\r\n\r\n    _this.on(player, 'error', function (e) {\r\n      return _this.open(e);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   *\r\n   * @deprecated Since version 5.\r\n   */\r\n\r\n\r\n  var _proto = ErrorDisplay.prototype;\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\r\n  }\r\n  /**\r\n   * Gets the localized error message based on the `Player`s error.\r\n   *\r\n   * @return {string}\r\n   *         The `Player`s error message localized or an empty string.\r\n   */\r\n  ;\r\n\r\n  _proto.content = function content() {\r\n    var error = this.player().error();\r\n    return error ? this.localize(error.message) : '';\r\n  };\r\n\r\n  return ErrorDisplay;\r\n}(ModalDialog);\r\n/**\r\n * The default options for an `ErrorDisplay`.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\r\n  pauseOnOpen: false,\r\n  fillAlways: true,\r\n  temporary: false,\r\n  uncloseable: true\r\n});\r\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\r\n\r\nvar LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\r\nvar COLOR_BLACK = ['#000', 'Black'];\r\nvar COLOR_BLUE = ['#00F', 'Blue'];\r\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\r\nvar COLOR_GREEN = ['#0F0', 'Green'];\r\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\r\nvar COLOR_RED = ['#F00', 'Red'];\r\nvar COLOR_WHITE = ['#FFF', 'White'];\r\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\r\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\r\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\r\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\r\n//\r\n// Possible keys include:\r\n//\r\n// `default`:\r\n//   The default option index. Only needs to be provided if not zero.\r\n// `parser`:\r\n//   A function which is used to parse the value from the selected option in\r\n//   a customized way.\r\n// `selector`:\r\n//   The selector used to find the associated <select> element.\r\n\r\nvar selectConfigs = {\r\n  backgroundColor: {\r\n    selector: '.vjs-bg-color > select',\r\n    id: 'captions-background-color-%s',\r\n    label: 'Color',\r\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\r\n  },\r\n  backgroundOpacity: {\r\n    selector: '.vjs-bg-opacity > select',\r\n    id: 'captions-background-opacity-%s',\r\n    label: 'Transparency',\r\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\r\n  },\r\n  color: {\r\n    selector: '.vjs-fg-color > select',\r\n    id: 'captions-foreground-color-%s',\r\n    label: 'Color',\r\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\r\n  },\r\n  edgeStyle: {\r\n    selector: '.vjs-edge-style > select',\r\n    id: '%s',\r\n    label: 'Text Edge Style',\r\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\r\n  },\r\n  fontFamily: {\r\n    selector: '.vjs-font-family > select',\r\n    id: 'captions-font-family-%s',\r\n    label: 'Font Family',\r\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\r\n  },\r\n  fontPercent: {\r\n    selector: '.vjs-font-percent > select',\r\n    id: 'captions-font-size-%s',\r\n    label: 'Font Size',\r\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\r\n    \"default\": 2,\r\n    parser: function parser(v) {\r\n      return v === '1.00' ? null : Number(v);\r\n    }\r\n  },\r\n  textOpacity: {\r\n    selector: '.vjs-text-opacity > select',\r\n    id: 'captions-foreground-opacity-%s',\r\n    label: 'Transparency',\r\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\r\n  },\r\n  // Options for this object are defined below.\r\n  windowColor: {\r\n    selector: '.vjs-window-color > select',\r\n    id: 'captions-window-color-%s',\r\n    label: 'Color'\r\n  },\r\n  // Options for this object are defined below.\r\n  windowOpacity: {\r\n    selector: '.vjs-window-opacity > select',\r\n    id: 'captions-window-opacity-%s',\r\n    label: 'Transparency',\r\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\r\n  }\r\n};\r\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\r\n/**\r\n * Get the actual value of an option.\r\n *\r\n * @param  {string} value\r\n *         The value to get\r\n *\r\n * @param  {Function} [parser]\r\n *         Optional function to adjust the value.\r\n *\r\n * @return {Mixed}\r\n *         - Will be `undefined` if no value exists\r\n *         - Will be `undefined` if the given value is \"none\".\r\n *         - Will be the actual value otherwise.\r\n *\r\n * @private\r\n */\r\n\r\nfunction parseOptionValue(value, parser) {\r\n  if (parser) {\r\n    value = parser(value);\r\n  }\r\n\r\n  if (value && value !== 'none') {\r\n    return value;\r\n  }\r\n}\r\n/**\r\n * Gets the value of the selected <option> element within a <select> element.\r\n *\r\n * @param  {Element} el\r\n *         the element to look in\r\n *\r\n * @param  {Function} [parser]\r\n *         Optional function to adjust the value.\r\n *\r\n * @return {Mixed}\r\n *         - Will be `undefined` if no value exists\r\n *         - Will be `undefined` if the given value is \"none\".\r\n *         - Will be the actual value otherwise.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nfunction getSelectedOptionValue(el, parser) {\r\n  var value = el.options[el.options.selectedIndex].value;\r\n  return parseOptionValue(value, parser);\r\n}\r\n/**\r\n * Sets the selected <option> element within a <select> element based on a\r\n * given value.\r\n *\r\n * @param {Element} el\r\n *        The element to look in.\r\n *\r\n * @param {string} value\r\n *        the property to look on.\r\n *\r\n * @param {Function} [parser]\r\n *        Optional function to adjust the value before comparing.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nfunction setSelectedOption(el, value, parser) {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < el.options.length; i++) {\r\n    if (parseOptionValue(el.options[i].value, parser) === value) {\r\n      el.selectedIndex = i;\r\n      break;\r\n    }\r\n  }\r\n}\r\n/**\r\n * Manipulate Text Tracks settings.\r\n *\r\n * @extends ModalDialog\r\n */\r\n\r\n\r\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\r\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *         The key/value store of player options.\r\n   */\r\n  function TextTrackSettings(player, options) {\r\n    var _this;\r\n\r\n    options.temporary = false;\r\n    _this = _ModalDialog.call(this, player, options) || this;\r\n    _this.updateDisplay = _this.updateDisplay.bind(_assertThisInitialized(_this)); // fill the modal and pretend we have opened it\r\n\r\n    _this.fill();\r\n\r\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\r\n    _this.endDialog = createEl('p', {\r\n      className: 'vjs-control-text',\r\n      textContent: _this.localize('End of dialog window.')\r\n    });\r\n\r\n    _this.el().appendChild(_this.endDialog);\r\n\r\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\r\n\r\n\r\n    if (options.persistTextTrackSettings === undefined) {\r\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\r\n    }\r\n\r\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\r\n      _this.saveSettings();\r\n\r\n      _this.close();\r\n    });\r\n\r\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\r\n      _this.setDefaults();\r\n\r\n      _this.updateDisplay();\r\n    });\r\n\r\n    each(selectConfigs, function (config) {\r\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\r\n    });\r\n\r\n    if (_this.options_.persistTextTrackSettings) {\r\n      _this.restoreSettings();\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = TextTrackSettings.prototype;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.endDialog = null;\r\n\r\n    _ModalDialog.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Create a <select> element with configured options.\r\n   *\r\n   * @param {string} key\r\n   *        Configuration key to use during creation.\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\r\n    var _this2 = this;\r\n\r\n    if (legendId === void 0) {\r\n      legendId = '';\r\n    }\r\n\r\n    if (type === void 0) {\r\n      type = 'label';\r\n    }\r\n\r\n    var config = selectConfigs[key];\r\n    var id = config.id.replace('%s', this.id_);\r\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\r\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\r\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\r\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\r\n    })).concat('</select>').join('');\r\n  }\r\n  /**\r\n   * Create foreground color element for the component\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElFgColor_ = function createElFgColor_() {\r\n    var legendId = \"captions-text-legend-\" + this.id_;\r\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\r\n  }\r\n  /**\r\n   * Create background color element for the component\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElBgColor_ = function createElBgColor_() {\r\n    var legendId = \"captions-background-\" + this.id_;\r\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\r\n  }\r\n  /**\r\n   * Create window color element for the component\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElWinColor_ = function createElWinColor_() {\r\n    var legendId = \"captions-window-\" + this.id_;\r\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\r\n  }\r\n  /**\r\n   * Create color elements for the component\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElColors_ = function createElColors_() {\r\n    return createEl('div', {\r\n      className: 'vjs-track-settings-colors',\r\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\r\n    });\r\n  }\r\n  /**\r\n   * Create font elements for the component\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElFont_ = function createElFont_() {\r\n    return createEl('div', {\r\n      className: 'vjs-track-settings-font',\r\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\r\n    });\r\n  }\r\n  /**\r\n   * Create controls for the component\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.createElControls_ = function createElControls_() {\r\n    var defaultsDescription = this.localize('restore all settings to the default values');\r\n    return createEl('div', {\r\n      className: 'vjs-track-settings-controls',\r\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\r\n    });\r\n  };\r\n\r\n  _proto.content = function content() {\r\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\r\n  };\r\n\r\n  _proto.label = function label() {\r\n    return this.localize('Caption Settings Dialog');\r\n  };\r\n\r\n  _proto.description = function description() {\r\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\r\n  };\r\n\r\n  _proto.buildCSSClass = function buildCSSClass() {\r\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\r\n  }\r\n  /**\r\n   * Gets an object of text track settings (or null).\r\n   *\r\n   * @return {Object}\r\n   *         An object with config values parsed from the DOM or localStorage.\r\n   */\r\n  ;\r\n\r\n  _proto.getValues = function getValues() {\r\n    var _this3 = this;\r\n\r\n    return reduce(selectConfigs, function (accum, config, key) {\r\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\r\n\r\n      if (value !== undefined) {\r\n        accum[key] = value;\r\n      }\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n  /**\r\n   * Sets text track settings from an object of values.\r\n   *\r\n   * @param {Object} values\r\n   *        An object with config values parsed from the DOM or localStorage.\r\n   */\r\n  ;\r\n\r\n  _proto.setValues = function setValues(values) {\r\n    var _this4 = this;\r\n\r\n    each(selectConfigs, function (config, key) {\r\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\r\n    });\r\n  }\r\n  /**\r\n   * Sets all `<select>` elements to their default values.\r\n   */\r\n  ;\r\n\r\n  _proto.setDefaults = function setDefaults() {\r\n    var _this5 = this;\r\n\r\n    each(selectConfigs, function (config) {\r\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\r\n      _this5.$(config.selector).selectedIndex = index;\r\n    });\r\n  }\r\n  /**\r\n   * Restore texttrack settings from localStorage\r\n   */\r\n  ;\r\n\r\n  _proto.restoreSettings = function restoreSettings() {\r\n    var values;\r\n\r\n    try {\r\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\r\n    } catch (err) {\r\n      log$1.warn(err);\r\n    }\r\n\r\n    if (values) {\r\n      this.setValues(values);\r\n    }\r\n  }\r\n  /**\r\n   * Save text track settings to localStorage\r\n   */\r\n  ;\r\n\r\n  _proto.saveSettings = function saveSettings() {\r\n    if (!this.options_.persistTextTrackSettings) {\r\n      return;\r\n    }\r\n\r\n    var values = this.getValues();\r\n\r\n    try {\r\n      if (Object.keys(values).length) {\r\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\r\n      } else {\r\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\r\n      }\r\n    } catch (err) {\r\n      log$1.warn(err);\r\n    }\r\n  }\r\n  /**\r\n   * Update display of text track settings\r\n   */\r\n  ;\r\n\r\n  _proto.updateDisplay = function updateDisplay() {\r\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\r\n\r\n    if (ttDisplay) {\r\n      ttDisplay.updateDisplay();\r\n    }\r\n  }\r\n  /**\r\n   * conditionally blur the element and refocus the captions button\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.conditionalBlur_ = function conditionalBlur_() {\r\n    this.previouslyActiveEl_ = null;\r\n    var cb = this.player_.controlBar;\r\n    var subsCapsBtn = cb && cb.subsCapsButton;\r\n    var ccBtn = cb && cb.captionsButton;\r\n\r\n    if (subsCapsBtn) {\r\n      subsCapsBtn.focus();\r\n    } else if (ccBtn) {\r\n      ccBtn.focus();\r\n    }\r\n  };\r\n\r\n  return TextTrackSettings;\r\n}(ModalDialog);\r\n\r\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\r\n\r\n/**\r\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\r\n *\r\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\r\n *\r\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\r\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\r\n * @example <caption>How to disable the resize manager</caption>\r\n * const player = videojs('#vid', {\r\n *   resizeManager: false\r\n * });\r\n *\r\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ResizeManager = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(ResizeManager, _Component);\r\n\r\n  /**\r\n   * Create the ResizeManager.\r\n   *\r\n   * @param {Object} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of ResizeManager options.\r\n   *\r\n   * @param {Object} [options.ResizeObserver]\r\n   *        A polyfill for ResizeObserver can be passed in here.\r\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\r\n   */\r\n  function ResizeManager(player, options) {\r\n    var _this;\r\n\r\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\r\n\r\n    if (options.ResizeObserver === null) {\r\n      RESIZE_OBSERVER_AVAILABLE = false;\r\n    } // Only create an element when ResizeObserver isn't available\r\n\r\n\r\n    var options_ = mergeOptions$3({\r\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\r\n      reportTouchActivity: false\r\n    }, options);\r\n    _this = _Component.call(this, player, options_) || this;\r\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\r\n    _this.loadListener_ = null;\r\n    _this.resizeObserver_ = null;\r\n    _this.debouncedHandler_ = debounce(function () {\r\n      _this.resizeHandler();\r\n    }, 100, false, _assertThisInitialized(_this));\r\n\r\n    if (RESIZE_OBSERVER_AVAILABLE) {\r\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\r\n\r\n      _this.resizeObserver_.observe(player.el());\r\n    } else {\r\n      _this.loadListener_ = function () {\r\n        if (!_this.el_ || !_this.el_.contentWindow) {\r\n          return;\r\n        }\r\n\r\n        var debouncedHandler_ = _this.debouncedHandler_;\r\n\r\n        var unloadListener_ = _this.unloadListener_ = function () {\r\n          off(this, 'resize', debouncedHandler_);\r\n          off(this, 'unload', unloadListener_);\r\n          unloadListener_ = null;\r\n        }; // safari and edge can unload the iframe before resizemanager dispose\r\n        // we have to dispose of event handlers correctly before that happens\r\n\r\n\r\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\r\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\r\n      };\r\n\r\n      _this.one('load', _this.loadListener_);\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = ResizeManager.prototype;\r\n\r\n  _proto.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'iframe', {\r\n      className: 'vjs-resize-manager',\r\n      tabIndex: -1,\r\n      title: this.localize('No content')\r\n    }, {\r\n      'aria-hidden': 'true'\r\n    });\r\n  }\r\n  /**\r\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\r\n   *\r\n   * @fires Player#playerresize\r\n   */\r\n  ;\r\n\r\n  _proto.resizeHandler = function resizeHandler() {\r\n    /**\r\n     * Called when the player size has changed\r\n     *\r\n     * @event Player#playerresize\r\n     * @type {EventTarget~Event}\r\n     */\r\n    // make sure player is still around to trigger\r\n    // prevents this from causing an error after dispose\r\n    if (!this.player_ || !this.player_.trigger) {\r\n      return;\r\n    }\r\n\r\n    this.player_.trigger('playerresize');\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    if (this.debouncedHandler_) {\r\n      this.debouncedHandler_.cancel();\r\n    }\r\n\r\n    if (this.resizeObserver_) {\r\n      if (this.player_.el()) {\r\n        this.resizeObserver_.unobserve(this.player_.el());\r\n      }\r\n\r\n      this.resizeObserver_.disconnect();\r\n    }\r\n\r\n    if (this.loadListener_) {\r\n      this.off('load', this.loadListener_);\r\n    }\r\n\r\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\r\n      this.unloadListener_.call(this.el_.contentWindow);\r\n    }\r\n\r\n    this.ResizeObserver = null;\r\n    this.resizeObserver = null;\r\n    this.debouncedHandler_ = null;\r\n    this.loadListener_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  return ResizeManager;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('ResizeManager', ResizeManager);\r\n\r\nvar defaults = {\r\n  trackingThreshold: 20,\r\n  liveTolerance: 15\r\n};\r\n/*\r\n  track when we are at the live edge, and other helpers for live playback */\r\n\r\n/**\r\n * A class for checking live current time and determining when the player\r\n * is at or behind the live edge.\r\n */\r\n\r\nvar LiveTracker = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(LiveTracker, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {number} [options.trackingThreshold=20]\r\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\r\n   *        media needs to have before the liveui will be shown.\r\n   *\r\n   * @param {number} [options.liveTolerance=15]\r\n   *        Number of seconds behind live that we have to be\r\n   *        before we will be considered non-live. Note that this will only\r\n   *        be used when playing at the live edge. This allows large seekable end\r\n   *        changes to not effect wether we are live or not.\r\n   */\r\n  function LiveTracker(player, options) {\r\n    var _this;\r\n\r\n    // LiveTracker does not need an element\r\n    var options_ = mergeOptions$3(defaults, options, {\r\n      createEl: false\r\n    });\r\n    _this = _Component.call(this, player, options_) || this;\r\n\r\n    _this.handleVisibilityChange_ = function (e) {\r\n      return _this.handleVisibilityChange(e);\r\n    };\r\n\r\n    _this.trackLiveHandler_ = function () {\r\n      return _this.trackLive_();\r\n    };\r\n\r\n    _this.handlePlay_ = function (e) {\r\n      return _this.handlePlay(e);\r\n    };\r\n\r\n    _this.handleFirstTimeupdate_ = function (e) {\r\n      return _this.handleFirstTimeupdate(e);\r\n    };\r\n\r\n    _this.handleSeeked_ = function (e) {\r\n      return _this.handleSeeked(e);\r\n    };\r\n\r\n    _this.seekToLiveEdge_ = function (e) {\r\n      return _this.seekToLiveEdge(e);\r\n    };\r\n\r\n    _this.reset_();\r\n\r\n    _this.on(_this.player_, 'durationchange', function (e) {\r\n      return _this.handleDurationchange(e);\r\n    }); // we should try to toggle tracking on canplay as native playback engines, like Safari\r\n    // may not have the proper values for things like seekableEnd until then\r\n\r\n\r\n    _this.on(_this.player_, 'canplay', function () {\r\n      return _this.toggleTracking();\r\n    }); // we don't need to track live playback if the document is hidden,\r\n    // also, tracking when the document is hidden can\r\n    // cause the CPU to spike and eventually crash the page on IE11.\r\n\r\n\r\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\r\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * toggle tracking based on document visiblility\r\n   */\r\n\r\n\r\n  var _proto = LiveTracker.prototype;\r\n\r\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\r\n    if (this.player_.duration() !== Infinity) {\r\n      return;\r\n    }\r\n\r\n    if (document.hidden) {\r\n      this.stopTracking();\r\n    } else {\r\n      this.startTracking();\r\n    }\r\n  }\r\n  /**\r\n   * all the functionality for tracking when seek end changes\r\n   * and for tracking how far past seek end we should be\r\n   */\r\n  ;\r\n\r\n  _proto.trackLive_ = function trackLive_() {\r\n    var seekable = this.player_.seekable(); // skip undefined seekable\r\n\r\n    if (!seekable || !seekable.length) {\r\n      return;\r\n    }\r\n\r\n    var newTime = Number(window$1.performance.now().toFixed(4));\r\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\r\n    this.lastTime_ = newTime;\r\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\r\n    var liveCurrentTime = this.liveCurrentTime();\r\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\r\n    // 1. the player is paused\r\n    // 2. the user seeked to a location 2 seconds away from live\r\n    // 3. the difference between live and current time is greater\r\n    //    liveTolerance which defaults to 15s\r\n\r\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\r\n    // 1. until we have not seen a timeupdate yet\r\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\r\n\r\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\r\n      isBehind = false;\r\n    }\r\n\r\n    if (isBehind !== this.behindLiveEdge_) {\r\n      this.behindLiveEdge_ = isBehind;\r\n      this.trigger('liveedgechange');\r\n    }\r\n  }\r\n  /**\r\n   * handle a durationchange event on the player\r\n   * and start/stop tracking accordingly.\r\n   */\r\n  ;\r\n\r\n  _proto.handleDurationchange = function handleDurationchange() {\r\n    this.toggleTracking();\r\n  }\r\n  /**\r\n   * start/stop tracking\r\n   */\r\n  ;\r\n\r\n  _proto.toggleTracking = function toggleTracking() {\r\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\r\n      if (this.player_.options_.liveui) {\r\n        this.player_.addClass('vjs-liveui');\r\n      }\r\n\r\n      this.startTracking();\r\n    } else {\r\n      this.player_.removeClass('vjs-liveui');\r\n      this.stopTracking();\r\n    }\r\n  }\r\n  /**\r\n   * start tracking live playback\r\n   */\r\n  ;\r\n\r\n  _proto.startTracking = function startTracking() {\r\n    if (this.isTracking()) {\r\n      return;\r\n    } // If we haven't seen a timeupdate, we need to check whether playback\r\n    // began before this component started tracking. This can happen commonly\r\n    // when using autoplay.\r\n\r\n\r\n    if (!this.timeupdateSeen_) {\r\n      this.timeupdateSeen_ = this.player_.hasStarted();\r\n    }\r\n\r\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\r\n    this.trackLive_();\r\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\r\n\r\n    if (!this.timeupdateSeen_) {\r\n      this.one(this.player_, 'play', this.handlePlay_);\r\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\r\n    } else {\r\n      this.on(this.player_, 'seeked', this.handleSeeked_);\r\n    }\r\n  }\r\n  /**\r\n   * handle the first timeupdate on the player if it wasn't already playing\r\n   * when live tracker started tracking.\r\n   */\r\n  ;\r\n\r\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\r\n    this.timeupdateSeen_ = true;\r\n    this.on(this.player_, 'seeked', this.handleSeeked_);\r\n  }\r\n  /**\r\n   * Keep track of what time a seek starts, and listen for seeked\r\n   * to find where a seek ends.\r\n   */\r\n  ;\r\n\r\n  _proto.handleSeeked = function handleSeeked() {\r\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\r\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\r\n    this.nextSeekedFromUser_ = false;\r\n    this.trackLive_();\r\n  }\r\n  /**\r\n   * handle the first play on the player, and make sure that we seek\r\n   * right to the live edge.\r\n   */\r\n  ;\r\n\r\n  _proto.handlePlay = function handlePlay() {\r\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\r\n  }\r\n  /**\r\n   * Stop tracking, and set all internal variables to\r\n   * their initial value.\r\n   */\r\n  ;\r\n\r\n  _proto.reset_ = function reset_() {\r\n    this.lastTime_ = -1;\r\n    this.pastSeekEnd_ = 0;\r\n    this.lastSeekEnd_ = -1;\r\n    this.behindLiveEdge_ = true;\r\n    this.timeupdateSeen_ = false;\r\n    this.seekedBehindLive_ = false;\r\n    this.nextSeekedFromUser_ = false;\r\n    this.clearInterval(this.trackingInterval_);\r\n    this.trackingInterval_ = null;\r\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\r\n    this.off(this.player_, 'seeked', this.handleSeeked_);\r\n    this.off(this.player_, 'play', this.handlePlay_);\r\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\r\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\r\n  }\r\n  /**\r\n   * The next seeked event is from the user. Meaning that any seek\r\n   * > 2s behind live will be considered behind live for real and\r\n   * liveTolerance will be ignored.\r\n   */\r\n  ;\r\n\r\n  _proto.nextSeekedFromUser = function nextSeekedFromUser() {\r\n    this.nextSeekedFromUser_ = true;\r\n  }\r\n  /**\r\n   * stop tracking live playback\r\n   */\r\n  ;\r\n\r\n  _proto.stopTracking = function stopTracking() {\r\n    if (!this.isTracking()) {\r\n      return;\r\n    }\r\n\r\n    this.reset_();\r\n    this.trigger('liveedgechange');\r\n  }\r\n  /**\r\n   * A helper to get the player seekable end\r\n   * so that we don't have to null check everywhere\r\n   *\r\n   * @return {number}\r\n   *         The furthest seekable end or Infinity.\r\n   */\r\n  ;\r\n\r\n  _proto.seekableEnd = function seekableEnd() {\r\n    var seekable = this.player_.seekable();\r\n    var seekableEnds = [];\r\n    var i = seekable ? seekable.length : 0;\r\n\r\n    while (i--) {\r\n      seekableEnds.push(seekable.end(i));\r\n    } // grab the furthest seekable end after sorting, or if there are none\r\n    // default to Infinity\r\n\r\n\r\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\r\n  }\r\n  /**\r\n   * A helper to get the player seekable start\r\n   * so that we don't have to null check everywhere\r\n   *\r\n   * @return {number}\r\n   *         The earliest seekable start or 0.\r\n   */\r\n  ;\r\n\r\n  _proto.seekableStart = function seekableStart() {\r\n    var seekable = this.player_.seekable();\r\n    var seekableStarts = [];\r\n    var i = seekable ? seekable.length : 0;\r\n\r\n    while (i--) {\r\n      seekableStarts.push(seekable.start(i));\r\n    } // grab the first seekable start after sorting, or if there are none\r\n    // default to 0\r\n\r\n\r\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\r\n  }\r\n  /**\r\n   * Get the live time window aka\r\n   * the amount of time between seekable start and\r\n   * live current time.\r\n   *\r\n   * @return {number}\r\n   *         The amount of seconds that are seekable in\r\n   *         the live video.\r\n   */\r\n  ;\r\n\r\n  _proto.liveWindow = function liveWindow() {\r\n    var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\r\n\r\n    if (liveCurrentTime === Infinity) {\r\n      return 0;\r\n    }\r\n\r\n    return liveCurrentTime - this.seekableStart();\r\n  }\r\n  /**\r\n   * Determines if the player is live, only checks if this component\r\n   * is tracking live playback or not\r\n   *\r\n   * @return {boolean}\r\n   *         Wether liveTracker is tracking\r\n   */\r\n  ;\r\n\r\n  _proto.isLive = function isLive() {\r\n    return this.isTracking();\r\n  }\r\n  /**\r\n   * Determines if currentTime is at the live edge and won't fall behind\r\n   * on each seekableendchange\r\n   *\r\n   * @return {boolean}\r\n   *         Wether playback is at the live edge\r\n   */\r\n  ;\r\n\r\n  _proto.atLiveEdge = function atLiveEdge() {\r\n    return !this.behindLiveEdge();\r\n  }\r\n  /**\r\n   * get what we expect the live current time to be\r\n   *\r\n   * @return {number}\r\n   *         The expected live current time\r\n   */\r\n  ;\r\n\r\n  _proto.liveCurrentTime = function liveCurrentTime() {\r\n    return this.pastSeekEnd() + this.seekableEnd();\r\n  }\r\n  /**\r\n   * The number of seconds that have occured after seekable end\r\n   * changed. This will be reset to 0 once seekable end changes.\r\n   *\r\n   * @return {number}\r\n   *         Seconds past the current seekable end\r\n   */\r\n  ;\r\n\r\n  _proto.pastSeekEnd = function pastSeekEnd() {\r\n    var seekableEnd = this.seekableEnd();\r\n\r\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\r\n      this.pastSeekEnd_ = 0;\r\n    }\r\n\r\n    this.lastSeekEnd_ = seekableEnd;\r\n    return this.pastSeekEnd_;\r\n  }\r\n  /**\r\n   * If we are currently behind the live edge, aka currentTime will be\r\n   * behind on a seekableendchange\r\n   *\r\n   * @return {boolean}\r\n   *         If we are behind the live edge\r\n   */\r\n  ;\r\n\r\n  _proto.behindLiveEdge = function behindLiveEdge() {\r\n    return this.behindLiveEdge_;\r\n  }\r\n  /**\r\n   * Wether live tracker is currently tracking or not.\r\n   */\r\n  ;\r\n\r\n  _proto.isTracking = function isTracking() {\r\n    return typeof this.trackingInterval_ === 'number';\r\n  }\r\n  /**\r\n   * Seek to the live edge if we are behind the live edge\r\n   */\r\n  ;\r\n\r\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\r\n    this.seekedBehindLive_ = false;\r\n\r\n    if (this.atLiveEdge()) {\r\n      return;\r\n    }\r\n\r\n    this.nextSeekedFromUser_ = false;\r\n    this.player_.currentTime(this.liveCurrentTime());\r\n  }\r\n  /**\r\n   * Dispose of liveTracker\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.off(document, 'visibilitychange', this.handleVisibilityChange_);\r\n    this.stopTracking();\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  return LiveTracker;\r\n}(Component$1);\r\n\r\nComponent$1.registerComponent('LiveTracker', LiveTracker);\r\n\r\n/**\r\n * This function is used to fire a sourceset when there is something\r\n * similar to `mediaEl.load()` being called. It will try to find the source via\r\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\r\n * with the source that was found or empty string if we cannot know. If it cannot\r\n * find a source then `sourceset` will not be fired.\r\n *\r\n * @param {Html5} tech\r\n *        The tech object that sourceset was setup on\r\n *\r\n * @return {boolean}\r\n *         returns false if the sourceset was not fired and true otherwise.\r\n */\r\n\r\nvar sourcesetLoad = function sourcesetLoad(tech) {\r\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\r\n\r\n  if (el.hasAttribute('src')) {\r\n    tech.triggerSourceset(el.src);\r\n    return true;\r\n  }\r\n  /**\r\n   * Since there isn't a src property on the media element, source elements will be used for\r\n   * implementing the source selection algorithm. This happens asynchronously and\r\n   * for most cases were there is more than one source we cannot tell what source will\r\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\r\n   * going to do that. There are three special cases that we do handle here though:\r\n   *\r\n   * 1. If there are no sources, do not fire `sourceset`.\r\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\r\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\r\n   *    That will be our src.\r\n   */\r\n\r\n\r\n  var sources = tech.$$('source');\r\n  var srcUrls = [];\r\n  var src = ''; // if there are no sources, do not fire sourceset\r\n\r\n  if (!sources.length) {\r\n    return false;\r\n  } // only count valid/non-duplicate source elements\r\n\r\n\r\n  for (var i = 0; i < sources.length; i++) {\r\n    var url = sources[i].src;\r\n\r\n    if (url && srcUrls.indexOf(url) === -1) {\r\n      srcUrls.push(url);\r\n    }\r\n  } // there were no valid sources\r\n\r\n\r\n  if (!srcUrls.length) {\r\n    return false;\r\n  } // there is only one valid source element url\r\n  // use that\r\n\r\n\r\n  if (srcUrls.length === 1) {\r\n    src = srcUrls[0];\r\n  }\r\n\r\n  tech.triggerSourceset(src);\r\n  return true;\r\n};\r\n/**\r\n * our implementation of an `innerHTML` descriptor for browsers\r\n * that do not have one.\r\n */\r\n\r\n\r\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\r\n  get: function get() {\r\n    return this.cloneNode(true).innerHTML;\r\n  },\r\n  set: function set(v) {\r\n    // make a dummy node to use innerHTML on\r\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\r\n\r\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\r\n\r\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\r\n    // to the document fragment\r\n\r\n    while (dummy.childNodes.length) {\r\n      docFrag.appendChild(dummy.childNodes[0]);\r\n    } // remove content\r\n\r\n\r\n    this.innerText = ''; // now we add all of that html in one by appending the\r\n    // document fragment. This is how innerHTML does it.\r\n\r\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\r\n\r\n    return this.innerHTML;\r\n  }\r\n});\r\n/**\r\n * Get a property descriptor given a list of priorities and the\r\n * property to get.\r\n */\r\n\r\nvar getDescriptor = function getDescriptor(priority, prop) {\r\n  var descriptor = {};\r\n\r\n  for (var i = 0; i < priority.length; i++) {\r\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\r\n\r\n    if (descriptor && descriptor.set && descriptor.get) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  descriptor.enumerable = true;\r\n  descriptor.configurable = true;\r\n  return descriptor;\r\n};\r\n\r\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\r\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\r\n};\r\n/**\r\n * Patches browser internal functions so that we can tell synchronously\r\n * if a `<source>` was appended to the media element. For some reason this\r\n * causes a `sourceset` if the the media element is ready and has no source.\r\n * This happens when:\r\n * - The page has just loaded and the media element does not have a source.\r\n * - The media element was emptied of all sources, then `load()` was called.\r\n *\r\n * It does this by patching the following functions/properties when they are supported:\r\n *\r\n * - `append()` - can be used to add a `<source>` element to the media element\r\n * - `appendChild()` - can be used to add a `<source>` element to the media element\r\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\r\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\r\n *\r\n * @param {Html5} tech\r\n *        The tech object that sourceset is being setup on.\r\n */\r\n\r\n\r\nvar firstSourceWatch = function firstSourceWatch(tech) {\r\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\r\n\r\n  if (el.resetSourceWatch_) {\r\n    return;\r\n  }\r\n\r\n  var old = {};\r\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\r\n\r\n  var appendWrapper = function appendWrapper(appendFn) {\r\n    return function () {\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      var retval = appendFn.apply(el, args);\r\n      sourcesetLoad(tech);\r\n      return retval;\r\n    };\r\n  };\r\n\r\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\r\n    if (!el[k]) {\r\n      return;\r\n    } // store the old function\r\n\r\n\r\n    old[k] = el[k]; // call the old function with a sourceset if a source\r\n    // was loaded\r\n\r\n    el[k] = appendWrapper(old[k]);\r\n  });\r\n  Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\r\n    set: appendWrapper(innerDescriptor.set)\r\n  }));\r\n\r\n  el.resetSourceWatch_ = function () {\r\n    el.resetSourceWatch_ = null;\r\n    Object.keys(old).forEach(function (k) {\r\n      el[k] = old[k];\r\n    });\r\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\r\n  }; // on the first sourceset, we need to revert our changes\r\n\r\n\r\n  tech.one('sourceset', el.resetSourceWatch_);\r\n};\r\n/**\r\n * our implementation of a `src` descriptor for browsers\r\n * that do not have one.\r\n */\r\n\r\n\r\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\r\n  get: function get() {\r\n    if (this.hasAttribute('src')) {\r\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\r\n    }\r\n\r\n    return '';\r\n  },\r\n  set: function set(v) {\r\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\r\n    return v;\r\n  }\r\n});\r\n\r\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\r\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\r\n};\r\n/**\r\n * setup `sourceset` handling on the `Html5` tech. This function\r\n * patches the following element properties/functions:\r\n *\r\n * - `src` - to determine when `src` is set\r\n * - `setAttribute()` - to determine when `src` is set\r\n * - `load()` - this re-triggers the source selection algorithm, and can\r\n *              cause a sourceset.\r\n *\r\n * If there is no source when we are adding `sourceset` support or during a `load()`\r\n * we also patch the functions listed in `firstSourceWatch`.\r\n *\r\n * @param {Html5} tech\r\n *        The tech to patch\r\n */\r\n\r\n\r\nvar setupSourceset = function setupSourceset(tech) {\r\n  if (!tech.featuresSourceset) {\r\n    return;\r\n  }\r\n\r\n  var el = tech.el(); // make sure sourceset isn't setup twice.\r\n\r\n  if (el.resetSourceset_) {\r\n    return;\r\n  }\r\n\r\n  var srcDescriptor = getSrcDescriptor(tech);\r\n  var oldSetAttribute = el.setAttribute;\r\n  var oldLoad = el.load;\r\n  Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\r\n    set: function set(v) {\r\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\r\n\r\n      tech.triggerSourceset(el.src);\r\n      return retval;\r\n    }\r\n  }));\r\n\r\n  el.setAttribute = function (n, v) {\r\n    var retval = oldSetAttribute.call(el, n, v);\r\n\r\n    if (/src/i.test(n)) {\r\n      tech.triggerSourceset(el.src);\r\n    }\r\n\r\n    return retval;\r\n  };\r\n\r\n  el.load = function () {\r\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\r\n    // sourceset on. We have to watch for a source append\r\n    // as that can trigger a `sourceset` when the media element\r\n    // has no source\r\n\r\n    if (!sourcesetLoad(tech)) {\r\n      tech.triggerSourceset('');\r\n      firstSourceWatch(tech);\r\n    }\r\n\r\n    return retval;\r\n  };\r\n\r\n  if (el.currentSrc) {\r\n    tech.triggerSourceset(el.currentSrc);\r\n  } else if (!sourcesetLoad(tech)) {\r\n    firstSourceWatch(tech);\r\n  }\r\n\r\n  el.resetSourceset_ = function () {\r\n    el.resetSourceset_ = null;\r\n    el.load = oldLoad;\r\n    el.setAttribute = oldSetAttribute;\r\n    Object.defineProperty(el, 'src', srcDescriptor);\r\n\r\n    if (el.resetSourceWatch_) {\r\n      el.resetSourceWatch_();\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Object.defineProperty but \"lazy\", which means that the value is only set after\r\n * it retrieved the first time, rather than being set right away.\r\n *\r\n * @param {Object} obj the object to set the property on\r\n * @param {string} key the key for the property to set\r\n * @param {Function} getValue the function used to get the value when it is needed.\r\n * @param {boolean} setter wether a setter shoould be allowed or not\r\n */\r\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\r\n  if (setter === void 0) {\r\n    setter = true;\r\n  }\r\n\r\n  var set = function set(value) {\r\n    return Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      writable: true\r\n    });\r\n  };\r\n\r\n  var options = {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get: function get() {\r\n      var value = getValue();\r\n      set(value);\r\n      return value;\r\n    }\r\n  };\r\n\r\n  if (setter) {\r\n    options.set = set;\r\n  }\r\n\r\n  return Object.defineProperty(obj, key, options);\r\n};\r\n\r\n/**\r\n * HTML5 Media Controller - Wrapper for HTML5 Media API\r\n *\r\n * @mixes Tech~SourceHandlerAdditions\r\n * @extends Tech\r\n */\r\n\r\nvar Html5 = /*#__PURE__*/function (_Tech) {\r\n  _inheritsLoose(Html5, _Tech);\r\n\r\n  /**\r\n  * Create an instance of this Tech.\r\n  *\r\n  * @param {Object} [options]\r\n  *        The key/value store of player options.\r\n  *\r\n  * @param {Component~ReadyCallback} ready\r\n  *        Callback function to call when the `HTML5` Tech is ready.\r\n  */\r\n  function Html5(options, ready) {\r\n    var _this;\r\n\r\n    _this = _Tech.call(this, options, ready) || this;\r\n    var source = options.source;\r\n    var crossoriginTracks = false;\r\n    _this.featuresVideoFrameCallback = _this.featuresVideoFrameCallback && _this.el_.tagName === 'VIDEO'; // Set the source if one is provided\r\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\r\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\r\n    // anyway so the error gets fired.\r\n\r\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\r\n      _this.setSource(source);\r\n    } else {\r\n      _this.handleLateInit_(_this.el_);\r\n    } // setup sourceset after late sourceset/init\r\n\r\n\r\n    if (options.enableSourceset) {\r\n      _this.setupSourcesetHandling_();\r\n    }\r\n\r\n    _this.isScrubbing_ = false;\r\n\r\n    if (_this.el_.hasChildNodes()) {\r\n      var nodes = _this.el_.childNodes;\r\n      var nodesLength = nodes.length;\r\n      var removeNodes = [];\r\n\r\n      while (nodesLength--) {\r\n        var node = nodes[nodesLength];\r\n        var nodeName = node.nodeName.toLowerCase();\r\n\r\n        if (nodeName === 'track') {\r\n          if (!_this.featuresNativeTextTracks) {\r\n            // Empty video tag tracks so the built-in player doesn't use them also.\r\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\r\n            // so we'll need to turn off any default tracks if we're manually doing\r\n            // captions and subtitles. videoElement.textTracks\r\n            removeNodes.push(node);\r\n          } else {\r\n            // store HTMLTrackElement and TextTrack to remote list\r\n            _this.remoteTextTrackEls().addTrackElement_(node);\r\n\r\n            _this.remoteTextTracks().addTrack(node.track);\r\n\r\n            _this.textTracks().addTrack(node.track);\r\n\r\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\r\n              crossoriginTracks = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < removeNodes.length; i++) {\r\n        _this.el_.removeChild(removeNodes[i]);\r\n      }\r\n    }\r\n\r\n    _this.proxyNativeTracks_();\r\n\r\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\r\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\r\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\r\n\r\n\r\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\r\n    // Our goal should be to get the custom controls on mobile solid everywhere\r\n    // so we can remove this all together. Right now this will block custom\r\n    // controls on touch enabled laptops like the Chrome Pixel\r\n\r\n\r\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\r\n      _this.setControls(true);\r\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\r\n    // into a `fullscreenchange` event\r\n\r\n\r\n    _this.proxyWebkitFullscreen_();\r\n\r\n    _this.triggerReady();\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Dispose of `HTML5` media element and remove all tracks.\r\n   */\r\n\r\n\r\n  var _proto = Html5.prototype;\r\n\r\n  _proto.dispose = function dispose() {\r\n    if (this.el_ && this.el_.resetSourceset_) {\r\n      this.el_.resetSourceset_();\r\n    }\r\n\r\n    Html5.disposeMediaElement(this.el_);\r\n    this.options_ = null; // tech will handle clearing of the emulated track list\r\n\r\n    _Tech.prototype.dispose.call(this);\r\n  }\r\n  /**\r\n   * Modify the media element so that we can detect when\r\n   * the source is changed. Fires `sourceset` just after the source has changed\r\n   */\r\n  ;\r\n\r\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\r\n    setupSourceset(this);\r\n  }\r\n  /**\r\n   * When a captions track is enabled in the iOS Safari native player, all other\r\n   * tracks are disabled (including metadata tracks), which nulls all of their\r\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\r\n   * state in those cases so that cue points are not needlessly lost.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\r\n    var textTracks = this.textTracks();\r\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\r\n\r\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\r\n      metadataTracksPreFullscreenState = [];\r\n\r\n      for (var i = 0; i < textTracks.length; i++) {\r\n        var track = textTracks[i];\r\n\r\n        if (track.kind === 'metadata') {\r\n          metadataTracksPreFullscreenState.push({\r\n            track: track,\r\n            storedMode: track.mode\r\n          });\r\n        }\r\n      }\r\n    }; // snapshot each metadata track's initial state, and update the snapshot\r\n    // each time there is a track 'change' event\r\n\r\n\r\n    takeMetadataTrackSnapshot();\r\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\r\n    this.on('dispose', function () {\r\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\r\n    });\r\n\r\n    var restoreTrackMode = function restoreTrackMode() {\r\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\r\n        var storedTrack = metadataTracksPreFullscreenState[i];\r\n\r\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\r\n          storedTrack.track.mode = storedTrack.storedMode;\r\n        }\r\n      } // we only want this handler to be executed on the first 'change' event\r\n\r\n\r\n      textTracks.removeEventListener('change', restoreTrackMode);\r\n    }; // when we enter fullscreen playback, stop updating the snapshot and\r\n    // restore all track modes to their pre-fullscreen state\r\n\r\n\r\n    this.on('webkitbeginfullscreen', function () {\r\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\r\n\r\n      textTracks.removeEventListener('change', restoreTrackMode);\r\n      textTracks.addEventListener('change', restoreTrackMode);\r\n    }); // start updating the snapshot again after leaving fullscreen\r\n\r\n    this.on('webkitendfullscreen', function () {\r\n      // remove the listener before adding it just in case it wasn't previously removed\r\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\r\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\r\n\r\n      textTracks.removeEventListener('change', restoreTrackMode);\r\n    });\r\n  }\r\n  /**\r\n   * Attempt to force override of tracks for the given type\r\n   *\r\n   * @param {string} type - Track type to override, possible values include 'Audio',\r\n   * 'Video', and 'Text'.\r\n   * @param {boolean} override - If set to true native audio/video will be overridden,\r\n   * otherwise native audio/video will potentially be used.\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.overrideNative_ = function overrideNative_(type, override) {\r\n    var _this2 = this;\r\n\r\n    // If there is no behavioral change don't add/remove listeners\r\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\r\n      return;\r\n    }\r\n\r\n    var lowerCaseType = type.toLowerCase();\r\n\r\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\r\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\r\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\r\n\r\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\r\n      });\r\n    }\r\n\r\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\r\n    this[lowerCaseType + \"TracksListeners_\"] = null;\r\n    this.proxyNativeTracksForType_(lowerCaseType);\r\n  }\r\n  /**\r\n   * Attempt to force override of native audio tracks.\r\n   *\r\n   * @param {boolean} override - If set to true native audio will be overridden,\r\n   * otherwise native audio will potentially be used.\r\n   */\r\n  ;\r\n\r\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\r\n    this.overrideNative_('Audio', override);\r\n  }\r\n  /**\r\n   * Attempt to force override of native video tracks.\r\n   *\r\n   * @param {boolean} override - If set to true native video will be overridden,\r\n   * otherwise native video will potentially be used.\r\n   */\r\n  ;\r\n\r\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\r\n    this.overrideNative_('Video', override);\r\n  }\r\n  /**\r\n   * Proxy native track list events for the given type to our track\r\n   * lists if the browser we are playing in supports that type of track list.\r\n   *\r\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\r\n    var _this3 = this;\r\n\r\n    var props = NORMAL[name];\r\n    var elTracks = this.el()[props.getterName];\r\n    var techTracks = this[props.getterName]();\r\n\r\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\r\n      return;\r\n    }\r\n\r\n    var listeners = {\r\n      change: function change(e) {\r\n        var event = {\r\n          type: 'change',\r\n          target: techTracks,\r\n          currentTarget: techTracks,\r\n          srcElement: techTracks\r\n        };\r\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\r\n        // remote text track list. This can potentially cause a false positive\r\n        // if we were to get a change event on a non-remote track and\r\n        // we triggered the event on the remote text track list which doesn't\r\n        // contain that track. However, best practices mean looping through the\r\n        // list of tracks and searching for the appropriate mode value, so,\r\n        // this shouldn't pose an issue\r\n\r\n        if (name === 'text') {\r\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\r\n        }\r\n      },\r\n      addtrack: function addtrack(e) {\r\n        techTracks.addTrack(e.track);\r\n      },\r\n      removetrack: function removetrack(e) {\r\n        techTracks.removeTrack(e.track);\r\n      }\r\n    };\r\n\r\n    var removeOldTracks = function removeOldTracks() {\r\n      var removeTracks = [];\r\n\r\n      for (var i = 0; i < techTracks.length; i++) {\r\n        var found = false;\r\n\r\n        for (var j = 0; j < elTracks.length; j++) {\r\n          if (elTracks[j] === techTracks[i]) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!found) {\r\n          removeTracks.push(techTracks[i]);\r\n        }\r\n      }\r\n\r\n      while (removeTracks.length) {\r\n        techTracks.removeTrack(removeTracks.shift());\r\n      }\r\n    };\r\n\r\n    this[props.getterName + 'Listeners_'] = listeners;\r\n    Object.keys(listeners).forEach(function (eventName) {\r\n      var listener = listeners[eventName];\r\n      elTracks.addEventListener(eventName, listener);\r\n\r\n      _this3.on('dispose', function (e) {\r\n        return elTracks.removeEventListener(eventName, listener);\r\n      });\r\n    }); // Remove (native) tracks that are not used anymore\r\n\r\n    this.on('loadstart', removeOldTracks);\r\n    this.on('dispose', function (e) {\r\n      return _this3.off('loadstart', removeOldTracks);\r\n    });\r\n  }\r\n  /**\r\n   * Proxy all native track list events to our track lists if the browser we are playing\r\n   * in supports that type of track list.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\r\n    var _this4 = this;\r\n\r\n    NORMAL.names.forEach(function (name) {\r\n      _this4.proxyNativeTracksForType_(name);\r\n    });\r\n  }\r\n  /**\r\n   * Create the `Html5` Tech's DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\r\n    // On the iPhone video will break if you move the element,\r\n    // So we have to create a brand new element.\r\n    // If we ingested the player div, we do not need to move the media element.\r\n\r\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\r\n      // If the original tag is still there, clone and remove it.\r\n      if (el) {\r\n        var clone = el.cloneNode(true);\r\n\r\n        if (el.parentNode) {\r\n          el.parentNode.insertBefore(clone, el);\r\n        }\r\n\r\n        Html5.disposeMediaElement(el);\r\n        el = clone;\r\n      } else {\r\n        el = document.createElement('video'); // determine if native controls should be used\r\n\r\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\r\n        var attributes = mergeOptions$3({}, tagAttributes);\r\n\r\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\r\n          delete attributes.controls;\r\n        }\r\n\r\n        setAttributes(el, assign(attributes, {\r\n          id: this.options_.techId,\r\n          \"class\": 'vjs-tech'\r\n        }));\r\n      }\r\n\r\n      el.playerId = this.options_.playerId;\r\n    }\r\n\r\n    if (typeof this.options_.preload !== 'undefined') {\r\n      setAttribute(el, 'preload', this.options_.preload);\r\n    }\r\n\r\n    if (this.options_.disablePictureInPicture !== undefined) {\r\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\r\n    } // Update specific tag settings, in case they were overridden\r\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\r\n    // when iOS/Safari or other browsers attempt to autoplay.\r\n\r\n\r\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\r\n\r\n    for (var i = 0; i < settingsAttrs.length; i++) {\r\n      var attr = settingsAttrs[i];\r\n      var value = this.options_[attr];\r\n\r\n      if (typeof value !== 'undefined') {\r\n        if (value) {\r\n          setAttribute(el, attr, attr);\r\n        } else {\r\n          removeAttribute(el, attr);\r\n        }\r\n\r\n        el[attr] = value;\r\n      }\r\n    }\r\n\r\n    return el;\r\n  }\r\n  /**\r\n   * This will be triggered if the loadstart event has already fired, before videojs was\r\n   * ready. Two known examples of when this can happen are:\r\n   * 1. If we're loading the playback object after it has started loading\r\n   * 2. The media is already playing the (often with autoplay on) then\r\n   *\r\n   * This function will fire another loadstart so that videojs can catchup.\r\n   *\r\n   * @fires Tech#loadstart\r\n   *\r\n   * @return {undefined}\r\n   *         returns nothing.\r\n   */\r\n  ;\r\n\r\n  _proto.handleLateInit_ = function handleLateInit_(el) {\r\n    if (el.networkState === 0 || el.networkState === 3) {\r\n      // The video element hasn't started loading the source yet\r\n      // or didn't find a source\r\n      return;\r\n    }\r\n\r\n    if (el.readyState === 0) {\r\n      // NetworkState is set synchronously BUT loadstart is fired at the\r\n      // end of the current stack, usually before setInterval(fn, 0).\r\n      // So at this point we know loadstart may have already fired or is\r\n      // about to fire, and either way the player hasn't seen it yet.\r\n      // We don't want to fire loadstart prematurely here and cause a\r\n      // double loadstart so we'll wait and see if it happens between now\r\n      // and the next loop, and fire it if not.\r\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\r\n      // which could also happen between now and the next loop, so we'll\r\n      // watch for that also.\r\n      var loadstartFired = false;\r\n\r\n      var setLoadstartFired = function setLoadstartFired() {\r\n        loadstartFired = true;\r\n      };\r\n\r\n      this.on('loadstart', setLoadstartFired);\r\n\r\n      var triggerLoadstart = function triggerLoadstart() {\r\n        // We did miss the original loadstart. Make sure the player\r\n        // sees loadstart before loadedmetadata\r\n        if (!loadstartFired) {\r\n          this.trigger('loadstart');\r\n        }\r\n      };\r\n\r\n      this.on('loadedmetadata', triggerLoadstart);\r\n      this.ready(function () {\r\n        this.off('loadstart', setLoadstartFired);\r\n        this.off('loadedmetadata', triggerLoadstart);\r\n\r\n        if (!loadstartFired) {\r\n          // We did miss the original native loadstart. Fire it now.\r\n          this.trigger('loadstart');\r\n        }\r\n      });\r\n      return;\r\n    } // From here on we know that loadstart already fired and we missed it.\r\n    // The other readyState events aren't as much of a problem if we double\r\n    // them, so not going to go to as much trouble as loadstart to prevent\r\n    // that unless we find reason to.\r\n\r\n\r\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\r\n\r\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\r\n\r\n    if (el.readyState >= 2) {\r\n      eventsToTrigger.push('loadeddata');\r\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\r\n\r\n\r\n    if (el.readyState >= 3) {\r\n      eventsToTrigger.push('canplay');\r\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\r\n\r\n\r\n    if (el.readyState >= 4) {\r\n      eventsToTrigger.push('canplaythrough');\r\n    } // We still need to give the player time to add event listeners\r\n\r\n\r\n    this.ready(function () {\r\n      eventsToTrigger.forEach(function (type) {\r\n        this.trigger(type);\r\n      }, this);\r\n    });\r\n  }\r\n  /**\r\n   * Set whether we are scrubbing or not.\r\n   * This is used to decide whether we should use `fastSeek` or not.\r\n   * `fastSeek` is used to provide trick play on Safari browsers.\r\n   *\r\n   * @param {boolean} isScrubbing\r\n   *                  - true for we are currently scrubbing\r\n   *                  - false for we are no longer scrubbing\r\n   */\r\n  ;\r\n\r\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\r\n    this.isScrubbing_ = isScrubbing;\r\n  }\r\n  /**\r\n   * Get whether we are scrubbing or not.\r\n   *\r\n   * @return {boolean} isScrubbing\r\n   *                  - true for we are currently scrubbing\r\n   *                  - false for we are no longer scrubbing\r\n   */\r\n  ;\r\n\r\n  _proto.scrubbing = function scrubbing() {\r\n    return this.isScrubbing_;\r\n  }\r\n  /**\r\n   * Set current time for the `HTML5` tech.\r\n   *\r\n   * @param {number} seconds\r\n   *        Set the current time of the media to this.\r\n   */\r\n  ;\r\n\r\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\r\n    try {\r\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\r\n        this.el_.fastSeek(seconds);\r\n      } else {\r\n        this.el_.currentTime = seconds;\r\n      }\r\n    } catch (e) {\r\n      log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\r\n    }\r\n  }\r\n  /**\r\n   * Get the current duration of the HTML5 media element.\r\n   *\r\n   * @return {number}\r\n   *         The duration of the media or 0 if there is no duration.\r\n   */\r\n  ;\r\n\r\n  _proto.duration = function duration() {\r\n    var _this5 = this;\r\n\r\n    // Android Chrome will report duration as Infinity for VOD HLS until after\r\n    // playback has started, which triggers the live display erroneously.\r\n    // Return NaN if playback has not started and trigger a durationupdate once\r\n    // the duration can be reliably known.\r\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\r\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\r\n      // several with 0\r\n      var checkProgress = function checkProgress() {\r\n        if (_this5.el_.currentTime > 0) {\r\n          // Trigger durationchange for genuinely live video\r\n          if (_this5.el_.duration === Infinity) {\r\n            _this5.trigger('durationchange');\r\n          }\r\n\r\n          _this5.off('timeupdate', checkProgress);\r\n        }\r\n      };\r\n\r\n      this.on('timeupdate', checkProgress);\r\n      return NaN;\r\n    }\r\n\r\n    return this.el_.duration || NaN;\r\n  }\r\n  /**\r\n   * Get the current width of the HTML5 media element.\r\n   *\r\n   * @return {number}\r\n   *         The width of the HTML5 media element.\r\n   */\r\n  ;\r\n\r\n  _proto.width = function width() {\r\n    return this.el_.offsetWidth;\r\n  }\r\n  /**\r\n   * Get the current height of the HTML5 media element.\r\n   *\r\n   * @return {number}\r\n   *         The height of the HTML5 media element.\r\n   */\r\n  ;\r\n\r\n  _proto.height = function height() {\r\n    return this.el_.offsetHeight;\r\n  }\r\n  /**\r\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\r\n   * `fullscreenchange` event.\r\n   *\r\n   * @private\r\n   * @fires fullscreenchange\r\n   * @listens webkitendfullscreen\r\n   * @listens webkitbeginfullscreen\r\n   * @listens webkitbeginfullscreen\r\n   */\r\n  ;\r\n\r\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\r\n    var _this6 = this;\r\n\r\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\r\n      return;\r\n    }\r\n\r\n    var endFn = function endFn() {\r\n      this.trigger('fullscreenchange', {\r\n        isFullscreen: false\r\n      }); // Safari will sometimes set contols on the videoelement when existing fullscreen.\r\n\r\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\r\n        this.el_.controls = false;\r\n      }\r\n    };\r\n\r\n    var beginFn = function beginFn() {\r\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\r\n        this.one('webkitendfullscreen', endFn);\r\n        this.trigger('fullscreenchange', {\r\n          isFullscreen: true,\r\n          // set a flag in case another tech triggers fullscreenchange\r\n          nativeIOSFullscreen: true\r\n        });\r\n      }\r\n    };\r\n\r\n    this.on('webkitbeginfullscreen', beginFn);\r\n    this.on('dispose', function () {\r\n      _this6.off('webkitbeginfullscreen', beginFn);\r\n\r\n      _this6.off('webkitendfullscreen', endFn);\r\n    });\r\n  }\r\n  /**\r\n   * Check if fullscreen is supported on the current playback device.\r\n   *\r\n   * @return {boolean}\r\n   *         - True if fullscreen is supported.\r\n   *         - False if fullscreen is not supported.\r\n   */\r\n  ;\r\n\r\n  _proto.supportsFullScreen = function supportsFullScreen() {\r\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\r\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\r\n\r\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Request that the `HTML5` Tech enter fullscreen.\r\n   */\r\n  ;\r\n\r\n  _proto.enterFullScreen = function enterFullScreen() {\r\n    var video = this.el_;\r\n\r\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\r\n      // attempt to prime the video element for programmatic access\r\n      // this isn't necessary on the desktop but shouldn't hurt\r\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\r\n      // can get iOS ~6.1 devices into a play/pause loop\r\n\r\n      this.setTimeout(function () {\r\n        video.pause();\r\n\r\n        try {\r\n          video.webkitEnterFullScreen();\r\n        } catch (e) {\r\n          this.trigger('fullscreenerror', e);\r\n        }\r\n      }, 0);\r\n    } else {\r\n      try {\r\n        video.webkitEnterFullScreen();\r\n      } catch (e) {\r\n        this.trigger('fullscreenerror', e);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Request that the `HTML5` Tech exit fullscreen.\r\n   */\r\n  ;\r\n\r\n  _proto.exitFullScreen = function exitFullScreen() {\r\n    if (!this.el_.webkitDisplayingFullscreen) {\r\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\r\n      return;\r\n    }\r\n\r\n    this.el_.webkitExitFullScreen();\r\n  }\r\n  /**\r\n   * Create a floating video window always on top of other windows so that users may\r\n   * continue consuming media while they interact with other content sites, or\r\n   * applications on their device.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\r\n   *\r\n   * @return {Promise}\r\n   *         A promise with a Picture-in-Picture window.\r\n   */\r\n  ;\r\n\r\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\r\n    return this.el_.requestPictureInPicture();\r\n  }\r\n  /**\r\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\r\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\r\n   * Needs to be checked later than the constructor\r\n   * This will be a false positive for clear sources loaded after a Fairplay source\r\n   *\r\n   * @param {function} cb function to call\r\n   * @return {number} id of request\r\n   */\r\n  ;\r\n\r\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\r\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\r\n      return this.el_.requestVideoFrameCallback(cb);\r\n    }\r\n\r\n    return _Tech.prototype.requestVideoFrameCallback.call(this, cb);\r\n  }\r\n  /**\r\n   * Native or fallback requestVideoFrameCallback\r\n   *\r\n   * @param {number} id request id to cancel\r\n   */\r\n  ;\r\n\r\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\r\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\r\n      this.el_.cancelVideoFrameCallback(id);\r\n    } else {\r\n      _Tech.prototype.cancelVideoFrameCallback.call(this, id);\r\n    }\r\n  }\r\n  /**\r\n   * A getter/setter for the `Html5` Tech's source object.\r\n   * > Note: Please use {@link Html5#setSource}\r\n   *\r\n   * @param {Tech~SourceObject} [src]\r\n   *        The source object you want to set on the `HTML5` techs element.\r\n   *\r\n   * @return {Tech~SourceObject|undefined}\r\n   *         - The current source object when a source is not passed in.\r\n   *         - undefined when setting\r\n   *\r\n   * @deprecated Since version 5.\r\n   */\r\n  ;\r\n\r\n  _proto.src = function src(_src) {\r\n    if (_src === undefined) {\r\n      return this.el_.src;\r\n    } // Setting src through `src` instead of `setSrc` will be deprecated\r\n\r\n\r\n    this.setSrc(_src);\r\n  }\r\n  /**\r\n   * Reset the tech by removing all sources and then calling\r\n   * {@link Html5.resetMediaElement}.\r\n   */\r\n  ;\r\n\r\n  _proto.reset = function reset() {\r\n    Html5.resetMediaElement(this.el_);\r\n  }\r\n  /**\r\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\r\n   * the HTML5 media element.\r\n   *\r\n   * @return {Tech~SourceObject}\r\n   *         The current source object from the HTML5 tech. With a fallback to the\r\n   *         elements source.\r\n   */\r\n  ;\r\n\r\n  _proto.currentSrc = function currentSrc() {\r\n    if (this.currentSource_) {\r\n      return this.currentSource_.src;\r\n    }\r\n\r\n    return this.el_.currentSrc;\r\n  }\r\n  /**\r\n   * Set controls attribute for the HTML5 media Element.\r\n   *\r\n   * @param {string} val\r\n   *        Value to set the controls attribute to\r\n   */\r\n  ;\r\n\r\n  _proto.setControls = function setControls(val) {\r\n    this.el_.controls = !!val;\r\n  }\r\n  /**\r\n   * Create and returns a remote {@link TextTrack} object.\r\n   *\r\n   * @param {string} kind\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\r\n   *\r\n   * @param {string} [label]\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [language]\r\n   *        Two letter language abbreviation\r\n   *\r\n   * @return {TextTrack}\r\n   *         The TextTrack that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\r\n    if (!this.featuresNativeTextTracks) {\r\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\r\n    }\r\n\r\n    return this.el_.addTextTrack(kind, label, language);\r\n  }\r\n  /**\r\n   * Creates either native TextTrack or an emulated TextTrack depending\r\n   * on the value of `featuresNativeTextTracks`\r\n   *\r\n   * @param {Object} options\r\n   *        The object should contain the options to initialize the TextTrack with.\r\n   *\r\n   * @param {string} [options.kind]\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\r\n   *\r\n   * @param {string} [options.label]\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [options.language]\r\n   *        Two letter language abbreviation.\r\n   *\r\n   * @param {boolean} [options.default]\r\n   *        Default this track to on.\r\n   *\r\n   * @param {string} [options.id]\r\n   *        The internal id to assign this track.\r\n   *\r\n   * @param {string} [options.src]\r\n   *        A source url for the track.\r\n   *\r\n   * @return {HTMLTrackElement}\r\n   *         The track element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\r\n    if (!this.featuresNativeTextTracks) {\r\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\r\n    }\r\n\r\n    var htmlTrackElement = document.createElement('track');\r\n\r\n    if (options.kind) {\r\n      htmlTrackElement.kind = options.kind;\r\n    }\r\n\r\n    if (options.label) {\r\n      htmlTrackElement.label = options.label;\r\n    }\r\n\r\n    if (options.language || options.srclang) {\r\n      htmlTrackElement.srclang = options.language || options.srclang;\r\n    }\r\n\r\n    if (options[\"default\"]) {\r\n      htmlTrackElement[\"default\"] = options[\"default\"];\r\n    }\r\n\r\n    if (options.id) {\r\n      htmlTrackElement.id = options.id;\r\n    }\r\n\r\n    if (options.src) {\r\n      htmlTrackElement.src = options.src;\r\n    }\r\n\r\n    return htmlTrackElement;\r\n  }\r\n  /**\r\n   * Creates a remote text track object and returns an html track element.\r\n   *\r\n   * @param {Object} options The object should contain values for\r\n   * kind, language, label, and src (location of the WebVTT file)\r\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\r\n   * automatically removed from the video element whenever the source changes\r\n   * @return {HTMLTrackElement} An Html Track Element.\r\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\r\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\r\n   * to \"false\" in upcoming versions of Video.js\r\n   */\r\n  ;\r\n\r\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\r\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\r\n\r\n    if (this.featuresNativeTextTracks) {\r\n      this.el().appendChild(htmlTrackElement);\r\n    }\r\n\r\n    return htmlTrackElement;\r\n  }\r\n  /**\r\n   * Remove remote `TextTrack` from `TextTrackList` object\r\n   *\r\n   * @param {TextTrack} track\r\n   *        `TextTrack` object to remove\r\n   */\r\n  ;\r\n\r\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\r\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\r\n\r\n    if (this.featuresNativeTextTracks) {\r\n      var tracks = this.$$('track');\r\n      var i = tracks.length;\r\n\r\n      while (i--) {\r\n        if (track === tracks[i] || track === tracks[i].track) {\r\n          this.el().removeChild(tracks[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Gets available media playback quality metrics as specified by the W3C's Media\r\n   * Playback Quality API.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\r\n   *\r\n   * @return {Object}\r\n   *         An object with supported media playback quality metrics\r\n   */\r\n  ;\r\n\r\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\r\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\r\n      return this.el().getVideoPlaybackQuality();\r\n    }\r\n\r\n    var videoPlaybackQuality = {};\r\n\r\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\r\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\r\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\r\n    }\r\n\r\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\r\n      videoPlaybackQuality.creationTime = window$1.performance.now();\r\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\r\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\r\n    }\r\n\r\n    return videoPlaybackQuality;\r\n  };\r\n\r\n  return Html5;\r\n}(Tech);\r\n/* HTML5 Support Testing ---------------------------------------------------- */\r\n\r\n/**\r\n * Element for testing browser HTML5 media capabilities\r\n *\r\n * @type {Element}\r\n * @constant\r\n * @private\r\n */\r\n\r\n\r\ndefineLazyProperty(Html5, 'TEST_VID', function () {\r\n  if (!isReal()) {\r\n    return;\r\n  }\r\n\r\n  var video = document.createElement('video');\r\n  var track = document.createElement('track');\r\n  track.kind = 'captions';\r\n  track.srclang = 'en';\r\n  track.label = 'English';\r\n  video.appendChild(track);\r\n  return video;\r\n});\r\n/**\r\n * Check if HTML5 media is supported by this browser/device.\r\n *\r\n * @return {boolean}\r\n *         - True if HTML5 media is supported.\r\n *         - False if HTML5 media is not supported.\r\n */\r\n\r\nHtml5.isSupported = function () {\r\n  // IE with no Media Player is a LIAR! (#984)\r\n  try {\r\n    Html5.TEST_VID.volume = 0.5;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n\r\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\r\n};\r\n/**\r\n * Check if the tech can support the given type\r\n *\r\n * @param {string} type\r\n *        The mimetype to check\r\n * @return {string} 'probably', 'maybe', or '' (empty string)\r\n */\r\n\r\n\r\nHtml5.canPlayType = function (type) {\r\n  return Html5.TEST_VID.canPlayType(type);\r\n};\r\n/**\r\n * Check if the tech can support the given source\r\n *\r\n * @param {Object} srcObj\r\n *        The source object\r\n * @param {Object} options\r\n *        The options passed to the tech\r\n * @return {string} 'probably', 'maybe', or '' (empty string)\r\n */\r\n\r\n\r\nHtml5.canPlaySource = function (srcObj, options) {\r\n  return Html5.canPlayType(srcObj.type);\r\n};\r\n/**\r\n * Check if the volume can be changed in this browser/device.\r\n * Volume cannot be changed in a lot of mobile devices.\r\n * Specifically, it can't be changed from 1 on iOS.\r\n *\r\n * @return {boolean}\r\n *         - True if volume can be controlled\r\n *         - False otherwise\r\n */\r\n\r\n\r\nHtml5.canControlVolume = function () {\r\n  // IE will error if Windows Media Player not installed #3315\r\n  try {\r\n    var volume = Html5.TEST_VID.volume;\r\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\r\n    var canControl = volume !== Html5.TEST_VID.volume; // With the introduction of iOS 15, there are cases where the volume is read as\r\n    // changed but reverts back to its original state at the start of the next tick.\r\n    // To determine whether volume can be controlled on iOS,\r\n    // a timeout is set and the volume is checked asynchronously.\r\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\r\n\r\n    if (canControl && IS_IOS) {\r\n      window$1.setTimeout(function () {\r\n        if (Html5 && Html5.prototype) {\r\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\r\n        }\r\n      }); // default iOS to false, which will be updated in the timeout above.\r\n\r\n      return false;\r\n    }\r\n\r\n    return canControl;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n/**\r\n * Check if the volume can be muted in this browser/device.\r\n * Some devices, e.g. iOS, don't allow changing volume\r\n * but permits muting/unmuting.\r\n *\r\n * @return {bolean}\r\n *      - True if volume can be muted\r\n *      - False otherwise\r\n */\r\n\r\n\r\nHtml5.canMuteVolume = function () {\r\n  try {\r\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\r\n    // work, so we want to set both property and attribute\r\n\r\n    Html5.TEST_VID.muted = !muted;\r\n\r\n    if (Html5.TEST_VID.muted) {\r\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\r\n    } else {\r\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\r\n    }\r\n\r\n    return muted !== Html5.TEST_VID.muted;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n/**\r\n * Check if the playback rate can be changed in this browser/device.\r\n *\r\n * @return {boolean}\r\n *         - True if playback rate can be controlled\r\n *         - False otherwise\r\n */\r\n\r\n\r\nHtml5.canControlPlaybackRate = function () {\r\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\r\n  // https://github.com/videojs/video.js/issues/3180\r\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\r\n    return false;\r\n  } // IE will error if Windows Media Player not installed #3315\r\n\r\n\r\n  try {\r\n    var playbackRate = Html5.TEST_VID.playbackRate;\r\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\r\n    return playbackRate !== Html5.TEST_VID.playbackRate;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n/**\r\n * Check if we can override a video/audio elements attributes, with\r\n * Object.defineProperty.\r\n *\r\n * @return {boolean}\r\n *         - True if builtin attributes can be overridden\r\n *         - False otherwise\r\n */\r\n\r\n\r\nHtml5.canOverrideAttributes = function () {\r\n  // if we cannot overwrite the src/innerHTML property, there is no support\r\n  // iOS 7 safari for instance cannot do this.\r\n  try {\r\n    var noop = function noop() {};\r\n\r\n    Object.defineProperty(document.createElement('video'), 'src', {\r\n      get: noop,\r\n      set: noop\r\n    });\r\n    Object.defineProperty(document.createElement('audio'), 'src', {\r\n      get: noop,\r\n      set: noop\r\n    });\r\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\r\n      get: noop,\r\n      set: noop\r\n    });\r\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\r\n      get: noop,\r\n      set: noop\r\n    });\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n/**\r\n * Check to see if native `TextTrack`s are supported by this browser/device.\r\n *\r\n * @return {boolean}\r\n *         - True if native `TextTrack`s are supported.\r\n *         - False otherwise\r\n */\r\n\r\n\r\nHtml5.supportsNativeTextTracks = function () {\r\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\r\n};\r\n/**\r\n * Check to see if native `VideoTrack`s are supported by this browser/device\r\n *\r\n * @return {boolean}\r\n *        - True if native `VideoTrack`s are supported.\r\n *        - False otherwise\r\n */\r\n\r\n\r\nHtml5.supportsNativeVideoTracks = function () {\r\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\r\n};\r\n/**\r\n * Check to see if native `AudioTrack`s are supported by this browser/device\r\n *\r\n * @return {boolean}\r\n *        - True if native `AudioTrack`s are supported.\r\n *        - False otherwise\r\n */\r\n\r\n\r\nHtml5.supportsNativeAudioTracks = function () {\r\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\r\n};\r\n/**\r\n * An array of events available on the Html5 tech.\r\n *\r\n * @private\r\n * @type {Array}\r\n */\r\n\r\n\r\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\r\n/**\r\n * Boolean indicating whether the `Tech` supports volume control.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.canControlVolume}\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports muting volume.\r\n *\r\n * @type {bolean}\r\n * @default {@link Html5.canMuteVolume}\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\r\n * plays. Examples:\r\n *   - Set player to play 2x (twice) as fast\r\n *   - Set player to play 0.5x (half) as fast\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.canControlPlaybackRate}\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.supportsNativeTextTracks}\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.supportsNativeVideoTracks}\r\n */\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.supportsNativeAudioTracks}\r\n */\r\n\r\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\r\n  var key = _ref[0],\r\n      fn = _ref[1];\r\n  defineLazyProperty(Html5.prototype, key, function () {\r\n    return Html5[fn]();\r\n  }, true);\r\n});\r\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports the media element\r\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\r\n * false there. Everywhere else this should be true.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\r\n//       Is this true?\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\r\n * when going into fullscreen.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nHtml5.prototype.featuresFullscreenResize = true;\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\r\n * If this is false, manual `progress` events will be triggered instead.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\n\r\nHtml5.prototype.featuresProgressEvents = true;\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\r\n * If this is false, manual `timeupdate` events will be triggered instead.\r\n *\r\n * @default\r\n */\r\n\r\nHtml5.prototype.featuresTimeupdateEvents = true;\r\n/**\r\n * Whether the HTML5 el supports `requestVideoFrameCallback`\r\n *\r\n * @type {boolean}\r\n */\r\n\r\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback); // HTML5 Feature detection and Device Fixes --------------------------------- //\r\n\r\nvar canPlayType;\r\n\r\nHtml5.patchCanPlayType = function () {\r\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\r\n  // Firefox and Chrome report correctly\r\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\r\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\r\n\r\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\r\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\r\n\r\n      if (type && mpegurlRE.test(type)) {\r\n        return 'maybe';\r\n      }\r\n\r\n      return canPlayType.call(this, type);\r\n    };\r\n  }\r\n};\r\n\r\nHtml5.unpatchCanPlayType = function () {\r\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\r\n\r\n  if (canPlayType) {\r\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\r\n  }\r\n\r\n  return r;\r\n}; // by default, patch the media element\r\n\r\n\r\nHtml5.patchCanPlayType();\r\n\r\nHtml5.disposeMediaElement = function (el) {\r\n  if (!el) {\r\n    return;\r\n  }\r\n\r\n  if (el.parentNode) {\r\n    el.parentNode.removeChild(el);\r\n  } // remove any child track or source nodes to prevent their loading\r\n\r\n\r\n  while (el.hasChildNodes()) {\r\n    el.removeChild(el.firstChild);\r\n  } // remove any src reference. not setting `src=''` because that causes a warning\r\n  // in firefox\r\n\r\n\r\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\r\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\r\n\r\n  if (typeof el.load === 'function') {\r\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\r\n    (function () {\r\n      try {\r\n        el.load();\r\n      } catch (e) {// not supported\r\n      }\r\n    })();\r\n  }\r\n};\r\n\r\nHtml5.resetMediaElement = function (el) {\r\n  if (!el) {\r\n    return;\r\n  }\r\n\r\n  var sources = el.querySelectorAll('source');\r\n  var i = sources.length;\r\n\r\n  while (i--) {\r\n    el.removeChild(sources[i]);\r\n  } // remove any src reference.\r\n  // not setting `src=''` because that throws an error\r\n\r\n\r\n  el.removeAttribute('src');\r\n\r\n  if (typeof el.load === 'function') {\r\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\r\n    (function () {\r\n      try {\r\n        el.load();\r\n      } catch (e) {// satisfy linter\r\n      }\r\n    })();\r\n  }\r\n};\r\n/* Native HTML5 element property wrapping ----------------------------------- */\r\n// Wrap native boolean attributes with getters that check both property and attribute\r\n// The list is as followed:\r\n// muted, defaultMuted, autoplay, controls, loop, playsinline\r\n\r\n\r\n[\r\n/**\r\n * Get the value of `muted` from the media element. `muted` indicates\r\n * that the volume for the media should be set to silent. This does not actually change\r\n * the `volume` attribute.\r\n *\r\n * @method Html5#muted\r\n * @return {boolean}\r\n *         - True if the value of `volume` should be ignored and the audio set to silent.\r\n *         - False if the value of `volume` should be used.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\r\n */\r\n'muted',\r\n/**\r\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\r\n * whether the media should start muted or not. Only changes the default state of the\r\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\r\n * current state.\r\n *\r\n * @method Html5#defaultMuted\r\n * @return {boolean}\r\n *         - The value of `defaultMuted` from the media element.\r\n *         - True indicates that the media should start muted.\r\n *         - False indicates that the media should not start muted\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\r\n */\r\n'defaultMuted',\r\n/**\r\n * Get the value of `autoplay` from the media element. `autoplay` indicates\r\n * that the media should start to play as soon as the page is ready.\r\n *\r\n * @method Html5#autoplay\r\n * @return {boolean}\r\n *         - The value of `autoplay` from the media element.\r\n *         - True indicates that the media should start as soon as the page loads.\r\n *         - False indicates that the media should not start as soon as the page loads.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\r\n */\r\n'autoplay',\r\n/**\r\n * Get the value of `controls` from the media element. `controls` indicates\r\n * whether the native media controls should be shown or hidden.\r\n *\r\n * @method Html5#controls\r\n * @return {boolean}\r\n *         - The value of `controls` from the media element.\r\n *         - True indicates that native controls should be showing.\r\n *         - False indicates that native controls should be hidden.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\r\n */\r\n'controls',\r\n/**\r\n * Get the value of `loop` from the media element. `loop` indicates\r\n * that the media should return to the start of the media and continue playing once\r\n * it reaches the end.\r\n *\r\n * @method Html5#loop\r\n * @return {boolean}\r\n *         - The value of `loop` from the media element.\r\n *         - True indicates that playback should seek back to start once\r\n *           the end of a media is reached.\r\n *         - False indicates that playback should not loop back to the start when the\r\n *           end of the media is reached.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\r\n */\r\n'loop',\r\n/**\r\n * Get the value of `playsinline` from the media element. `playsinline` indicates\r\n * to the browser that non-fullscreen playback is preferred when fullscreen\r\n * playback is the native default, such as in iOS Safari.\r\n *\r\n * @method Html5#playsinline\r\n * @return {boolean}\r\n *         - The value of `playsinline` from the media element.\r\n *         - True indicates that the media should play inline.\r\n *         - False indicates that the media should not play inline.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\r\n */\r\n'playsinline'].forEach(function (prop) {\r\n  Html5.prototype[prop] = function () {\r\n    return this.el_[prop] || this.el_.hasAttribute(prop);\r\n  };\r\n}); // Wrap native boolean attributes with setters that set both property and attribute\r\n// The list is as followed:\r\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\r\n// setControls is special-cased above\r\n\r\n[\r\n/**\r\n * Set the value of `muted` on the media element. `muted` indicates that the current\r\n * audio level should be silent.\r\n *\r\n * @method Html5#setMuted\r\n * @param {boolean} muted\r\n *        - True if the audio should be set to silent\r\n *        - False otherwise\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\r\n */\r\n'muted',\r\n/**\r\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\r\n * audio level should be silent, but will only effect the muted level on initial playback..\r\n *\r\n * @method Html5.prototype.setDefaultMuted\r\n * @param {boolean} defaultMuted\r\n *        - True if the audio should be set to silent\r\n *        - False otherwise\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\r\n */\r\n'defaultMuted',\r\n/**\r\n * Set the value of `autoplay` on the media element. `autoplay` indicates\r\n * that the media should start to play as soon as the page is ready.\r\n *\r\n * @method Html5#setAutoplay\r\n * @param {boolean} autoplay\r\n *         - True indicates that the media should start as soon as the page loads.\r\n *         - False indicates that the media should not start as soon as the page loads.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\r\n */\r\n'autoplay',\r\n/**\r\n * Set the value of `loop` on the media element. `loop` indicates\r\n * that the media should return to the start of the media and continue playing once\r\n * it reaches the end.\r\n *\r\n * @method Html5#setLoop\r\n * @param {boolean} loop\r\n *         - True indicates that playback should seek back to start once\r\n *           the end of a media is reached.\r\n *         - False indicates that playback should not loop back to the start when the\r\n *           end of the media is reached.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\r\n */\r\n'loop',\r\n/**\r\n * Set the value of `playsinline` from the media element. `playsinline` indicates\r\n * to the browser that non-fullscreen playback is preferred when fullscreen\r\n * playback is the native default, such as in iOS Safari.\r\n *\r\n * @method Html5#setPlaysinline\r\n * @param {boolean} playsinline\r\n *         - True indicates that the media should play inline.\r\n *         - False indicates that the media should not play inline.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\r\n */\r\n'playsinline'].forEach(function (prop) {\r\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\r\n    this.el_[prop] = v;\r\n\r\n    if (v) {\r\n      this.el_.setAttribute(prop, prop);\r\n    } else {\r\n      this.el_.removeAttribute(prop);\r\n    }\r\n  };\r\n}); // Wrap native properties with a getter\r\n// The list is as followed\r\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\r\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\r\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\r\n\r\n[\r\n/**\r\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\r\n * is currently paused or not.\r\n *\r\n * @method Html5#paused\r\n * @return {boolean}\r\n *         The value of `paused` from the media element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\r\n */\r\n'paused',\r\n/**\r\n * Get the value of `currentTime` from the media element. `currentTime` indicates\r\n * the current second that the media is at in playback.\r\n *\r\n * @method Html5#currentTime\r\n * @return {number}\r\n *         The value of `currentTime` from the media element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\r\n */\r\n'currentTime',\r\n/**\r\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\r\n * object that represents the parts of the media that are already downloaded and\r\n * available for playback.\r\n *\r\n * @method Html5#buffered\r\n * @return {TimeRange}\r\n *         The value of `buffered` from the media element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\r\n */\r\n'buffered',\r\n/**\r\n * Get the value of `volume` from the media element. `volume` indicates\r\n * the current playback volume of audio for a media. `volume` will be a value from 0\r\n * (silent) to 1 (loudest and default).\r\n *\r\n * @method Html5#volume\r\n * @return {number}\r\n *         The value of `volume` from the media element. Value will be between 0-1.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\r\n */\r\n'volume',\r\n/**\r\n * Get the value of `poster` from the media element. `poster` indicates\r\n * that the url of an image file that can/will be shown when no media data is available.\r\n *\r\n * @method Html5#poster\r\n * @return {string}\r\n *         The value of `poster` from the media element. Value will be a url to an\r\n *         image.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\r\n */\r\n'poster',\r\n/**\r\n * Get the value of `preload` from the media element. `preload` indicates\r\n * what should download before the media is interacted with. It can have the following\r\n * values:\r\n * - none: nothing should be downloaded\r\n * - metadata: poster and the first few frames of the media may be downloaded to get\r\n *   media dimensions and other metadata\r\n * - auto: allow the media and metadata for the media to be downloaded before\r\n *    interaction\r\n *\r\n * @method Html5#preload\r\n * @return {string}\r\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\r\n *         or 'auto'.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\r\n */\r\n'preload',\r\n/**\r\n * Get the value of the `error` from the media element. `error` indicates any\r\n * MediaError that may have occurred during playback. If error returns null there is no\r\n * current error.\r\n *\r\n * @method Html5#error\r\n * @return {MediaError|null}\r\n *         The value of `error` from the media element. Will be `MediaError` if there\r\n *         is a current error and null otherwise.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\r\n */\r\n'error',\r\n/**\r\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\r\n * media is currently seeking to a new position or not.\r\n *\r\n * @method Html5#seeking\r\n * @return {boolean}\r\n *         - The value of `seeking` from the media element.\r\n *         - True indicates that the media is currently seeking to a new position.\r\n *         - False indicates that the media is not seeking to a new position at this time.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\r\n */\r\n'seeking',\r\n/**\r\n * Get the value of `seekable` from the media element. `seekable` returns a\r\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\r\n *\r\n * @method Html5#seekable\r\n * @return {TimeRange}\r\n *         The value of `seekable` from the media element. A `TimeRange` object\r\n *         indicating the current ranges of time that can be seeked to.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\r\n */\r\n'seekable',\r\n/**\r\n * Get the value of `ended` from the media element. `ended` indicates whether\r\n * the media has reached the end or not.\r\n *\r\n * @method Html5#ended\r\n * @return {boolean}\r\n *         - The value of `ended` from the media element.\r\n *         - True indicates that the media has ended.\r\n *         - False indicates that the media has not ended.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\r\n */\r\n'ended',\r\n/**\r\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\r\n * the rate at which the media is currently playing back. Examples:\r\n *   - if playbackRate is set to 2, media will play twice as fast.\r\n *   - if playbackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5#playbackRate\r\n * @return {number}\r\n *         The value of `playbackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\r\n */\r\n'playbackRate',\r\n/**\r\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\r\n * the rate at which the media is currently playing back. This value will not indicate the current\r\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\r\n *\r\n * Examples:\r\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\r\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5.prototype.defaultPlaybackRate\r\n * @return {number}\r\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\r\n */\r\n'defaultPlaybackRate',\r\n/**\r\n * Get the value of 'disablePictureInPicture' from the video element.\r\n *\r\n * @method Html5#disablePictureInPicture\r\n * @return {boolean} value\r\n *         - The value of `disablePictureInPicture` from the video element.\r\n *         - True indicates that the video can't be played in Picture-In-Picture mode\r\n *         - False indicates that the video can be played in Picture-In-Picture mode\r\n *\r\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\r\n */\r\n'disablePictureInPicture',\r\n/**\r\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\r\n * object representing points in the media timeline that have been played.\r\n *\r\n * @method Html5#played\r\n * @return {TimeRange}\r\n *         The value of `played` from the media element. A `TimeRange` object indicating\r\n *         the ranges of time that have been played.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\r\n */\r\n'played',\r\n/**\r\n * Get the value of `networkState` from the media element. `networkState` indicates\r\n * the current network state. It returns an enumeration from the following list:\r\n * - 0: NETWORK_EMPTY\r\n * - 1: NETWORK_IDLE\r\n * - 2: NETWORK_LOADING\r\n * - 3: NETWORK_NO_SOURCE\r\n *\r\n * @method Html5#networkState\r\n * @return {number}\r\n *         The value of `networkState` from the media element. This will be a number\r\n *         from the list in the description.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\r\n */\r\n'networkState',\r\n/**\r\n * Get the value of `readyState` from the media element. `readyState` indicates\r\n * the current state of the media element. It returns an enumeration from the\r\n * following list:\r\n * - 0: HAVE_NOTHING\r\n * - 1: HAVE_METADATA\r\n * - 2: HAVE_CURRENT_DATA\r\n * - 3: HAVE_FUTURE_DATA\r\n * - 4: HAVE_ENOUGH_DATA\r\n *\r\n * @method Html5#readyState\r\n * @return {number}\r\n *         The value of `readyState` from the media element. This will be a number\r\n *         from the list in the description.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\r\n */\r\n'readyState',\r\n/**\r\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\r\n * the current width of the video in css pixels.\r\n *\r\n * @method Html5#videoWidth\r\n * @return {number}\r\n *         The value of `videoWidth` from the video element. This will be a number\r\n *         in css pixels.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\r\n */\r\n'videoWidth',\r\n/**\r\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\r\n * the current height of the video in css pixels.\r\n *\r\n * @method Html5#videoHeight\r\n * @return {number}\r\n *         The value of `videoHeight` from the video element. This will be a number\r\n *         in css pixels.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\r\n */\r\n'videoHeight',\r\n/**\r\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\r\n * to the browser that should sent the cookies along with the requests for the\r\n * different assets/playlists\r\n *\r\n * @method Html5#crossOrigin\r\n * @return {string}\r\n *         - anonymous indicates that the media should not sent cookies.\r\n *         - use-credentials indicates that the media should sent cookies along the requests.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\r\n */\r\n'crossOrigin'].forEach(function (prop) {\r\n  Html5.prototype[prop] = function () {\r\n    return this.el_[prop];\r\n  };\r\n}); // Wrap native properties with a setter in this format:\r\n// set + toTitleCase(name)\r\n// The list is as follows:\r\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\r\n// setDisablePictureInPicture, setCrossOrigin\r\n\r\n[\r\n/**\r\n * Set the value of `volume` on the media element. `volume` indicates the current\r\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\r\n * so on.\r\n *\r\n * @method Html5#setVolume\r\n * @param {number} percentAsDecimal\r\n *        The volume percent as a decimal. Valid range is from 0-1.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\r\n */\r\n'volume',\r\n/**\r\n * Set the value of `src` on the media element. `src` indicates the current\r\n * {@link Tech~SourceObject} for the media.\r\n *\r\n * @method Html5#setSrc\r\n * @param {Tech~SourceObject} src\r\n *        The source object to set as the current source.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\r\n */\r\n'src',\r\n/**\r\n * Set the value of `poster` on the media element. `poster` is the url to\r\n * an image file that can/will be shown when no media data is available.\r\n *\r\n * @method Html5#setPoster\r\n * @param {string} poster\r\n *        The url to an image that should be used as the `poster` for the media\r\n *        element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\r\n */\r\n'poster',\r\n/**\r\n * Set the value of `preload` on the media element. `preload` indicates\r\n * what should download before the media is interacted with. It can have the following\r\n * values:\r\n * - none: nothing should be downloaded\r\n * - metadata: poster and the first few frames of the media may be downloaded to get\r\n *   media dimensions and other metadata\r\n * - auto: allow the media and metadata for the media to be downloaded before\r\n *    interaction\r\n *\r\n * @method Html5#setPreload\r\n * @param {string} preload\r\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\r\n *         or 'auto'.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\r\n */\r\n'preload',\r\n/**\r\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\r\n * the rate at which the media should play back. Examples:\r\n *   - if playbackRate is set to 2, media will play twice as fast.\r\n *   - if playbackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5#setPlaybackRate\r\n * @return {number}\r\n *         The value of `playbackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\r\n */\r\n'playbackRate',\r\n/**\r\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\r\n * the rate at which the media should play back upon initial startup. Changing this value\r\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\r\n *\r\n * Example Values:\r\n *   - if playbackRate is set to 2, media will play twice as fast.\r\n *   - if playbackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5.prototype.setDefaultPlaybackRate\r\n * @return {number}\r\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\r\n */\r\n'defaultPlaybackRate',\r\n/**\r\n * Prevents the browser from suggesting a Picture-in-Picture context menu\r\n * or to request Picture-in-Picture automatically in some cases.\r\n *\r\n * @method Html5#setDisablePictureInPicture\r\n * @param {boolean} value\r\n *         The true value will disable Picture-in-Picture mode.\r\n *\r\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\r\n */\r\n'disablePictureInPicture',\r\n/**\r\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\r\n * to the browser that should sent the cookies along with the requests for the\r\n * different assets/playlists\r\n *\r\n * @method Html5#setCrossOrigin\r\n * @param {string} crossOrigin\r\n *         - anonymous indicates that the media should not sent cookies.\r\n *         - use-credentials indicates that the media should sent cookies along the requests.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\r\n */\r\n'crossOrigin'].forEach(function (prop) {\r\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\r\n    this.el_[prop] = v;\r\n  };\r\n}); // wrap native functions with a function\r\n// The list is as follows:\r\n// pause, load, play\r\n\r\n[\r\n/**\r\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\r\n * media elements `pause` function.\r\n *\r\n * @method Html5#pause\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\r\n */\r\n'pause',\r\n/**\r\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\r\n * media element `load` function.\r\n *\r\n * @method Html5#load\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\r\n */\r\n'load',\r\n/**\r\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\r\n * media element `play` function.\r\n *\r\n * @method Html5#play\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\r\n */\r\n'play'].forEach(function (prop) {\r\n  Html5.prototype[prop] = function () {\r\n    return this.el_[prop]();\r\n  };\r\n});\r\nTech.withSourceHandlers(Html5);\r\n/**\r\n * Native source handler for Html5, simply passes the source to the media element.\r\n *\r\n * @property {Tech~SourceObject} source\r\n *        The source object\r\n *\r\n * @property {Html5} tech\r\n *        The instance of the HTML5 tech.\r\n */\r\n\r\nHtml5.nativeSourceHandler = {};\r\n/**\r\n * Check if the media element can play the given mime type.\r\n *\r\n * @param {string} type\r\n *        The mimetype to check\r\n *\r\n * @return {string}\r\n *         'probably', 'maybe', or '' (empty string)\r\n */\r\n\r\nHtml5.nativeSourceHandler.canPlayType = function (type) {\r\n  // IE without MediaPlayer throws an error (#519)\r\n  try {\r\n    return Html5.TEST_VID.canPlayType(type);\r\n  } catch (e) {\r\n    return '';\r\n  }\r\n};\r\n/**\r\n * Check if the media element can handle a source natively.\r\n *\r\n * @param {Tech~SourceObject} source\r\n *         The source object\r\n *\r\n * @param {Object} [options]\r\n *         Options to be passed to the tech.\r\n *\r\n * @return {string}\r\n *         'probably', 'maybe', or '' (empty string).\r\n */\r\n\r\n\r\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\r\n  // If a type was provided we should rely on that\r\n  if (source.type) {\r\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\r\n  } else if (source.src) {\r\n    var ext = getFileExtension(source.src);\r\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\r\n  }\r\n\r\n  return '';\r\n};\r\n/**\r\n * Pass the source to the native media element.\r\n *\r\n * @param {Tech~SourceObject} source\r\n *        The source object\r\n *\r\n * @param {Html5} tech\r\n *        The instance of the Html5 tech\r\n *\r\n * @param {Object} [options]\r\n *        The options to pass to the source\r\n */\r\n\r\n\r\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\r\n  tech.setSrc(source.src);\r\n};\r\n/**\r\n * A noop for the native dispose function, as cleanup is not needed.\r\n */\r\n\r\n\r\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\r\n\r\n\r\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\r\nTech.registerTech('Html5', Html5);\r\n\r\n// on the player when they happen\r\n\r\nvar TECH_EVENTS_RETRIGGER = [\r\n/**\r\n * Fired while the user agent is downloading media data.\r\n *\r\n * @event Player#progress\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechProgress_\r\n * @fires Player#progress\r\n * @listens Tech#progress\r\n */\r\n'progress',\r\n/**\r\n * Fires when the loading of an audio/video is aborted.\r\n *\r\n * @event Player#abort\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechAbort_\r\n * @fires Player#abort\r\n * @listens Tech#abort\r\n */\r\n'abort',\r\n/**\r\n * Fires when the browser is intentionally not getting media data.\r\n *\r\n * @event Player#suspend\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechSuspend_\r\n * @fires Player#suspend\r\n * @listens Tech#suspend\r\n */\r\n'suspend',\r\n/**\r\n * Fires when the current playlist is empty.\r\n *\r\n * @event Player#emptied\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechEmptied_\r\n * @fires Player#emptied\r\n * @listens Tech#emptied\r\n */\r\n'emptied',\r\n/**\r\n * Fires when the browser is trying to get media data, but data is not available.\r\n *\r\n * @event Player#stalled\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechStalled_\r\n * @fires Player#stalled\r\n * @listens Tech#stalled\r\n */\r\n'stalled',\r\n/**\r\n * Fires when the browser has loaded meta data for the audio/video.\r\n *\r\n * @event Player#loadedmetadata\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechLoadedmetadata_\r\n * @fires Player#loadedmetadata\r\n * @listens Tech#loadedmetadata\r\n */\r\n'loadedmetadata',\r\n/**\r\n * Fires when the browser has loaded the current frame of the audio/video.\r\n *\r\n * @event Player#loadeddata\r\n * @type {event}\r\n */\r\n\r\n/**\r\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechLoaddeddata_\r\n * @fires Player#loadeddata\r\n * @listens Tech#loadeddata\r\n */\r\n'loadeddata',\r\n/**\r\n * Fires when the current playback position has changed.\r\n *\r\n * @event Player#timeupdate\r\n * @type {event}\r\n */\r\n\r\n/**\r\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechTimeUpdate_\r\n * @fires Player#timeupdate\r\n * @listens Tech#timeupdate\r\n */\r\n'timeupdate',\r\n/**\r\n * Fires when the video's intrinsic dimensions change\r\n *\r\n * @event Player#resize\r\n * @type {event}\r\n */\r\n\r\n/**\r\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechResize_\r\n * @fires Player#resize\r\n * @listens Tech#resize\r\n */\r\n'resize',\r\n/**\r\n * Fires when the volume has been changed\r\n *\r\n * @event Player#volumechange\r\n * @type {event}\r\n */\r\n\r\n/**\r\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechVolumechange_\r\n * @fires Player#volumechange\r\n * @listens Tech#volumechange\r\n */\r\n'volumechange',\r\n/**\r\n * Fires when the text track has been changed\r\n *\r\n * @event Player#texttrackchange\r\n * @type {event}\r\n */\r\n\r\n/**\r\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechTexttrackchange_\r\n * @fires Player#texttrackchange\r\n * @listens Tech#texttrackchange\r\n */\r\n'texttrackchange']; // events to queue when playback rate is zero\r\n// this is a hash for the sole purpose of mapping non-camel-cased event names\r\n// to camel-cased function names\r\n\r\nvar TECH_EVENTS_QUEUE = {\r\n  canplay: 'CanPlay',\r\n  canplaythrough: 'CanPlayThrough',\r\n  playing: 'Playing',\r\n  seeked: 'Seeked'\r\n};\r\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\r\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\r\n// grep: vjs-layout-x-small\r\n// grep: vjs-layout-small\r\n// grep: vjs-layout-medium\r\n// grep: vjs-layout-large\r\n// grep: vjs-layout-x-large\r\n// grep: vjs-layout-huge\r\n\r\nBREAKPOINT_ORDER.forEach(function (k) {\r\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\r\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\r\n});\r\nvar DEFAULT_BREAKPOINTS = {\r\n  tiny: 210,\r\n  xsmall: 320,\r\n  small: 425,\r\n  medium: 768,\r\n  large: 1440,\r\n  xlarge: 2560,\r\n  huge: Infinity\r\n};\r\n/**\r\n * An instance of the `Player` class is created when any of the Video.js setup methods\r\n * are used to initialize a video.\r\n *\r\n * After an instance has been created it can be accessed globally in two ways:\r\n * 1. By calling `videojs('example_video_1');`\r\n * 2. By using it directly via  `videojs.players.example_video_1;`\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Player = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Player, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Element} tag\r\n   *        The original video DOM element used for configuring options.\r\n   *\r\n   * @param {Object} [options]\r\n   *        Object of option names and values.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        Ready callback function.\r\n   */\r\n  function Player(tag, options, ready) {\r\n    var _this;\r\n\r\n    // Make sure tag ID exists\r\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\r\n    // The options argument overrides options set in the video tag\r\n    // which overrides globally set options.\r\n    // This latter part coincides with the load order\r\n    // (tag must exist before Player)\r\n\r\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\r\n    // player properties first, and can't use `this` before `super()`\r\n\r\n    options.initChildren = false; // Same with creating the element\r\n\r\n    options.createEl = false; // don't auto mixin the evented mixin\r\n\r\n    options.evented = false; // we don't want the player to report touch activity on itself\r\n    // see enableTouchActivity in Component\r\n\r\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\r\n\r\n    if (!options.language) {\r\n      if (typeof tag.closest === 'function') {\r\n        var closest = tag.closest('[lang]');\r\n\r\n        if (closest && closest.getAttribute) {\r\n          options.language = closest.getAttribute('lang');\r\n        }\r\n      } else {\r\n        var element = tag;\r\n\r\n        while (element && element.nodeType === 1) {\r\n          if (getAttributes(element).hasOwnProperty('lang')) {\r\n            options.language = element.getAttribute('lang');\r\n            break;\r\n          }\r\n\r\n          element = element.parentNode;\r\n        }\r\n      }\r\n    } // Run base component initializing with new options\r\n\r\n\r\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\r\n\r\n    _this.boundDocumentFullscreenChange_ = function (e) {\r\n      return _this.documentFullscreenChange_(e);\r\n    };\r\n\r\n    _this.boundFullWindowOnEscKey_ = function (e) {\r\n      return _this.fullWindowOnEscKey(e);\r\n    };\r\n\r\n    _this.boundUpdateStyleEl_ = function (e) {\r\n      return _this.updateStyleEl_(e);\r\n    };\r\n\r\n    _this.boundApplyInitTime_ = function (e) {\r\n      return _this.applyInitTime_(e);\r\n    };\r\n\r\n    _this.boundUpdateCurrentBreakpoint_ = function (e) {\r\n      return _this.updateCurrentBreakpoint_(e);\r\n    };\r\n\r\n    _this.boundHandleTechClick_ = function (e) {\r\n      return _this.handleTechClick_(e);\r\n    };\r\n\r\n    _this.boundHandleTechDoubleClick_ = function (e) {\r\n      return _this.handleTechDoubleClick_(e);\r\n    };\r\n\r\n    _this.boundHandleTechTouchStart_ = function (e) {\r\n      return _this.handleTechTouchStart_(e);\r\n    };\r\n\r\n    _this.boundHandleTechTouchMove_ = function (e) {\r\n      return _this.handleTechTouchMove_(e);\r\n    };\r\n\r\n    _this.boundHandleTechTouchEnd_ = function (e) {\r\n      return _this.handleTechTouchEnd_(e);\r\n    };\r\n\r\n    _this.boundHandleTechTap_ = function (e) {\r\n      return _this.handleTechTap_(e);\r\n    }; // default isFullscreen_ to false\r\n\r\n\r\n    _this.isFullscreen_ = false; // create logger\r\n\r\n    _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\r\n\r\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\r\n\r\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\r\n    // and a seek is happening\r\n\r\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\r\n\r\n    _this.isReady_ = false; // Init state hasStarted_\r\n\r\n    _this.hasStarted_ = false; // Init state userActive_\r\n\r\n    _this.userActive_ = false; // Init debugEnabled_\r\n\r\n    _this.debugEnabled_ = false; // Init state audioOnlyMode_\r\n\r\n    _this.audioOnlyMode_ = false; // Init state audioPosterMode_\r\n\r\n    _this.audioPosterMode_ = false; // Init state audioOnlyCache_\r\n\r\n    _this.audioOnlyCache_ = {\r\n      playerHeight: null,\r\n      hiddenChildren: []\r\n    }; // if the global option object was accidentally blown away by\r\n    // someone, bail early with an informative error\r\n\r\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\r\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\r\n    } // Store the original tag used to set options\r\n\r\n\r\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\r\n\r\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\r\n\r\n    _this.language(_this.options_.language); // Update Supported Languages\r\n\r\n\r\n    if (options.languages) {\r\n      // Normalise player option languages to lowercase\r\n      var languagesToLower = {};\r\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\r\n        languagesToLower[name.toLowerCase()] = options.languages[name];\r\n      });\r\n      _this.languages_ = languagesToLower;\r\n    } else {\r\n      _this.languages_ = Player.prototype.options_.languages;\r\n    }\r\n\r\n    _this.resetCache_(); // Set poster\r\n\r\n\r\n    _this.poster_ = options.poster || ''; // Set controls\r\n\r\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\r\n    // now remove immediately so native controls don't flash.\r\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\r\n\r\n    tag.controls = false;\r\n    tag.removeAttribute('controls');\r\n    _this.changingSrc_ = false;\r\n    _this.playCallbacks_ = [];\r\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\r\n\r\n    if (tag.hasAttribute('autoplay')) {\r\n      _this.autoplay(true);\r\n    } else {\r\n      // otherwise use the setter to validate and\r\n      // set the correct value.\r\n      _this.autoplay(_this.options_.autoplay);\r\n    } // check plugins\r\n\r\n\r\n    if (options.plugins) {\r\n      Object.keys(options.plugins).forEach(function (name) {\r\n        if (typeof _this[name] !== 'function') {\r\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\r\n        }\r\n      });\r\n    }\r\n    /*\r\n     * Store the internal state of scrubbing\r\n     *\r\n     * @private\r\n     * @return {Boolean} True if the user is scrubbing\r\n     */\r\n\r\n\r\n    _this.scrubbing_ = false;\r\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\r\n\r\n    evented(_assertThisInitialized(_this), {\r\n      eventBusKey: 'el_'\r\n    }); // listen to document and player fullscreenchange handlers so we receive those events\r\n    // before a user can receive them so we can update isFullscreen appropriately.\r\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\r\n    // our isFullscreen method is updated properly for internal components as well as external.\r\n\r\n    if (_this.fsApi_.requestFullscreen) {\r\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\r\n\r\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\r\n    }\r\n\r\n    if (_this.fluid_) {\r\n      _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\r\n    } // We also want to pass the original player options to each component and plugin\r\n    // as well so they don't need to reach back into the player for options later.\r\n    // We also need to do another copy of this.options_ so we don't end up with\r\n    // an infinite loop.\r\n\r\n\r\n    var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\r\n\r\n    if (options.plugins) {\r\n      Object.keys(options.plugins).forEach(function (name) {\r\n        _this[name](options.plugins[name]);\r\n      });\r\n    } // Enable debug mode to fire debugon event for all plugins.\r\n\r\n\r\n    if (options.debug) {\r\n      _this.debug(true);\r\n    }\r\n\r\n    _this.options_.playerOptions = playerOptionsCopy;\r\n    _this.middleware_ = [];\r\n\r\n    _this.playbackRates(options.playbackRates);\r\n\r\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\r\n\r\n\r\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\r\n    // set because the element doesn't exist yet.\r\n\r\n\r\n    if (_this.controls()) {\r\n      _this.addClass('vjs-controls-enabled');\r\n    } else {\r\n      _this.addClass('vjs-controls-disabled');\r\n    } // Set ARIA label and region role depending on player type\r\n\r\n\r\n    _this.el_.setAttribute('role', 'region');\r\n\r\n    if (_this.isAudio()) {\r\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\r\n    } else {\r\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\r\n    }\r\n\r\n    if (_this.isAudio()) {\r\n      _this.addClass('vjs-audio');\r\n    }\r\n\r\n    if (_this.flexNotSupported_()) {\r\n      _this.addClass('vjs-no-flex');\r\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\r\n    // using events, since devices can have both touch and mouse events.\r\n    // TODO: Make this check be performed again when the window switches between monitors\r\n    // (See https://github.com/videojs/video.js/issues/5683)\r\n\r\n\r\n    if (TOUCH_ENABLED) {\r\n      _this.addClass('vjs-touch-enabled');\r\n    } // iOS Safari has broken hover handling\r\n\r\n\r\n    if (!IS_IOS) {\r\n      _this.addClass('vjs-workinghover');\r\n    } // Make player easily findable by ID\r\n\r\n\r\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\r\n\r\n    var majorVersion = version$5.split('.')[0];\r\n\r\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\r\n    // like the control bar show themselves if needed\r\n\r\n\r\n    _this.userActive(true);\r\n\r\n    _this.reportUserActivity();\r\n\r\n    _this.one('play', function (e) {\r\n      return _this.listenForUserActivity_(e);\r\n    });\r\n\r\n    _this.on('stageclick', function (e) {\r\n      return _this.handleStageClick_(e);\r\n    });\r\n\r\n    _this.on('keydown', function (e) {\r\n      return _this.handleKeyDown(e);\r\n    });\r\n\r\n    _this.on('languagechange', function (e) {\r\n      return _this.handleLanguagechange(e);\r\n    });\r\n\r\n    _this.breakpoints(_this.options_.breakpoints);\r\n\r\n    _this.responsive(_this.options_.responsive); // Calling both the audio mode methods after the player is fully\r\n    // setup to be able to listen to the events triggered by them\r\n\r\n\r\n    _this.on('ready', function () {\r\n      // Calling the audioPosterMode method first so that\r\n      // the audioOnlyMode can take precedence when both options are set to true\r\n      _this.audioPosterMode(_this.options_.audioPosterMode);\r\n\r\n      _this.audioOnlyMode(_this.options_.audioOnlyMode);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Destroys the video player and does any necessary cleanup.\r\n   *\r\n   * This is especially helpful if you are dynamically adding and removing videos\r\n   * to/from the DOM.\r\n   *\r\n   * @fires Player#dispose\r\n   */\r\n\r\n\r\n  var _proto = Player.prototype;\r\n\r\n  _proto.dispose = function dispose() {\r\n    var _this2 = this;\r\n\r\n    /**\r\n     * Called when the player is being disposed of.\r\n     *\r\n     * @event Player#dispose\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('dispose'); // prevent dispose from being called twice\r\n\r\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\r\n\r\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\r\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\r\n\r\n    if (this.styleEl_ && this.styleEl_.parentNode) {\r\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\r\n      this.styleEl_ = null;\r\n    } // Kill reference to this player\r\n\r\n\r\n    Player.players[this.id_] = null;\r\n\r\n    if (this.tag && this.tag.player) {\r\n      this.tag.player = null;\r\n    }\r\n\r\n    if (this.el_ && this.el_.player) {\r\n      this.el_.player = null;\r\n    }\r\n\r\n    if (this.tech_) {\r\n      this.tech_.dispose();\r\n      this.isPosterFromTech_ = false;\r\n      this.poster_ = '';\r\n    }\r\n\r\n    if (this.playerElIngest_) {\r\n      this.playerElIngest_ = null;\r\n    }\r\n\r\n    if (this.tag) {\r\n      this.tag = null;\r\n    }\r\n\r\n    clearCacheForPlayer(this); // remove all event handlers for track lists\r\n    // all tracks and track listeners are removed on\r\n    // tech dispose\r\n\r\n    ALL.names.forEach(function (name) {\r\n      var props = ALL[name];\r\n\r\n      var list = _this2[props.getterName](); // if it is not a native list\r\n      // we have to manually remove event listeners\r\n\r\n\r\n      if (list && list.off) {\r\n        list.off();\r\n      }\r\n    }); // the actual .el_ is removed here, or replaced if\r\n\r\n    _Component.prototype.dispose.call(this, {\r\n      restoreEl: this.options_.restoreEl\r\n    });\r\n  }\r\n  /**\r\n   * Create the `Player`'s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The DOM element that gets created.\r\n   */\r\n  ;\r\n\r\n  _proto.createEl = function createEl() {\r\n    var tag = this.tag;\r\n    var el;\r\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\r\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\r\n\r\n    if (playerElIngest) {\r\n      el = this.el_ = tag.parentNode;\r\n    } else if (!divEmbed) {\r\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\r\n    } // Copy over all the attributes from the tag, including ID and class\r\n    // ID will now reference player box, not the video tag\r\n\r\n\r\n    var attrs = getAttributes(tag);\r\n\r\n    if (divEmbed) {\r\n      el = this.el_ = tag;\r\n      tag = this.tag = document.createElement('video');\r\n\r\n      while (el.children.length) {\r\n        tag.appendChild(el.firstChild);\r\n      }\r\n\r\n      if (!hasClass(el, 'video-js')) {\r\n        addClass(el, 'video-js');\r\n      }\r\n\r\n      el.appendChild(tag);\r\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\r\n      // to our new `video` element. This will move things like\r\n      // `src` or `controls` that were set via js before the player\r\n      // was initialized.\r\n\r\n      Object.keys(el).forEach(function (k) {\r\n        try {\r\n          tag[k] = el[k];\r\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\r\n        }\r\n      });\r\n    } // set tabindex to -1 to remove the video element from the focus order\r\n\r\n\r\n    tag.setAttribute('tabindex', '-1');\r\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\r\n    // for the same issue with Chrome (on Windows) with JAWS.\r\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\r\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\r\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\r\n\r\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\r\n      tag.setAttribute('role', 'application');\r\n      attrs.role = 'application';\r\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\r\n\r\n\r\n    tag.removeAttribute('width');\r\n    tag.removeAttribute('height');\r\n\r\n    if ('width' in attrs) {\r\n      delete attrs.width;\r\n    }\r\n\r\n    if ('height' in attrs) {\r\n      delete attrs.height;\r\n    }\r\n\r\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\r\n      // don't copy over the class attribute to the player element when we're in a div embed\r\n      // the class is already set up properly in the divEmbed case\r\n      // and we want to make sure that the `video-js` class doesn't get lost\r\n      if (!(divEmbed && attr === 'class')) {\r\n        el.setAttribute(attr, attrs[attr]);\r\n      }\r\n\r\n      if (divEmbed) {\r\n        tag.setAttribute(attr, attrs[attr]);\r\n      }\r\n    }); // Update tag id/class for use as HTML5 playback tech\r\n    // Might think we should do this after embedding in container so .vjs-tech class\r\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\r\n\r\n    tag.playerId = tag.id;\r\n    tag.id += '_html5_api';\r\n    tag.className = 'vjs-tech'; // Make player findable on elements\r\n\r\n    tag.player = el.player = this; // Default state of video is paused\r\n\r\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\r\n    // of the player in a way that's still overrideable by CSS, just like the\r\n    // video element\r\n\r\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\r\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\r\n      var defaultsStyleEl = $('.vjs-styles-defaults');\r\n      var head = $('head');\r\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\r\n    }\r\n\r\n    this.fill_ = false;\r\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\r\n\r\n    this.width(this.options_.width);\r\n    this.height(this.options_.height);\r\n    this.fill(this.options_.fill);\r\n    this.fluid(this.options_.fluid);\r\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\r\n\r\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\r\n    // because IE doesn't hide them completely from screen readers.\r\n\r\n    var links = tag.getElementsByTagName('a');\r\n\r\n    for (var i = 0; i < links.length; i++) {\r\n      var linkEl = links.item(i);\r\n      addClass(linkEl, 'vjs-hidden');\r\n      linkEl.setAttribute('hidden', 'hidden');\r\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\r\n    // keep track of the original for later so we can know if the source originally failed\r\n\r\n\r\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\r\n\r\n    if (tag.parentNode && !playerElIngest) {\r\n      tag.parentNode.insertBefore(el, tag);\r\n    } // insert the tag as the first child of the player element\r\n    // then manually add it to the children array so that this.addChild\r\n    // will work properly for other components\r\n    //\r\n    // Breaks iPhone, fixed in HTML5 setup.\r\n\r\n\r\n    prependTo(tag, el);\r\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\r\n    // if it's been set to something different to the doc\r\n\r\n    this.el_.setAttribute('lang', this.language_);\r\n    this.el_.setAttribute('translate', 'no');\r\n    this.el_ = el;\r\n    return el;\r\n  }\r\n  /**\r\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\r\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\r\n   * behavior.\r\n   *\r\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\r\n   *\r\n   * @param {string} [value]\r\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\r\n   *        given, must be one of `anonymous` or `use-credentials`.\r\n   *\r\n   * @return {string|undefined}\r\n   *         - The current crossOrigin value of the `Player` when getting.\r\n   *         - undefined when setting\r\n   */\r\n  ;\r\n\r\n  _proto.crossOrigin = function crossOrigin(value) {\r\n    if (!value) {\r\n      return this.techGet_('crossOrigin');\r\n    }\r\n\r\n    if (value !== 'anonymous' && value !== 'use-credentials') {\r\n      log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\r\n      return;\r\n    }\r\n\r\n    this.techCall_('setCrossOrigin', value);\r\n    return;\r\n  }\r\n  /**\r\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\r\n   * To get the current width use `currentWidth()`.\r\n   *\r\n   * @param {number} [value]\r\n   *        The value to set the `Player`'s width to.\r\n   *\r\n   * @return {number}\r\n   *         The current width of the `Player` when getting.\r\n   */\r\n  ;\r\n\r\n  _proto.width = function width(value) {\r\n    return this.dimension('width', value);\r\n  }\r\n  /**\r\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\r\n   * To get the current height use `currentheight()`.\r\n   *\r\n   * @param {number} [value]\r\n   *        The value to set the `Player`'s heigth to.\r\n   *\r\n   * @return {number}\r\n   *         The current height of the `Player` when getting.\r\n   */\r\n  ;\r\n\r\n  _proto.height = function height(value) {\r\n    return this.dimension('height', value);\r\n  }\r\n  /**\r\n   * A getter/setter for the `Player`'s width & height.\r\n   *\r\n   * @param {string} dimension\r\n   *        This string can be:\r\n   *        - 'width'\r\n   *        - 'height'\r\n   *\r\n   * @param {number} [value]\r\n   *        Value for dimension specified in the first argument.\r\n   *\r\n   * @return {number}\r\n   *         The dimension arguments value when getting (width/height).\r\n   */\r\n  ;\r\n\r\n  _proto.dimension = function dimension(_dimension, value) {\r\n    var privDimension = _dimension + '_';\r\n\r\n    if (value === undefined) {\r\n      return this[privDimension] || 0;\r\n    }\r\n\r\n    if (value === '' || value === 'auto') {\r\n      // If an empty string is given, reset the dimension to be automatic\r\n      this[privDimension] = undefined;\r\n      this.updateStyleEl_();\r\n      return;\r\n    }\r\n\r\n    var parsedVal = parseFloat(value);\r\n\r\n    if (isNaN(parsedVal)) {\r\n      log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\r\n      return;\r\n    }\r\n\r\n    this[privDimension] = parsedVal;\r\n    this.updateStyleEl_();\r\n  }\r\n  /**\r\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\r\n   *\r\n   * Turning this on will turn off fill mode.\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - A value of true adds the class.\r\n   *        - A value of false removes the class.\r\n   *        - No value will be a getter.\r\n   *\r\n   * @return {boolean|undefined}\r\n   *         - The value of fluid when getting.\r\n   *         - `undefined` when setting.\r\n   */\r\n  ;\r\n\r\n  _proto.fluid = function fluid(bool) {\r\n    var _this3 = this;\r\n\r\n    if (bool === undefined) {\r\n      return !!this.fluid_;\r\n    }\r\n\r\n    this.fluid_ = !!bool;\r\n\r\n    if (isEvented(this)) {\r\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\r\n    }\r\n\r\n    if (bool) {\r\n      this.addClass('vjs-fluid');\r\n      this.fill(false);\r\n      addEventedCallback(this, function () {\r\n        _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\r\n      });\r\n    } else {\r\n      this.removeClass('vjs-fluid');\r\n    }\r\n\r\n    this.updateStyleEl_();\r\n  }\r\n  /**\r\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\r\n   *\r\n   * Turning this on will turn off fluid mode.\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - A value of true adds the class.\r\n   *        - A value of false removes the class.\r\n   *        - No value will be a getter.\r\n   *\r\n   * @return {boolean|undefined}\r\n   *         - The value of fluid when getting.\r\n   *         - `undefined` when setting.\r\n   */\r\n  ;\r\n\r\n  _proto.fill = function fill(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.fill_;\r\n    }\r\n\r\n    this.fill_ = !!bool;\r\n\r\n    if (bool) {\r\n      this.addClass('vjs-fill');\r\n      this.fluid(false);\r\n    } else {\r\n      this.removeClass('vjs-fill');\r\n    }\r\n  }\r\n  /**\r\n   * Get/Set the aspect ratio\r\n   *\r\n   * @param {string} [ratio]\r\n   *        Aspect ratio for player\r\n   *\r\n   * @return {string|undefined}\r\n   *         returns the current aspect ratio when getting\r\n   */\r\n\r\n  /**\r\n   * A getter/setter for the `Player`'s aspect ratio.\r\n   *\r\n   * @param {string} [ratio]\r\n   *        The value to set the `Player`'s aspect ratio to.\r\n   *\r\n   * @return {string|undefined}\r\n   *         - The current aspect ratio of the `Player` when getting.\r\n   *         - undefined when setting\r\n   */\r\n  ;\r\n\r\n  _proto.aspectRatio = function aspectRatio(ratio) {\r\n    if (ratio === undefined) {\r\n      return this.aspectRatio_;\r\n    } // Check for width:height format\r\n\r\n\r\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\r\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\r\n    }\r\n\r\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\r\n    // because in fixed mode you could calculate width and height yourself.\r\n\r\n    this.fluid(true);\r\n    this.updateStyleEl_();\r\n  }\r\n  /**\r\n   * Update styles of the `Player` element (height, width and aspect ratio).\r\n   *\r\n   * @private\r\n   * @listens Tech#loadedmetadata\r\n   */\r\n  ;\r\n\r\n  _proto.updateStyleEl_ = function updateStyleEl_() {\r\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\r\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\r\n\r\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\r\n\r\n      var techEl = this.tech_ && this.tech_.el();\r\n\r\n      if (techEl) {\r\n        if (_width >= 0) {\r\n          techEl.width = _width;\r\n        }\r\n\r\n        if (_height >= 0) {\r\n          techEl.height = _height;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var width;\r\n    var height;\r\n    var aspectRatio;\r\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\r\n\r\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\r\n      // Use any aspectRatio that's been specifically set\r\n      aspectRatio = this.aspectRatio_;\r\n    } else if (this.videoWidth() > 0) {\r\n      // Otherwise try to get the aspect ratio from the video metadata\r\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\r\n    } else {\r\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\r\n      aspectRatio = '16:9';\r\n    } // Get the ratio as a decimal we can use to calculate dimensions\r\n\r\n\r\n    var ratioParts = aspectRatio.split(':');\r\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\r\n\r\n    if (this.width_ !== undefined) {\r\n      // Use any width that's been specifically set\r\n      width = this.width_;\r\n    } else if (this.height_ !== undefined) {\r\n      // Or calulate the width from the aspect ratio if a height has been set\r\n      width = this.height_ / ratioMultiplier;\r\n    } else {\r\n      // Or use the video's metadata, or use the video el's default of 300\r\n      width = this.videoWidth() || 300;\r\n    }\r\n\r\n    if (this.height_ !== undefined) {\r\n      // Use any height that's been specifically set\r\n      height = this.height_;\r\n    } else {\r\n      // Otherwise calculate the height from the ratio and the width\r\n      height = width * ratioMultiplier;\r\n    } // Ensure the CSS class is valid by starting with an alpha character\r\n\r\n\r\n    if (/^[^a-zA-Z]/.test(this.id())) {\r\n      idClass = 'dimensions-' + this.id();\r\n    } else {\r\n      idClass = this.id() + '-dimensions';\r\n    } // Ensure the right class is still on the player for the style element\r\n\r\n\r\n    this.addClass(idClass);\r\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\r\n  }\r\n  /**\r\n   * Load/Create an instance of playback {@link Tech} including element\r\n   * and API methods. Then append the `Tech` element in `Player` as a child.\r\n   *\r\n   * @param {string} techName\r\n   *        name of the playback technology\r\n   *\r\n   * @param {string} source\r\n   *        video source\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.loadTech_ = function loadTech_(techName, source) {\r\n    var _this4 = this;\r\n\r\n    // Pause and remove current playback technology\r\n    if (this.tech_) {\r\n      this.unloadTech_();\r\n    }\r\n\r\n    var titleTechName = toTitleCase$1(techName);\r\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\r\n\r\n    if (titleTechName !== 'Html5' && this.tag) {\r\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\r\n      this.tag.player = null;\r\n      this.tag = null;\r\n    }\r\n\r\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\r\n\r\n    this.isReady_ = false;\r\n    var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\r\n    // because the player is going to handle autoplay on `loadstart`\r\n\r\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\r\n      autoplay = false;\r\n    } // Grab tech-specific options from player options and add source and parent element to use.\r\n\r\n\r\n    var techOptions = {\r\n      source: source,\r\n      autoplay: autoplay,\r\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\r\n      'playerId': this.id(),\r\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\r\n      'playsinline': this.options_.playsinline,\r\n      'preload': this.options_.preload,\r\n      'loop': this.options_.loop,\r\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\r\n      'muted': this.options_.muted,\r\n      'poster': this.poster(),\r\n      'language': this.language(),\r\n      'playerElIngest': this.playerElIngest_ || false,\r\n      'vtt.js': this.options_['vtt.js'],\r\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\r\n      'enableSourceset': this.options_.enableSourceset,\r\n      'Promise': this.options_.Promise\r\n    };\r\n    ALL.names.forEach(function (name) {\r\n      var props = ALL[name];\r\n      techOptions[props.getterName] = _this4[props.privateName];\r\n    });\r\n    assign(techOptions, this.options_[titleTechName]);\r\n    assign(techOptions, this.options_[camelTechName]);\r\n    assign(techOptions, this.options_[techName.toLowerCase()]);\r\n\r\n    if (this.tag) {\r\n      techOptions.tag = this.tag;\r\n    }\r\n\r\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\r\n      techOptions.startTime = this.cache_.currentTime;\r\n    } // Initialize tech instance\r\n\r\n\r\n    var TechClass = Tech.getTech(techName);\r\n\r\n    if (!TechClass) {\r\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\r\n    }\r\n\r\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\r\n\r\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\r\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\r\n\r\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\r\n      _this4.on(_this4.tech_, event, function (e) {\r\n        return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\r\n      });\r\n    });\r\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\r\n      _this4.on(_this4.tech_, event, function (eventObj) {\r\n        if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\r\n          _this4.queuedCallbacks_.push({\r\n            callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\r\n            event: eventObj\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\r\n      });\r\n    });\r\n    this.on(this.tech_, 'loadstart', function (e) {\r\n      return _this4.handleTechLoadStart_(e);\r\n    });\r\n    this.on(this.tech_, 'sourceset', function (e) {\r\n      return _this4.handleTechSourceset_(e);\r\n    });\r\n    this.on(this.tech_, 'waiting', function (e) {\r\n      return _this4.handleTechWaiting_(e);\r\n    });\r\n    this.on(this.tech_, 'ended', function (e) {\r\n      return _this4.handleTechEnded_(e);\r\n    });\r\n    this.on(this.tech_, 'seeking', function (e) {\r\n      return _this4.handleTechSeeking_(e);\r\n    });\r\n    this.on(this.tech_, 'play', function (e) {\r\n      return _this4.handleTechPlay_(e);\r\n    });\r\n    this.on(this.tech_, 'firstplay', function (e) {\r\n      return _this4.handleTechFirstPlay_(e);\r\n    });\r\n    this.on(this.tech_, 'pause', function (e) {\r\n      return _this4.handleTechPause_(e);\r\n    });\r\n    this.on(this.tech_, 'durationchange', function (e) {\r\n      return _this4.handleTechDurationChange_(e);\r\n    });\r\n    this.on(this.tech_, 'fullscreenchange', function (e, data) {\r\n      return _this4.handleTechFullscreenChange_(e, data);\r\n    });\r\n    this.on(this.tech_, 'fullscreenerror', function (e, err) {\r\n      return _this4.handleTechFullscreenError_(e, err);\r\n    });\r\n    this.on(this.tech_, 'enterpictureinpicture', function (e) {\r\n      return _this4.handleTechEnterPictureInPicture_(e);\r\n    });\r\n    this.on(this.tech_, 'leavepictureinpicture', function (e) {\r\n      return _this4.handleTechLeavePictureInPicture_(e);\r\n    });\r\n    this.on(this.tech_, 'error', function (e) {\r\n      return _this4.handleTechError_(e);\r\n    });\r\n    this.on(this.tech_, 'posterchange', function (e) {\r\n      return _this4.handleTechPosterChange_(e);\r\n    });\r\n    this.on(this.tech_, 'textdata', function (e) {\r\n      return _this4.handleTechTextData_(e);\r\n    });\r\n    this.on(this.tech_, 'ratechange', function (e) {\r\n      return _this4.handleTechRateChange_(e);\r\n    });\r\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\r\n    this.usingNativeControls(this.techGet_('controls'));\r\n\r\n    if (this.controls() && !this.usingNativeControls()) {\r\n      this.addTechControlsListeners_();\r\n    } // Add the tech element in the DOM if it was not already there\r\n    // Make sure to not insert the original video element if using Html5\r\n\r\n\r\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\r\n      prependTo(this.tech_.el(), this.el());\r\n    } // Get rid of the original video tag reference after the first tech is loaded\r\n\r\n\r\n    if (this.tag) {\r\n      this.tag.player = null;\r\n      this.tag = null;\r\n    }\r\n  }\r\n  /**\r\n   * Unload and dispose of the current playback {@link Tech}.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.unloadTech_ = function unloadTech_() {\r\n    var _this5 = this;\r\n\r\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\r\n    ALL.names.forEach(function (name) {\r\n      var props = ALL[name];\r\n      _this5[props.privateName] = _this5[props.getterName]();\r\n    });\r\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\r\n    this.isReady_ = false;\r\n    this.tech_.dispose();\r\n    this.tech_ = false;\r\n\r\n    if (this.isPosterFromTech_) {\r\n      this.poster_ = '';\r\n      this.trigger('posterchange');\r\n    }\r\n\r\n    this.isPosterFromTech_ = false;\r\n  }\r\n  /**\r\n   * Return a reference to the current {@link Tech}.\r\n   * It will print a warning by default about the danger of using the tech directly\r\n   * but any argument that is passed in will silence the warning.\r\n   *\r\n   * @param {*} [safety]\r\n   *        Anything passed in to silence the warning\r\n   *\r\n   * @return {Tech}\r\n   *         The Tech\r\n   */\r\n  ;\r\n\r\n  _proto.tech = function tech(safety) {\r\n    if (safety === undefined) {\r\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\r\n    }\r\n\r\n    return this.tech_;\r\n  }\r\n  /**\r\n   * Set up click and touch listeners for the playback element\r\n   *\r\n   * - On desktops: a click on the video itself will toggle playback\r\n   * - On mobile devices: a click on the video toggles controls\r\n   *   which is done by toggling the user state between active and\r\n   *   inactive\r\n   * - A tap can signal that a user has become active or has become inactive\r\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\r\n   *   quick tap should hide them again (signaling the user is in an inactive\r\n   *   viewing state)\r\n   * - In addition to this, we still want the user to be considered inactive after\r\n   *   a few seconds of inactivity.\r\n   *\r\n   * > Note: the only part of iOS interaction we can't mimic with this setup\r\n   * is a touch and hold on the video element counting as activity in order to\r\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\r\n   * on any controls will still keep the user active\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\r\n    // Make sure to remove all the previous listeners in case we are called multiple times.\r\n    this.removeTechControlsListeners_();\r\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\r\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\r\n    // so we'll check if the controls were already showing before reporting user\r\n    // activity\r\n\r\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\r\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\r\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\r\n    // listener cancels out any reportedUserActivity when setting userActive(false)\r\n\r\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\r\n  }\r\n  /**\r\n   * Remove the listeners used for click and tap controls. This is needed for\r\n   * toggling to controls disabled, where a tap/touch should do nothing.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\r\n    // We don't want to just use `this.off()` because there might be other needed\r\n    // listeners added by techs that extend this.\r\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\r\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\r\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\r\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\r\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\r\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\r\n  }\r\n  /**\r\n   * Player waits for the tech to be ready\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechReady_ = function handleTechReady_() {\r\n    this.triggerReady(); // Keep the same volume as before\r\n\r\n    if (this.cache_.volume) {\r\n      this.techCall_('setVolume', this.cache_.volume);\r\n    } // Look if the tech found a higher resolution poster while loading\r\n\r\n\r\n    this.handleTechPosterChange_(); // Update the duration if available\r\n\r\n    this.handleTechDurationChange_();\r\n  }\r\n  /**\r\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\r\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\r\n   * for a video.\r\n   *\r\n   * @fires Player#loadstart\r\n   * @fires Player#firstplay\r\n   * @listens Tech#loadstart\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\r\n    // TODO: Update to use `emptied` event instead. See #1277.\r\n    this.removeClass('vjs-ended');\r\n    this.removeClass('vjs-seeking'); // reset the error state\r\n\r\n    this.error(null); // Update the duration\r\n\r\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\r\n    // The firstplay event relies on both the play and loadstart events\r\n    // which can happen in any order for a new source\r\n\r\n    if (!this.paused()) {\r\n      /**\r\n       * Fired when the user agent begins looking for media data\r\n       *\r\n       * @event Player#loadstart\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('loadstart');\r\n      this.trigger('firstplay');\r\n    } else {\r\n      // reset the hasStarted state\r\n      this.hasStarted(false);\r\n      this.trigger('loadstart');\r\n    } // autoplay happens after loadstart for the browser,\r\n    // so we mimic that behavior\r\n\r\n\r\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\r\n  }\r\n  /**\r\n   * Handle autoplay string values, rather than the typical boolean\r\n   * values that should be handled by the tech. Note that this is not\r\n   * part of any specification. Valid values and what they do can be\r\n   * found on the autoplay getter at Player#autoplay()\r\n   */\r\n  ;\r\n\r\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\r\n    var _this6 = this;\r\n\r\n    if (!this.tech_ || typeof type !== 'string') {\r\n      return;\r\n    } // Save original muted() value, set muted to true, and attempt to play().\r\n    // On promise rejection, restore muted from saved value\r\n\r\n\r\n    var resolveMuted = function resolveMuted() {\r\n      var previouslyMuted = _this6.muted();\r\n\r\n      _this6.muted(true);\r\n\r\n      var restoreMuted = function restoreMuted() {\r\n        _this6.muted(previouslyMuted);\r\n      }; // restore muted on play terminatation\r\n\r\n\r\n      _this6.playTerminatedQueue_.push(restoreMuted);\r\n\r\n      var mutedPromise = _this6.play();\r\n\r\n      if (!isPromise(mutedPromise)) {\r\n        return;\r\n      }\r\n\r\n      return mutedPromise[\"catch\"](function (err) {\r\n        restoreMuted();\r\n        throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\r\n      });\r\n    };\r\n\r\n    var promise; // if muted defaults to true\r\n    // the only thing we can do is call play\r\n\r\n    if (type === 'any' && !this.muted()) {\r\n      promise = this.play();\r\n\r\n      if (isPromise(promise)) {\r\n        promise = promise[\"catch\"](resolveMuted);\r\n      }\r\n    } else if (type === 'muted' && !this.muted()) {\r\n      promise = resolveMuted();\r\n    } else {\r\n      promise = this.play();\r\n    }\r\n\r\n    if (!isPromise(promise)) {\r\n      return;\r\n    }\r\n\r\n    return promise.then(function () {\r\n      _this6.trigger({\r\n        type: 'autoplay-success',\r\n        autoplay: type\r\n      });\r\n    })[\"catch\"](function () {\r\n      _this6.trigger({\r\n        type: 'autoplay-failure',\r\n        autoplay: type\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Update the internal source caches so that we return the correct source from\r\n   * `src()`, `currentSource()`, and `currentSources()`.\r\n   *\r\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\r\n   *         in the current `currentSources` cache.\r\n   *\r\n   *\r\n   * @param {Tech~SourceObject} srcObj\r\n   *        A string or object source to update our caches to.\r\n   */\r\n  ;\r\n\r\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\r\n    if (srcObj === void 0) {\r\n      srcObj = '';\r\n    }\r\n\r\n    var src = srcObj;\r\n    var type = '';\r\n\r\n    if (typeof src !== 'string') {\r\n      src = srcObj.src;\r\n      type = srcObj.type;\r\n    } // make sure all the caches are set to default values\r\n    // to prevent null checking\r\n\r\n\r\n    this.cache_.source = this.cache_.source || {};\r\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\r\n\r\n    if (src && !type) {\r\n      type = findMimetype(this, src);\r\n    } // update `currentSource` cache always\r\n\r\n\r\n    this.cache_.source = mergeOptions$3({}, srcObj, {\r\n      src: src,\r\n      type: type\r\n    });\r\n    var matchingSources = this.cache_.sources.filter(function (s) {\r\n      return s.src && s.src === src;\r\n    });\r\n    var sourceElSources = [];\r\n    var sourceEls = this.$$('source');\r\n    var matchingSourceEls = [];\r\n\r\n    for (var i = 0; i < sourceEls.length; i++) {\r\n      var sourceObj = getAttributes(sourceEls[i]);\r\n      sourceElSources.push(sourceObj);\r\n\r\n      if (sourceObj.src && sourceObj.src === src) {\r\n        matchingSourceEls.push(sourceObj.src);\r\n      }\r\n    } // if we have matching source els but not matching sources\r\n    // the current source cache is not up to date\r\n\r\n\r\n    if (matchingSourceEls.length && !matchingSources.length) {\r\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\r\n      // sources cache to the `currentSource` cache\r\n    } else if (!matchingSources.length) {\r\n      this.cache_.sources = [this.cache_.source];\r\n    } // update the tech `src` cache\r\n\r\n\r\n    this.cache_.src = src;\r\n  }\r\n  /**\r\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\r\n   * causing the media element to reload.\r\n   *\r\n   * It will fire for the initial source and each subsequent source.\r\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\r\n   *\r\n   * The event object for this event contains a `src` property that will contain the source\r\n   * that was available when the event was triggered. This is generally only necessary if Video.js\r\n   * is switching techs while the source was being changed.\r\n   *\r\n   * It is also fired when `load` is called on the player (or media element)\r\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\r\n   * says that the resource selection algorithm needs to be aborted and restarted.\r\n   * In this case, it is very likely that the `src` property will be set to the\r\n   * empty string `\"\"` to indicate we do not know what the source will be but\r\n   * that it is changing.\r\n   *\r\n   * *This event is currently still experimental and may change in minor releases.*\r\n   * __To use this, pass `enableSourceset` option to the player.__\r\n   *\r\n   * @event Player#sourceset\r\n   * @type {EventTarget~Event}\r\n   * @prop {string} src\r\n   *                The source url available when the `sourceset` was triggered.\r\n   *                It will be an empty string if we cannot know what the source is\r\n   *                but know that the source will change.\r\n   */\r\n\r\n  /**\r\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#sourceset\r\n   * @listens Tech#sourceset\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\r\n    var _this7 = this;\r\n\r\n    // only update the source cache when the source\r\n    // was not updated using the player api\r\n    if (!this.changingSrc_) {\r\n      var updateSourceCaches = function updateSourceCaches(src) {\r\n        return _this7.updateSourceCaches_(src);\r\n      };\r\n\r\n      var playerSrc = this.currentSource().src;\r\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\r\n\r\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\r\n        // if both the tech source and the player source were updated we assume\r\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\r\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\r\n          updateSourceCaches = function updateSourceCaches() {};\r\n        }\r\n      } // update the source to the initial source right away\r\n      // in some cases this will be empty string\r\n\r\n\r\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\r\n      // wait for a `loadstart` to update the cache to `currentSrc`.\r\n      // If a sourceset happens before a `loadstart`, we reset the state\r\n\r\n      if (!event.src) {\r\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\r\n          // if a sourceset happens before a `loadstart` there\r\n          // is nothing to do as this `handleTechSourceset_`\r\n          // will be called again and this will be handled there.\r\n          if (e.type === 'sourceset') {\r\n            return;\r\n          }\r\n\r\n          var techSrc = _this7.techGet('currentSrc');\r\n\r\n          _this7.lastSource_.tech = techSrc;\r\n\r\n          _this7.updateSourceCaches_(techSrc);\r\n        });\r\n      }\r\n    }\r\n\r\n    this.lastSource_ = {\r\n      player: this.currentSource().src,\r\n      tech: event.src\r\n    };\r\n    this.trigger({\r\n      src: event.src,\r\n      type: 'sourceset'\r\n    });\r\n  }\r\n  /**\r\n   * Add/remove the vjs-has-started class\r\n   *\r\n   * @fires Player#firstplay\r\n   *\r\n   * @param {boolean} request\r\n   *        - true: adds the class\r\n   *        - false: remove the class\r\n   *\r\n   * @return {boolean}\r\n   *         the boolean value of hasStarted_\r\n   */\r\n  ;\r\n\r\n  _proto.hasStarted = function hasStarted(request) {\r\n    if (request === undefined) {\r\n      // act as getter, if we have no request to change\r\n      return this.hasStarted_;\r\n    }\r\n\r\n    if (request === this.hasStarted_) {\r\n      return;\r\n    }\r\n\r\n    this.hasStarted_ = request;\r\n\r\n    if (this.hasStarted_) {\r\n      this.addClass('vjs-has-started');\r\n      this.trigger('firstplay');\r\n    } else {\r\n      this.removeClass('vjs-has-started');\r\n    }\r\n  }\r\n  /**\r\n   * Fired whenever the media begins or resumes playback\r\n   *\r\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\r\n   * @fires Player#play\r\n   * @listens Tech#play\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechPlay_ = function handleTechPlay_() {\r\n    this.removeClass('vjs-ended');\r\n    this.removeClass('vjs-paused');\r\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\r\n\r\n    this.hasStarted(true);\r\n    /**\r\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\r\n     * playback has started or resumed.\r\n     *\r\n     * @event Player#play\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('play');\r\n  }\r\n  /**\r\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\r\n   *\r\n   * If there were any events queued while the playback rate was zero, fire\r\n   * those events now.\r\n   *\r\n   * @private\r\n   * @method Player#handleTechRateChange_\r\n   * @fires Player#ratechange\r\n   * @listens Tech#ratechange\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\r\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\r\n      this.queuedCallbacks_.forEach(function (queued) {\r\n        return queued.callback(queued.event);\r\n      });\r\n      this.queuedCallbacks_ = [];\r\n    }\r\n\r\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\r\n    /**\r\n     * Fires when the playing speed of the audio/video is changed\r\n     *\r\n     * @event Player#ratechange\r\n     * @type {event}\r\n     */\r\n\r\n    this.trigger('ratechange');\r\n  }\r\n  /**\r\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#waiting\r\n   * @listens Tech#waiting\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\r\n    var _this8 = this;\r\n\r\n    this.addClass('vjs-waiting');\r\n    /**\r\n     * A readyState change on the DOM element has caused playback to stop.\r\n     *\r\n     * @event Player#waiting\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\r\n    // premature removal of the waiting class, wait for the time to change.\r\n\r\n    var timeWhenWaiting = this.currentTime();\r\n\r\n    var timeUpdateListener = function timeUpdateListener() {\r\n      if (timeWhenWaiting !== _this8.currentTime()) {\r\n        _this8.removeClass('vjs-waiting');\r\n\r\n        _this8.off('timeupdate', timeUpdateListener);\r\n      }\r\n    };\r\n\r\n    this.on('timeupdate', timeUpdateListener);\r\n  }\r\n  /**\r\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\r\n   * > Note: This is not consistent between browsers. See #1351\r\n   *\r\n   * @fires Player#canplay\r\n   * @listens Tech#canplay\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\r\n    this.removeClass('vjs-waiting');\r\n    /**\r\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\r\n     *\r\n     * @event Player#canplay\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('canplay');\r\n  }\r\n  /**\r\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#canplaythrough\r\n   * @listens Tech#canplaythrough\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\r\n    this.removeClass('vjs-waiting');\r\n    /**\r\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\r\n     * entire media file can be played without buffering.\r\n     *\r\n     * @event Player#canplaythrough\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('canplaythrough');\r\n  }\r\n  /**\r\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#playing\r\n   * @listens Tech#playing\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\r\n    this.removeClass('vjs-waiting');\r\n    /**\r\n     * The media is no longer blocked from playback, and has started playing.\r\n     *\r\n     * @event Player#playing\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('playing');\r\n  }\r\n  /**\r\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#seeking\r\n   * @listens Tech#seeking\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\r\n    this.addClass('vjs-seeking');\r\n    /**\r\n     * Fired whenever the player is jumping to a new time\r\n     *\r\n     * @event Player#seeking\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('seeking');\r\n  }\r\n  /**\r\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#seeked\r\n   * @listens Tech#seeked\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\r\n    this.removeClass('vjs-seeking');\r\n    this.removeClass('vjs-ended');\r\n    /**\r\n     * Fired when the player has finished jumping to a new time\r\n     *\r\n     * @event Player#seeked\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('seeked');\r\n  }\r\n  /**\r\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#firstplay\r\n   * @listens Tech#firstplay\r\n   * @deprecated As of 6.0 firstplay event is deprecated.\r\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\r\n    // If the first starttime attribute is specified\r\n    // then we will start at the given offset in seconds\r\n    if (this.options_.starttime) {\r\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\r\n      this.currentTime(this.options_.starttime);\r\n    }\r\n\r\n    this.addClass('vjs-has-started');\r\n    /**\r\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\r\n     * probably not the best implementation yet, so use sparingly. If you don't have a\r\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\r\n     *\r\n     * @event Player#firstplay\r\n     * @deprecated As of 6.0 firstplay event is deprecated.\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('firstplay');\r\n  }\r\n  /**\r\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#pause\r\n   * @listens Tech#pause\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechPause_ = function handleTechPause_() {\r\n    this.removeClass('vjs-playing');\r\n    this.addClass('vjs-paused');\r\n    /**\r\n     * Fired whenever the media has been paused\r\n     *\r\n     * @event Player#pause\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('pause');\r\n  }\r\n  /**\r\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#ended\r\n   * @listens Tech#ended\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechEnded_ = function handleTechEnded_() {\r\n    this.addClass('vjs-ended');\r\n    this.removeClass('vjs-waiting');\r\n\r\n    if (this.options_.loop) {\r\n      this.currentTime(0);\r\n      this.play();\r\n    } else if (!this.paused()) {\r\n      this.pause();\r\n    }\r\n    /**\r\n     * Fired when the end of the media resource is reached (currentTime == duration)\r\n     *\r\n     * @event Player#ended\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n\r\n    this.trigger('ended');\r\n  }\r\n  /**\r\n   * Fired when the duration of the media resource is first known or changed\r\n   *\r\n   * @listens Tech#durationchange\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\r\n    this.duration(this.techGet_('duration'));\r\n  }\r\n  /**\r\n   * Handle a click on the media element to play/pause\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the event that caused this function to trigger\r\n   *\r\n   * @listens Tech#click\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechClick_ = function handleTechClick_(event) {\r\n    // When controls are disabled a click should not toggle playback because\r\n    // the click is considered a control\r\n    if (!this.controls_) {\r\n      return;\r\n    }\r\n\r\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\r\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\r\n        this.options_.userActions.click.call(this, event);\r\n      } else if (this.paused()) {\r\n        silencePromise(this.play());\r\n      } else {\r\n        this.pause();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Handle a double-click on the media element to enter/exit fullscreen\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the event that caused this function to trigger\r\n   *\r\n   * @listens Tech#dblclick\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\r\n    if (!this.controls_) {\r\n      return;\r\n    } // we do not want to toggle fullscreen state\r\n    // when double-clicking inside a control bar or a modal\r\n\r\n\r\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\r\n      return el.contains(event.target);\r\n    });\r\n\r\n    if (!inAllowedEls) {\r\n      /*\r\n       * options.userActions.doubleClick\r\n       *\r\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\r\n       * Set to `false` to disable double-click handling\r\n       * Set to a function to substitute an external double-click handler\r\n       */\r\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\r\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\r\n          this.options_.userActions.doubleClick.call(this, event);\r\n        } else if (this.isFullscreen()) {\r\n          this.exitFullscreen();\r\n        } else {\r\n          this.requestFullscreen();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Handle a tap on the media element. It will toggle the user\r\n   * activity state, which hides and shows the controls.\r\n   *\r\n   * @listens Tech#tap\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechTap_ = function handleTechTap_() {\r\n    this.userActive(!this.userActive());\r\n  }\r\n  /**\r\n   * Handle touch to start\r\n   *\r\n   * @listens Tech#touchstart\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\r\n    this.userWasActive = this.userActive();\r\n  }\r\n  /**\r\n   * Handle touch to move\r\n   *\r\n   * @listens Tech#touchmove\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\r\n    if (this.userWasActive) {\r\n      this.reportUserActivity();\r\n    }\r\n  }\r\n  /**\r\n   * Handle touch to end\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the touchend event that triggered\r\n   *        this function\r\n   *\r\n   * @listens Tech#touchend\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\r\n    // Stop the mouse events from also happening\r\n    if (event.cancelable) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  /**\r\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\r\n   * use stageclick events triggered from inside the SWF instead\r\n   *\r\n   * @private\r\n   * @listens stageclick\r\n   */\r\n  ;\r\n\r\n  _proto.handleStageClick_ = function handleStageClick_() {\r\n    this.reportUserActivity();\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\r\n    if (this.isFullscreen()) {\r\n      this.addClass('vjs-fullscreen');\r\n    } else {\r\n      this.removeClass('vjs-fullscreen');\r\n    }\r\n  }\r\n  /**\r\n   * when the document fschange event triggers it calls this\r\n   */\r\n  ;\r\n\r\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\r\n    var targetPlayer = e.target.player; // if another player was fullscreen\r\n    // do a null check for targetPlayer because older firefox's would put document as e.target\r\n\r\n    if (targetPlayer && targetPlayer !== this) {\r\n      return;\r\n    }\r\n\r\n    var el = this.el();\r\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\r\n\r\n    if (!isFs && el.matches) {\r\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\r\n    } else if (!isFs && el.msMatchesSelector) {\r\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\r\n    }\r\n\r\n    this.isFullscreen(isFs);\r\n  }\r\n  /**\r\n   * Handle Tech Fullscreen Change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the fullscreenchange event that triggered this function\r\n   *\r\n   * @param {Object} data\r\n   *        the data that was sent with the event\r\n   *\r\n   * @private\r\n   * @listens Tech#fullscreenchange\r\n   * @fires Player#fullscreenchange\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\r\n    var _this9 = this;\r\n\r\n    if (data) {\r\n      if (data.nativeIOSFullscreen) {\r\n        this.addClass('vjs-ios-native-fs');\r\n        this.tech_.one('webkitendfullscreen', function () {\r\n          _this9.removeClass('vjs-ios-native-fs');\r\n        });\r\n      }\r\n\r\n      this.isFullscreen(data.isFullscreen);\r\n    }\r\n  };\r\n\r\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\r\n    this.trigger('fullscreenerror', err);\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\r\n    if (this.isInPictureInPicture()) {\r\n      this.addClass('vjs-picture-in-picture');\r\n    } else {\r\n      this.removeClass('vjs-picture-in-picture');\r\n    }\r\n  }\r\n  /**\r\n   * Handle Tech Enter Picture-in-Picture.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the enterpictureinpicture event that triggered this function\r\n   *\r\n   * @private\r\n   * @listens Tech#enterpictureinpicture\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\r\n    this.isInPictureInPicture(true);\r\n  }\r\n  /**\r\n   * Handle Tech Leave Picture-in-Picture.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the leavepictureinpicture event that triggered this function\r\n   *\r\n   * @private\r\n   * @listens Tech#leavepictureinpicture\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\r\n    this.isInPictureInPicture(false);\r\n  }\r\n  /**\r\n   * Fires when an error occurred during the loading of an audio/video.\r\n   *\r\n   * @private\r\n   * @listens Tech#error\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechError_ = function handleTechError_() {\r\n    var error = this.tech_.error();\r\n    this.error(error);\r\n  }\r\n  /**\r\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#textdata\r\n   * @listens Tech#textdata\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechTextData_ = function handleTechTextData_() {\r\n    var data = null;\r\n\r\n    if (arguments.length > 1) {\r\n      data = arguments[1];\r\n    }\r\n    /**\r\n     * Fires when we get a textdata event from tech\r\n     *\r\n     * @event Player#textdata\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n\r\n    this.trigger('textdata', data);\r\n  }\r\n  /**\r\n   * Get object for cached values.\r\n   *\r\n   * @return {Object}\r\n   *         get the current object cache\r\n   */\r\n  ;\r\n\r\n  _proto.getCache = function getCache() {\r\n    return this.cache_;\r\n  }\r\n  /**\r\n   * Resets the internal cache object.\r\n   *\r\n   * Using this function outside the player constructor or reset method may\r\n   * have unintended side-effects.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.resetCache_ = function resetCache_() {\r\n    this.cache_ = {\r\n      // Right now, the currentTime is not _really_ cached because it is always\r\n      // retrieved from the tech (see: currentTime). However, for completeness,\r\n      // we set it to zero here to ensure that if we do start actually caching\r\n      // it, we reset it along with everything else.\r\n      currentTime: 0,\r\n      initTime: 0,\r\n      inactivityTimeout: this.options_.inactivityTimeout,\r\n      duration: NaN,\r\n      lastVolume: 1,\r\n      lastPlaybackRate: this.defaultPlaybackRate(),\r\n      media: null,\r\n      src: '',\r\n      source: {},\r\n      sources: [],\r\n      playbackRates: [],\r\n      volume: 1\r\n    };\r\n  }\r\n  /**\r\n   * Pass values to the playback tech\r\n   *\r\n   * @param {string} [method]\r\n   *        the method to call\r\n   *\r\n   * @param {Object} arg\r\n   *        the argument to pass\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.techCall_ = function techCall_(method, arg) {\r\n    // If it's not ready yet, call method when it is\r\n    this.ready(function () {\r\n      if (method in allowedSetters) {\r\n        return set(this.middleware_, this.tech_, method, arg);\r\n      } else if (method in allowedMediators) {\r\n        return mediate(this.middleware_, this.tech_, method, arg);\r\n      }\r\n\r\n      try {\r\n        if (this.tech_) {\r\n          this.tech_[method](arg);\r\n        }\r\n      } catch (e) {\r\n        log$1(e);\r\n        throw e;\r\n      }\r\n    }, true);\r\n  }\r\n  /**\r\n   * Get calls can't wait for the tech, and sometimes don't need to.\r\n   *\r\n   * @param {string} method\r\n   *        Tech method\r\n   *\r\n   * @return {Function|undefined}\r\n   *         the method or undefined\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.techGet_ = function techGet_(method) {\r\n    if (!this.tech_ || !this.tech_.isReady_) {\r\n      return;\r\n    }\r\n\r\n    if (method in allowedGetters) {\r\n      return get(this.middleware_, this.tech_, method);\r\n    } else if (method in allowedMediators) {\r\n      return mediate(this.middleware_, this.tech_, method);\r\n    } // Flash likes to die and reload when you hide or reposition it.\r\n    // In these cases the object methods go away and we get errors.\r\n    // TODO: Is this needed for techs other than Flash?\r\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\r\n\r\n\r\n    try {\r\n      return this.tech_[method]();\r\n    } catch (e) {\r\n      // When building additional tech libs, an expected method may not be defined yet\r\n      if (this.tech_[method] === undefined) {\r\n        log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\r\n        throw e;\r\n      } // When a method isn't available on the object it throws a TypeError\r\n\r\n\r\n      if (e.name === 'TypeError') {\r\n        log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\r\n        this.tech_.isReady_ = false;\r\n        throw e;\r\n      } // If error unknown, just log and throw\r\n\r\n\r\n      log$1(e);\r\n      throw e;\r\n    }\r\n  }\r\n  /**\r\n   * Attempt to begin playback at the first opportunity.\r\n   *\r\n   * @return {Promise|undefined}\r\n   *         Returns a promise if the browser supports Promises (or one\r\n   *         was passed in as an option). This promise will be resolved on\r\n   *         the return value of play. If this is undefined it will fulfill the\r\n   *         promise chain otherwise the promise chain will be fulfilled when\r\n   *         the promise from play is fulfilled.\r\n   */\r\n  ;\r\n\r\n  _proto.play = function play() {\r\n    var _this10 = this;\r\n\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (PromiseClass) {\r\n      return new PromiseClass(function (resolve) {\r\n        _this10.play_(resolve);\r\n      });\r\n    }\r\n\r\n    return this.play_();\r\n  }\r\n  /**\r\n   * The actual logic for play, takes a callback that will be resolved on the\r\n   * return value of play. This allows us to resolve to the play promise if there\r\n   * is one on modern browsers.\r\n   *\r\n   * @private\r\n   * @param {Function} [callback]\r\n   *        The callback that should be called when the techs play is actually called\r\n   */\r\n  ;\r\n\r\n  _proto.play_ = function play_(callback) {\r\n    var _this11 = this;\r\n\r\n    if (callback === void 0) {\r\n      callback = silencePromise;\r\n    }\r\n\r\n    this.playCallbacks_.push(callback);\r\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\r\n    var isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS); // treat calls to play_ somewhat like the `one` event function\r\n\r\n    if (this.waitToPlay_) {\r\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\r\n      this.waitToPlay_ = null;\r\n    } // if the player/tech is not ready or the src itself is not ready\r\n    // queue up a call to play on `ready` or `loadstart`\r\n\r\n\r\n    if (!this.isReady_ || !isSrcReady) {\r\n      this.waitToPlay_ = function (e) {\r\n        _this11.play_();\r\n      };\r\n\r\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\r\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\r\n\r\n      if (!isSrcReady && isSafariOrIOS) {\r\n        this.load();\r\n      }\r\n\r\n      return;\r\n    } // If the player/tech is ready and we have a source, we can attempt playback.\r\n\r\n\r\n    var val = this.techGet_('play'); // For native playback, reset the progress bar if we get a play call from a replay.\r\n\r\n    var isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\r\n\r\n    if (isNativeReplay) {\r\n      this.resetProgressBar_();\r\n    } // play was terminated if the returned value is null\r\n\r\n\r\n    if (val === null) {\r\n      this.runPlayTerminatedQueue_();\r\n    } else {\r\n      this.runPlayCallbacks_(val);\r\n    }\r\n  }\r\n  /**\r\n   * These functions will be run when if play is terminated. If play\r\n   * runPlayCallbacks_ is run these function will not be run. This allows us\r\n   * to differenciate between a terminated play and an actual call to play.\r\n   */\r\n  ;\r\n\r\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\r\n    var queue = this.playTerminatedQueue_.slice(0);\r\n    this.playTerminatedQueue_ = [];\r\n    queue.forEach(function (q) {\r\n      q();\r\n    });\r\n  }\r\n  /**\r\n   * When a callback to play is delayed we have to run these\r\n   * callbacks when play is actually called on the tech. This function\r\n   * runs the callbacks that were delayed and accepts the return value\r\n   * from the tech.\r\n   *\r\n   * @param {undefined|Promise} val\r\n   *        The return value from the tech.\r\n   */\r\n  ;\r\n\r\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\r\n    var callbacks = this.playCallbacks_.slice(0);\r\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\r\n\r\n    this.playTerminatedQueue_ = [];\r\n    callbacks.forEach(function (cb) {\r\n      cb(val);\r\n    });\r\n  }\r\n  /**\r\n   * Pause the video playback\r\n   *\r\n   * @return {Player}\r\n   *         A reference to the player object this function was called on\r\n   */\r\n  ;\r\n\r\n  _proto.pause = function pause() {\r\n    this.techCall_('pause');\r\n  }\r\n  /**\r\n   * Check if the player is paused or has yet to play\r\n   *\r\n   * @return {boolean}\r\n   *         - false: if the media is currently playing\r\n   *         - true: if media is not currently playing\r\n   */\r\n  ;\r\n\r\n  _proto.paused = function paused() {\r\n    // The initial state of paused should be true (in Safari it's actually false)\r\n    return this.techGet_('paused') === false ? false : true;\r\n  }\r\n  /**\r\n   * Get a TimeRange object representing the current ranges of time that the user\r\n   * has played.\r\n   *\r\n   * @return {TimeRange}\r\n   *         A time range object that represents all the increments of time that have\r\n   *         been played.\r\n   */\r\n  ;\r\n\r\n  _proto.played = function played() {\r\n    return this.techGet_('played') || createTimeRanges(0, 0);\r\n  }\r\n  /**\r\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\r\n   * when the user has clicked the progress bar handle and is\r\n   * dragging it along the progress bar.\r\n   *\r\n   * @param {boolean} [isScrubbing]\r\n   *        whether the user is or is not scrubbing\r\n   *\r\n   * @return {boolean}\r\n   *         The value of scrubbing when getting\r\n   */\r\n  ;\r\n\r\n  _proto.scrubbing = function scrubbing(isScrubbing) {\r\n    if (typeof isScrubbing === 'undefined') {\r\n      return this.scrubbing_;\r\n    }\r\n\r\n    this.scrubbing_ = !!isScrubbing;\r\n    this.techCall_('setScrubbing', this.scrubbing_);\r\n\r\n    if (isScrubbing) {\r\n      this.addClass('vjs-scrubbing');\r\n    } else {\r\n      this.removeClass('vjs-scrubbing');\r\n    }\r\n  }\r\n  /**\r\n   * Get or set the current time (in seconds)\r\n   *\r\n   * @param {number|string} [seconds]\r\n   *        The time to seek to in seconds\r\n   *\r\n   * @return {number}\r\n   *         - the current time in seconds when getting\r\n   */\r\n  ;\r\n\r\n  _proto.currentTime = function currentTime(seconds) {\r\n    if (typeof seconds !== 'undefined') {\r\n      if (seconds < 0) {\r\n        seconds = 0;\r\n      }\r\n\r\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\r\n        this.cache_.initTime = seconds;\r\n        this.off('canplay', this.boundApplyInitTime_);\r\n        this.one('canplay', this.boundApplyInitTime_);\r\n        return;\r\n      }\r\n\r\n      this.techCall_('setCurrentTime', seconds);\r\n      this.cache_.initTime = 0;\r\n      return;\r\n    } // cache last currentTime and return. default to 0 seconds\r\n    //\r\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\r\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\r\n    // Should be tested. Also something has to read the actual current time or the cache will\r\n    // never get updated.\r\n\r\n\r\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\r\n    return this.cache_.currentTime;\r\n  }\r\n  /**\r\n   * Apply the value of initTime stored in cache as currentTime.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.applyInitTime_ = function applyInitTime_() {\r\n    this.currentTime(this.cache_.initTime);\r\n  }\r\n  /**\r\n   * Normally gets the length in time of the video in seconds;\r\n   * in all but the rarest use cases an argument will NOT be passed to the method\r\n   *\r\n   * > **NOTE**: The video must have started loading before the duration can be\r\n   * known, and depending on preload behaviour may not be known until the video starts\r\n   * playing.\r\n   *\r\n   * @fires Player#durationchange\r\n   *\r\n   * @param {number} [seconds]\r\n   *        The duration of the video to set in seconds\r\n   *\r\n   * @return {number}\r\n   *         - The duration of the video in seconds when getting\r\n   */\r\n  ;\r\n\r\n  _proto.duration = function duration(seconds) {\r\n    if (seconds === undefined) {\r\n      // return NaN if the duration is not known\r\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\r\n    }\r\n\r\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\r\n\r\n    if (seconds < 0) {\r\n      seconds = Infinity;\r\n    }\r\n\r\n    if (seconds !== this.cache_.duration) {\r\n      // Cache the last set value for optimized scrubbing (esp. Flash)\r\n      // TODO: Required for techs other than Flash?\r\n      this.cache_.duration = seconds;\r\n\r\n      if (seconds === Infinity) {\r\n        this.addClass('vjs-live');\r\n      } else {\r\n        this.removeClass('vjs-live');\r\n      }\r\n\r\n      if (!isNaN(seconds)) {\r\n        // Do not fire durationchange unless the duration value is known.\r\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\r\n\r\n        /**\r\n         * @event Player#durationchange\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('durationchange');\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Calculates how much time is left in the video. Not part\r\n   * of the native video API.\r\n   *\r\n   * @return {number}\r\n   *         The time remaining in seconds\r\n   */\r\n  ;\r\n\r\n  _proto.remainingTime = function remainingTime() {\r\n    return this.duration() - this.currentTime();\r\n  }\r\n  /**\r\n   * A remaining time function that is intented to be used when\r\n   * the time is to be displayed directly to the user.\r\n   *\r\n   * @return {number}\r\n   *         The rounded time remaining in seconds\r\n   */\r\n  ;\r\n\r\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\r\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\r\n  } //\r\n  // Kind of like an array of portions of the video that have been downloaded.\r\n\r\n  /**\r\n   * Get a TimeRange object with an array of the times of the video\r\n   * that have been downloaded. If you just want the percent of the\r\n   * video that's been downloaded, use bufferedPercent.\r\n   *\r\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\r\n   *\r\n   * @return {TimeRange}\r\n   *         A mock TimeRange object (following HTML spec)\r\n   */\r\n  ;\r\n\r\n  _proto.buffered = function buffered() {\r\n    var buffered = this.techGet_('buffered');\r\n\r\n    if (!buffered || !buffered.length) {\r\n      buffered = createTimeRanges(0, 0);\r\n    }\r\n\r\n    return buffered;\r\n  }\r\n  /**\r\n   * Get the percent (as a decimal) of the video that's been downloaded.\r\n   * This method is not a part of the native HTML video API.\r\n   *\r\n   * @return {number}\r\n   *         A decimal between 0 and 1 representing the percent\r\n   *         that is buffered 0 being 0% and 1 being 100%\r\n   */\r\n  ;\r\n\r\n  _proto.bufferedPercent = function bufferedPercent$1() {\r\n    return bufferedPercent(this.buffered(), this.duration());\r\n  }\r\n  /**\r\n   * Get the ending time of the last buffered time range\r\n   * This is used in the progress bar to encapsulate all time ranges.\r\n   *\r\n   * @return {number}\r\n   *         The end of the last buffered time range\r\n   */\r\n  ;\r\n\r\n  _proto.bufferedEnd = function bufferedEnd() {\r\n    var buffered = this.buffered();\r\n    var duration = this.duration();\r\n    var end = buffered.end(buffered.length - 1);\r\n\r\n    if (end > duration) {\r\n      end = duration;\r\n    }\r\n\r\n    return end;\r\n  }\r\n  /**\r\n   * Get or set the current volume of the media\r\n   *\r\n   * @param  {number} [percentAsDecimal]\r\n   *         The new volume as a decimal percent:\r\n   *         - 0 is muted/0%/off\r\n   *         - 1.0 is 100%/full\r\n   *         - 0.5 is half volume or 50%\r\n   *\r\n   * @return {number}\r\n   *         The current volume as a percent when getting\r\n   */\r\n  ;\r\n\r\n  _proto.volume = function volume(percentAsDecimal) {\r\n    var vol;\r\n\r\n    if (percentAsDecimal !== undefined) {\r\n      // Force value to between 0 and 1\r\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\r\n      this.cache_.volume = vol;\r\n      this.techCall_('setVolume', vol);\r\n\r\n      if (vol > 0) {\r\n        this.lastVolume_(vol);\r\n      }\r\n\r\n      return;\r\n    } // Default to 1 when returning current volume.\r\n\r\n\r\n    vol = parseFloat(this.techGet_('volume'));\r\n    return isNaN(vol) ? 1 : vol;\r\n  }\r\n  /**\r\n   * Get the current muted state, or turn mute on or off\r\n   *\r\n   * @param {boolean} [muted]\r\n   *        - true to mute\r\n   *        - false to unmute\r\n   *\r\n   * @return {boolean}\r\n   *         - true if mute is on and getting\r\n   *         - false if mute is off and getting\r\n   */\r\n  ;\r\n\r\n  _proto.muted = function muted(_muted) {\r\n    if (_muted !== undefined) {\r\n      this.techCall_('setMuted', _muted);\r\n      return;\r\n    }\r\n\r\n    return this.techGet_('muted') || false;\r\n  }\r\n  /**\r\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\r\n   * indicates the state of muted on initial playback.\r\n   *\r\n   * ```js\r\n   *   var myPlayer = videojs('some-player-id');\r\n   *\r\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\r\n   *\r\n   *   // get, should be false\r\n   *   console.log(myPlayer.defaultMuted());\r\n   *   // set to true\r\n   *   myPlayer.defaultMuted(true);\r\n   *   // get should be true\r\n   *   console.log(myPlayer.defaultMuted());\r\n   * ```\r\n   *\r\n   * @param {boolean} [defaultMuted]\r\n   *        - true to mute\r\n   *        - false to unmute\r\n   *\r\n   * @return {boolean|Player}\r\n   *         - true if defaultMuted is on and getting\r\n   *         - false if defaultMuted is off and getting\r\n   *         - A reference to the current player when setting\r\n   */\r\n  ;\r\n\r\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\r\n    if (_defaultMuted !== undefined) {\r\n      return this.techCall_('setDefaultMuted', _defaultMuted);\r\n    }\r\n\r\n    return this.techGet_('defaultMuted') || false;\r\n  }\r\n  /**\r\n   * Get the last volume, or set it\r\n   *\r\n   * @param  {number} [percentAsDecimal]\r\n   *         The new last volume as a decimal percent:\r\n   *         - 0 is muted/0%/off\r\n   *         - 1.0 is 100%/full\r\n   *         - 0.5 is half volume or 50%\r\n   *\r\n   * @return {number}\r\n   *         the current value of lastVolume as a percent when getting\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\r\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\r\n      this.cache_.lastVolume = percentAsDecimal;\r\n      return;\r\n    }\r\n\r\n    return this.cache_.lastVolume;\r\n  }\r\n  /**\r\n   * Check if current tech can support native fullscreen\r\n   * (e.g. with built in controls like iOS)\r\n   *\r\n   * @return {boolean}\r\n   *         if native fullscreen is supported\r\n   */\r\n  ;\r\n\r\n  _proto.supportsFullScreen = function supportsFullScreen() {\r\n    return this.techGet_('supportsFullScreen') || false;\r\n  }\r\n  /**\r\n   * Check if the player is in fullscreen mode or tell the player that it\r\n   * is or is not in fullscreen mode.\r\n   *\r\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\r\n   * property and instead document.fullscreenElement is used. But isFullscreen is\r\n   * still a valuable property for internal player workings.\r\n   *\r\n   * @param  {boolean} [isFS]\r\n   *         Set the players current fullscreen state\r\n   *\r\n   * @return {boolean}\r\n   *         - true if fullscreen is on and getting\r\n   *         - false if fullscreen is off and getting\r\n   */\r\n  ;\r\n\r\n  _proto.isFullscreen = function isFullscreen(isFS) {\r\n    if (isFS !== undefined) {\r\n      var oldValue = this.isFullscreen_;\r\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\r\n      // this is the only place where we trigger fullscreenchange events for older browsers\r\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\r\n\r\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\r\n        /**\r\n           * @event Player#fullscreenchange\r\n           * @type {EventTarget~Event}\r\n           */\r\n        this.trigger('fullscreenchange');\r\n      }\r\n\r\n      this.toggleFullscreenClass_();\r\n      return;\r\n    }\r\n\r\n    return this.isFullscreen_;\r\n  }\r\n  /**\r\n   * Increase the size of the video to full screen\r\n   * In some browsers, full screen is not supported natively, so it enters\r\n   * \"full window mode\", where the video fills the browser window.\r\n   * In browsers and devices that support native full screen, sometimes the\r\n   * browser's default controls will be shown, and not the Video.js custom skin.\r\n   * This includes most mobile devices (iOS, Android) and older versions of\r\n   * Safari.\r\n   *\r\n   * @param  {Object} [fullscreenOptions]\r\n   *         Override the player fullscreen options\r\n   *\r\n   * @fires Player#fullscreenchange\r\n   */\r\n  ;\r\n\r\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (PromiseClass) {\r\n      var self = this;\r\n      return new PromiseClass(function (resolve, reject) {\r\n        function offHandler() {\r\n          self.off('fullscreenerror', errorHandler);\r\n          self.off('fullscreenchange', changeHandler);\r\n        }\r\n\r\n        function changeHandler() {\r\n          offHandler();\r\n          resolve();\r\n        }\r\n\r\n        function errorHandler(e, err) {\r\n          offHandler();\r\n          reject(err);\r\n        }\r\n\r\n        self.one('fullscreenchange', changeHandler);\r\n        self.one('fullscreenerror', errorHandler);\r\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\r\n\r\n        if (promise) {\r\n          promise.then(offHandler, offHandler);\r\n          promise.then(resolve, reject);\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.requestFullscreenHelper_();\r\n  };\r\n\r\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\r\n    var _this12 = this;\r\n\r\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\r\n    // Use defaults or player configured option unless passed directly to this method.\r\n\r\n    if (!this.fsApi_.prefixed) {\r\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\r\n\r\n      if (fullscreenOptions !== undefined) {\r\n        fsOptions = fullscreenOptions;\r\n      }\r\n    } // This method works as follows:\r\n    // 1. if a fullscreen api is available, use it\r\n    //   1. call requestFullscreen with potential options\r\n    //   2. if we got a promise from above, use it to update isFullscreen()\r\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\r\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\r\n    // 3. otherwise, use \"fullWindow\" mode\r\n\r\n\r\n    if (this.fsApi_.requestFullscreen) {\r\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\r\n\r\n      if (promise) {\r\n        promise.then(function () {\r\n          return _this12.isFullscreen(true);\r\n        }, function () {\r\n          return _this12.isFullscreen(false);\r\n        });\r\n      }\r\n\r\n      return promise;\r\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\r\n      // we can't take the video.js controls fullscreen but we can go fullscreen\r\n      // with native controls\r\n      this.techCall_('enterFullScreen');\r\n    } else {\r\n      // fullscreen isn't supported so we'll just stretch the video element to\r\n      // fill the viewport\r\n      this.enterFullWindow();\r\n    }\r\n  }\r\n  /**\r\n   * Return the video to its normal size after having been in full screen mode\r\n   *\r\n   * @fires Player#fullscreenchange\r\n   */\r\n  ;\r\n\r\n  _proto.exitFullscreen = function exitFullscreen() {\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (PromiseClass) {\r\n      var self = this;\r\n      return new PromiseClass(function (resolve, reject) {\r\n        function offHandler() {\r\n          self.off('fullscreenerror', errorHandler);\r\n          self.off('fullscreenchange', changeHandler);\r\n        }\r\n\r\n        function changeHandler() {\r\n          offHandler();\r\n          resolve();\r\n        }\r\n\r\n        function errorHandler(e, err) {\r\n          offHandler();\r\n          reject(err);\r\n        }\r\n\r\n        self.one('fullscreenchange', changeHandler);\r\n        self.one('fullscreenerror', errorHandler);\r\n        var promise = self.exitFullscreenHelper_();\r\n\r\n        if (promise) {\r\n          promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\r\n\r\n          promise.then(resolve, reject);\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.exitFullscreenHelper_();\r\n  };\r\n\r\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\r\n    var _this13 = this;\r\n\r\n    if (this.fsApi_.requestFullscreen) {\r\n      var promise = document[this.fsApi_.exitFullscreen]();\r\n\r\n      if (promise) {\r\n        // we're splitting the promise here, so, we want to catch the\r\n        // potential error so that this chain doesn't have unhandled errors\r\n        silencePromise(promise.then(function () {\r\n          return _this13.isFullscreen(false);\r\n        }));\r\n      }\r\n\r\n      return promise;\r\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\r\n      this.techCall_('exitFullScreen');\r\n    } else {\r\n      this.exitFullWindow();\r\n    }\r\n  }\r\n  /**\r\n   * When fullscreen isn't supported we can stretch the\r\n   * video container to as wide as the browser will let us.\r\n   *\r\n   * @fires Player#enterFullWindow\r\n   */\r\n  ;\r\n\r\n  _proto.enterFullWindow = function enterFullWindow() {\r\n    this.isFullscreen(true);\r\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\r\n\r\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\r\n\r\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\r\n\r\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\r\n\r\n    addClass(document.body, 'vjs-full-window');\r\n    /**\r\n     * @event Player#enterFullWindow\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('enterFullWindow');\r\n  }\r\n  /**\r\n   * Check for call to either exit full window or\r\n   * full screen on ESC key\r\n   *\r\n   * @param {string} event\r\n   *        Event to check for key press\r\n   */\r\n  ;\r\n\r\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\r\n    if (keycode.isEventKey(event, 'Esc')) {\r\n      if (this.isFullscreen() === true) {\r\n        if (!this.isFullWindow) {\r\n          this.exitFullscreen();\r\n        } else {\r\n          this.exitFullWindow();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Exit full window\r\n   *\r\n   * @fires Player#exitFullWindow\r\n   */\r\n  ;\r\n\r\n  _proto.exitFullWindow = function exitFullWindow() {\r\n    this.isFullscreen(false);\r\n    this.isFullWindow = false;\r\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\r\n\r\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\r\n\r\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\r\n    // this.positionAll();\r\n\r\n    /**\r\n     * @event Player#exitFullWindow\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('exitFullWindow');\r\n  }\r\n  /**\r\n   * Disable Picture-in-Picture mode.\r\n   *\r\n   * @param {boolean} value\r\n   *                  - true will disable Picture-in-Picture mode\r\n   *                  - false will enable Picture-in-Picture mode\r\n   */\r\n  ;\r\n\r\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\r\n    if (value === undefined) {\r\n      return this.techGet_('disablePictureInPicture');\r\n    }\r\n\r\n    this.techCall_('setDisablePictureInPicture', value);\r\n    this.options_.disablePictureInPicture = value;\r\n    this.trigger('disablepictureinpicturechanged');\r\n  }\r\n  /**\r\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\r\n   * is or is not in Picture-in-Picture mode.\r\n   *\r\n   * @param  {boolean} [isPiP]\r\n   *         Set the players current Picture-in-Picture state\r\n   *\r\n   * @return {boolean}\r\n   *         - true if Picture-in-Picture is on and getting\r\n   *         - false if Picture-in-Picture is off and getting\r\n   */\r\n  ;\r\n\r\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\r\n    if (isPiP !== undefined) {\r\n      this.isInPictureInPicture_ = !!isPiP;\r\n      this.togglePictureInPictureClass_();\r\n      return;\r\n    }\r\n\r\n    return !!this.isInPictureInPicture_;\r\n  }\r\n  /**\r\n   * Create a floating video window always on top of other windows so that users may\r\n   * continue consuming media while they interact with other content sites, or\r\n   * applications on their device.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\r\n   *\r\n   * @fires Player#enterpictureinpicture\r\n   *\r\n   * @return {Promise}\r\n   *         A promise with a Picture-in-Picture window.\r\n   */\r\n  ;\r\n\r\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\r\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\r\n      /**\r\n       * This event fires when the player enters picture in picture mode\r\n       *\r\n       * @event Player#enterpictureinpicture\r\n       * @type {EventTarget~Event}\r\n       */\r\n      return this.techGet_('requestPictureInPicture');\r\n    }\r\n  }\r\n  /**\r\n   * Exit Picture-in-Picture mode.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\r\n   *\r\n   * @fires Player#leavepictureinpicture\r\n   *\r\n   * @return {Promise}\r\n   *         A promise.\r\n   */\r\n  ;\r\n\r\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\r\n    if ('pictureInPictureEnabled' in document) {\r\n      /**\r\n       * This event fires when the player leaves picture in picture mode\r\n       *\r\n       * @event Player#leavepictureinpicture\r\n       * @type {EventTarget~Event}\r\n       */\r\n      return document.exitPictureInPicture();\r\n    }\r\n  }\r\n  /**\r\n   * Called when this Player has focus and a key gets pressed down, or when\r\n   * any Component of this player receives a key press that it doesn't handle.\r\n   * This allows player-wide hotkeys (either as defined below, or optionally\r\n   * by an external function).\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n  ;\r\n\r\n  _proto.handleKeyDown = function handleKeyDown(event) {\r\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\r\n\r\n    if (!userActions || !userActions.hotkeys) {\r\n      return;\r\n    } // Function that determines whether or not to exclude an element from\r\n    // hotkeys handling.\r\n\r\n\r\n    var excludeElement = function excludeElement(el) {\r\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\r\n\r\n      if (el.isContentEditable) {\r\n        return true;\r\n      } // Inputs matching these types will still trigger hotkey handling as\r\n      // they are not text inputs.\r\n\r\n\r\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\r\n\r\n      if (tagName === 'input') {\r\n        return allowedInputTypes.indexOf(el.type) === -1;\r\n      } // The final test is by tag name. These tags will be excluded entirely.\r\n\r\n\r\n      var excludedTags = ['textarea'];\r\n      return excludedTags.indexOf(tagName) !== -1;\r\n    }; // Bail out if the user is focused on an interactive form element.\r\n\r\n\r\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\r\n      return;\r\n    }\r\n\r\n    if (typeof userActions.hotkeys === 'function') {\r\n      userActions.hotkeys.call(this, event);\r\n    } else {\r\n      this.handleHotkeys(event);\r\n    }\r\n  }\r\n  /**\r\n   * Called when this Player receives a hotkey keydown event.\r\n   * Supported player-wide hotkeys are:\r\n   *\r\n   *   f          - toggle fullscreen\r\n   *   m          - toggle mute\r\n   *   k or Space - toggle play/pause\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   */\r\n  ;\r\n\r\n  _proto.handleHotkeys = function handleHotkeys(event) {\r\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\r\n\r\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\r\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\r\n      return keycode.isEventKey(keydownEvent, 'f');\r\n    } : _hotkeys$fullscreenKe,\r\n        _hotkeys$muteKey = hotkeys.muteKey,\r\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\r\n      return keycode.isEventKey(keydownEvent, 'm');\r\n    } : _hotkeys$muteKey,\r\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\r\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\r\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\r\n    } : _hotkeys$playPauseKey;\r\n\r\n    if (fullscreenKey.call(this, event)) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var FSToggle = Component$1.getComponent('FullscreenToggle');\r\n\r\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\r\n        FSToggle.prototype.handleClick.call(this, event);\r\n      }\r\n    } else if (muteKey.call(this, event)) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var MuteToggle = Component$1.getComponent('MuteToggle');\r\n      MuteToggle.prototype.handleClick.call(this, event);\r\n    } else if (playPauseKey.call(this, event)) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var PlayToggle = Component$1.getComponent('PlayToggle');\r\n      PlayToggle.prototype.handleClick.call(this, event);\r\n    }\r\n  }\r\n  /**\r\n   * Check whether the player can play a given mimetype\r\n   *\r\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\r\n   *\r\n   * @param {string} type\r\n   *        The mimetype to check\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or '' (empty string)\r\n   */\r\n  ;\r\n\r\n  _proto.canPlayType = function canPlayType(type) {\r\n    var can; // Loop through each playback technology in the options order\r\n\r\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\r\n      var techName = j[i];\r\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\r\n      // Remove once that deprecated behavior is removed.\r\n\r\n      if (!tech) {\r\n        tech = Component$1.getComponent(techName);\r\n      } // Check if the current tech is defined before continuing\r\n\r\n\r\n      if (!tech) {\r\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\r\n        continue;\r\n      } // Check if the browser supports this technology\r\n\r\n\r\n      if (tech.isSupported()) {\r\n        can = tech.canPlayType(type);\r\n\r\n        if (can) {\r\n          return can;\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n  /**\r\n   * Select source based on tech-order or source-order\r\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\r\n   * defaults to tech-order selection\r\n   *\r\n   * @param {Array} sources\r\n   *        The sources for a media asset\r\n   *\r\n   * @return {Object|boolean}\r\n   *         Object of source and tech order or false\r\n   */\r\n  ;\r\n\r\n  _proto.selectSource = function selectSource(sources) {\r\n    var _this14 = this;\r\n\r\n    // Get only the techs specified in `techOrder` that exist and are supported by the\r\n    // current platform\r\n    var techs = this.options_.techOrder.map(function (techName) {\r\n      return [techName, Tech.getTech(techName)];\r\n    }).filter(function (_ref) {\r\n      var techName = _ref[0],\r\n          tech = _ref[1];\r\n\r\n      // Check if the current tech is defined before continuing\r\n      if (tech) {\r\n        // Check if the browser supports this technology\r\n        return tech.isSupported();\r\n      }\r\n\r\n      log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\r\n      return false;\r\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\r\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\r\n    // that value.\r\n\r\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\r\n      var found;\r\n      outerArray.some(function (outerChoice) {\r\n        return innerArray.some(function (innerChoice) {\r\n          found = tester(outerChoice, innerChoice);\r\n\r\n          if (found) {\r\n            return true;\r\n          }\r\n        });\r\n      });\r\n      return found;\r\n    };\r\n\r\n    var foundSourceAndTech;\r\n\r\n    var flip = function flip(fn) {\r\n      return function (a, b) {\r\n        return fn(b, a);\r\n      };\r\n    };\r\n\r\n    var finder = function finder(_ref2, source) {\r\n      var techName = _ref2[0],\r\n          tech = _ref2[1];\r\n\r\n      if (tech.canPlaySource(source, _this14.options_[techName.toLowerCase()])) {\r\n        return {\r\n          source: source,\r\n          tech: techName\r\n        };\r\n      }\r\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\r\n    // to select from them based on their priority.\r\n\r\n\r\n    if (this.options_.sourceOrder) {\r\n      // Source-first ordering\r\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\r\n    } else {\r\n      // Tech-first ordering\r\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\r\n    }\r\n\r\n    return foundSourceAndTech || false;\r\n  }\r\n  /**\r\n   * Executes source setting and getting logic\r\n   *\r\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\r\n   *        A SourceObject, an array of SourceObjects, or a string referencing\r\n   *        a URL to a media source. It is _highly recommended_ that an object\r\n   *        or array of objects is used here, so that source selection\r\n   *        algorithms can take the `type` into account.\r\n   *\r\n   *        If not provided, this method acts as a getter.\r\n   * @param {boolean} isRetry\r\n   *        Indicates whether this is being called internally as a result of a retry\r\n   *\r\n   * @return {string|undefined}\r\n   *         If the `source` argument is missing, returns the current source\r\n   *         URL. Otherwise, returns nothing/undefined.\r\n   */\r\n  ;\r\n\r\n  _proto.handleSrc_ = function handleSrc_(source, isRetry) {\r\n    var _this15 = this;\r\n\r\n    // getter usage\r\n    if (typeof source === 'undefined') {\r\n      return this.cache_.src || '';\r\n    } // Reset retry behavior for new source\r\n\r\n\r\n    if (this.resetRetryOnError_) {\r\n      this.resetRetryOnError_();\r\n    } // filter out invalid sources and turn our source into\r\n    // an array of source objects\r\n\r\n\r\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\r\n    // it was filtered to a zero length Array. So we have to\r\n    // show an error\r\n\r\n    if (!sources.length) {\r\n      this.setTimeout(function () {\r\n        this.error({\r\n          code: 4,\r\n          message: this.options_.notSupportedMessage\r\n        });\r\n      }, 0);\r\n      return;\r\n    } // initial sources\r\n\r\n\r\n    this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\r\n    // since in that case we want to include the failed source(s) in the cache\r\n\r\n    if (!isRetry) {\r\n      this.cache_.sources = sources;\r\n    }\r\n\r\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\r\n\r\n    setSource(this, sources[0], function (middlewareSource, mws) {\r\n      _this15.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\r\n      // the source that is selected could be out of order from the cache update above this callback.\r\n\r\n      if (!isRetry) {\r\n        _this15.cache_.sources = sources;\r\n      }\r\n\r\n      _this15.updateSourceCaches_(middlewareSource);\r\n\r\n      var err = _this15.src_(middlewareSource);\r\n\r\n      if (err) {\r\n        if (sources.length > 1) {\r\n          return _this15.handleSrc_(sources.slice(1));\r\n        }\r\n\r\n        _this15.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\r\n\r\n        _this15.setTimeout(function () {\r\n          this.error({\r\n            code: 4,\r\n            message: this.options_.notSupportedMessage\r\n          });\r\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\r\n        // this needs a better comment about why this is needed\r\n\r\n\r\n        _this15.triggerReady();\r\n\r\n        return;\r\n      }\r\n\r\n      setTech(mws, _this15.tech_);\r\n    }); // Try another available source if this one fails before playback.\r\n\r\n    if (this.options_.retryOnError && sources.length > 1) {\r\n      var retry = function retry() {\r\n        // Remove the error modal\r\n        _this15.error(null);\r\n\r\n        _this15.handleSrc_(sources.slice(1), true);\r\n      };\r\n\r\n      var stopListeningForErrors = function stopListeningForErrors() {\r\n        _this15.off('error', retry);\r\n      };\r\n\r\n      this.one('error', retry);\r\n      this.one('playing', stopListeningForErrors);\r\n\r\n      this.resetRetryOnError_ = function () {\r\n        _this15.off('error', retry);\r\n\r\n        _this15.off('playing', stopListeningForErrors);\r\n      };\r\n    }\r\n  }\r\n  /**\r\n   * Get or set the video source.\r\n   *\r\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\r\n   *        A SourceObject, an array of SourceObjects, or a string referencing\r\n   *        a URL to a media source. It is _highly recommended_ that an object\r\n   *        or array of objects is used here, so that source selection\r\n   *        algorithms can take the `type` into account.\r\n   *\r\n   *        If not provided, this method acts as a getter.\r\n   *\r\n   * @return {string|undefined}\r\n   *         If the `source` argument is missing, returns the current source\r\n   *         URL. Otherwise, returns nothing/undefined.\r\n   */\r\n  ;\r\n\r\n  _proto.src = function src(source) {\r\n    return this.handleSrc_(source, false);\r\n  }\r\n  /**\r\n   * Set the source object on the tech, returns a boolean that indicates whether\r\n   * there is a tech that can play the source or not\r\n   *\r\n   * @param {Tech~SourceObject} source\r\n   *        The source object to set on the Tech\r\n   *\r\n   * @return {boolean}\r\n   *         - True if there is no Tech to playback this source\r\n   *         - False otherwise\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.src_ = function src_(source) {\r\n    var _this16 = this;\r\n\r\n    var sourceTech = this.selectSource([source]);\r\n\r\n    if (!sourceTech) {\r\n      return true;\r\n    }\r\n\r\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\r\n      this.changingSrc_ = true; // load this technology with the chosen source\r\n\r\n      this.loadTech_(sourceTech.tech, sourceTech.source);\r\n      this.tech_.ready(function () {\r\n        _this16.changingSrc_ = false;\r\n      });\r\n      return false;\r\n    } // wait until the tech is ready to set the source\r\n    // and set it synchronously if possible (#2326)\r\n\r\n\r\n    this.ready(function () {\r\n      // The setSource tech method was added with source handlers\r\n      // so older techs won't support it\r\n      // We need to check the direct prototype for the case where subclasses\r\n      // of the tech do not support source handlers\r\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\r\n        this.techCall_('setSource', source);\r\n      } else {\r\n        this.techCall_('src', source.src);\r\n      }\r\n\r\n      this.changingSrc_ = false;\r\n    }, true);\r\n    return false;\r\n  }\r\n  /**\r\n   * Begin loading the src data.\r\n   */\r\n  ;\r\n\r\n  _proto.load = function load() {\r\n    this.techCall_('load');\r\n  }\r\n  /**\r\n   * Reset the player. Loads the first tech in the techOrder,\r\n   * removes all the text tracks in the existing `tech`,\r\n   * and calls `reset` on the `tech`.\r\n   */\r\n  ;\r\n\r\n  _proto.reset = function reset() {\r\n    var _this17 = this;\r\n\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (this.paused() || !PromiseClass) {\r\n      this.doReset_();\r\n    } else {\r\n      var playPromise = this.play();\r\n      silencePromise(playPromise.then(function () {\r\n        return _this17.doReset_();\r\n      }));\r\n    }\r\n  };\r\n\r\n  _proto.doReset_ = function doReset_() {\r\n    if (this.tech_) {\r\n      this.tech_.clearTracks('text');\r\n    }\r\n\r\n    this.resetCache_();\r\n    this.poster('');\r\n    this.loadTech_(this.options_.techOrder[0], null);\r\n    this.techCall_('reset');\r\n    this.resetControlBarUI_();\r\n\r\n    if (isEvented(this)) {\r\n      this.trigger('playerreset');\r\n    }\r\n  }\r\n  /**\r\n   * Reset Control Bar's UI by calling sub-methods that reset\r\n   * all of Control Bar's components\r\n   */\r\n  ;\r\n\r\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\r\n    this.resetProgressBar_();\r\n    this.resetPlaybackRate_();\r\n    this.resetVolumeBar_();\r\n  }\r\n  /**\r\n   * Reset tech's progress so progress bar is reset in the UI\r\n   */\r\n  ;\r\n\r\n  _proto.resetProgressBar_ = function resetProgressBar_() {\r\n    this.currentTime(0);\r\n\r\n    var _ref3 = this.controlBar || {},\r\n        durationDisplay = _ref3.durationDisplay,\r\n        remainingTimeDisplay = _ref3.remainingTimeDisplay;\r\n\r\n    if (durationDisplay) {\r\n      durationDisplay.updateContent();\r\n    }\r\n\r\n    if (remainingTimeDisplay) {\r\n      remainingTimeDisplay.updateContent();\r\n    }\r\n  }\r\n  /**\r\n   * Reset Playback ratio\r\n   */\r\n  ;\r\n\r\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\r\n    this.playbackRate(this.defaultPlaybackRate());\r\n    this.handleTechRateChange_();\r\n  }\r\n  /**\r\n   * Reset Volume bar\r\n   */\r\n  ;\r\n\r\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\r\n    this.volume(1.0);\r\n    this.trigger('volumechange');\r\n  }\r\n  /**\r\n   * Returns all of the current source objects.\r\n   *\r\n   * @return {Tech~SourceObject[]}\r\n   *         The current source objects\r\n   */\r\n  ;\r\n\r\n  _proto.currentSources = function currentSources() {\r\n    var source = this.currentSource();\r\n    var sources = []; // assume `{}` or `{ src }`\r\n\r\n    if (Object.keys(source).length !== 0) {\r\n      sources.push(source);\r\n    }\r\n\r\n    return this.cache_.sources || sources;\r\n  }\r\n  /**\r\n   * Returns the current source object.\r\n   *\r\n   * @return {Tech~SourceObject}\r\n   *         The current source object\r\n   */\r\n  ;\r\n\r\n  _proto.currentSource = function currentSource() {\r\n    return this.cache_.source || {};\r\n  }\r\n  /**\r\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\r\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\r\n   *\r\n   * @return {string}\r\n   *         The current source\r\n   */\r\n  ;\r\n\r\n  _proto.currentSrc = function currentSrc() {\r\n    return this.currentSource() && this.currentSource().src || '';\r\n  }\r\n  /**\r\n   * Get the current source type e.g. video/mp4\r\n   * This can allow you rebuild the current source object so that you could load the same\r\n   * source and tech later\r\n   *\r\n   * @return {string}\r\n   *         The source MIME type\r\n   */\r\n  ;\r\n\r\n  _proto.currentType = function currentType() {\r\n    return this.currentSource() && this.currentSource().type || '';\r\n  }\r\n  /**\r\n   * Get or set the preload attribute\r\n   *\r\n   * @param {boolean} [value]\r\n   *        - true means that we should preload\r\n   *        - false means that we should not preload\r\n   *\r\n   * @return {string}\r\n   *         The preload attribute value when getting\r\n   */\r\n  ;\r\n\r\n  _proto.preload = function preload(value) {\r\n    if (value !== undefined) {\r\n      this.techCall_('setPreload', value);\r\n      this.options_.preload = value;\r\n      return;\r\n    }\r\n\r\n    return this.techGet_('preload');\r\n  }\r\n  /**\r\n   * Get or set the autoplay option. When this is a boolean it will\r\n   * modify the attribute on the tech. When this is a string the attribute on\r\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\r\n   *\r\n   * @param {boolean|string} [value]\r\n   *        - true: autoplay using the browser behavior\r\n   *        - false: do not autoplay\r\n   *        - 'play': call play() on every loadstart\r\n   *        - 'muted': call muted() then play() on every loadstart\r\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\r\n   *        - *: values other than those listed here will be set `autoplay` to true\r\n   *\r\n   * @return {boolean|string}\r\n   *         The current value of autoplay when getting\r\n   */\r\n  ;\r\n\r\n  _proto.autoplay = function autoplay(value) {\r\n    // getter usage\r\n    if (value === undefined) {\r\n      return this.options_.autoplay || false;\r\n    }\r\n\r\n    var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\r\n\r\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\r\n      this.options_.autoplay = value;\r\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\r\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\r\n      // lets do the same\r\n    } else if (!value) {\r\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\r\n    } else {\r\n      this.options_.autoplay = true;\r\n    }\r\n\r\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\r\n    // a setAutoplay call on tech ready. We do this because the\r\n    // autoplay option will be passed in the constructor and we\r\n    // do not need to set it twice\r\n\r\n    if (this.tech_) {\r\n      this.techCall_('setAutoplay', techAutoplay);\r\n    }\r\n  }\r\n  /**\r\n   * Set or unset the playsinline attribute.\r\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\r\n   *\r\n   * @param {boolean} [value]\r\n   *        - true means that we should try to play inline by default\r\n   *        - false means that we should use the browser's default playback mode,\r\n   *          which in most cases is inline. iOS Safari is a notable exception\r\n   *          and plays fullscreen by default.\r\n   *\r\n   * @return {string|Player}\r\n   *         - the current value of playsinline\r\n   *         - the player when setting\r\n   *\r\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\r\n   */\r\n  ;\r\n\r\n  _proto.playsinline = function playsinline(value) {\r\n    if (value !== undefined) {\r\n      this.techCall_('setPlaysinline', value);\r\n      this.options_.playsinline = value;\r\n      return this;\r\n    }\r\n\r\n    return this.techGet_('playsinline');\r\n  }\r\n  /**\r\n   * Get or set the loop attribute on the video element.\r\n   *\r\n   * @param {boolean} [value]\r\n   *        - true means that we should loop the video\r\n   *        - false means that we should not loop the video\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of loop when getting\r\n   */\r\n  ;\r\n\r\n  _proto.loop = function loop(value) {\r\n    if (value !== undefined) {\r\n      this.techCall_('setLoop', value);\r\n      this.options_.loop = value;\r\n      return;\r\n    }\r\n\r\n    return this.techGet_('loop');\r\n  }\r\n  /**\r\n   * Get or set the poster image source url\r\n   *\r\n   * @fires Player#posterchange\r\n   *\r\n   * @param {string} [src]\r\n   *        Poster image source URL\r\n   *\r\n   * @return {string}\r\n   *         The current value of poster when getting\r\n   */\r\n  ;\r\n\r\n  _proto.poster = function poster(src) {\r\n    if (src === undefined) {\r\n      return this.poster_;\r\n    } // The correct way to remove a poster is to set as an empty string\r\n    // other falsey values will throw errors\r\n\r\n\r\n    if (!src) {\r\n      src = '';\r\n    }\r\n\r\n    if (src === this.poster_) {\r\n      return;\r\n    } // update the internal poster variable\r\n\r\n\r\n    this.poster_ = src; // update the tech's poster\r\n\r\n    this.techCall_('setPoster', src);\r\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\r\n\r\n    /**\r\n     * This event fires when the poster image is changed on the player.\r\n     *\r\n     * @event Player#posterchange\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('posterchange');\r\n  }\r\n  /**\r\n   * Some techs (e.g. YouTube) can provide a poster source in an\r\n   * asynchronous way. We want the poster component to use this\r\n   * poster source so that it covers up the tech's controls.\r\n   * (YouTube's play button). However we only want to use this\r\n   * source if the player user hasn't set a poster through\r\n   * the normal APIs.\r\n   *\r\n   * @fires Player#posterchange\r\n   * @listens Tech#posterchange\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\r\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\r\n      var newPoster = this.tech_.poster() || '';\r\n\r\n      if (newPoster !== this.poster_) {\r\n        this.poster_ = newPoster;\r\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\r\n\r\n        this.trigger('posterchange');\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get or set whether or not the controls are showing.\r\n   *\r\n   * @fires Player#controlsenabled\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true to turn controls on\r\n   *        - false to turn controls off\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of controls when getting\r\n   */\r\n  ;\r\n\r\n  _proto.controls = function controls(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.controls_;\r\n    }\r\n\r\n    bool = !!bool; // Don't trigger a change event unless it actually changed\r\n\r\n    if (this.controls_ === bool) {\r\n      return;\r\n    }\r\n\r\n    this.controls_ = bool;\r\n\r\n    if (this.usingNativeControls()) {\r\n      this.techCall_('setControls', bool);\r\n    }\r\n\r\n    if (this.controls_) {\r\n      this.removeClass('vjs-controls-disabled');\r\n      this.addClass('vjs-controls-enabled');\r\n      /**\r\n       * @event Player#controlsenabled\r\n       * @type {EventTarget~Event}\r\n       */\r\n\r\n      this.trigger('controlsenabled');\r\n\r\n      if (!this.usingNativeControls()) {\r\n        this.addTechControlsListeners_();\r\n      }\r\n    } else {\r\n      this.removeClass('vjs-controls-enabled');\r\n      this.addClass('vjs-controls-disabled');\r\n      /**\r\n       * @event Player#controlsdisabled\r\n       * @type {EventTarget~Event}\r\n       */\r\n\r\n      this.trigger('controlsdisabled');\r\n\r\n      if (!this.usingNativeControls()) {\r\n        this.removeTechControlsListeners_();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Toggle native controls on/off. Native controls are the controls built into\r\n   * devices (e.g. default iPhone controls) or other techs\r\n   * (e.g. Vimeo Controls)\r\n   * **This should only be set by the current tech, because only the tech knows\r\n   * if it can support native controls**\r\n   *\r\n   * @fires Player#usingnativecontrols\r\n   * @fires Player#usingcustomcontrols\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true to turn native controls on\r\n   *        - false to turn native controls off\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of native controls when getting\r\n   */\r\n  ;\r\n\r\n  _proto.usingNativeControls = function usingNativeControls(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.usingNativeControls_;\r\n    }\r\n\r\n    bool = !!bool; // Don't trigger a change event unless it actually changed\r\n\r\n    if (this.usingNativeControls_ === bool) {\r\n      return;\r\n    }\r\n\r\n    this.usingNativeControls_ = bool;\r\n\r\n    if (this.usingNativeControls_) {\r\n      this.addClass('vjs-using-native-controls');\r\n      /**\r\n       * player is using the native device controls\r\n       *\r\n       * @event Player#usingnativecontrols\r\n       * @type {EventTarget~Event}\r\n       */\r\n\r\n      this.trigger('usingnativecontrols');\r\n    } else {\r\n      this.removeClass('vjs-using-native-controls');\r\n      /**\r\n       * player is using the custom HTML controls\r\n       *\r\n       * @event Player#usingcustomcontrols\r\n       * @type {EventTarget~Event}\r\n       */\r\n\r\n      this.trigger('usingcustomcontrols');\r\n    }\r\n  }\r\n  /**\r\n   * Set or get the current MediaError\r\n   *\r\n   * @fires Player#error\r\n   *\r\n   * @param  {MediaError|string|number} [err]\r\n   *         A MediaError or a string/number to be turned\r\n   *         into a MediaError\r\n   *\r\n   * @return {MediaError|null}\r\n   *         The current MediaError when getting (or null)\r\n   */\r\n  ;\r\n\r\n  _proto.error = function error(err) {\r\n    var _this18 = this;\r\n\r\n    if (err === undefined) {\r\n      return this.error_ || null;\r\n    } // allow hooks to modify error object\r\n\r\n\r\n    hooks('beforeerror').forEach(function (hookFunction) {\r\n      var newErr = hookFunction(_this18, err);\r\n\r\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\r\n        _this18.log.error('please return a value that MediaError expects in beforeerror hooks');\r\n\r\n        return;\r\n      }\r\n\r\n      err = newErr;\r\n    }); // Suppress the first error message for no compatible source until\r\n    // user interaction\r\n\r\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\r\n      var triggerSuppressedError = function triggerSuppressedError() {\r\n        this.error(err);\r\n      };\r\n\r\n      this.options_.suppressNotSupportedError = false;\r\n      this.any(['click', 'touchstart'], triggerSuppressedError);\r\n      this.one('loadstart', function () {\r\n        this.off(['click', 'touchstart'], triggerSuppressedError);\r\n      });\r\n      return;\r\n    } // restoring to default\r\n\r\n\r\n    if (err === null) {\r\n      this.error_ = err;\r\n      this.removeClass('vjs-error');\r\n\r\n      if (this.errorDisplay) {\r\n        this.errorDisplay.close();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\r\n\r\n    this.addClass('vjs-error'); // log the name of the error type and any message\r\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\r\n\r\n    log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\r\n    /**\r\n     * @event Player#error\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('error'); // notify hooks of the per player error\r\n\r\n    hooks('error').forEach(function (hookFunction) {\r\n      return hookFunction(_this18, _this18.error_);\r\n    });\r\n    return;\r\n  }\r\n  /**\r\n   * Report user activity\r\n   *\r\n   * @param {Object} event\r\n   *        Event object\r\n   */\r\n  ;\r\n\r\n  _proto.reportUserActivity = function reportUserActivity(event) {\r\n    this.userActivity_ = true;\r\n  }\r\n  /**\r\n   * Get/set if user is active\r\n   *\r\n   * @fires Player#useractive\r\n   * @fires Player#userinactive\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true if the user is active\r\n   *        - false if the user is inactive\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of userActive when getting\r\n   */\r\n  ;\r\n\r\n  _proto.userActive = function userActive(bool) {\r\n    if (bool === undefined) {\r\n      return this.userActive_;\r\n    }\r\n\r\n    bool = !!bool;\r\n\r\n    if (bool === this.userActive_) {\r\n      return;\r\n    }\r\n\r\n    this.userActive_ = bool;\r\n\r\n    if (this.userActive_) {\r\n      this.userActivity_ = true;\r\n      this.removeClass('vjs-user-inactive');\r\n      this.addClass('vjs-user-active');\r\n      /**\r\n       * @event Player#useractive\r\n       * @type {EventTarget~Event}\r\n       */\r\n\r\n      this.trigger('useractive');\r\n      return;\r\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\r\n    // trigger a mousemove event. This causes an issue when you're hiding\r\n    // the cursor when the user is inactive, and a mousemove signals user\r\n    // activity. Making it impossible to go into inactive mode. Specifically\r\n    // this happens in fullscreen when we really need to hide the cursor.\r\n    //\r\n    // When this gets resolved in ALL browsers it can be removed\r\n    // https://code.google.com/p/chromium/issues/detail?id=103041\r\n\r\n\r\n    if (this.tech_) {\r\n      this.tech_.one('mousemove', function (e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      });\r\n    }\r\n\r\n    this.userActivity_ = false;\r\n    this.removeClass('vjs-user-active');\r\n    this.addClass('vjs-user-inactive');\r\n    /**\r\n     * @event Player#userinactive\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('userinactive');\r\n  }\r\n  /**\r\n   * Listen for user activity based on timeout value\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\r\n    var mouseInProgress;\r\n    var lastMoveX;\r\n    var lastMoveY;\r\n    var handleActivity = bind(this, this.reportUserActivity);\r\n\r\n    var handleMouseMove = function handleMouseMove(e) {\r\n      // #1068 - Prevent mousemove spamming\r\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\r\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\r\n        lastMoveX = e.screenX;\r\n        lastMoveY = e.screenY;\r\n        handleActivity();\r\n      }\r\n    };\r\n\r\n    var handleMouseDown = function handleMouseDown() {\r\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\r\n      // we consider them active even if they're not moving their finger or mouse.\r\n      // So we want to continue to update that they are active\r\n\r\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\r\n      // as the activityCheck interval (250) should ensure we never miss the\r\n      // next activityCheck\r\n\r\n      mouseInProgress = this.setInterval(handleActivity, 250);\r\n    };\r\n\r\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\r\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\r\n\r\n      this.clearInterval(mouseInProgress);\r\n    }; // Any mouse movement will be considered user activity\r\n\r\n\r\n    this.on('mousedown', handleMouseDown);\r\n    this.on('mousemove', handleMouseMove);\r\n    this.on('mouseup', handleMouseUpAndMouseLeave);\r\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\r\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\r\n    // controlBar would no longer be hidden by default timeout.\r\n\r\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\r\n      controlBar.on('mouseenter', function (event) {\r\n        if (this.player().options_.inactivityTimeout !== 0) {\r\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\r\n        }\r\n\r\n        this.player().options_.inactivityTimeout = 0;\r\n      });\r\n      controlBar.on('mouseleave', function (event) {\r\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\r\n      });\r\n    } // Listen for keyboard navigation\r\n    // Shouldn't need to use inProgress interval because of key repeat\r\n\r\n\r\n    this.on('keydown', handleActivity);\r\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\r\n    // the mousemove/touchmove function itself, to prevent performance degradation.\r\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\r\n    // then gets picked up by this loop\r\n    // http://ejohn.org/blog/learning-from-twitter/\r\n\r\n    var inactivityTimeout;\r\n    this.setInterval(function () {\r\n      // Check to see if mouse/touch activity has happened\r\n      if (!this.userActivity_) {\r\n        return;\r\n      } // Reset the activity tracker\r\n\r\n\r\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\r\n\r\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\r\n\r\n      this.clearTimeout(inactivityTimeout);\r\n      var timeout = this.options_.inactivityTimeout;\r\n\r\n      if (timeout <= 0) {\r\n        return;\r\n      } // In <timeout> milliseconds, if no more activity has occurred the\r\n      // user will be considered inactive\r\n\r\n\r\n      inactivityTimeout = this.setTimeout(function () {\r\n        // Protect against the case where the inactivityTimeout can trigger just\r\n        // before the next user activity is picked up by the activity check loop\r\n        // causing a flicker\r\n        if (!this.userActivity_) {\r\n          this.userActive(false);\r\n        }\r\n      }, timeout);\r\n    }, 250);\r\n  }\r\n  /**\r\n   * Gets or sets the current playback rate. A playback rate of\r\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\r\n   * playback, for instance.\r\n   *\r\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\r\n   *\r\n   * @param {number} [rate]\r\n   *       New playback rate to set.\r\n   *\r\n   * @return {number}\r\n   *         The current playback rate when getting or 1.0\r\n   */\r\n  ;\r\n\r\n  _proto.playbackRate = function playbackRate(rate) {\r\n    if (rate !== undefined) {\r\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\r\n      // that is registered above\r\n      this.techCall_('setPlaybackRate', rate);\r\n      return;\r\n    }\r\n\r\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\r\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\r\n    }\r\n\r\n    return 1.0;\r\n  }\r\n  /**\r\n   * Gets or sets the current default playback rate. A default playback rate of\r\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\r\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\r\n   * not the current playbackRate.\r\n   *\r\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\r\n   *\r\n   * @param {number} [rate]\r\n   *       New default playback rate to set.\r\n   *\r\n   * @return {number|Player}\r\n   *         - The default playback rate when getting or 1.0\r\n   *         - the player when setting\r\n   */\r\n  ;\r\n\r\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\r\n    if (rate !== undefined) {\r\n      return this.techCall_('setDefaultPlaybackRate', rate);\r\n    }\r\n\r\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\r\n      return this.techGet_('defaultPlaybackRate');\r\n    }\r\n\r\n    return 1.0;\r\n  }\r\n  /**\r\n   * Gets or sets the audio flag\r\n   *\r\n   * @param {boolean} bool\r\n   *        - true signals that this is an audio player\r\n   *        - false signals that this is not an audio player\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of isAudio when getting\r\n   */\r\n  ;\r\n\r\n  _proto.isAudio = function isAudio(bool) {\r\n    if (bool !== undefined) {\r\n      this.isAudio_ = !!bool;\r\n      return;\r\n    }\r\n\r\n    return !!this.isAudio_;\r\n  };\r\n\r\n  _proto.enableAudioOnlyUI_ = function enableAudioOnlyUI_() {\r\n    var _this19 = this;\r\n\r\n    // Update styling immediately to show the control bar so we can get its height\r\n    this.addClass('vjs-audio-only-mode');\r\n    var playerChildren = this.children();\r\n    var controlBar = this.getChild('ControlBar');\r\n    var controlBarHeight = controlBar && controlBar.currentHeight(); // Hide all player components except the control bar. Control bar components\r\n    // needed only for video are hidden with CSS\r\n\r\n    playerChildren.forEach(function (child) {\r\n      if (child === controlBar) {\r\n        return;\r\n      }\r\n\r\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\r\n        child.hide();\r\n\r\n        _this19.audioOnlyCache_.hiddenChildren.push(child);\r\n      }\r\n    });\r\n    this.audioOnlyCache_.playerHeight = this.currentHeight(); // Set the player height the same as the control bar\r\n\r\n    this.height(controlBarHeight);\r\n    this.trigger('audioonlymodechange');\r\n  };\r\n\r\n  _proto.disableAudioOnlyUI_ = function disableAudioOnlyUI_() {\r\n    this.removeClass('vjs-audio-only-mode'); // Show player components that were previously hidden\r\n\r\n    this.audioOnlyCache_.hiddenChildren.forEach(function (child) {\r\n      return child.show();\r\n    }); // Reset player height\r\n\r\n    this.height(this.audioOnlyCache_.playerHeight);\r\n    this.trigger('audioonlymodechange');\r\n  }\r\n  /**\r\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\r\n   *\r\n   * Setting this to `true` will hide all player components except the control bar,\r\n   * as well as control bar components needed only for video.\r\n   *\r\n   * @param {boolean} [value]\r\n   *         The value to set audioOnlyMode to.\r\n   *\r\n   * @return {Promise|boolean}\r\n   *        A Promise is returned when setting the state, and a boolean when getting\r\n   *        the present state\r\n   */\r\n  ;\r\n\r\n  _proto.audioOnlyMode = function audioOnlyMode(value) {\r\n    var _this20 = this;\r\n\r\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\r\n      return this.audioOnlyMode_;\r\n    }\r\n\r\n    this.audioOnlyMode_ = value;\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (PromiseClass) {\r\n      // Enable Audio Only Mode\r\n      if (value) {\r\n        var exitPromises = []; // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\r\n\r\n        if (this.isInPictureInPicture()) {\r\n          exitPromises.push(this.exitPictureInPicture());\r\n        }\r\n\r\n        if (this.isFullscreen()) {\r\n          exitPromises.push(this.exitFullscreen());\r\n        }\r\n\r\n        if (this.audioPosterMode()) {\r\n          exitPromises.push(this.audioPosterMode(false));\r\n        }\r\n\r\n        return PromiseClass.all(exitPromises).then(function () {\r\n          return _this20.enableAudioOnlyUI_();\r\n        });\r\n      } // Disable Audio Only Mode\r\n\r\n\r\n      return PromiseClass.resolve().then(function () {\r\n        return _this20.disableAudioOnlyUI_();\r\n      });\r\n    }\r\n\r\n    if (value) {\r\n      if (this.isInPictureInPicture()) {\r\n        this.exitPictureInPicture();\r\n      }\r\n\r\n      if (this.isFullscreen()) {\r\n        this.exitFullscreen();\r\n      }\r\n\r\n      this.enableAudioOnlyUI_();\r\n    } else {\r\n      this.disableAudioOnlyUI_();\r\n    }\r\n  };\r\n\r\n  _proto.enablePosterModeUI_ = function enablePosterModeUI_() {\r\n    // Hide the video element and show the poster image to enable posterModeUI\r\n    var tech = this.tech_ && this.tech_;\r\n    tech.hide();\r\n    this.addClass('vjs-audio-poster-mode');\r\n    this.trigger('audiopostermodechange');\r\n  };\r\n\r\n  _proto.disablePosterModeUI_ = function disablePosterModeUI_() {\r\n    // Show the video element and hide the poster image to disable posterModeUI\r\n    var tech = this.tech_ && this.tech_;\r\n    tech.show();\r\n    this.removeClass('vjs-audio-poster-mode');\r\n    this.trigger('audiopostermodechange');\r\n  }\r\n  /**\r\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\r\n   *\r\n   * @param {boolean} [value]\r\n   *         The value to set audioPosterMode to.\r\n   *\r\n   * @return {Promise|boolean}\r\n   *         A Promise is returned when setting the state, and a boolean when getting\r\n   *        the present state\r\n   */\r\n  ;\r\n\r\n  _proto.audioPosterMode = function audioPosterMode(value) {\r\n    var _this21 = this;\r\n\r\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\r\n      return this.audioPosterMode_;\r\n    }\r\n\r\n    this.audioPosterMode_ = value;\r\n    var PromiseClass = this.options_.Promise || window$1.Promise;\r\n\r\n    if (PromiseClass) {\r\n      if (value) {\r\n        if (this.audioOnlyMode()) {\r\n          var audioOnlyModePromise = this.audioOnlyMode(false);\r\n          return audioOnlyModePromise.then(function () {\r\n            // enable audio poster mode after audio only mode is disabled\r\n            _this21.enablePosterModeUI_();\r\n          });\r\n        }\r\n\r\n        return PromiseClass.resolve().then(function () {\r\n          // enable audio poster mode\r\n          _this21.enablePosterModeUI_();\r\n        });\r\n      }\r\n\r\n      return PromiseClass.resolve().then(function () {\r\n        // disable audio poster mode\r\n        _this21.disablePosterModeUI_();\r\n      });\r\n    }\r\n\r\n    if (value) {\r\n      if (this.audioOnlyMode()) {\r\n        this.audioOnlyMode(false);\r\n      }\r\n\r\n      this.enablePosterModeUI_();\r\n      return;\r\n    }\r\n\r\n    this.disablePosterModeUI_();\r\n  }\r\n  /**\r\n   * A helper method for adding a {@link TextTrack} to our\r\n   * {@link TextTrackList}.\r\n   *\r\n   * In addition to the W3C settings we allow adding additional info through options.\r\n   *\r\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\r\n   *\r\n   * @param {string} [kind]\r\n   *        the kind of TextTrack you are adding\r\n   *\r\n   * @param {string} [label]\r\n   *        the label to give the TextTrack label\r\n   *\r\n   * @param {string} [language]\r\n   *        the language to set on the TextTrack\r\n   *\r\n   * @return {TextTrack|undefined}\r\n   *         the TextTrack that was added or undefined\r\n   *         if there is no tech\r\n   */\r\n  ;\r\n\r\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\r\n    if (this.tech_) {\r\n      return this.tech_.addTextTrack(kind, label, language);\r\n    }\r\n  }\r\n  /**\r\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\r\n   * When manualCleanup is set to false, the track will be automatically removed\r\n   * on source changes.\r\n   *\r\n   * @param {Object} options\r\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\r\n   *        {@link HTMLTrackElement} for object properties that you should use.\r\n   *\r\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\r\n   *                                       removed on a source change\r\n   *\r\n   * @return {HtmlTrackElement}\r\n   *         the HTMLTrackElement that was created and added\r\n   *         to the HtmlTrackElementList and the remote\r\n   *         TextTrackList\r\n   *\r\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\r\n   *             to \"false\" in upcoming versions of Video.js\r\n   */\r\n  ;\r\n\r\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\r\n    if (this.tech_) {\r\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\r\n    }\r\n  }\r\n  /**\r\n   * Remove a remote {@link TextTrack} from the respective\r\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\r\n   *\r\n   * @param {Object} track\r\n   *        Remote {@link TextTrack} to remove\r\n   *\r\n   * @return {undefined}\r\n   *         does not return anything\r\n   */\r\n  ;\r\n\r\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\r\n    if (obj === void 0) {\r\n      obj = {};\r\n    }\r\n\r\n    var _obj = obj,\r\n        track = _obj.track;\r\n\r\n    if (!track) {\r\n      track = obj;\r\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\r\n    // default the whole argument to an empty object if nothing was passed in\r\n\r\n\r\n    if (this.tech_) {\r\n      return this.tech_.removeRemoteTextTrack(track);\r\n    }\r\n  }\r\n  /**\r\n   * Gets available media playback quality metrics as specified by the W3C's Media\r\n   * Playback Quality API.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\r\n   *\r\n   * @return {Object|undefined}\r\n   *         An object with supported media playback quality metrics or undefined if there\r\n   *         is no tech or the tech does not support it.\r\n   */\r\n  ;\r\n\r\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\r\n    return this.techGet_('getVideoPlaybackQuality');\r\n  }\r\n  /**\r\n   * Get video width\r\n   *\r\n   * @return {number}\r\n   *         current video width\r\n   */\r\n  ;\r\n\r\n  _proto.videoWidth = function videoWidth() {\r\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\r\n  }\r\n  /**\r\n   * Get video height\r\n   *\r\n   * @return {number}\r\n   *         current video height\r\n   */\r\n  ;\r\n\r\n  _proto.videoHeight = function videoHeight() {\r\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\r\n  }\r\n  /**\r\n   * The player's language code.\r\n   *\r\n   * Changing the language will trigger\r\n   * [languagechange]{@link Player#event:languagechange}\r\n   * which Components can use to update control text.\r\n   * ClickableComponent will update its control text by default on\r\n   * [languagechange]{@link Player#event:languagechange}.\r\n   *\r\n   * @fires Player#languagechange\r\n   *\r\n   * @param {string} [code]\r\n   *        the language code to set the player to\r\n   *\r\n   * @return {string}\r\n   *         The current language code when getting\r\n   */\r\n  ;\r\n\r\n  _proto.language = function language(code) {\r\n    if (code === undefined) {\r\n      return this.language_;\r\n    }\r\n\r\n    if (this.language_ !== String(code).toLowerCase()) {\r\n      this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\r\n\r\n      if (isEvented(this)) {\r\n        /**\r\n        * fires when the player language change\r\n        *\r\n        * @event Player#languagechange\r\n        * @type {EventTarget~Event}\r\n        */\r\n        this.trigger('languagechange');\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get the player's language dictionary\r\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\r\n   * Languages specified directly in the player options have precedence\r\n   *\r\n   * @return {Array}\r\n   *         An array of of supported languages\r\n   */\r\n  ;\r\n\r\n  _proto.languages = function languages() {\r\n    return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\r\n  }\r\n  /**\r\n   * returns a JavaScript object reperesenting the current track\r\n   * information. **DOES not return it as JSON**\r\n   *\r\n   * @return {Object}\r\n   *         Object representing the current of track info\r\n   */\r\n  ;\r\n\r\n  _proto.toJSON = function toJSON() {\r\n    var options = mergeOptions$3(this.options_);\r\n    var tracks = options.tracks;\r\n    options.tracks = [];\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\r\n\r\n      track = mergeOptions$3(track);\r\n      track.player = undefined;\r\n      options.tracks[i] = track;\r\n    }\r\n\r\n    return options;\r\n  }\r\n  /**\r\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\r\n   * component) that immediately overlays the player with arbitrary\r\n   * content and removes itself when closed.\r\n   *\r\n   * @param {string|Function|Element|Array|null} content\r\n   *        Same as {@link ModalDialog#content}'s param of the same name.\r\n   *        The most straight-forward usage is to provide a string or DOM\r\n   *        element.\r\n   *\r\n   * @param {Object} [options]\r\n   *        Extra options which will be passed on to the {@link ModalDialog}.\r\n   *\r\n   * @return {ModalDialog}\r\n   *         the {@link ModalDialog} that was created\r\n   */\r\n  ;\r\n\r\n  _proto.createModal = function createModal(content, options) {\r\n    var _this22 = this;\r\n\r\n    options = options || {};\r\n    options.content = content || '';\r\n    var modal = new ModalDialog(this, options);\r\n    this.addChild(modal);\r\n    modal.on('dispose', function () {\r\n      _this22.removeChild(modal);\r\n    });\r\n    modal.open();\r\n    return modal;\r\n  }\r\n  /**\r\n   * Change breakpoint classes when the player resizes.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\r\n    if (!this.responsive()) {\r\n      return;\r\n    }\r\n\r\n    var currentBreakpoint = this.currentBreakpoint();\r\n    var currentWidth = this.currentWidth();\r\n\r\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\r\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\r\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\r\n\r\n      if (currentWidth <= maxWidth) {\r\n        // The current breakpoint did not change, nothing to do.\r\n        if (currentBreakpoint === candidateBreakpoint) {\r\n          return;\r\n        } // Only remove a class if there is a current breakpoint.\r\n\r\n\r\n        if (currentBreakpoint) {\r\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\r\n        }\r\n\r\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\r\n        this.breakpoint_ = candidateBreakpoint;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Removes the current breakpoint.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\r\n    var className = this.currentBreakpointClass();\r\n    this.breakpoint_ = '';\r\n\r\n    if (className) {\r\n      this.removeClass(className);\r\n    }\r\n  }\r\n  /**\r\n   * Get or set breakpoints on the player.\r\n   *\r\n   * Calling this method with an object or `true` will remove any previous\r\n   * custom breakpoints and start from the defaults again.\r\n   *\r\n   * @param  {Object|boolean} [breakpoints]\r\n   *         If an object is given, it can be used to provide custom\r\n   *         breakpoints. If `true` is given, will set default breakpoints.\r\n   *         If this argument is not given, will simply return the current\r\n   *         breakpoints.\r\n   *\r\n   * @param  {number} [breakpoints.tiny]\r\n   *         The maximum width for the \"vjs-layout-tiny\" class.\r\n   *\r\n   * @param  {number} [breakpoints.xsmall]\r\n   *         The maximum width for the \"vjs-layout-x-small\" class.\r\n   *\r\n   * @param  {number} [breakpoints.small]\r\n   *         The maximum width for the \"vjs-layout-small\" class.\r\n   *\r\n   * @param  {number} [breakpoints.medium]\r\n   *         The maximum width for the \"vjs-layout-medium\" class.\r\n   *\r\n   * @param  {number} [breakpoints.large]\r\n   *         The maximum width for the \"vjs-layout-large\" class.\r\n   *\r\n   * @param  {number} [breakpoints.xlarge]\r\n   *         The maximum width for the \"vjs-layout-x-large\" class.\r\n   *\r\n   * @param  {number} [breakpoints.huge]\r\n   *         The maximum width for the \"vjs-layout-huge\" class.\r\n   *\r\n   * @return {Object}\r\n   *         An object mapping breakpoint names to maximum width values.\r\n   */\r\n  ;\r\n\r\n  _proto.breakpoints = function breakpoints(_breakpoints) {\r\n    // Used as a getter.\r\n    if (_breakpoints === undefined) {\r\n      return assign(this.breakpoints_);\r\n    }\r\n\r\n    this.breakpoint_ = '';\r\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\r\n    // selected breakpoint.\r\n\r\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\r\n\r\n    return assign(this.breakpoints_);\r\n  }\r\n  /**\r\n   * Get or set a flag indicating whether or not this player should adjust\r\n   * its UI based on its dimensions.\r\n   *\r\n   * @param  {boolean} value\r\n   *         Should be `true` if the player should adjust its UI based on its\r\n   *         dimensions; otherwise, should be `false`.\r\n   *\r\n   * @return {boolean}\r\n   *         Will be `true` if this player should adjust its UI based on its\r\n   *         dimensions; otherwise, will be `false`.\r\n   */\r\n  ;\r\n\r\n  _proto.responsive = function responsive(value) {\r\n    // Used as a getter.\r\n    if (value === undefined) {\r\n      return this.responsive_;\r\n    }\r\n\r\n    value = Boolean(value);\r\n    var current = this.responsive_; // Nothing changed.\r\n\r\n    if (value === current) {\r\n      return;\r\n    } // The value actually changed, set it.\r\n\r\n\r\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\r\n    // player is now responsive.\r\n\r\n    if (value) {\r\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\r\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\r\n    } else {\r\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\r\n      this.removeCurrentBreakpoint_();\r\n    }\r\n\r\n    return value;\r\n  }\r\n  /**\r\n   * Get current breakpoint name, if any.\r\n   *\r\n   * @return {string}\r\n   *         If there is currently a breakpoint set, returns a the key from the\r\n   *         breakpoints object matching it. Otherwise, returns an empty string.\r\n   */\r\n  ;\r\n\r\n  _proto.currentBreakpoint = function currentBreakpoint() {\r\n    return this.breakpoint_;\r\n  }\r\n  /**\r\n   * Get the current breakpoint class name.\r\n   *\r\n   * @return {string}\r\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\r\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\r\n   *         there is no current breakpoint.\r\n   */\r\n  ;\r\n\r\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\r\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\r\n  }\r\n  /**\r\n   * An object that describes a single piece of media.\r\n   *\r\n   * Properties that are not part of this type description will be retained; so,\r\n   * this can be viewed as a generic metadata storage mechanism as well.\r\n   *\r\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\r\n   * @typedef  {Object} Player~MediaObject\r\n   *\r\n   * @property {string} [album]\r\n   *           Unused, except if this object is passed to the `MediaSession`\r\n   *           API.\r\n   *\r\n   * @property {string} [artist]\r\n   *           Unused, except if this object is passed to the `MediaSession`\r\n   *           API.\r\n   *\r\n   * @property {Object[]} [artwork]\r\n   *           Unused, except if this object is passed to the `MediaSession`\r\n   *           API. If not specified, will be populated via the `poster`, if\r\n   *           available.\r\n   *\r\n   * @property {string} [poster]\r\n   *           URL to an image that will display before playback.\r\n   *\r\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\r\n   *           A single source object, an array of source objects, or a string\r\n   *           referencing a URL to a media source. It is _highly recommended_\r\n   *           that an object or array of objects is used here, so that source\r\n   *           selection algorithms can take the `type` into account.\r\n   *\r\n   * @property {string} [title]\r\n   *           Unused, except if this object is passed to the `MediaSession`\r\n   *           API.\r\n   *\r\n   * @property {Object[]} [textTracks]\r\n   *           An array of objects to be used to create text tracks, following\r\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\r\n   *           For ease of removal, these will be created as \"remote\" text\r\n   *           tracks and set to automatically clean up on source changes.\r\n   *\r\n   *           These objects may have properties like `src`, `kind`, `label`,\r\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\r\n   */\r\n\r\n  /**\r\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\r\n   *\r\n   * @param  {Player~MediaObject} media\r\n   *         A media object.\r\n   *\r\n   * @param  {Function} ready\r\n   *         A callback to be called when the player is ready.\r\n   */\r\n  ;\r\n\r\n  _proto.loadMedia = function loadMedia(media, ready) {\r\n    var _this23 = this;\r\n\r\n    if (!media || typeof media !== 'object') {\r\n      return;\r\n    }\r\n\r\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\r\n\r\n    this.cache_.media = mergeOptions$3(media);\r\n    var _this$cache_$media = this.cache_.media,\r\n        artwork = _this$cache_$media.artwork,\r\n        poster = _this$cache_$media.poster,\r\n        src = _this$cache_$media.src,\r\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\r\n\r\n    if (!artwork && poster) {\r\n      this.cache_.media.artwork = [{\r\n        src: poster,\r\n        type: getMimetype(poster)\r\n      }];\r\n    }\r\n\r\n    if (src) {\r\n      this.src(src);\r\n    }\r\n\r\n    if (poster) {\r\n      this.poster(poster);\r\n    }\r\n\r\n    if (Array.isArray(textTracks)) {\r\n      textTracks.forEach(function (tt) {\r\n        return _this23.addRemoteTextTrack(tt, false);\r\n      });\r\n    }\r\n\r\n    this.ready(ready);\r\n  }\r\n  /**\r\n   * Get a clone of the current {@link Player~MediaObject} for this player.\r\n   *\r\n   * If the `loadMedia` method has not been used, will attempt to return a\r\n   * {@link Player~MediaObject} based on the current state of the player.\r\n   *\r\n   * @return {Player~MediaObject}\r\n   */\r\n  ;\r\n\r\n  _proto.getMedia = function getMedia() {\r\n    if (!this.cache_.media) {\r\n      var poster = this.poster();\r\n      var src = this.currentSources();\r\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\r\n        return {\r\n          kind: tt.kind,\r\n          label: tt.label,\r\n          language: tt.language,\r\n          src: tt.src\r\n        };\r\n      });\r\n      var media = {\r\n        src: src,\r\n        textTracks: textTracks\r\n      };\r\n\r\n      if (poster) {\r\n        media.poster = poster;\r\n        media.artwork = [{\r\n          src: media.poster,\r\n          type: getMimetype(media.poster)\r\n        }];\r\n      }\r\n\r\n      return media;\r\n    }\r\n\r\n    return mergeOptions$3(this.cache_.media);\r\n  }\r\n  /**\r\n   * Gets tag settings\r\n   *\r\n   * @param {Element} tag\r\n   *        The player tag\r\n   *\r\n   * @return {Object}\r\n   *         An object containing all of the settings\r\n   *         for a player tag\r\n   */\r\n  ;\r\n\r\n  Player.getTagSettings = function getTagSettings(tag) {\r\n    var baseOptions = {\r\n      sources: [],\r\n      tracks: []\r\n    };\r\n    var tagOptions = getAttributes(tag);\r\n    var dataSetup = tagOptions['data-setup'];\r\n\r\n    if (hasClass(tag, 'vjs-fill')) {\r\n      tagOptions.fill = true;\r\n    }\r\n\r\n    if (hasClass(tag, 'vjs-fluid')) {\r\n      tagOptions.fluid = true;\r\n    } // Check if data-setup attr exists.\r\n\r\n\r\n    if (dataSetup !== null) {\r\n      // Parse options JSON\r\n      // If empty string, make it a parsable json object.\r\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\r\n          err = _safeParseTuple[0],\r\n          data = _safeParseTuple[1];\r\n\r\n      if (err) {\r\n        log$1.error(err);\r\n      }\r\n\r\n      assign(tagOptions, data);\r\n    }\r\n\r\n    assign(baseOptions, tagOptions); // Get tag children settings\r\n\r\n    if (tag.hasChildNodes()) {\r\n      var children = tag.childNodes;\r\n\r\n      for (var i = 0, j = children.length; i < j; i++) {\r\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\r\n\r\n        var childName = child.nodeName.toLowerCase();\r\n\r\n        if (childName === 'source') {\r\n          baseOptions.sources.push(getAttributes(child));\r\n        } else if (childName === 'track') {\r\n          baseOptions.tracks.push(getAttributes(child));\r\n        }\r\n      }\r\n    }\r\n\r\n    return baseOptions;\r\n  }\r\n  /**\r\n   * Determine whether or not flexbox is supported\r\n   *\r\n   * @return {boolean}\r\n   *         - true if flexbox is supported\r\n   *         - false if flexbox is not supported\r\n   */\r\n  ;\r\n\r\n  _proto.flexNotSupported_ = function flexNotSupported_() {\r\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\r\n    // common flex features that we can rely on when checking for flex support.\r\n\r\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\r\n    'msFlexOrder' in elem.style);\r\n  }\r\n  /**\r\n   * Set debug mode to enable/disable logs at info level.\r\n   *\r\n   * @param {boolean} enabled\r\n   * @fires Player#debugon\r\n   * @fires Player#debugoff\r\n   */\r\n  ;\r\n\r\n  _proto.debug = function debug(enabled) {\r\n    if (enabled === undefined) {\r\n      return this.debugEnabled_;\r\n    }\r\n\r\n    if (enabled) {\r\n      this.trigger('debugon');\r\n      this.previousLogLevel_ = this.log.level;\r\n      this.log.level('debug');\r\n      this.debugEnabled_ = true;\r\n    } else {\r\n      this.trigger('debugoff');\r\n      this.log.level(this.previousLogLevel_);\r\n      this.previousLogLevel_ = undefined;\r\n      this.debugEnabled_ = false;\r\n    }\r\n  }\r\n  /**\r\n   * Set or get current playback rates.\r\n   * Takes an array and updates the playback rates menu with the new items.\r\n   * Pass in an empty array to hide the menu.\r\n   * Values other than arrays are ignored.\r\n   *\r\n   * @fires Player#playbackrateschange\r\n   * @param {number[]} newRates\r\n   *                   The new rates that the playback rates menu should update to.\r\n   *                   An empty array will hide the menu\r\n   * @return {number[]} When used as a getter will return the current playback rates\r\n   */\r\n  ;\r\n\r\n  _proto.playbackRates = function playbackRates(newRates) {\r\n    if (newRates === undefined) {\r\n      return this.cache_.playbackRates;\r\n    } // ignore any value that isn't an array\r\n\r\n\r\n    if (!Array.isArray(newRates)) {\r\n      return;\r\n    } // ignore any arrays that don't only contain numbers\r\n\r\n\r\n    if (!newRates.every(function (rate) {\r\n      return typeof rate === 'number';\r\n    })) {\r\n      return;\r\n    }\r\n\r\n    this.cache_.playbackRates = newRates;\r\n    /**\r\n    * fires when the playback rates in a player are changed\r\n    *\r\n    * @event Player#playbackrateschange\r\n    * @type {EventTarget~Event}\r\n    */\r\n\r\n    this.trigger('playbackrateschange');\r\n  };\r\n\r\n  return Player;\r\n}(Component$1);\r\n/**\r\n * Get the {@link VideoTrackList}\r\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\r\n *\r\n * @return {VideoTrackList}\r\n *         the current video track list\r\n *\r\n * @method Player.prototype.videoTracks\r\n */\r\n\r\n/**\r\n * Get the {@link AudioTrackList}\r\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\r\n *\r\n * @return {AudioTrackList}\r\n *         the current audio track list\r\n *\r\n * @method Player.prototype.audioTracks\r\n */\r\n\r\n/**\r\n * Get the {@link TextTrackList}\r\n *\r\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\r\n *\r\n * @return {TextTrackList}\r\n *         the current text track list\r\n *\r\n * @method Player.prototype.textTracks\r\n */\r\n\r\n/**\r\n * Get the remote {@link TextTrackList}\r\n *\r\n * @return {TextTrackList}\r\n *         The current remote text track list\r\n *\r\n * @method Player.prototype.remoteTextTracks\r\n */\r\n\r\n/**\r\n * Get the remote {@link HtmlTrackElementList} tracks.\r\n *\r\n * @return {HtmlTrackElementList}\r\n *         The current remote text track element list\r\n *\r\n * @method Player.prototype.remoteTextTrackEls\r\n */\r\n\r\n\r\nALL.names.forEach(function (name) {\r\n  var props = ALL[name];\r\n\r\n  Player.prototype[props.getterName] = function () {\r\n    if (this.tech_) {\r\n      return this.tech_[props.getterName]();\r\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\r\n    // these will be passed to the tech during loading\r\n\r\n\r\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\r\n    return this[props.privateName];\r\n  };\r\n});\r\n/**\r\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\r\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\r\n * behavior.\r\n *\r\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\r\n *\r\n * @param {string} [value]\r\n *        The value to set the `Player`'s crossorigin to. If an argument is\r\n *        given, must be one of `anonymous` or `use-credentials`.\r\n *\r\n * @return {string|undefined}\r\n *         - The current crossorigin value of the `Player` when getting.\r\n *         - undefined when setting\r\n */\r\n\r\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\r\n/**\r\n * Global enumeration of players.\r\n *\r\n * The keys are the player IDs and the values are either the {@link Player}\r\n * instance or `null` for disposed players.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nPlayer.players = {};\r\nvar navigator = window$1.navigator;\r\n/*\r\n * Player instance options, surfaced using options\r\n * options = Player.prototype.options_\r\n * Make changes in options, not here.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\nPlayer.prototype.options_ = {\r\n  // Default order of fallback technology\r\n  techOrder: Tech.defaultTechOrder_,\r\n  html5: {},\r\n  // default inactivity timeout\r\n  inactivityTimeout: 2000,\r\n  // default playback rates\r\n  playbackRates: [],\r\n  // Add playback rate selection by adding rates\r\n  // 'playbackRates': [0.5, 1, 1.5, 2],\r\n  liveui: false,\r\n  // Included control sets\r\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\r\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\r\n  // locales and their language translations\r\n  languages: {},\r\n  // Default message to show when a video cannot be played.\r\n  notSupportedMessage: 'No compatible source was found for this media.',\r\n  normalizeAutoplay: false,\r\n  fullscreen: {\r\n    options: {\r\n      navigationUI: 'hide'\r\n    }\r\n  },\r\n  breakpoints: {},\r\n  responsive: false,\r\n  audioOnlyMode: false,\r\n  audioPosterMode: false\r\n};\r\n[\r\n/**\r\n * Returns whether or not the player is in the \"ended\" state.\r\n *\r\n * @return {Boolean} True if the player is in the ended state, false if not.\r\n * @method Player#ended\r\n */\r\n'ended',\r\n/**\r\n * Returns whether or not the player is in the \"seeking\" state.\r\n *\r\n * @return {Boolean} True if the player is in the seeking state, false if not.\r\n * @method Player#seeking\r\n */\r\n'seeking',\r\n/**\r\n * Returns the TimeRanges of the media that are currently available\r\n * for seeking to.\r\n *\r\n * @return {TimeRanges} the seekable intervals of the media timeline\r\n * @method Player#seekable\r\n */\r\n'seekable',\r\n/**\r\n * Returns the current state of network activity for the element, from\r\n * the codes in the list below.\r\n * - NETWORK_EMPTY (numeric value 0)\r\n *   The element has not yet been initialised. All attributes are in\r\n *   their initial states.\r\n * - NETWORK_IDLE (numeric value 1)\r\n *   The element's resource selection algorithm is active and has\r\n *   selected a resource, but it is not actually using the network at\r\n *   this time.\r\n * - NETWORK_LOADING (numeric value 2)\r\n *   The user agent is actively trying to download data.\r\n * - NETWORK_NO_SOURCE (numeric value 3)\r\n *   The element's resource selection algorithm is active, but it has\r\n *   not yet found a resource to use.\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\r\n * @return {number} the current network activity state\r\n * @method Player#networkState\r\n */\r\n'networkState',\r\n/**\r\n * Returns a value that expresses the current state of the element\r\n * with respect to rendering the current playback position, from the\r\n * codes in the list below.\r\n * - HAVE_NOTHING (numeric value 0)\r\n *   No information regarding the media resource is available.\r\n * - HAVE_METADATA (numeric value 1)\r\n *   Enough of the resource has been obtained that the duration of the\r\n *   resource is available.\r\n * - HAVE_CURRENT_DATA (numeric value 2)\r\n *   Data for the immediate current playback position is available.\r\n * - HAVE_FUTURE_DATA (numeric value 3)\r\n *   Data for the immediate current playback position is available, as\r\n *   well as enough data for the user agent to advance the current\r\n *   playback position in the direction of playback.\r\n * - HAVE_ENOUGH_DATA (numeric value 4)\r\n *   The user agent estimates that enough data is available for\r\n *   playback to proceed uninterrupted.\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\r\n * @return {number} the current playback rendering state\r\n * @method Player#readyState\r\n */\r\n'readyState'].forEach(function (fn) {\r\n  Player.prototype[fn] = function () {\r\n    return this.techGet_(fn);\r\n  };\r\n});\r\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\r\n  Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\r\n    return this.trigger(event);\r\n  };\r\n});\r\n/**\r\n * Fired when the player has initial duration and dimension information\r\n *\r\n * @event Player#loadedmetadata\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Fired when the player has downloaded data at the current playback position\r\n *\r\n * @event Player#loadeddata\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Fired when the current playback position has changed *\r\n * During playback this is fired every 15-250 milliseconds, depending on the\r\n * playback technology in use.\r\n *\r\n * @event Player#timeupdate\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Fired when the volume changes\r\n *\r\n * @event Player#volumechange\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Reports whether or not a player has a plugin available.\r\n *\r\n * This does not report whether or not the plugin has ever been initialized\r\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\r\n *\r\n * @method Player#hasPlugin\r\n * @param  {string}  name\r\n *         The name of a plugin.\r\n *\r\n * @return {boolean}\r\n *         Whether or not this player has the requested plugin available.\r\n */\r\n\r\n/**\r\n * Reports whether or not a player is using a plugin by name.\r\n *\r\n * For basic plugins, this only reports whether the plugin has _ever_ been\r\n * initialized on this player.\r\n *\r\n * @method Player#usingPlugin\r\n * @param  {string} name\r\n *         The name of a plugin.\r\n *\r\n * @return {boolean}\r\n *         Whether or not this player is using the requested plugin.\r\n */\r\n\r\nComponent$1.registerComponent('Player', Player);\r\n\r\n/**\r\n * The base plugin name.\r\n *\r\n * @private\r\n * @constant\r\n * @type {string}\r\n */\r\n\r\nvar BASE_PLUGIN_NAME = 'plugin';\r\n/**\r\n * The key on which a player's active plugins cache is stored.\r\n *\r\n * @private\r\n * @constant\r\n * @type     {string}\r\n */\r\n\r\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\r\n/**\r\n * Stores registered plugins in a private space.\r\n *\r\n * @private\r\n * @type    {Object}\r\n */\r\n\r\nvar pluginStorage = {};\r\n/**\r\n * Reports whether or not a plugin has been registered.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of a plugin.\r\n *\r\n * @return {boolean}\r\n *          Whether or not the plugin has been registered.\r\n */\r\n\r\nvar pluginExists = function pluginExists(name) {\r\n  return pluginStorage.hasOwnProperty(name);\r\n};\r\n/**\r\n * Get a single registered plugin by name.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of a plugin.\r\n *\r\n * @return {Function|undefined}\r\n *          The plugin (or undefined).\r\n */\r\n\r\n\r\nvar getPlugin = function getPlugin(name) {\r\n  return pluginExists(name) ? pluginStorage[name] : undefined;\r\n};\r\n/**\r\n * Marks a plugin as \"active\" on a player.\r\n *\r\n * Also, ensures that the player has an object for tracking active plugins.\r\n *\r\n * @private\r\n * @param   {Player} player\r\n *          A Video.js player instance.\r\n *\r\n * @param   {string} name\r\n *          The name of a plugin.\r\n */\r\n\r\n\r\nvar markPluginAsActive = function markPluginAsActive(player, name) {\r\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\r\n  player[PLUGIN_CACHE_KEY][name] = true;\r\n};\r\n/**\r\n * Triggers a pair of plugin setup events.\r\n *\r\n * @private\r\n * @param  {Player} player\r\n *         A Video.js player instance.\r\n *\r\n * @param  {Plugin~PluginEventHash} hash\r\n *         A plugin event hash.\r\n *\r\n * @param  {boolean} [before]\r\n *         If true, prefixes the event name with \"before\". In other words,\r\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\r\n */\r\n\r\n\r\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\r\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\r\n  player.trigger(eventName, hash);\r\n  player.trigger(eventName + ':' + hash.name, hash);\r\n};\r\n/**\r\n * Takes a basic plugin function and returns a wrapper function which marks\r\n * on the player that the plugin has been activated.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of the plugin.\r\n *\r\n * @param   {Function} plugin\r\n *          The basic plugin.\r\n *\r\n * @return {Function}\r\n *          A wrapper function for the given plugin.\r\n */\r\n\r\n\r\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\r\n  var basicPluginWrapper = function basicPluginWrapper() {\r\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\r\n    // regardless, but we want the hash to be consistent with the hash provided\r\n    // for advanced plugins.\r\n    //\r\n    // The only potentially counter-intuitive thing here is the `instance` in\r\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\r\n    triggerSetupEvent(this, {\r\n      name: name,\r\n      plugin: plugin,\r\n      instance: null\r\n    }, true);\r\n    var instance = plugin.apply(this, arguments);\r\n    markPluginAsActive(this, name);\r\n    triggerSetupEvent(this, {\r\n      name: name,\r\n      plugin: plugin,\r\n      instance: instance\r\n    });\r\n    return instance;\r\n  };\r\n\r\n  Object.keys(plugin).forEach(function (prop) {\r\n    basicPluginWrapper[prop] = plugin[prop];\r\n  });\r\n  return basicPluginWrapper;\r\n};\r\n/**\r\n * Takes a plugin sub-class and returns a factory function for generating\r\n * instances of it.\r\n *\r\n * This factory function will replace itself with an instance of the requested\r\n * sub-class of Plugin.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of the plugin.\r\n *\r\n * @param   {Plugin} PluginSubClass\r\n *          The advanced plugin.\r\n *\r\n * @return {Function}\r\n */\r\n\r\n\r\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\r\n  // Add a `name` property to the plugin prototype so that each plugin can\r\n  // refer to itself by name.\r\n  PluginSubClass.prototype.name = name;\r\n  return function () {\r\n    triggerSetupEvent(this, {\r\n      name: name,\r\n      plugin: PluginSubClass,\r\n      instance: null\r\n    }, true);\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\r\n\r\n\r\n    this[name] = function () {\r\n      return instance;\r\n    };\r\n\r\n    triggerSetupEvent(this, instance.getEventHash());\r\n    return instance;\r\n  };\r\n};\r\n/**\r\n * Parent class for all advanced plugins.\r\n *\r\n * @mixes   module:evented~EventedMixin\r\n * @mixes   module:stateful~StatefulMixin\r\n * @fires   Player#beforepluginsetup\r\n * @fires   Player#beforepluginsetup:$name\r\n * @fires   Player#pluginsetup\r\n * @fires   Player#pluginsetup:$name\r\n * @listens Player#dispose\r\n * @throws  {Error}\r\n *          If attempting to instantiate the base {@link Plugin} class\r\n *          directly instead of via a sub-class.\r\n */\r\n\r\n\r\nvar Plugin = /*#__PURE__*/function () {\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\r\n   *\r\n   * @param {Player} player\r\n   *        A Video.js player instance.\r\n   */\r\n  function Plugin(player) {\r\n    if (this.constructor === Plugin) {\r\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\r\n    }\r\n\r\n    this.player = player;\r\n\r\n    if (!this.log) {\r\n      this.log = this.player.log.createLogger(this.name);\r\n    } // Make this object evented, but remove the added `trigger` method so we\r\n    // use the prototype version instead.\r\n\r\n\r\n    evented(this);\r\n    delete this.trigger;\r\n    stateful(this, this.constructor.defaultState);\r\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\r\n    // it later easily.\r\n\r\n    this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\r\n\r\n    player.on('dispose', this.dispose);\r\n  }\r\n  /**\r\n   * Get the version of the plugin that was set on <pluginName>.VERSION\r\n   */\r\n\r\n\r\n  var _proto = Plugin.prototype;\r\n\r\n  _proto.version = function version() {\r\n    return this.constructor.VERSION;\r\n  }\r\n  /**\r\n   * Each event triggered by plugins includes a hash of additional data with\r\n   * conventional properties.\r\n   *\r\n   * This returns that object or mutates an existing hash.\r\n   *\r\n   * @param   {Object} [hash={}]\r\n   *          An object to be used as event an event hash.\r\n   *\r\n   * @return {Plugin~PluginEventHash}\r\n   *          An event hash object with provided properties mixed-in.\r\n   */\r\n  ;\r\n\r\n  _proto.getEventHash = function getEventHash(hash) {\r\n    if (hash === void 0) {\r\n      hash = {};\r\n    }\r\n\r\n    hash.name = this.name;\r\n    hash.plugin = this.constructor;\r\n    hash.instance = this;\r\n    return hash;\r\n  }\r\n  /**\r\n   * Triggers an event on the plugin object and overrides\r\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\r\n   *\r\n   * @param   {string|Object} event\r\n   *          An event type or an object with a type property.\r\n   *\r\n   * @param   {Object} [hash={}]\r\n   *          Additional data hash to merge with a\r\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\r\n   *\r\n   * @return {boolean}\r\n   *          Whether or not default was prevented.\r\n   */\r\n  ;\r\n\r\n  _proto.trigger = function trigger$1(event, hash) {\r\n    if (hash === void 0) {\r\n      hash = {};\r\n    }\r\n\r\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\r\n  }\r\n  /**\r\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\r\n   * subclassing.\r\n   *\r\n   * @abstract\r\n   * @param    {Event} e\r\n   *           An event object provided by a \"statechanged\" event.\r\n   *\r\n   * @param    {Object} e.changes\r\n   *           An object describing changes that occurred with the \"statechanged\"\r\n   *           event.\r\n   */\r\n  ;\r\n\r\n  _proto.handleStateChanged = function handleStateChanged(e) {}\r\n  /**\r\n   * Disposes a plugin.\r\n   *\r\n   * Subclasses can override this if they want, but for the sake of safety,\r\n   * it's probably best to subscribe the \"dispose\" event.\r\n   *\r\n   * @fires Plugin#dispose\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    var name = this.name,\r\n        player = this.player;\r\n    /**\r\n     * Signals that a advanced plugin is about to be disposed.\r\n     *\r\n     * @event Plugin#dispose\r\n     * @type  {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('dispose');\r\n    this.off();\r\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\r\n    // references between the player and the plugin instance and nulling out\r\n    // the plugin's state and replacing methods with a function that throws.\r\n\r\n    player[PLUGIN_CACHE_KEY][name] = false;\r\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\r\n    // function, so that the plugin is ready to be set up again.\r\n\r\n    player[name] = createPluginFactory(name, pluginStorage[name]);\r\n  }\r\n  /**\r\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\r\n   *\r\n   * @param   {string|Function} plugin\r\n   *          If a string, matches the name of a plugin. If a function, will be\r\n   *          tested directly.\r\n   *\r\n   * @return {boolean}\r\n   *          Whether or not a plugin is a basic plugin.\r\n   */\r\n  ;\r\n\r\n  Plugin.isBasic = function isBasic(plugin) {\r\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\r\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\r\n  }\r\n  /**\r\n   * Register a Video.js plugin.\r\n   *\r\n   * @param   {string} name\r\n   *          The name of the plugin to be registered. Must be a string and\r\n   *          must not match an existing plugin or a method on the `Player`\r\n   *          prototype.\r\n   *\r\n   * @param   {Function} plugin\r\n   *          A sub-class of `Plugin` or a function for basic plugins.\r\n   *\r\n   * @return {Function}\r\n   *          For advanced plugins, a factory function for that plugin. For\r\n   *          basic plugins, a wrapper function that initializes the plugin.\r\n   */\r\n  ;\r\n\r\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\r\n    if (typeof name !== 'string') {\r\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\r\n    }\r\n\r\n    if (pluginExists(name)) {\r\n      log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\r\n    } else if (Player.prototype.hasOwnProperty(name)) {\r\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\r\n    }\r\n\r\n    if (typeof plugin !== 'function') {\r\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\r\n    }\r\n\r\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\r\n    // the base Plugin class).\r\n\r\n    if (name !== BASE_PLUGIN_NAME) {\r\n      if (Plugin.isBasic(plugin)) {\r\n        Player.prototype[name] = createBasicPlugin(name, plugin);\r\n      } else {\r\n        Player.prototype[name] = createPluginFactory(name, plugin);\r\n      }\r\n    }\r\n\r\n    return plugin;\r\n  }\r\n  /**\r\n   * De-register a Video.js plugin.\r\n   *\r\n   * @param  {string} name\r\n   *         The name of the plugin to be de-registered. Must be a string that\r\n   *         matches an existing plugin.\r\n   *\r\n   * @throws {Error}\r\n   *         If an attempt is made to de-register the base plugin.\r\n   */\r\n  ;\r\n\r\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\r\n    if (name === BASE_PLUGIN_NAME) {\r\n      throw new Error('Cannot de-register base plugin.');\r\n    }\r\n\r\n    if (pluginExists(name)) {\r\n      delete pluginStorage[name];\r\n      delete Player.prototype[name];\r\n    }\r\n  }\r\n  /**\r\n   * Gets an object containing multiple Video.js plugins.\r\n   *\r\n   * @param   {Array} [names]\r\n   *          If provided, should be an array of plugin names. Defaults to _all_\r\n   *          plugin names.\r\n   *\r\n   * @return {Object|undefined}\r\n   *          An object containing plugin(s) associated with their name(s) or\r\n   *          `undefined` if no matching plugins exist).\r\n   */\r\n  ;\r\n\r\n  Plugin.getPlugins = function getPlugins(names) {\r\n    if (names === void 0) {\r\n      names = Object.keys(pluginStorage);\r\n    }\r\n\r\n    var result;\r\n    names.forEach(function (name) {\r\n      var plugin = getPlugin(name);\r\n\r\n      if (plugin) {\r\n        result = result || {};\r\n        result[name] = plugin;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * Gets a plugin's version, if available\r\n   *\r\n   * @param   {string} name\r\n   *          The name of a plugin.\r\n   *\r\n   * @return {string}\r\n   *          The plugin's version or an empty string.\r\n   */\r\n  ;\r\n\r\n  Plugin.getPluginVersion = function getPluginVersion(name) {\r\n    var plugin = getPlugin(name);\r\n    return plugin && plugin.VERSION || '';\r\n  };\r\n\r\n  return Plugin;\r\n}();\r\n/**\r\n * Gets a plugin by name if it exists.\r\n *\r\n * @static\r\n * @method   getPlugin\r\n * @memberOf Plugin\r\n * @param    {string} name\r\n *           The name of a plugin.\r\n *\r\n * @returns  {Function|undefined}\r\n *           The plugin (or `undefined`).\r\n */\r\n\r\n\r\nPlugin.getPlugin = getPlugin;\r\n/**\r\n * The name of the base plugin class as it is registered.\r\n *\r\n * @type {string}\r\n */\r\n\r\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\r\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\r\n/**\r\n * Documented in player.js\r\n *\r\n * @ignore\r\n */\r\n\r\nPlayer.prototype.usingPlugin = function (name) {\r\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\r\n};\r\n/**\r\n * Documented in player.js\r\n *\r\n * @ignore\r\n */\r\n\r\n\r\nPlayer.prototype.hasPlugin = function (name) {\r\n  return !!pluginExists(name);\r\n};\r\n/**\r\n * Signals that a plugin is about to be set up on a player.\r\n *\r\n * @event    Player#beforepluginsetup\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * Signals that a plugin is about to be set up on a player - by name. The name\r\n * is the name of the plugin.\r\n *\r\n * @event    Player#beforepluginsetup:$name\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * Signals that a plugin has just been set up on a player.\r\n *\r\n * @event    Player#pluginsetup\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * Signals that a plugin has just been set up on a player - by name. The name\r\n * is the name of the plugin.\r\n *\r\n * @event    Player#pluginsetup:$name\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * @typedef  {Object} Plugin~PluginEventHash\r\n *\r\n * @property {string} instance\r\n *           For basic plugins, the return value of the plugin function. For\r\n *           advanced plugins, the plugin instance on which the event is fired.\r\n *\r\n * @property {string} name\r\n *           The name of the plugin.\r\n *\r\n * @property {string} plugin\r\n *           For basic plugins, the plugin function. For advanced plugins, the\r\n *           plugin class/constructor.\r\n */\r\n\r\n/**\r\n * @file extend.js\r\n * @module extend\r\n */\r\nvar hasLogged = false;\r\n/**\r\n * Used to subclass an existing class by emulating ES subclassing using the\r\n * `extends` keyword.\r\n *\r\n * @function\r\n * @deprecated\r\n * @example\r\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\r\n *   myCustomMethod: function() {\r\n *     // Do things in my method.\r\n *   }\r\n * });\r\n *\r\n * @param    {Function} superClass\r\n *           The class to inherit from\r\n *\r\n * @param    {Object}   [subClassMethods={}]\r\n *           Methods of the new class\r\n *\r\n * @return   {Function}\r\n *           The new class with subClassMethods that inherited superClass.\r\n */\r\n\r\nvar extend = function extend(superClass, subClassMethods) {\r\n  if (subClassMethods === void 0) {\r\n    subClassMethods = {};\r\n  }\r\n\r\n  // Log a warning the first time extend is called to note that it is deprecated\r\n  // It was previously deprecated in our documentation (guides, specifically),\r\n  // but was never formally deprecated in code.\r\n  if (!hasLogged) {\r\n    log$1.warn('videojs.extend is deprecated as of Video.js 7.22.0 and will be removed in Video.js 8.0.0');\r\n    hasLogged = true;\r\n  }\r\n\r\n  var subClass = function subClass() {\r\n    superClass.apply(this, arguments);\r\n  };\r\n\r\n  var methods = {};\r\n\r\n  if (typeof subClassMethods === 'object') {\r\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\r\n      subClass = subClassMethods.constructor;\r\n    }\r\n\r\n    methods = subClassMethods;\r\n  } else if (typeof subClassMethods === 'function') {\r\n    subClass = subClassMethods;\r\n  }\r\n\r\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\r\n\r\n\r\n  if (superClass) {\r\n    subClass.super_ = superClass;\r\n  } // Extend subObj's prototype with functions and other properties from props\r\n\r\n\r\n  for (var name in methods) {\r\n    if (methods.hasOwnProperty(name)) {\r\n      subClass.prototype[name] = methods[name];\r\n    }\r\n  }\r\n\r\n  return subClass;\r\n};\r\n\r\n/**\r\n * @file video.js\r\n * @module videojs\r\n */\r\n/**\r\n * Normalize an `id` value by trimming off a leading `#`\r\n *\r\n * @private\r\n * @param   {string} id\r\n *          A string, maybe with a leading `#`.\r\n *\r\n * @return {string}\r\n *          The string, without any leading `#`.\r\n */\r\n\r\nvar normalizeId = function normalizeId(id) {\r\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\r\n};\r\n/**\r\n * The `videojs()` function doubles as the main function for users to create a\r\n * {@link Player} instance as well as the main library namespace.\r\n *\r\n * It can also be used as a getter for a pre-existing {@link Player} instance.\r\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\r\n * purpose because it avoids any potential for unintended initialization.\r\n *\r\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\r\n * of our JSDoc template, we cannot properly document this as both a function\r\n * and a namespace, so its function signature is documented here.\r\n *\r\n * #### Arguments\r\n * ##### id\r\n * string|Element, **required**\r\n *\r\n * Video element or video element ID.\r\n *\r\n * ##### options\r\n * Object, optional\r\n *\r\n * Options object for providing settings.\r\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\r\n *\r\n * ##### ready\r\n * {@link Component~ReadyCallback}, optional\r\n *\r\n * A function to be called when the {@link Player} and {@link Tech} are ready.\r\n *\r\n * #### Return Value\r\n *\r\n * The `videojs()` function returns a {@link Player} instance.\r\n *\r\n * @namespace\r\n *\r\n * @borrows AudioTrack as AudioTrack\r\n * @borrows Component.getComponent as getComponent\r\n * @borrows module:computed-style~computedStyle as computedStyle\r\n * @borrows module:events.on as on\r\n * @borrows module:events.one as one\r\n * @borrows module:events.off as off\r\n * @borrows module:events.trigger as trigger\r\n * @borrows EventTarget as EventTarget\r\n * @borrows module:extend~extend as extend\r\n * @borrows module:fn.bind as bind\r\n * @borrows module:format-time.formatTime as formatTime\r\n * @borrows module:format-time.resetFormatTime as resetFormatTime\r\n * @borrows module:format-time.setFormatTime as setFormatTime\r\n * @borrows module:merge-options.mergeOptions as mergeOptions\r\n * @borrows module:middleware.use as use\r\n * @borrows Player.players as players\r\n * @borrows Plugin.registerPlugin as registerPlugin\r\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\r\n * @borrows Plugin.getPlugins as getPlugins\r\n * @borrows Plugin.getPlugin as getPlugin\r\n * @borrows Plugin.getPluginVersion as getPluginVersion\r\n * @borrows Tech.getTech as getTech\r\n * @borrows Tech.registerTech as registerTech\r\n * @borrows TextTrack as TextTrack\r\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\r\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\r\n * @borrows module:url.isCrossOrigin as isCrossOrigin\r\n * @borrows module:url.parseUrl as parseUrl\r\n * @borrows VideoTrack as VideoTrack\r\n *\r\n * @param  {string|Element} id\r\n *         Video element or video element ID.\r\n *\r\n * @param  {Object} [options]\r\n *         Options object for providing settings.\r\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\r\n *\r\n * @param  {Component~ReadyCallback} [ready]\r\n *         A function to be called when the {@link Player} and {@link Tech} are\r\n *         ready.\r\n *\r\n * @return {Player}\r\n *         The `videojs()` function returns a {@link Player|Player} instance.\r\n */\r\n\r\n\r\nfunction videojs(id, options, ready) {\r\n  var player = videojs.getPlayer(id);\r\n\r\n  if (player) {\r\n    if (options) {\r\n      log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\r\n    }\r\n\r\n    if (ready) {\r\n      player.ready(ready);\r\n    }\r\n\r\n    return player;\r\n  }\r\n\r\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\r\n\r\n  if (!isEl(el)) {\r\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\r\n  } // document.body.contains(el) will only check if el is contained within that one document.\r\n  // This causes problems for elements in iframes.\r\n  // Instead, use the element's ownerDocument instead of the global document.\r\n  // This will make sure that the element is indeed in the dom of that document.\r\n  // Additionally, check that the document in question has a default view.\r\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\r\n\r\n\r\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\r\n    log$1.warn('The element supplied is not included in the DOM');\r\n  }\r\n\r\n  options = options || {}; // Store a copy of the el before modification, if it is to be restored in destroy()\r\n  // If div ingest, store the parent div\r\n\r\n  if (options.restoreEl === true) {\r\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\r\n  }\r\n\r\n  hooks('beforesetup').forEach(function (hookFunction) {\r\n    var opts = hookFunction(el, mergeOptions$3(options));\r\n\r\n    if (!isObject(opts) || Array.isArray(opts)) {\r\n      log$1.error('please return an object in beforesetup hooks');\r\n      return;\r\n    }\r\n\r\n    options = mergeOptions$3(options, opts);\r\n  }); // We get the current \"Player\" component here in case an integration has\r\n  // replaced it with a custom player.\r\n\r\n  var PlayerComponent = Component$1.getComponent('Player');\r\n  player = new PlayerComponent(el, options, ready);\r\n  hooks('setup').forEach(function (hookFunction) {\r\n    return hookFunction(player);\r\n  });\r\n  return player;\r\n}\r\n\r\nvideojs.hooks_ = hooks_;\r\nvideojs.hooks = hooks;\r\nvideojs.hook = hook;\r\nvideojs.hookOnce = hookOnce;\r\nvideojs.removeHook = removeHook; // Add default styles\r\n\r\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\r\n  var style = $('.vjs-styles-defaults');\r\n\r\n  if (!style) {\r\n    style = createStyleElement('vjs-styles-defaults');\r\n    var head = $('head');\r\n\r\n    if (head) {\r\n      head.insertBefore(style, head.firstChild);\r\n    }\r\n\r\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: 56.25%\\n      }\\n    \");\r\n  }\r\n} // Run Auto-load players\r\n// You have to wait at least once in case this script is loaded after your\r\n// video in the DOM (weird behavior only with minified version)\r\n\r\n\r\nautoSetupTimeout(1, videojs);\r\n/**\r\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\r\n *\r\n * @type {string}\r\n */\r\n\r\nvideojs.VERSION = version$5;\r\n/**\r\n * The global options object. These are the settings that take effect\r\n * if no overrides are specified when the player is created.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvideojs.options = Player.prototype.options_;\r\n/**\r\n * Get an object with the currently created players, keyed by player ID\r\n *\r\n * @return {Object}\r\n *         The created players\r\n */\r\n\r\nvideojs.getPlayers = function () {\r\n  return Player.players;\r\n};\r\n/**\r\n * Get a single player based on an ID or DOM element.\r\n *\r\n * This is useful if you want to check if an element or ID has an associated\r\n * Video.js player, but not create one if it doesn't.\r\n *\r\n * @param   {string|Element} id\r\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\r\n *          or a string matching the `id` of such an element.\r\n *\r\n * @return {Player|undefined}\r\n *          A player instance or `undefined` if there is no player instance\r\n *          matching the argument.\r\n */\r\n\r\n\r\nvideojs.getPlayer = function (id) {\r\n  var players = Player.players;\r\n  var tag;\r\n\r\n  if (typeof id === 'string') {\r\n    var nId = normalizeId(id);\r\n    var player = players[nId];\r\n\r\n    if (player) {\r\n      return player;\r\n    }\r\n\r\n    tag = $('#' + nId);\r\n  } else {\r\n    tag = id;\r\n  }\r\n\r\n  if (isEl(tag)) {\r\n    var _tag = tag,\r\n        _player = _tag.player,\r\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\r\n    // player instance. If so, return that.\r\n\r\n    if (_player || players[playerId]) {\r\n      return _player || players[playerId];\r\n    }\r\n  }\r\n};\r\n/**\r\n * Returns an array of all current players.\r\n *\r\n * @return {Array}\r\n *         An array of all players. The array will be in the order that\r\n *         `Object.keys` provides, which could potentially vary between\r\n *         JavaScript engines.\r\n *\r\n */\r\n\r\n\r\nvideojs.getAllPlayers = function () {\r\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\r\n    // we filter those out.\r\n    Object.keys(Player.players).map(function (k) {\r\n      return Player.players[k];\r\n    }).filter(Boolean)\r\n  );\r\n};\r\n\r\nvideojs.players = Player.players;\r\nvideojs.getComponent = Component$1.getComponent;\r\n/**\r\n * Register a component so it can referred to by name. Used when adding to other\r\n * components, either through addChild `component.addChild('myComponent')` or through\r\n * default children options  `{ children: ['myComponent'] }`.\r\n *\r\n * > NOTE: You could also just initialize the component before adding.\r\n * `component.addChild(new MyComponent());`\r\n *\r\n * @param {string} name\r\n *        The class name of the component\r\n *\r\n * @param {Component} comp\r\n *        The component class\r\n *\r\n * @return {Component}\r\n *         The newly registered component\r\n */\r\n\r\nvideojs.registerComponent = function (name, comp) {\r\n  if (Tech.isTech(comp)) {\r\n    log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\r\n  }\r\n\r\n  Component$1.registerComponent.call(Component$1, name, comp);\r\n};\r\n\r\nvideojs.getTech = Tech.getTech;\r\nvideojs.registerTech = Tech.registerTech;\r\nvideojs.use = use;\r\n/**\r\n * An object that can be returned by a middleware to signify\r\n * that the middleware is being terminated.\r\n *\r\n * @type {object}\r\n * @property {object} middleware.TERMINATOR\r\n */\r\n\r\nObject.defineProperty(videojs, 'middleware', {\r\n  value: {},\r\n  writeable: false,\r\n  enumerable: true\r\n});\r\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\r\n  value: TERMINATOR,\r\n  writeable: false,\r\n  enumerable: true\r\n});\r\n/**\r\n * A reference to the {@link module:browser|browser utility module} as an object.\r\n *\r\n * @type {Object}\r\n * @see  {@link module:browser|browser}\r\n */\r\n\r\nvideojs.browser = browser;\r\n/**\r\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\r\n * included for backward-compatibility with 4.x.\r\n *\r\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\r\n * @type {boolean}\r\n */\r\n\r\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\r\nvideojs.extend = extend;\r\nvideojs.mergeOptions = mergeOptions$3;\r\nvideojs.bind = bind;\r\nvideojs.registerPlugin = Plugin.registerPlugin;\r\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\r\n/**\r\n * Deprecated method to register a plugin with Video.js\r\n *\r\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\r\n *\r\n * @param {string} name\r\n *        The plugin name\r\n *\r\n * @param {Plugin|Function} plugin\r\n *         The plugin sub-class or function\r\n */\r\n\r\nvideojs.plugin = function (name, plugin) {\r\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\r\n  return Plugin.registerPlugin(name, plugin);\r\n};\r\n\r\nvideojs.getPlugins = Plugin.getPlugins;\r\nvideojs.getPlugin = Plugin.getPlugin;\r\nvideojs.getPluginVersion = Plugin.getPluginVersion;\r\n/**\r\n * Adding languages so that they're available to all players.\r\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\r\n *\r\n * @param {string} code\r\n *        The language code or dictionary property\r\n *\r\n * @param {Object} data\r\n *        The data values to be translated\r\n *\r\n * @return {Object}\r\n *         The resulting language dictionary object\r\n */\r\n\r\nvideojs.addLanguage = function (code, data) {\r\n  var _mergeOptions;\r\n\r\n  code = ('' + code).toLowerCase();\r\n  videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\r\n  return videojs.options.languages[code];\r\n};\r\n/**\r\n * A reference to the {@link module:log|log utility module} as an object.\r\n *\r\n * @type {Function}\r\n * @see  {@link module:log|log}\r\n */\r\n\r\n\r\nvideojs.log = log$1;\r\nvideojs.createLogger = createLogger;\r\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\r\nvideojs.formatTime = formatTime;\r\nvideojs.setFormatTime = setFormatTime;\r\nvideojs.resetFormatTime = resetFormatTime;\r\nvideojs.parseUrl = parseUrl;\r\nvideojs.isCrossOrigin = isCrossOrigin;\r\nvideojs.EventTarget = EventTarget$2;\r\nvideojs.on = on;\r\nvideojs.one = one;\r\nvideojs.off = off;\r\nvideojs.trigger = trigger;\r\n/**\r\n * A cross-browser XMLHttpRequest wrapper.\r\n *\r\n * @function\r\n * @param    {Object} options\r\n *           Settings for the request.\r\n *\r\n * @return   {XMLHttpRequest|XDomainRequest}\r\n *           The request object.\r\n *\r\n * @see      https://github.com/Raynos/xhr\r\n */\r\n\r\nvideojs.xhr = XHR;\r\nvideojs.TextTrack = TextTrack;\r\nvideojs.AudioTrack = AudioTrack;\r\nvideojs.VideoTrack = VideoTrack;\r\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\r\n  videojs[k] = function () {\r\n    log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\r\n    return Dom[k].apply(null, arguments);\r\n  };\r\n});\r\nvideojs.computedStyle = computedStyle;\r\n/**\r\n * A reference to the {@link module:dom|DOM utility module} as an object.\r\n *\r\n * @type {Object}\r\n * @see  {@link module:dom|dom}\r\n */\r\n\r\nvideojs.dom = Dom;\r\n/**\r\n * A reference to the {@link module:url|URL utility module} as an object.\r\n *\r\n * @type {Object}\r\n * @see  {@link module:url|url}\r\n */\r\n\r\nvideojs.url = Url;\r\nvideojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\r\n// In a major update this could become the default text and key.\r\n\r\nvideojs.addLanguage('en', {\r\n  'Non-Fullscreen': 'Exit Fullscreen'\r\n});\r\n\r\n/*! @name @videojs/http-streaming @version 2.16.2 @license Apache-2.0 */\r\n/**\r\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\r\n */\r\n\r\nvar resolveUrl = _resolveUrl;\r\n/**\r\n * Checks whether xhr request was redirected and returns correct url depending\r\n * on `handleManifestRedirects` option\r\n *\r\n * @api private\r\n *\r\n * @param  {string} url - an url being requested\r\n * @param  {XMLHttpRequest} req - xhr request result\r\n *\r\n * @return {string}\r\n */\r\n\r\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\r\n  // To understand how the responseURL below is set and generated:\r\n  // - https://fetch.spec.whatwg.org/#concept-response-url\r\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\r\n  if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\r\n    return req.responseURL;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\nvar logger = function logger(source) {\r\n  if (videojs.log.debug) {\r\n    return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\r\n  }\r\n\r\n  return function () {};\r\n};\r\n/**\r\n * ranges\r\n *\r\n * Utilities for working with TimeRanges.\r\n *\r\n */\r\n\r\n\r\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\r\n// can be misleading because of precision differences or when the current media has poorly\r\n// aligned audio and video, which can cause values to be slightly off from what you would\r\n// expect. This value is what we consider to be safe to use in such comparisons to account\r\n// for these scenarios.\r\n\r\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\r\n\r\nvar filterRanges = function filterRanges(timeRanges, predicate) {\r\n  var results = [];\r\n  var i;\r\n\r\n  if (timeRanges && timeRanges.length) {\r\n    // Search for ranges that match the predicate\r\n    for (i = 0; i < timeRanges.length; i++) {\r\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\r\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return videojs.createTimeRanges(results);\r\n};\r\n/**\r\n * Attempts to find the buffered TimeRange that contains the specified\r\n * time.\r\n *\r\n * @param {TimeRanges} buffered - the TimeRanges object to query\r\n * @param {number} time  - the time to filter on.\r\n * @return {TimeRanges} a new TimeRanges object\r\n */\r\n\r\n\r\nvar findRange = function findRange(buffered, time) {\r\n  return filterRanges(buffered, function (start, end) {\r\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\r\n  });\r\n};\r\n/**\r\n * Returns the TimeRanges that begin later than the specified time.\r\n *\r\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\r\n * @param {number} time - the time to filter on.\r\n * @return {TimeRanges} a new TimeRanges object.\r\n */\r\n\r\n\r\nvar findNextRange = function findNextRange(timeRanges, time) {\r\n  return filterRanges(timeRanges, function (start) {\r\n    return start - TIME_FUDGE_FACTOR >= time;\r\n  });\r\n};\r\n/**\r\n * Returns gaps within a list of TimeRanges\r\n *\r\n * @param {TimeRanges} buffered - the TimeRanges object\r\n * @return {TimeRanges} a TimeRanges object of gaps\r\n */\r\n\r\n\r\nvar findGaps = function findGaps(buffered) {\r\n  if (buffered.length < 2) {\r\n    return videojs.createTimeRanges();\r\n  }\r\n\r\n  var ranges = [];\r\n\r\n  for (var i = 1; i < buffered.length; i++) {\r\n    var start = buffered.end(i - 1);\r\n    var end = buffered.start(i);\r\n    ranges.push([start, end]);\r\n  }\r\n\r\n  return videojs.createTimeRanges(ranges);\r\n};\r\n/**\r\n * Calculate the intersection of two TimeRanges\r\n *\r\n * @param {TimeRanges} bufferA\r\n * @param {TimeRanges} bufferB\r\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\r\n */\r\n\r\n\r\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\r\n  var start = null;\r\n  var end = null;\r\n  var arity = 0;\r\n  var extents = [];\r\n  var ranges = [];\r\n\r\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\r\n    return videojs.createTimeRange();\r\n  } // Handle the case where we have both buffers and create an\r\n  // intersection of the two\r\n\r\n\r\n  var count = bufferA.length; // A) Gather up all start and end times\r\n\r\n  while (count--) {\r\n    extents.push({\r\n      time: bufferA.start(count),\r\n      type: 'start'\r\n    });\r\n    extents.push({\r\n      time: bufferA.end(count),\r\n      type: 'end'\r\n    });\r\n  }\r\n\r\n  count = bufferB.length;\r\n\r\n  while (count--) {\r\n    extents.push({\r\n      time: bufferB.start(count),\r\n      type: 'start'\r\n    });\r\n    extents.push({\r\n      time: bufferB.end(count),\r\n      type: 'end'\r\n    });\r\n  } // B) Sort them by time\r\n\r\n\r\n  extents.sort(function (a, b) {\r\n    return a.time - b.time;\r\n  }); // C) Go along one by one incrementing arity for start and decrementing\r\n  //    arity for ends\r\n\r\n  for (count = 0; count < extents.length; count++) {\r\n    if (extents[count].type === 'start') {\r\n      arity++; // D) If arity is ever incremented to 2 we are entering an\r\n      //    overlapping range\r\n\r\n      if (arity === 2) {\r\n        start = extents[count].time;\r\n      }\r\n    } else if (extents[count].type === 'end') {\r\n      arity--; // E) If arity is ever decremented to 1 we leaving an\r\n      //    overlapping range\r\n\r\n      if (arity === 1) {\r\n        end = extents[count].time;\r\n      }\r\n    } // F) Record overlapping ranges\r\n\r\n\r\n    if (start !== null && end !== null) {\r\n      ranges.push([start, end]);\r\n      start = null;\r\n      end = null;\r\n    }\r\n  }\r\n\r\n  return videojs.createTimeRanges(ranges);\r\n};\r\n/**\r\n * Gets a human readable string for a TimeRange\r\n *\r\n * @param {TimeRange} range\r\n * @return {string} a human readable string\r\n */\r\n\r\n\r\nvar printableRange = function printableRange(range) {\r\n  var strArr = [];\r\n\r\n  if (!range || !range.length) {\r\n    return '';\r\n  }\r\n\r\n  for (var i = 0; i < range.length; i++) {\r\n    strArr.push(range.start(i) + ' => ' + range.end(i));\r\n  }\r\n\r\n  return strArr.join(', ');\r\n};\r\n/**\r\n * Calculates the amount of time left in seconds until the player hits the end of the\r\n * buffer and causes a rebuffer\r\n *\r\n * @param {TimeRange} buffered\r\n *        The state of the buffer\r\n * @param {Numnber} currentTime\r\n *        The current time of the player\r\n * @param {number} playbackRate\r\n *        The current playback rate of the player. Defaults to 1.\r\n * @return {number}\r\n *         Time until the player has to start rebuffering in seconds.\r\n * @function timeUntilRebuffer\r\n */\r\n\r\n\r\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\r\n  if (playbackRate === void 0) {\r\n    playbackRate = 1;\r\n  }\r\n\r\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\r\n  return (bufferedEnd - currentTime) / playbackRate;\r\n};\r\n/**\r\n * Converts a TimeRanges object into an array representation\r\n *\r\n * @param {TimeRanges} timeRanges\r\n * @return {Array}\r\n */\r\n\r\n\r\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\r\n  var timeRangesList = [];\r\n\r\n  for (var i = 0; i < timeRanges.length; i++) {\r\n    timeRangesList.push({\r\n      start: timeRanges.start(i),\r\n      end: timeRanges.end(i)\r\n    });\r\n  }\r\n\r\n  return timeRangesList;\r\n};\r\n/**\r\n * Determines if two time range objects are different.\r\n *\r\n * @param {TimeRange} a\r\n *        the first time range object to check\r\n *\r\n * @param {TimeRange} b\r\n *        the second time range object to check\r\n *\r\n * @return {Boolean}\r\n *         Whether the time range objects differ\r\n */\r\n\r\n\r\nvar isRangeDifferent = function isRangeDifferent(a, b) {\r\n  // same object\r\n  if (a === b) {\r\n    return false;\r\n  } // one or the other is undefined\r\n\r\n\r\n  if (!a && b || !b && a) {\r\n    return true;\r\n  } // length is different\r\n\r\n\r\n  if (a.length !== b.length) {\r\n    return true;\r\n  } // see if any start/end pair is different\r\n\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\r\n      return true;\r\n    }\r\n  } // if the length and every pair is the same\r\n  // this is the same time range\r\n\r\n\r\n  return false;\r\n};\r\n\r\nvar lastBufferedEnd = function lastBufferedEnd(a) {\r\n  if (!a || !a.length || !a.end) {\r\n    return;\r\n  }\r\n\r\n  return a.end(a.length - 1);\r\n};\r\n/**\r\n * A utility function to add up the amount of time in a timeRange\r\n * after a specified startTime.\r\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\r\n *     would return 40 as there are 40s seconds after 0 in the timeRange\r\n *\r\n * @param {TimeRange} range\r\n *        The range to check against\r\n * @param {number} startTime\r\n *        The time in the time range that you should start counting from\r\n *\r\n * @return {number}\r\n *          The number of seconds in the buffer passed the specified time.\r\n */\r\n\r\n\r\nvar timeAheadOf = function timeAheadOf(range, startTime) {\r\n  var time = 0;\r\n\r\n  if (!range || !range.length) {\r\n    return time;\r\n  }\r\n\r\n  for (var i = 0; i < range.length; i++) {\r\n    var start = range.start(i);\r\n    var end = range.end(i); // startTime is after this range entirely\r\n\r\n    if (startTime > end) {\r\n      continue;\r\n    } // startTime is within this range\r\n\r\n\r\n    if (startTime > start && startTime <= end) {\r\n      time += end - startTime;\r\n      continue;\r\n    } // startTime is before this range.\r\n\r\n\r\n    time += end - start;\r\n  }\r\n\r\n  return time;\r\n};\r\n/**\r\n * @file playlist.js\r\n *\r\n * Playlist related utilities.\r\n */\r\n\r\n\r\nvar createTimeRange = videojs.createTimeRange;\r\n/**\r\n * Get the duration of a segment, with special cases for\r\n * llhls segments that do not have a duration yet.\r\n *\r\n * @param {Object} playlist\r\n *        the playlist that the segment belongs to.\r\n * @param {Object} segment\r\n *        the segment to get a duration for.\r\n *\r\n * @return {number}\r\n *          the segment duration\r\n */\r\n\r\nvar segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\r\n  // if this isn't a preload segment\r\n  // then we will have a segment duration that is accurate.\r\n  if (!segment.preload) {\r\n    return segment.duration;\r\n  } // otherwise we have to add up parts and preload hints\r\n  // to get an up to date duration.\r\n\r\n\r\n  var result = 0;\r\n  (segment.parts || []).forEach(function (p) {\r\n    result += p.duration;\r\n  }); // for preload hints we have to use partTargetDuration\r\n  // as they won't even have a duration yet.\r\n\r\n  (segment.preloadHints || []).forEach(function (p) {\r\n    if (p.type === 'PART') {\r\n      result += playlist.partTargetDuration;\r\n    }\r\n  });\r\n  return result;\r\n};\r\n/**\r\n * A function to get a combined list of parts and segments with durations\r\n * and indexes.\r\n *\r\n * @param {Playlist} playlist the playlist to get the list for.\r\n *\r\n * @return {Array} The part/segment list.\r\n */\r\n\r\n\r\nvar getPartsAndSegments = function getPartsAndSegments(playlist) {\r\n  return (playlist.segments || []).reduce(function (acc, segment, si) {\r\n    if (segment.parts) {\r\n      segment.parts.forEach(function (part, pi) {\r\n        acc.push({\r\n          duration: part.duration,\r\n          segmentIndex: si,\r\n          partIndex: pi,\r\n          part: part,\r\n          segment: segment\r\n        });\r\n      });\r\n    } else {\r\n      acc.push({\r\n        duration: segment.duration,\r\n        segmentIndex: si,\r\n        partIndex: null,\r\n        segment: segment,\r\n        part: null\r\n      });\r\n    }\r\n\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nvar getLastParts = function getLastParts(media) {\r\n  var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\r\n  return lastSegment && lastSegment.parts || [];\r\n};\r\n\r\nvar getKnownPartCount = function getKnownPartCount(_ref) {\r\n  var preloadSegment = _ref.preloadSegment;\r\n\r\n  if (!preloadSegment) {\r\n    return;\r\n  }\r\n\r\n  var parts = preloadSegment.parts,\r\n      preloadHints = preloadSegment.preloadHints;\r\n  var partCount = (preloadHints || []).reduce(function (count, hint) {\r\n    return count + (hint.type === 'PART' ? 1 : 0);\r\n  }, 0);\r\n  partCount += parts && parts.length ? parts.length : 0;\r\n  return partCount;\r\n};\r\n/**\r\n * Get the number of seconds to delay from the end of a\r\n * live playlist.\r\n *\r\n * @param {Playlist} master the master playlist\r\n * @param {Playlist} media the media playlist\r\n * @return {number} the hold back in seconds.\r\n */\r\n\r\n\r\nvar liveEdgeDelay = function liveEdgeDelay(master, media) {\r\n  if (media.endList) {\r\n    return 0;\r\n  } // dash suggestedPresentationDelay trumps everything\r\n\r\n\r\n  if (master && master.suggestedPresentationDelay) {\r\n    return master.suggestedPresentationDelay;\r\n  }\r\n\r\n  var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\r\n\r\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\r\n    return media.serverControl.partHoldBack;\r\n  } else if (hasParts && media.partTargetDuration) {\r\n    return media.partTargetDuration * 3; // finally look for full segment delays\r\n  } else if (media.serverControl && media.serverControl.holdBack) {\r\n    return media.serverControl.holdBack;\r\n  } else if (media.targetDuration) {\r\n    return media.targetDuration * 3;\r\n  }\r\n\r\n  return 0;\r\n};\r\n/**\r\n * walk backward until we find a duration we can use\r\n * or return a failure\r\n *\r\n * @param {Playlist} playlist the playlist to walk through\r\n * @param {Number} endSequence the mediaSequence to stop walking on\r\n */\r\n\r\n\r\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\r\n  var result = 0;\r\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\r\n  // the interval, use it\r\n\r\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\r\n  // information that is earlier than endSequence\r\n\r\n  if (segment) {\r\n    if (typeof segment.start !== 'undefined') {\r\n      return {\r\n        result: segment.start,\r\n        precise: true\r\n      };\r\n    }\r\n\r\n    if (typeof segment.end !== 'undefined') {\r\n      return {\r\n        result: segment.end - segment.duration,\r\n        precise: true\r\n      };\r\n    }\r\n  }\r\n\r\n  while (i--) {\r\n    segment = playlist.segments[i];\r\n\r\n    if (typeof segment.end !== 'undefined') {\r\n      return {\r\n        result: result + segment.end,\r\n        precise: true\r\n      };\r\n    }\r\n\r\n    result += segmentDurationWithParts(playlist, segment);\r\n\r\n    if (typeof segment.start !== 'undefined') {\r\n      return {\r\n        result: result + segment.start,\r\n        precise: true\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    result: result,\r\n    precise: false\r\n  };\r\n};\r\n/**\r\n * walk forward until we find a duration we can use\r\n * or return a failure\r\n *\r\n * @param {Playlist} playlist the playlist to walk through\r\n * @param {number} endSequence the mediaSequence to stop walking on\r\n */\r\n\r\n\r\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\r\n  var result = 0;\r\n  var segment;\r\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\r\n  // information\r\n\r\n  for (; i < playlist.segments.length; i++) {\r\n    segment = playlist.segments[i];\r\n\r\n    if (typeof segment.start !== 'undefined') {\r\n      return {\r\n        result: segment.start - result,\r\n        precise: true\r\n      };\r\n    }\r\n\r\n    result += segmentDurationWithParts(playlist, segment);\r\n\r\n    if (typeof segment.end !== 'undefined') {\r\n      return {\r\n        result: segment.end - result,\r\n        precise: true\r\n      };\r\n    }\r\n  } // indicate we didn't find a useful duration estimate\r\n\r\n\r\n  return {\r\n    result: -1,\r\n    precise: false\r\n  };\r\n};\r\n/**\r\n  * Calculate the media duration from the segments associated with a\r\n  * playlist. The duration of a subinterval of the available segments\r\n  * may be calculated by specifying an end index.\r\n  *\r\n  * @param {Object} playlist a media playlist object\r\n  * @param {number=} endSequence an exclusive upper boundary\r\n  * for the playlist.  Defaults to playlist length.\r\n  * @param {number} expired the amount of time that has dropped\r\n  * off the front of the playlist in a live scenario\r\n  * @return {number} the duration between the first available segment\r\n  * and end index.\r\n  */\r\n\r\n\r\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\r\n  if (typeof endSequence === 'undefined') {\r\n    endSequence = playlist.mediaSequence + playlist.segments.length;\r\n  }\r\n\r\n  if (endSequence < playlist.mediaSequence) {\r\n    return 0;\r\n  } // do a backward walk to estimate the duration\r\n\r\n\r\n  var backward = backwardDuration(playlist, endSequence);\r\n\r\n  if (backward.precise) {\r\n    // if we were able to base our duration estimate on timing\r\n    // information provided directly from the Media Source, return\r\n    // it\r\n    return backward.result;\r\n  } // walk forward to see if a precise duration estimate can be made\r\n  // that way\r\n\r\n\r\n  var forward = forwardDuration(playlist, endSequence);\r\n\r\n  if (forward.precise) {\r\n    // we found a segment that has been buffered and so it's\r\n    // position is known precisely\r\n    return forward.result;\r\n  } // return the less-precise, playlist-based duration estimate\r\n\r\n\r\n  return backward.result + expired;\r\n};\r\n/**\r\n  * Calculates the duration of a playlist. If a start and end index\r\n  * are specified, the duration will be for the subset of the media\r\n  * timeline between those two indices. The total duration for live\r\n  * playlists is always Infinity.\r\n  *\r\n  * @param {Object} playlist a media playlist object\r\n  * @param {number=} endSequence an exclusive upper\r\n  * boundary for the playlist. Defaults to the playlist media\r\n  * sequence number plus its length.\r\n  * @param {number=} expired the amount of time that has\r\n  * dropped off the front of the playlist in a live scenario\r\n  * @return {number} the duration between the start index and end\r\n  * index.\r\n  */\r\n\r\n\r\nvar duration = function duration(playlist, endSequence, expired) {\r\n  if (!playlist) {\r\n    return 0;\r\n  }\r\n\r\n  if (typeof expired !== 'number') {\r\n    expired = 0;\r\n  } // if a slice of the total duration is not requested, use\r\n  // playlist-level duration indicators when they're present\r\n\r\n\r\n  if (typeof endSequence === 'undefined') {\r\n    // if present, use the duration specified in the playlist\r\n    if (playlist.totalDuration) {\r\n      return playlist.totalDuration;\r\n    } // duration should be Infinity for live playlists\r\n\r\n\r\n    if (!playlist.endList) {\r\n      return window$1.Infinity;\r\n    }\r\n  } // calculate the total duration based on the segment durations\r\n\r\n\r\n  return intervalDuration(playlist, endSequence, expired);\r\n};\r\n/**\r\n  * Calculate the time between two indexes in the current playlist\r\n  * neight the start- nor the end-index need to be within the current\r\n  * playlist in which case, the targetDuration of the playlist is used\r\n  * to approximate the durations of the segments\r\n  *\r\n  * @param {Array} options.durationList list to iterate over for durations.\r\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\r\n  * @param {number} options.startIndex partsAndSegments index to start\r\n  * @param {number} options.endIndex partsAndSegments index to end.\r\n  * @return {number} the number of seconds between startIndex and endIndex\r\n  */\r\n\r\n\r\nvar sumDurations = function sumDurations(_ref2) {\r\n  var defaultDuration = _ref2.defaultDuration,\r\n      durationList = _ref2.durationList,\r\n      startIndex = _ref2.startIndex,\r\n      endIndex = _ref2.endIndex;\r\n  var durations = 0;\r\n\r\n  if (startIndex > endIndex) {\r\n    var _ref3 = [endIndex, startIndex];\r\n    startIndex = _ref3[0];\r\n    endIndex = _ref3[1];\r\n  }\r\n\r\n  if (startIndex < 0) {\r\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\r\n      durations += defaultDuration;\r\n    }\r\n\r\n    startIndex = 0;\r\n  }\r\n\r\n  for (var _i = startIndex; _i < endIndex; _i++) {\r\n    durations += durationList[_i].duration;\r\n  }\r\n\r\n  return durations;\r\n};\r\n/**\r\n * Calculates the playlist end time\r\n *\r\n * @param {Object} playlist a media playlist object\r\n * @param {number=} expired the amount of time that has\r\n *                  dropped off the front of the playlist in a live scenario\r\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\r\n *                        playlist end calculation should consider the safe live end\r\n *                        (truncate the playlist end by three segments). This is normally\r\n *                        used for calculating the end of the playlist's seekable range.\r\n *                        This takes into account the value of liveEdgePadding.\r\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\r\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\r\n *                 If this is provided, it is used in the safe live end calculation.\r\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\r\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\r\n * @return {number} the end time of playlist\r\n * @function playlistEnd\r\n */\r\n\r\n\r\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\r\n  if (!playlist || !playlist.segments) {\r\n    return null;\r\n  }\r\n\r\n  if (playlist.endList) {\r\n    return duration(playlist);\r\n  }\r\n\r\n  if (expired === null) {\r\n    return null;\r\n  }\r\n\r\n  expired = expired || 0;\r\n  var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\r\n\r\n  if (useSafeLiveEnd) {\r\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\r\n    lastSegmentEndTime -= liveEdgePadding;\r\n  } // don't return a time less than zero\r\n\r\n\r\n  return Math.max(0, lastSegmentEndTime);\r\n};\r\n/**\r\n  * Calculates the interval of time that is currently seekable in a\r\n  * playlist. The returned time ranges are relative to the earliest\r\n  * moment in the specified playlist that is still available. A full\r\n  * seekable implementation for live streams would need to offset\r\n  * these values by the duration of content that has expired from the\r\n  * stream.\r\n  *\r\n  * @param {Object} playlist a media playlist object\r\n  * dropped off the front of the playlist in a live scenario\r\n  * @param {number=} expired the amount of time that has\r\n  * dropped off the front of the playlist in a live scenario\r\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\r\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\r\n  * @return {TimeRanges} the periods of time that are valid targets\r\n  * for seeking\r\n  */\r\n\r\n\r\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\r\n  var useSafeLiveEnd = true;\r\n  var seekableStart = expired || 0;\r\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\r\n\r\n  if (seekableEnd === null) {\r\n    return createTimeRange();\r\n  }\r\n\r\n  return createTimeRange(seekableStart, seekableEnd);\r\n};\r\n/**\r\n * Determine the index and estimated starting time of the segment that\r\n * contains a specified playback position in a media playlist.\r\n *\r\n * @param {Object} options.playlist the media playlist to query\r\n * @param {number} options.currentTime The number of seconds since the earliest\r\n * possible position to determine the containing segment for\r\n * @param {number} options.startTime the time when the segment/part starts\r\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\r\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\r\n *\r\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\r\n */\r\n\r\n\r\nvar getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\r\n  var playlist = _ref4.playlist,\r\n      currentTime = _ref4.currentTime,\r\n      startingSegmentIndex = _ref4.startingSegmentIndex,\r\n      startingPartIndex = _ref4.startingPartIndex,\r\n      startTime = _ref4.startTime,\r\n      experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\r\n  var time = currentTime - startTime;\r\n  var partsAndSegments = getPartsAndSegments(playlist);\r\n  var startIndex = 0;\r\n\r\n  for (var i = 0; i < partsAndSegments.length; i++) {\r\n    var partAndSegment = partsAndSegments[i];\r\n\r\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\r\n      continue;\r\n    } // skip this if part index does not match.\r\n\r\n\r\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\r\n      continue;\r\n    }\r\n\r\n    startIndex = i;\r\n    break;\r\n  }\r\n\r\n  if (time < 0) {\r\n    // Walk backward from startIndex in the playlist, adding durations\r\n    // until we find a segment that contains `time` and return it\r\n    if (startIndex > 0) {\r\n      for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\r\n        var _partAndSegment = partsAndSegments[_i2];\r\n        time += _partAndSegment.duration;\r\n\r\n        if (experimentalExactManifestTimings) {\r\n          if (time < 0) {\r\n            continue;\r\n          }\r\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\r\n          continue;\r\n        }\r\n\r\n        return {\r\n          partIndex: _partAndSegment.partIndex,\r\n          segmentIndex: _partAndSegment.segmentIndex,\r\n          startTime: startTime - sumDurations({\r\n            defaultDuration: playlist.targetDuration,\r\n            durationList: partsAndSegments,\r\n            startIndex: startIndex,\r\n            endIndex: _i2\r\n          })\r\n        };\r\n      }\r\n    } // We were unable to find a good segment within the playlist\r\n    // so select the first segment\r\n\r\n\r\n    return {\r\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\r\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\r\n      startTime: currentTime\r\n    };\r\n  } // When startIndex is negative, we first walk forward to first segment\r\n  // adding target durations. If we \"run out of time\" before getting to\r\n  // the first segment, return the first segment\r\n\r\n\r\n  if (startIndex < 0) {\r\n    for (var _i3 = startIndex; _i3 < 0; _i3++) {\r\n      time -= playlist.targetDuration;\r\n\r\n      if (time < 0) {\r\n        return {\r\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\r\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\r\n          startTime: currentTime\r\n        };\r\n      }\r\n    }\r\n\r\n    startIndex = 0;\r\n  } // Walk forward from startIndex in the playlist, subtracting durations\r\n  // until we find a segment that contains `time` and return it\r\n\r\n\r\n  for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\r\n    var _partAndSegment2 = partsAndSegments[_i4];\r\n    time -= _partAndSegment2.duration;\r\n\r\n    if (experimentalExactManifestTimings) {\r\n      if (time > 0) {\r\n        continue;\r\n      }\r\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\r\n      continue;\r\n    }\r\n\r\n    return {\r\n      partIndex: _partAndSegment2.partIndex,\r\n      segmentIndex: _partAndSegment2.segmentIndex,\r\n      startTime: startTime + sumDurations({\r\n        defaultDuration: playlist.targetDuration,\r\n        durationList: partsAndSegments,\r\n        startIndex: startIndex,\r\n        endIndex: _i4\r\n      })\r\n    };\r\n  } // We are out of possible candidates so load the last one...\r\n\r\n\r\n  return {\r\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\r\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\r\n    startTime: currentTime\r\n  };\r\n};\r\n/**\r\n * Check whether the playlist is blacklisted or not.\r\n *\r\n * @param {Object} playlist the media playlist object\r\n * @return {boolean} whether the playlist is blacklisted or not\r\n * @function isBlacklisted\r\n */\r\n\r\n\r\nvar isBlacklisted = function isBlacklisted(playlist) {\r\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\r\n};\r\n/**\r\n * Check whether the playlist is compatible with current playback configuration or has\r\n * been blacklisted permanently for being incompatible.\r\n *\r\n * @param {Object} playlist the media playlist object\r\n * @return {boolean} whether the playlist is incompatible or not\r\n * @function isIncompatible\r\n */\r\n\r\n\r\nvar isIncompatible = function isIncompatible(playlist) {\r\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\r\n};\r\n/**\r\n * Check whether the playlist is enabled or not.\r\n *\r\n * @param {Object} playlist the media playlist object\r\n * @return {boolean} whether the playlist is enabled or not\r\n * @function isEnabled\r\n */\r\n\r\n\r\nvar isEnabled = function isEnabled(playlist) {\r\n  var blacklisted = isBlacklisted(playlist);\r\n  return !playlist.disabled && !blacklisted;\r\n};\r\n/**\r\n * Check whether the playlist has been manually disabled through the representations api.\r\n *\r\n * @param {Object} playlist the media playlist object\r\n * @return {boolean} whether the playlist is disabled manually or not\r\n * @function isDisabled\r\n */\r\n\r\n\r\nvar isDisabled = function isDisabled(playlist) {\r\n  return playlist.disabled;\r\n};\r\n/**\r\n * Returns whether the current playlist is an AES encrypted HLS stream\r\n *\r\n * @return {boolean} true if it's an AES encrypted HLS stream\r\n */\r\n\r\n\r\nvar isAes = function isAes(media) {\r\n  for (var i = 0; i < media.segments.length; i++) {\r\n    if (media.segments[i].key) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n/**\r\n * Checks if the playlist has a value for the specified attribute\r\n *\r\n * @param {string} attr\r\n *        Attribute to check for\r\n * @param {Object} playlist\r\n *        The media playlist object\r\n * @return {boolean}\r\n *         Whether the playlist contains a value for the attribute or not\r\n * @function hasAttribute\r\n */\r\n\r\n\r\nvar hasAttribute = function hasAttribute(attr, playlist) {\r\n  return playlist.attributes && playlist.attributes[attr];\r\n};\r\n/**\r\n * Estimates the time required to complete a segment download from the specified playlist\r\n *\r\n * @param {number} segmentDuration\r\n *        Duration of requested segment\r\n * @param {number} bandwidth\r\n *        Current measured bandwidth of the player\r\n * @param {Object} playlist\r\n *        The media playlist object\r\n * @param {number=} bytesReceived\r\n *        Number of bytes already received for the request. Defaults to 0\r\n * @return {number|NaN}\r\n *         The estimated time to request the segment. NaN if bandwidth information for\r\n *         the given playlist is unavailable\r\n * @function estimateSegmentRequestTime\r\n */\r\n\r\n\r\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\r\n  if (bytesReceived === void 0) {\r\n    bytesReceived = 0;\r\n  }\r\n\r\n  if (!hasAttribute('BANDWIDTH', playlist)) {\r\n    return NaN;\r\n  }\r\n\r\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\r\n  return (size - bytesReceived * 8) / bandwidth;\r\n};\r\n/*\r\n * Returns whether the current playlist is the lowest rendition\r\n *\r\n * @return {Boolean} true if on lowest rendition\r\n */\r\n\r\n\r\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\r\n  if (master.playlists.length === 1) {\r\n    return true;\r\n  }\r\n\r\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\r\n  return master.playlists.filter(function (playlist) {\r\n    if (!isEnabled(playlist)) {\r\n      return false;\r\n    }\r\n\r\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\r\n  }).length === 0;\r\n};\r\n\r\nvar playlistMatch = function playlistMatch(a, b) {\r\n  // both playlits are null\r\n  // or only one playlist is non-null\r\n  // no match\r\n  if (!a && !b || !a && b || a && !b) {\r\n    return false;\r\n  } // playlist objects are the same, match\r\n\r\n\r\n  if (a === b) {\r\n    return true;\r\n  } // first try to use id as it should be the most\r\n  // accurate\r\n\r\n\r\n  if (a.id && b.id && a.id === b.id) {\r\n    return true;\r\n  } // next try to use reslovedUri as it should be the\r\n  // second most accurate.\r\n\r\n\r\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\r\n    return true;\r\n  } // finally try to use uri as it should be accurate\r\n  // but might miss a few cases for relative uris\r\n\r\n\r\n  if (a.uri && b.uri && a.uri === b.uri) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nvar someAudioVariant = function someAudioVariant(master, callback) {\r\n  var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\r\n  var found = false;\r\n\r\n  for (var groupName in AUDIO) {\r\n    for (var label in AUDIO[groupName]) {\r\n      found = callback(AUDIO[groupName][label]);\r\n\r\n      if (found) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (found) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return !!found;\r\n};\r\n\r\nvar isAudioOnly = function isAudioOnly(master) {\r\n  // we are audio only if we have no main playlists but do\r\n  // have media group playlists.\r\n  if (!master || !master.playlists || !master.playlists.length) {\r\n    // without audio variants or playlists this\r\n    // is not an audio only master.\r\n    var found = someAudioVariant(master, function (variant) {\r\n      return variant.playlists && variant.playlists.length || variant.uri;\r\n    });\r\n    return found;\r\n  } // if every playlist has only an audio codec it is audio only\r\n\r\n\r\n  var _loop = function _loop(i) {\r\n    var playlist = master.playlists[i];\r\n    var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\r\n\r\n    if (CODECS && CODECS.split(',').every(function (c) {\r\n      return isAudioCodec(c);\r\n    })) {\r\n      return \"continue\";\r\n    } // playlist is in an audio group it is audio only\r\n\r\n\r\n    var found = someAudioVariant(master, function (variant) {\r\n      return playlistMatch(playlist, variant);\r\n    });\r\n\r\n    if (found) {\r\n      return \"continue\";\r\n    } // if we make it here this playlist isn't audio and we\r\n    // are not audio only\r\n\r\n\r\n    return {\r\n      v: false\r\n    };\r\n  };\r\n\r\n  for (var i = 0; i < master.playlists.length; i++) {\r\n    var _ret = _loop(i);\r\n\r\n    if (_ret === \"continue\") continue;\r\n    if (typeof _ret === \"object\") return _ret.v;\r\n  } // if we make it past every playlist without returning, then\r\n  // this is an audio only playlist.\r\n\r\n\r\n  return true;\r\n}; // exports\r\n\r\n\r\nvar Playlist = {\r\n  liveEdgeDelay: liveEdgeDelay,\r\n  duration: duration,\r\n  seekable: seekable,\r\n  getMediaInfoForTime: getMediaInfoForTime,\r\n  isEnabled: isEnabled,\r\n  isDisabled: isDisabled,\r\n  isBlacklisted: isBlacklisted,\r\n  isIncompatible: isIncompatible,\r\n  playlistEnd: playlistEnd,\r\n  isAes: isAes,\r\n  hasAttribute: hasAttribute,\r\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\r\n  isLowestEnabledRendition: isLowestEnabledRendition,\r\n  isAudioOnly: isAudioOnly,\r\n  playlistMatch: playlistMatch,\r\n  segmentDurationWithParts: segmentDurationWithParts\r\n};\r\nvar log = videojs.log;\r\n\r\nvar createPlaylistID = function createPlaylistID(index, uri) {\r\n  return index + \"-\" + uri;\r\n}; // default function for creating a group id\r\n\r\n\r\nvar groupID = function groupID(type, group, label) {\r\n  return \"placeholder-uri-\" + type + \"-\" + group + \"-\" + label;\r\n};\r\n/**\r\n * Parses a given m3u8 playlist\r\n *\r\n * @param {Function} [onwarn]\r\n *        a function to call when the parser triggers a warning event.\r\n * @param {Function} [oninfo]\r\n *        a function to call when the parser triggers an info event.\r\n * @param {string} manifestString\r\n *        The downloaded manifest string\r\n * @param {Object[]} [customTagParsers]\r\n *        An array of custom tag parsers for the m3u8-parser instance\r\n * @param {Object[]} [customTagMappers]\r\n *        An array of custom tag mappers for the m3u8-parser instance\r\n * @param {boolean} [experimentalLLHLS=false]\r\n *        Whether to keep ll-hls features in the manifest after parsing.\r\n * @return {Object}\r\n *         The manifest object\r\n */\r\n\r\n\r\nvar parseManifest = function parseManifest(_ref) {\r\n  var onwarn = _ref.onwarn,\r\n      oninfo = _ref.oninfo,\r\n      manifestString = _ref.manifestString,\r\n      _ref$customTagParsers = _ref.customTagParsers,\r\n      customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\r\n      _ref$customTagMappers = _ref.customTagMappers,\r\n      customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\r\n      experimentalLLHLS = _ref.experimentalLLHLS;\r\n  var parser = new Parser();\r\n\r\n  if (onwarn) {\r\n    parser.on('warn', onwarn);\r\n  }\r\n\r\n  if (oninfo) {\r\n    parser.on('info', oninfo);\r\n  }\r\n\r\n  customTagParsers.forEach(function (customParser) {\r\n    return parser.addParser(customParser);\r\n  });\r\n  customTagMappers.forEach(function (mapper) {\r\n    return parser.addTagMapper(mapper);\r\n  });\r\n  parser.push(manifestString);\r\n  parser.end();\r\n  var manifest = parser.manifest; // remove llhls features from the parsed manifest\r\n  // if we don't want llhls support.\r\n\r\n  if (!experimentalLLHLS) {\r\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\r\n      if (manifest.hasOwnProperty(k)) {\r\n        delete manifest[k];\r\n      }\r\n    });\r\n\r\n    if (manifest.segments) {\r\n      manifest.segments.forEach(function (segment) {\r\n        ['parts', 'preloadHints'].forEach(function (k) {\r\n          if (segment.hasOwnProperty(k)) {\r\n            delete segment[k];\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  if (!manifest.targetDuration) {\r\n    var targetDuration = 10;\r\n\r\n    if (manifest.segments && manifest.segments.length) {\r\n      targetDuration = manifest.segments.reduce(function (acc, s) {\r\n        return Math.max(acc, s.duration);\r\n      }, 0);\r\n    }\r\n\r\n    if (onwarn) {\r\n      onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\r\n    }\r\n\r\n    manifest.targetDuration = targetDuration;\r\n  }\r\n\r\n  var parts = getLastParts(manifest);\r\n\r\n  if (parts.length && !manifest.partTargetDuration) {\r\n    var partTargetDuration = parts.reduce(function (acc, p) {\r\n      return Math.max(acc, p.duration);\r\n    }, 0);\r\n\r\n    if (onwarn) {\r\n      onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\r\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\r\n    }\r\n\r\n    manifest.partTargetDuration = partTargetDuration;\r\n  }\r\n\r\n  return manifest;\r\n};\r\n/**\r\n * Loops through all supported media groups in master and calls the provided\r\n * callback for each group\r\n *\r\n * @param {Object} master\r\n *        The parsed master manifest object\r\n * @param {Function} callback\r\n *        Callback to call for each media group\r\n */\r\n\r\n\r\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\r\n  if (!master.mediaGroups) {\r\n    return;\r\n  }\r\n\r\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\r\n    if (!master.mediaGroups[mediaType]) {\r\n      return;\r\n    }\r\n\r\n    for (var groupKey in master.mediaGroups[mediaType]) {\r\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\r\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\r\n        callback(mediaProperties, mediaType, groupKey, labelKey);\r\n      }\r\n    }\r\n  });\r\n};\r\n/**\r\n * Adds properties and attributes to the playlist to keep consistent functionality for\r\n * playlists throughout VHS.\r\n *\r\n * @param {Object} config\r\n *        Arguments object\r\n * @param {Object} config.playlist\r\n *        The media playlist\r\n * @param {string} [config.uri]\r\n *        The uri to the media playlist (if media playlist is not from within a master\r\n *        playlist)\r\n * @param {string} id\r\n *        ID to use for the playlist\r\n */\r\n\r\n\r\nvar setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\r\n  var playlist = _ref2.playlist,\r\n      uri = _ref2.uri,\r\n      id = _ref2.id;\r\n  playlist.id = id;\r\n  playlist.playlistErrors_ = 0;\r\n\r\n  if (uri) {\r\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\r\n    // playlists do not contain their own source URI, but one is needed for consistency in\r\n    // VHS.\r\n    playlist.uri = uri;\r\n  } // For HLS master playlists, even though certain attributes MUST be defined, the\r\n  // stream may still be played without them.\r\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\r\n  // manifest.\r\n  //\r\n  // To avoid undefined reference errors through the project, and make the code easier\r\n  // to write/read, add an empty attributes object for these cases.\r\n\r\n\r\n  playlist.attributes = playlist.attributes || {};\r\n};\r\n/**\r\n * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\r\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\r\n * playlist references to the playlists array.\r\n *\r\n * @param {Object} master\r\n *        The master playlist\r\n */\r\n\r\n\r\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\r\n  var i = master.playlists.length;\r\n\r\n  while (i--) {\r\n    var playlist = master.playlists[i];\r\n    setupMediaPlaylist({\r\n      playlist: playlist,\r\n      id: createPlaylistID(i, playlist.uri)\r\n    });\r\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\r\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\r\n\r\n    master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\r\n    // the stream can be played without it. Although an attributes property may have been\r\n    // added to the playlist to prevent undefined references, issue a warning to fix the\r\n    // manifest.\r\n\r\n    if (!playlist.attributes.BANDWIDTH) {\r\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\r\n    }\r\n  }\r\n};\r\n/**\r\n * Adds resolvedUri properties to each media group.\r\n *\r\n * @param {Object} master\r\n *        The master playlist\r\n */\r\n\r\n\r\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\r\n  forEachMediaGroup(master, function (properties) {\r\n    if (properties.uri) {\r\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\r\n    }\r\n  });\r\n};\r\n/**\r\n * Creates a master playlist wrapper to insert a sole media playlist into.\r\n *\r\n * @param {Object} media\r\n *        Media playlist\r\n * @param {string} uri\r\n *        The media URI\r\n *\r\n * @return {Object}\r\n *         Master playlist\r\n */\r\n\r\n\r\nvar masterForMedia = function masterForMedia(media, uri) {\r\n  var id = createPlaylistID(0, uri);\r\n  var master = {\r\n    mediaGroups: {\r\n      'AUDIO': {},\r\n      'VIDEO': {},\r\n      'CLOSED-CAPTIONS': {},\r\n      'SUBTITLES': {}\r\n    },\r\n    uri: window$1.location.href,\r\n    resolvedUri: window$1.location.href,\r\n    playlists: [{\r\n      uri: uri,\r\n      id: id,\r\n      resolvedUri: uri,\r\n      // m3u8-parser does not attach an attributes property to media playlists so make\r\n      // sure that the property is attached to avoid undefined reference errors\r\n      attributes: {}\r\n    }]\r\n  }; // set up ID reference\r\n\r\n  master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\r\n\r\n  master.playlists[uri] = master.playlists[0];\r\n  return master;\r\n};\r\n/**\r\n * Does an in-place update of the master manifest to add updated playlist URI references\r\n * as well as other properties needed by VHS that aren't included by the parser.\r\n *\r\n * @param {Object} master\r\n *        Master manifest object\r\n * @param {string} uri\r\n *        The source URI\r\n * @param {function} createGroupID\r\n *        A function to determine how to create the groupID for mediaGroups\r\n */\r\n\r\n\r\nvar addPropertiesToMaster = function addPropertiesToMaster(master, uri, createGroupID) {\r\n  if (createGroupID === void 0) {\r\n    createGroupID = groupID;\r\n  }\r\n\r\n  master.uri = uri;\r\n\r\n  for (var i = 0; i < master.playlists.length; i++) {\r\n    if (!master.playlists[i].uri) {\r\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\r\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\r\n      // TODO: consider adding dummy URIs in mpd-parser\r\n      var phonyUri = \"placeholder-uri-\" + i;\r\n      master.playlists[i].uri = phonyUri;\r\n    }\r\n  }\r\n\r\n  var audioOnlyMaster = isAudioOnly(master);\r\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\r\n    // add a playlist array under properties\r\n    if (!properties.playlists || !properties.playlists.length) {\r\n      // If the manifest is audio only and this media group does not have a uri, check\r\n      // if the media group is located in the main list of playlists. If it is, don't add\r\n      // placeholder properties as it shouldn't be considered an alternate audio track.\r\n      if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\r\n        for (var _i = 0; _i < master.playlists.length; _i++) {\r\n          var p = master.playlists[_i];\r\n\r\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      properties.playlists = [_extends({}, properties)];\r\n    }\r\n\r\n    properties.playlists.forEach(function (p, i) {\r\n      var groupId = createGroupID(mediaType, groupKey, labelKey, p);\r\n      var id = createPlaylistID(i, groupId);\r\n\r\n      if (p.uri) {\r\n        p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\r\n      } else {\r\n        // DEPRECATED, this has been added to prevent a breaking change.\r\n        // previously we only ever had a single media group playlist, so\r\n        // we mark the first playlist uri without prepending the index as we used to\r\n        // ideally we would do all of the playlists the same way.\r\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\r\n        // the placeholder again\r\n\r\n        p.resolvedUri = p.uri;\r\n      }\r\n\r\n      p.id = p.id || id; // add an empty attributes object, all playlists are\r\n      // expected to have this.\r\n\r\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\r\n\r\n      master.playlists[p.id] = p;\r\n      master.playlists[p.uri] = p;\r\n    });\r\n  });\r\n  setupMediaPlaylists(master);\r\n  resolveMediaGroupUris(master);\r\n};\r\n\r\nvar mergeOptions$2 = videojs.mergeOptions,\r\n    EventTarget$1 = videojs.EventTarget;\r\n\r\nvar addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\r\n  if (media.endList || !media.serverControl) {\r\n    return uri;\r\n  }\r\n\r\n  var parameters = {};\r\n\r\n  if (media.serverControl.canBlockReload) {\r\n    var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\r\n\r\n    var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\r\n    // that we are going to request a part of that preload segment.\r\n    // the logic below is used to determine that.\r\n\r\n    if (preloadSegment) {\r\n      var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\r\n\r\n      var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\r\n      // length of parts, then we know we had part preload hints\r\n      // and we need to add the _HLS_part= query\r\n\r\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\r\n        // add existing parts to our preload hints\r\n        // eslint-disable-next-line\r\n        parameters._HLS_part = nextPart;\r\n      } // this if statement makes sure that we request the msn\r\n      // of the preload segment if:\r\n      // 1. the preload segment had parts (and was not yet a full segment)\r\n      //    but was added to our segments array\r\n      // 2. the preload segment had preload hints for parts that are not in\r\n      //    the manifest yet.\r\n      // in all other cases we want the segment after the preload segment\r\n      // which will be given by using media.segments.length because it is 1 based\r\n      // rather than 0 based.\r\n\r\n\r\n      if (nextPart > -1 || parts.length) {\r\n        nextMSN--;\r\n      }\r\n    } // add _HLS_msn= in front of any _HLS_part query\r\n    // eslint-disable-next-line\r\n\r\n\r\n    parameters._HLS_msn = nextMSN;\r\n  }\r\n\r\n  if (media.serverControl && media.serverControl.canSkipUntil) {\r\n    // add _HLS_skip= infront of all other queries.\r\n    // eslint-disable-next-line\r\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\r\n  }\r\n\r\n  if (Object.keys(parameters).length) {\r\n    var parsedUri = new window$1.URL(uri);\r\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\r\n      if (!parameters.hasOwnProperty(name)) {\r\n        return;\r\n      }\r\n\r\n      parsedUri.searchParams.set(name, parameters[name]);\r\n    });\r\n    uri = parsedUri.toString();\r\n  }\r\n\r\n  return uri;\r\n};\r\n/**\r\n * Returns a new segment object with properties and\r\n * the parts array merged.\r\n *\r\n * @param {Object} a the old segment\r\n * @param {Object} b the new segment\r\n *\r\n * @return {Object} the merged segment\r\n */\r\n\r\n\r\nvar updateSegment = function updateSegment(a, b) {\r\n  if (!a) {\r\n    return b;\r\n  }\r\n\r\n  var result = mergeOptions$2(a, b); // if only the old segment has preload hints\r\n  // and the new one does not, remove preload hints.\r\n\r\n  if (a.preloadHints && !b.preloadHints) {\r\n    delete result.preloadHints;\r\n  } // if only the old segment has parts\r\n  // then the parts are no longer valid\r\n\r\n\r\n  if (a.parts && !b.parts) {\r\n    delete result.parts; // if both segments have parts\r\n    // copy part propeties from the old segment\r\n    // to the new one.\r\n  } else if (a.parts && b.parts) {\r\n    for (var i = 0; i < b.parts.length; i++) {\r\n      if (a.parts && a.parts[i]) {\r\n        result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\r\n      }\r\n    }\r\n  } // set skipped to false for segments that have\r\n  // have had information merged from the old segment.\r\n\r\n\r\n  if (!a.skipped && b.skipped) {\r\n    result.skipped = false;\r\n  } // set preload to false for segments that have\r\n  // had information added in the new segment.\r\n\r\n\r\n  if (a.preload && !b.preload) {\r\n    result.preload = false;\r\n  }\r\n\r\n  return result;\r\n};\r\n/**\r\n * Returns a new array of segments that is the result of merging\r\n * properties from an older list of segments onto an updated\r\n * list. No properties on the updated playlist will be ovewritten.\r\n *\r\n * @param {Array} original the outdated list of segments\r\n * @param {Array} update the updated list of segments\r\n * @param {number=} offset the index of the first update\r\n * segment in the original segment list. For non-live playlists,\r\n * this should always be zero and does not need to be\r\n * specified. For live playlists, it should be the difference\r\n * between the media sequence numbers in the original and updated\r\n * playlists.\r\n * @return {Array} a list of merged segment objects\r\n */\r\n\r\n\r\nvar updateSegments = function updateSegments(original, update, offset) {\r\n  var oldSegments = original.slice();\r\n  var newSegments = update.slice();\r\n  offset = offset || 0;\r\n  var result = [];\r\n  var currentMap;\r\n\r\n  for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\r\n    var oldSegment = oldSegments[newIndex + offset];\r\n    var newSegment = newSegments[newIndex];\r\n\r\n    if (oldSegment) {\r\n      currentMap = oldSegment.map || currentMap;\r\n      result.push(updateSegment(oldSegment, newSegment));\r\n    } else {\r\n      // carry over map to new segment if it is missing\r\n      if (currentMap && !newSegment.map) {\r\n        newSegment.map = currentMap;\r\n      }\r\n\r\n      result.push(newSegment);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\r\n  // preloadSegment will not have a uri at all\r\n  // as the segment isn't actually in the manifest yet, only parts\r\n  if (!segment.resolvedUri && segment.uri) {\r\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\r\n  }\r\n\r\n  if (segment.key && !segment.key.resolvedUri) {\r\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\r\n  }\r\n\r\n  if (segment.map && !segment.map.resolvedUri) {\r\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\r\n  }\r\n\r\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\r\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\r\n  }\r\n\r\n  if (segment.parts && segment.parts.length) {\r\n    segment.parts.forEach(function (p) {\r\n      if (p.resolvedUri) {\r\n        return;\r\n      }\r\n\r\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\r\n    });\r\n  }\r\n\r\n  if (segment.preloadHints && segment.preloadHints.length) {\r\n    segment.preloadHints.forEach(function (p) {\r\n      if (p.resolvedUri) {\r\n        return;\r\n      }\r\n\r\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\r\n    });\r\n  }\r\n};\r\n\r\nvar getAllSegments = function getAllSegments(media) {\r\n  var segments = media.segments || [];\r\n  var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\r\n  // a usable segment, only include a preloadSegment that has\r\n  // parts.\r\n\r\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\r\n    // if preloadHints has a MAP that means that the\r\n    // init segment is going to change. We cannot use any of the parts\r\n    // from this preload segment.\r\n    if (preloadSegment.preloadHints) {\r\n      for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\r\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\r\n          return segments;\r\n        }\r\n      }\r\n    } // set the duration for our preload segment to target duration.\r\n\r\n\r\n    preloadSegment.duration = media.targetDuration;\r\n    preloadSegment.preload = true;\r\n    segments.push(preloadSegment);\r\n  }\r\n\r\n  return segments;\r\n}; // consider the playlist unchanged if the playlist object is the same or\r\n// the number of segments is equal, the media sequence number is unchanged,\r\n// and this playlist hasn't become the end of the playlist\r\n\r\n\r\nvar isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\r\n  return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\r\n};\r\n/**\r\n  * Returns a new master playlist that is the result of merging an\r\n  * updated media playlist into the original version. If the\r\n  * updated media playlist does not match any of the playlist\r\n  * entries in the original master playlist, null is returned.\r\n  *\r\n  * @param {Object} master a parsed master M3U8 object\r\n  * @param {Object} media a parsed media M3U8 object\r\n  * @return {Object} a new object that represents the original\r\n  * master playlist with the updated media playlist merged in, or\r\n  * null if the merge produced no change.\r\n  */\r\n\r\n\r\nvar updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\r\n  if (unchangedCheck === void 0) {\r\n    unchangedCheck = isPlaylistUnchanged;\r\n  }\r\n\r\n  var result = mergeOptions$2(master, {});\r\n  var oldMedia = result.playlists[newMedia.id];\r\n\r\n  if (!oldMedia) {\r\n    return null;\r\n  }\r\n\r\n  if (unchangedCheck(oldMedia, newMedia)) {\r\n    return null;\r\n  }\r\n\r\n  newMedia.segments = getAllSegments(newMedia);\r\n  var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\r\n\r\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\r\n    delete mergedPlaylist.preloadSegment;\r\n  } // if the update could overlap existing segment information, merge the two segment lists\r\n\r\n\r\n  if (oldMedia.segments) {\r\n    if (newMedia.skip) {\r\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\r\n      // old properties into the new segments\r\n\r\n      for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\r\n        newMedia.segments.unshift({\r\n          skipped: true\r\n        });\r\n      }\r\n    }\r\n\r\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\r\n  } // resolve any segment URIs to prevent us from having to do it later\r\n\r\n\r\n  mergedPlaylist.segments.forEach(function (segment) {\r\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\r\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\r\n  // that is referenced by index, and one by URI. The index reference may no longer be\r\n  // necessary.\r\n\r\n  for (var _i = 0; _i < result.playlists.length; _i++) {\r\n    if (result.playlists[_i].id === newMedia.id) {\r\n      result.playlists[_i] = mergedPlaylist;\r\n    }\r\n  }\r\n\r\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\r\n\r\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\r\n\r\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\r\n    if (!properties.playlists) {\r\n      return;\r\n    }\r\n\r\n    for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\r\n      if (newMedia.id === properties.playlists[_i2].id) {\r\n        properties.playlists[_i2] = mergedPlaylist;\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n};\r\n/**\r\n * Calculates the time to wait before refreshing a live playlist\r\n *\r\n * @param {Object} media\r\n *        The current media\r\n * @param {boolean} update\r\n *        True if there were any updates from the last refresh, false otherwise\r\n * @return {number}\r\n *         The time in ms to wait before refreshing the live playlist\r\n */\r\n\r\n\r\nvar refreshDelay = function refreshDelay(media, update) {\r\n  var segments = media.segments || [];\r\n  var lastSegment = segments[segments.length - 1];\r\n  var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\r\n  var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\r\n\r\n  if (update && lastDuration) {\r\n    return lastDuration * 1000;\r\n  } // if the playlist is unchanged since the last reload or last segment duration\r\n  // cannot be determined, try again after half the target duration\r\n\r\n\r\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\r\n};\r\n/**\r\n * Load a playlist from a remote location\r\n *\r\n * @class PlaylistLoader\r\n * @extends Stream\r\n * @param {string|Object} src url or object of manifest\r\n * @param {boolean} withCredentials the withCredentials xhr option\r\n * @class\r\n */\r\n\r\n\r\nvar PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\r\n  _inheritsLoose(PlaylistLoader, _EventTarget);\r\n\r\n  function PlaylistLoader(src, vhs, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _EventTarget.call(this) || this;\r\n\r\n    if (!src) {\r\n      throw new Error('A non-empty playlist URL or object is required');\r\n    }\r\n\r\n    _this.logger_ = logger('PlaylistLoader');\r\n    var _options = options,\r\n        _options$withCredenti = _options.withCredentials,\r\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\r\n        _options$handleManife = _options.handleManifestRedirects,\r\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\r\n    _this.src = src;\r\n    _this.vhs_ = vhs;\r\n    _this.withCredentials = withCredentials;\r\n    _this.handleManifestRedirects = handleManifestRedirects;\r\n    var vhsOptions = vhs.options_;\r\n    _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\r\n    _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\r\n    _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\r\n\r\n    if (videojs.browser.IE_VERSION) {\r\n      _this.experimentalLLHLS = false;\r\n    } // initialize the loader state\r\n\r\n\r\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\r\n\r\n    _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(_assertThisInitialized(_this));\r\n\r\n    _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = PlaylistLoader.prototype;\r\n\r\n  _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\r\n    var _this2 = this;\r\n\r\n    if (this.state !== 'HAVE_METADATA') {\r\n      // only refresh the media playlist if no other activity is going on\r\n      return;\r\n    }\r\n\r\n    var media = this.media();\r\n    var uri = resolveUrl(this.master.uri, media.uri);\r\n\r\n    if (this.experimentalLLHLS) {\r\n      uri = addLLHLSQueryDirectives(uri, media);\r\n    }\r\n\r\n    this.state = 'HAVE_CURRENT_METADATA';\r\n    this.request = this.vhs_.xhr({\r\n      uri: uri,\r\n      withCredentials: this.withCredentials\r\n    }, function (error, req) {\r\n      // disposed\r\n      if (!_this2.request) {\r\n        return;\r\n      }\r\n\r\n      if (error) {\r\n        return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\r\n      }\r\n\r\n      _this2.haveMetadata({\r\n        playlistString: _this2.request.responseText,\r\n        url: _this2.media().uri,\r\n        id: _this2.media().id\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\r\n    var uri = playlist.uri,\r\n        id = playlist.id; // any in-flight request is now finished\r\n\r\n    this.request = null;\r\n\r\n    if (startingState) {\r\n      this.state = startingState;\r\n    }\r\n\r\n    this.error = {\r\n      playlist: this.master.playlists[id],\r\n      status: xhr.status,\r\n      message: \"HLS playlist request error at URL: \" + uri + \".\",\r\n      responseText: xhr.responseText,\r\n      code: xhr.status >= 500 ? 4 : 2\r\n    };\r\n    this.trigger('error');\r\n  };\r\n\r\n  _proto.parseManifest_ = function parseManifest_(_ref) {\r\n    var _this3 = this;\r\n\r\n    var url = _ref.url,\r\n        manifestString = _ref.manifestString;\r\n    return parseManifest({\r\n      onwarn: function onwarn(_ref2) {\r\n        var message = _ref2.message;\r\n        return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\r\n      },\r\n      oninfo: function oninfo(_ref3) {\r\n        var message = _ref3.message;\r\n        return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\r\n      },\r\n      manifestString: manifestString,\r\n      customTagParsers: this.customTagParsers,\r\n      customTagMappers: this.customTagMappers,\r\n      experimentalLLHLS: this.experimentalLLHLS\r\n    });\r\n  }\r\n  /**\r\n   * Update the playlist loader's state in response to a new or updated playlist.\r\n   *\r\n   * @param {string} [playlistString]\r\n   *        Playlist string (if playlistObject is not provided)\r\n   * @param {Object} [playlistObject]\r\n   *        Playlist object (if playlistString is not provided)\r\n   * @param {string} url\r\n   *        URL of playlist\r\n   * @param {string} id\r\n   *        ID to use for playlist\r\n   */\r\n  ;\r\n\r\n  _proto.haveMetadata = function haveMetadata(_ref4) {\r\n    var playlistString = _ref4.playlistString,\r\n        playlistObject = _ref4.playlistObject,\r\n        url = _ref4.url,\r\n        id = _ref4.id; // any in-flight request is now finished\r\n\r\n    this.request = null;\r\n    this.state = 'HAVE_METADATA';\r\n    var playlist = playlistObject || this.parseManifest_({\r\n      url: url,\r\n      manifestString: playlistString\r\n    });\r\n    playlist.lastRequest = Date.now();\r\n    setupMediaPlaylist({\r\n      playlist: playlist,\r\n      uri: url,\r\n      id: id\r\n    }); // merge this playlist into the master\r\n\r\n    var update = updateMaster$1(this.master, playlist);\r\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\r\n    this.pendingMedia_ = null;\r\n\r\n    if (update) {\r\n      this.master = update;\r\n      this.media_ = this.master.playlists[id];\r\n    } else {\r\n      this.trigger('playlistunchanged');\r\n    }\r\n\r\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\r\n    this.trigger('loadedplaylist');\r\n  }\r\n  /**\r\n    * Abort any outstanding work and clean up.\r\n    */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.trigger('dispose');\r\n    this.stopRequest();\r\n    window$1.clearTimeout(this.mediaUpdateTimeout);\r\n    window$1.clearTimeout(this.finalRenditionTimeout);\r\n    this.off();\r\n  };\r\n\r\n  _proto.stopRequest = function stopRequest() {\r\n    if (this.request) {\r\n      var oldRequest = this.request;\r\n      this.request = null;\r\n      oldRequest.onreadystatechange = null;\r\n      oldRequest.abort();\r\n    }\r\n  }\r\n  /**\r\n    * When called without any arguments, returns the currently\r\n    * active media playlist. When called with a single argument,\r\n    * triggers the playlist loader to asynchronously switch to the\r\n    * specified media playlist. Calling this method while the\r\n    * loader is in the HAVE_NOTHING causes an error to be emitted\r\n    * but otherwise has no effect.\r\n    *\r\n    * @param {Object=} playlist the parsed media playlist\r\n    * object to switch to\r\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\r\n    *\r\n    * @return {Playlist} the current loaded media\r\n    */\r\n  ;\r\n\r\n  _proto.media = function media(playlist, shouldDelay) {\r\n    var _this4 = this; // getter\r\n\r\n\r\n    if (!playlist) {\r\n      return this.media_;\r\n    } // setter\r\n\r\n\r\n    if (this.state === 'HAVE_NOTHING') {\r\n      throw new Error('Cannot switch media playlist from ' + this.state);\r\n    } // find the playlist object if the target playlist has been\r\n    // specified by URI\r\n\r\n\r\n    if (typeof playlist === 'string') {\r\n      if (!this.master.playlists[playlist]) {\r\n        throw new Error('Unknown playlist URI: ' + playlist);\r\n      }\r\n\r\n      playlist = this.master.playlists[playlist];\r\n    }\r\n\r\n    window$1.clearTimeout(this.finalRenditionTimeout);\r\n\r\n    if (shouldDelay) {\r\n      var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\r\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\r\n      return;\r\n    }\r\n\r\n    var startingState = this.state;\r\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id;\r\n    var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\r\n\r\n    if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\r\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\r\n    playlist.endList && playlist.segments.length) {\r\n      // abort outstanding playlist requests\r\n      if (this.request) {\r\n        this.request.onreadystatechange = null;\r\n        this.request.abort();\r\n        this.request = null;\r\n      }\r\n\r\n      this.state = 'HAVE_METADATA';\r\n      this.media_ = playlist; // trigger media change if the active media has been updated\r\n\r\n      if (mediaChange) {\r\n        this.trigger('mediachanging');\r\n\r\n        if (startingState === 'HAVE_MASTER') {\r\n          // The initial playlist was a master manifest, and the first media selected was\r\n          // also provided (in the form of a resolved playlist object) as part of the\r\n          // source object (rather than just a URL). Therefore, since the media playlist\r\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\r\n          // normal flow, and needs an explicit trigger here.\r\n          this.trigger('loadedmetadata');\r\n        } else {\r\n          this.trigger('mediachange');\r\n        }\r\n      }\r\n\r\n      return;\r\n    } // We update/set the timeout here so that live playlists\r\n    // that are not a media change will \"start\" the loader as expected.\r\n    // We expect that this function will start the media update timeout\r\n    // cycle again. This also prevents a playlist switch failure from\r\n    // causing us to stall during live.\r\n\r\n\r\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\r\n\r\n    if (!mediaChange) {\r\n      return;\r\n    }\r\n\r\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\r\n\r\n    if (this.request) {\r\n      if (playlist.resolvedUri === this.request.url) {\r\n        // requesting to switch to the same playlist multiple times\r\n        // has no effect after the first\r\n        return;\r\n      }\r\n\r\n      this.request.onreadystatechange = null;\r\n      this.request.abort();\r\n      this.request = null;\r\n    } // request the new playlist\r\n\r\n\r\n    if (this.media_) {\r\n      this.trigger('mediachanging');\r\n    }\r\n\r\n    this.pendingMedia_ = playlist;\r\n    this.request = this.vhs_.xhr({\r\n      uri: playlist.resolvedUri,\r\n      withCredentials: this.withCredentials\r\n    }, function (error, req) {\r\n      // disposed\r\n      if (!_this4.request) {\r\n        return;\r\n      }\r\n\r\n      playlist.lastRequest = Date.now();\r\n      playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\r\n\r\n      if (error) {\r\n        return _this4.playlistRequestError(_this4.request, playlist, startingState);\r\n      }\r\n\r\n      _this4.haveMetadata({\r\n        playlistString: req.responseText,\r\n        url: playlist.uri,\r\n        id: playlist.id\r\n      }); // fire loadedmetadata the first time a media playlist is loaded\r\n\r\n\r\n      if (startingState === 'HAVE_MASTER') {\r\n        _this4.trigger('loadedmetadata');\r\n      } else {\r\n        _this4.trigger('mediachange');\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * pause loading of the playlist\r\n   */\r\n  ;\r\n\r\n  _proto.pause = function pause() {\r\n    if (this.mediaUpdateTimeout) {\r\n      window$1.clearTimeout(this.mediaUpdateTimeout);\r\n      this.mediaUpdateTimeout = null;\r\n    }\r\n\r\n    this.stopRequest();\r\n\r\n    if (this.state === 'HAVE_NOTHING') {\r\n      // If we pause the loader before any data has been retrieved, its as if we never\r\n      // started, so reset to an unstarted state.\r\n      this.started = false;\r\n    } // Need to restore state now that no activity is happening\r\n\r\n\r\n    if (this.state === 'SWITCHING_MEDIA') {\r\n      // if the loader was in the process of switching media, it should either return to\r\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\r\n      // playlist yet. This is determined by the existence of loader.media_\r\n      if (this.media_) {\r\n        this.state = 'HAVE_METADATA';\r\n      } else {\r\n        this.state = 'HAVE_MASTER';\r\n      }\r\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\r\n      this.state = 'HAVE_METADATA';\r\n    }\r\n  }\r\n  /**\r\n   * start loading of the playlist\r\n   */\r\n  ;\r\n\r\n  _proto.load = function load(shouldDelay) {\r\n    var _this5 = this;\r\n\r\n    if (this.mediaUpdateTimeout) {\r\n      window$1.clearTimeout(this.mediaUpdateTimeout);\r\n      this.mediaUpdateTimeout = null;\r\n    }\r\n\r\n    var media = this.media();\r\n\r\n    if (shouldDelay) {\r\n      var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\r\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\r\n        _this5.mediaUpdateTimeout = null;\r\n\r\n        _this5.load();\r\n      }, delay);\r\n      return;\r\n    }\r\n\r\n    if (!this.started) {\r\n      this.start();\r\n      return;\r\n    }\r\n\r\n    if (media && !media.endList) {\r\n      this.trigger('mediaupdatetimeout');\r\n    } else {\r\n      this.trigger('loadedplaylist');\r\n    }\r\n  };\r\n\r\n  _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\r\n    var _this6 = this;\r\n\r\n    if (this.mediaUpdateTimeout) {\r\n      window$1.clearTimeout(this.mediaUpdateTimeout);\r\n      this.mediaUpdateTimeout = null;\r\n    } // we only have use mediaupdatetimeout for live playlists.\r\n\r\n\r\n    if (!this.media() || this.media().endList) {\r\n      return;\r\n    }\r\n\r\n    this.mediaUpdateTimeout = window$1.setTimeout(function () {\r\n      _this6.mediaUpdateTimeout = null;\r\n\r\n      _this6.trigger('mediaupdatetimeout');\r\n\r\n      _this6.updateMediaUpdateTimeout_(delay);\r\n    }, delay);\r\n  }\r\n  /**\r\n   * start loading of the playlist\r\n   */\r\n  ;\r\n\r\n  _proto.start = function start() {\r\n    var _this7 = this;\r\n\r\n    this.started = true;\r\n\r\n    if (typeof this.src === 'object') {\r\n      // in the case of an entirely constructed manifest object (meaning there's no actual\r\n      // manifest on a server), default the uri to the page's href\r\n      if (!this.src.uri) {\r\n        this.src.uri = window$1.location.href;\r\n      } // resolvedUri is added on internally after the initial request. Since there's no\r\n      // request for pre-resolved manifests, add on resolvedUri here.\r\n\r\n\r\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\r\n      // request can be skipped (since the top level of the manifest, at a minimum, is\r\n      // already available as a parsed manifest object). However, if the manifest object\r\n      // represents a master playlist, some media playlists may need to be resolved before\r\n      // the starting segment list is available. Therefore, go directly to setup of the\r\n      // initial playlist, and let the normal flow continue from there.\r\n      //\r\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\r\n      // that the first request is asynchronous.\r\n\r\n      setTimeout(function () {\r\n        _this7.setupInitialPlaylist(_this7.src);\r\n      }, 0);\r\n      return;\r\n    } // request the specified URL\r\n\r\n\r\n    this.request = this.vhs_.xhr({\r\n      uri: this.src,\r\n      withCredentials: this.withCredentials\r\n    }, function (error, req) {\r\n      // disposed\r\n      if (!_this7.request) {\r\n        return;\r\n      } // clear the loader's request reference\r\n\r\n\r\n      _this7.request = null;\r\n\r\n      if (error) {\r\n        _this7.error = {\r\n          status: req.status,\r\n          message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\r\n          responseText: req.responseText,\r\n          // MEDIA_ERR_NETWORK\r\n          code: 2\r\n        };\r\n\r\n        if (_this7.state === 'HAVE_NOTHING') {\r\n          _this7.started = false;\r\n        }\r\n\r\n        return _this7.trigger('error');\r\n      }\r\n\r\n      _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\r\n\r\n      var manifest = _this7.parseManifest_({\r\n        manifestString: req.responseText,\r\n        url: _this7.src\r\n      });\r\n\r\n      _this7.setupInitialPlaylist(manifest);\r\n    });\r\n  };\r\n\r\n  _proto.srcUri = function srcUri() {\r\n    return typeof this.src === 'string' ? this.src : this.src.uri;\r\n  }\r\n  /**\r\n   * Given a manifest object that's either a master or media playlist, trigger the proper\r\n   * events and set the state of the playlist loader.\r\n   *\r\n   * If the manifest object represents a master playlist, `loadedplaylist` will be\r\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\r\n   * will default to the first one in the playlists array.\r\n   *\r\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\r\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\r\n   *\r\n   * In the case of a media playlist, a master playlist object wrapper with one playlist\r\n   * will be created so that all logic can handle playlists in the same fashion (as an\r\n   * assumed manifest object schema).\r\n   *\r\n   * @param {Object} manifest\r\n   *        The parsed manifest object\r\n   */\r\n  ;\r\n\r\n  _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\r\n    this.state = 'HAVE_MASTER';\r\n\r\n    if (manifest.playlists) {\r\n      this.master = manifest;\r\n      addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\r\n      // then resolve URIs in advance, as they are usually done after a playlist request,\r\n      // which may not happen if the playlist is resolved.\r\n\r\n      manifest.playlists.forEach(function (playlist) {\r\n        playlist.segments = getAllSegments(playlist);\r\n        playlist.segments.forEach(function (segment) {\r\n          resolveSegmentUris(segment, playlist.resolvedUri);\r\n        });\r\n      });\r\n      this.trigger('loadedplaylist');\r\n\r\n      if (!this.request) {\r\n        // no media playlist was specifically selected so start\r\n        // from the first listed one\r\n        this.media(this.master.playlists[0]);\r\n      }\r\n\r\n      return;\r\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\r\n    // is not provided as part of the manifest should be considered, and an appropriate\r\n    // default used.\r\n\r\n\r\n    var uri = this.srcUri() || window$1.location.href;\r\n    this.master = masterForMedia(manifest, uri);\r\n    this.haveMetadata({\r\n      playlistObject: manifest,\r\n      url: uri,\r\n      id: this.master.playlists[0].id\r\n    });\r\n    this.trigger('loadedmetadata');\r\n  };\r\n\r\n  return PlaylistLoader;\r\n}(EventTarget$1);\r\n/**\r\n * @file xhr.js\r\n */\r\n\r\n\r\nvar videojsXHR = videojs.xhr,\r\n    mergeOptions$1 = videojs.mergeOptions;\r\n\r\nvar callbackWrapper = function callbackWrapper(request, error, response, callback) {\r\n  var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\r\n\r\n  if (!error && reqResponse) {\r\n    request.responseTime = Date.now();\r\n    request.roundTripTime = request.responseTime - request.requestTime;\r\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\r\n\r\n    if (!request.bandwidth) {\r\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\r\n    }\r\n  }\r\n\r\n  if (response.headers) {\r\n    request.responseHeaders = response.headers;\r\n  } // videojs.xhr now uses a specific code on the error\r\n  // object to signal that a request has timed out instead\r\n  // of setting a boolean on the request object\r\n\r\n\r\n  if (error && error.code === 'ETIMEDOUT') {\r\n    request.timedout = true;\r\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\r\n  // (for file uris) to be errors, but the old XHR did, so emulate that\r\n  // behavior. Status 206 may be used in response to byterange requests.\r\n\r\n\r\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\r\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\r\n  }\r\n\r\n  callback(error, request);\r\n};\r\n\r\nvar xhrFactory = function xhrFactory() {\r\n  var xhr = function XhrFunction(options, callback) {\r\n    // Add a default timeout\r\n    options = mergeOptions$1({\r\n      timeout: 45e3\r\n    }, options); // Allow an optional user-specified function to modify the option\r\n    // object before we construct the xhr request\r\n\r\n    var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\r\n\r\n    if (beforeRequest && typeof beforeRequest === 'function') {\r\n      var newOptions = beforeRequest(options);\r\n\r\n      if (newOptions) {\r\n        options = newOptions;\r\n      }\r\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\r\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\r\n\r\n\r\n    var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\r\n    var request = xhrMethod(options, function (error, response) {\r\n      return callbackWrapper(request, error, response, callback);\r\n    });\r\n    var originalAbort = request.abort;\r\n\r\n    request.abort = function () {\r\n      request.aborted = true;\r\n      return originalAbort.apply(request, arguments);\r\n    };\r\n\r\n    request.uri = options.uri;\r\n    request.requestTime = Date.now();\r\n    return request;\r\n  };\r\n\r\n  xhr.original = true;\r\n  return xhr;\r\n};\r\n/**\r\n * Turns segment byterange into a string suitable for use in\r\n * HTTP Range requests\r\n *\r\n * @param {Object} byterange - an object with two values defining the start and end\r\n *                             of a byte-range\r\n */\r\n\r\n\r\nvar byterangeStr = function byterangeStr(byterange) {\r\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\r\n  // header uses inclusive ranges\r\n  var byterangeEnd;\r\n  var byterangeStart = byterange.offset;\r\n\r\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\r\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\r\n  } else {\r\n    byterangeEnd = byterange.offset + byterange.length - 1;\r\n  }\r\n\r\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\r\n};\r\n/**\r\n * Defines headers for use in the xhr request for a particular segment.\r\n *\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n */\r\n\r\n\r\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\r\n  var headers = {};\r\n\r\n  if (segment.byterange) {\r\n    headers.Range = byterangeStr(segment.byterange);\r\n  }\r\n\r\n  return headers;\r\n};\r\n/**\r\n * @file bin-utils.js\r\n */\r\n\r\n/**\r\n * convert a TimeRange to text\r\n *\r\n * @param {TimeRange} range the timerange to use for conversion\r\n * @param {number} i the iterator on the range to convert\r\n * @return {string} the range in string format\r\n */\r\n\r\n\r\nvar textRange = function textRange(range, i) {\r\n  return range.start(i) + '-' + range.end(i);\r\n};\r\n/**\r\n * format a number as hex string\r\n *\r\n * @param {number} e The number\r\n * @param {number} i the iterator\r\n * @return {string} the hex formatted number as a string\r\n */\r\n\r\n\r\nvar formatHexString = function formatHexString(e, i) {\r\n  var value = e.toString(16);\r\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\r\n};\r\n\r\nvar formatAsciiString = function formatAsciiString(e) {\r\n  if (e >= 0x20 && e < 0x7e) {\r\n    return String.fromCharCode(e);\r\n  }\r\n\r\n  return '.';\r\n};\r\n/**\r\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\r\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\r\n *\r\n * @param {Object} message\r\n *        Object of properties and values to send to the web worker\r\n * @return {Object}\r\n *         Modified message with TypedArray values expanded\r\n * @function createTransferableMessage\r\n */\r\n\r\n\r\nvar createTransferableMessage = function createTransferableMessage(message) {\r\n  var transferable = {};\r\n  Object.keys(message).forEach(function (key) {\r\n    var value = message[key];\r\n\r\n    if (isArrayBufferView(value)) {\r\n      transferable[key] = {\r\n        bytes: value.buffer,\r\n        byteOffset: value.byteOffset,\r\n        byteLength: value.byteLength\r\n      };\r\n    } else {\r\n      transferable[key] = value;\r\n    }\r\n  });\r\n  return transferable;\r\n};\r\n/**\r\n * Returns a unique string identifier for a media initialization\r\n * segment.\r\n *\r\n * @param {Object} initSegment\r\n *        the init segment object.\r\n *\r\n * @return {string} the generated init segment id\r\n */\r\n\r\n\r\nvar initSegmentId = function initSegmentId(initSegment) {\r\n  var byterange = initSegment.byterange || {\r\n    length: Infinity,\r\n    offset: 0\r\n  };\r\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\r\n};\r\n/**\r\n * Returns a unique string identifier for a media segment key.\r\n *\r\n * @param {Object} key the encryption key\r\n * @return {string} the unique id for the media segment key.\r\n */\r\n\r\n\r\nvar segmentKeyId = function segmentKeyId(key) {\r\n  return key.resolvedUri;\r\n};\r\n/**\r\n * utils to help dump binary data to the console\r\n *\r\n * @param {Array|TypedArray} data\r\n *        data to dump to a string\r\n *\r\n * @return {string} the data as a hex string.\r\n */\r\n\r\n\r\nvar hexDump = function hexDump(data) {\r\n  var bytes = Array.prototype.slice.call(data);\r\n  var step = 16;\r\n  var result = '';\r\n  var hex;\r\n  var ascii;\r\n\r\n  for (var j = 0; j < bytes.length / step; j++) {\r\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\r\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\r\n    result += hex + ' ' + ascii + '\\n';\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nvar tagDump = function tagDump(_ref) {\r\n  var bytes = _ref.bytes;\r\n  return hexDump(bytes);\r\n};\r\n\r\nvar textRanges = function textRanges(ranges) {\r\n  var result = '';\r\n  var i;\r\n\r\n  for (i = 0; i < ranges.length; i++) {\r\n    result += textRange(ranges, i) + ' ';\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nvar utils = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  createTransferableMessage: createTransferableMessage,\r\n  initSegmentId: initSegmentId,\r\n  segmentKeyId: segmentKeyId,\r\n  hexDump: hexDump,\r\n  tagDump: tagDump,\r\n  textRanges: textRanges\r\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\r\n// 25% was arbitrarily chosen, and may need to be refined over time.\r\n\r\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\r\n/**\r\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\r\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\r\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\r\n *\r\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\r\n * point\" (a point where we have a mapping from program time to player time, with player\r\n * time being the post transmux start of the segment).\r\n *\r\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\r\n *\r\n * @param {number} playerTime the player time\r\n * @param {Object} segment the segment which contains the player time\r\n * @return {Date} program time\r\n */\r\n\r\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\r\n  if (!segment.dateTimeObject) {\r\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\r\n    // be used to map the start of a segment with a real world time).\r\n    return null;\r\n  }\r\n\r\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\r\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\r\n\r\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\r\n  var offsetFromSegmentStart = playerTime - startOfSegment;\r\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\r\n};\r\n\r\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\r\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\r\n};\r\n/**\r\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\r\n * returned segment might be an estimate or an accurate match.\r\n *\r\n * @param {string} programTime The ISO-8601 programTime to find a match for\r\n * @param {Object} playlist A playlist object to search within\r\n */\r\n\r\n\r\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\r\n  // Assumptions:\r\n  //  - verifyProgramDateTimeTags has already been run\r\n  //  - live streams have been started\r\n  var dateTimeObject;\r\n\r\n  try {\r\n    dateTimeObject = new Date(programTime);\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n\r\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  var segment = playlist.segments[0];\r\n\r\n  if (dateTimeObject < segment.dateTimeObject) {\r\n    // Requested time is before stream start.\r\n    return null;\r\n  }\r\n\r\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\r\n    segment = playlist.segments[i];\r\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\r\n\r\n    if (dateTimeObject < nextSegmentStart) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\r\n  var lastSegmentStart = lastSegment.dateTimeObject;\r\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\r\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\r\n\r\n  if (dateTimeObject > lastSegmentEnd) {\r\n    // Beyond the end of the stream, or our best guess of the end of the stream.\r\n    return null;\r\n  }\r\n\r\n  if (dateTimeObject > lastSegmentStart) {\r\n    segment = lastSegment;\r\n  }\r\n\r\n  return {\r\n    segment: segment,\r\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\r\n    // Although, given that all segments have accurate date time objects, the segment\r\n    // selected should be accurate, unless the video has been transmuxed at some point\r\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\r\n    // time\" (the start time in the player) can't be considered accurate.\r\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\r\n  };\r\n};\r\n/**\r\n * Finds a segment that contains the given player time(in seconds).\r\n *\r\n * @param {number} time The player time to find a match for\r\n * @param {Object} playlist A playlist object to search within\r\n */\r\n\r\n\r\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\r\n  // Assumptions:\r\n  // - there will always be a segment.duration\r\n  // - we can start from zero\r\n  // - segments are in time order\r\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  var segmentEnd = 0;\r\n  var segment;\r\n\r\n  for (var i = 0; i < playlist.segments.length; i++) {\r\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\r\n    // should contain the most accurate values we have for the segment's player times.\r\n    //\r\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\r\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\r\n    // calculate an end value.\r\n\r\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\r\n\r\n    if (time <= segmentEnd) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\r\n\r\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\r\n    // The time requested is beyond the stream end.\r\n    return null;\r\n  }\r\n\r\n  if (time > segmentEnd) {\r\n    // The time is within or beyond the last segment.\r\n    //\r\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\r\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\r\n      // Technically, because the duration value is only an estimate, the time may still\r\n      // exist in the last segment, however, there isn't enough information to make even\r\n      // a reasonable estimate.\r\n      return null;\r\n    }\r\n\r\n    segment = lastSegment;\r\n  }\r\n\r\n  return {\r\n    segment: segment,\r\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\r\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\r\n    // accurate timing values.\r\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\r\n  };\r\n};\r\n/**\r\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\r\n * If the offset returned is positive, the programTime occurs after the\r\n * comparisonTimestamp.\r\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\r\n *\r\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\r\n * @param {string} programTime The programTime as an ISO-8601 string\r\n * @return {number} offset\r\n */\r\n\r\n\r\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\r\n  var segmentDateTime;\r\n  var programDateTime;\r\n\r\n  try {\r\n    segmentDateTime = new Date(comparisonTimeStamp);\r\n    programDateTime = new Date(programTime);\r\n  } catch (e) {// TODO handle error\r\n  }\r\n\r\n  var segmentTimeEpoch = segmentDateTime.getTime();\r\n  var programTimeEpoch = programDateTime.getTime();\r\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\r\n};\r\n/**\r\n * Checks that all segments in this playlist have programDateTime tags.\r\n *\r\n * @param {Object} playlist A playlist object\r\n */\r\n\r\n\r\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\r\n  if (!playlist.segments || playlist.segments.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0; i < playlist.segments.length; i++) {\r\n    var segment = playlist.segments[i];\r\n\r\n    if (!segment.dateTimeObject) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n/**\r\n * Returns the programTime of the media given a playlist and a playerTime.\r\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\r\n * If the segments containing the time requested have not been buffered yet, an estimate\r\n * may be returned to the callback.\r\n *\r\n * @param {Object} args\r\n * @param {Object} args.playlist A playlist object to search within\r\n * @param {number} time A playerTime in seconds\r\n * @param {Function} callback(err, programTime)\r\n * @return {string} err.message A detailed error message\r\n * @return {Object} programTime\r\n * @return {number} programTime.mediaSeconds The streamTime in seconds\r\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\r\n */\r\n\r\n\r\nvar getProgramTime = function getProgramTime(_ref) {\r\n  var playlist = _ref.playlist,\r\n      _ref$time = _ref.time,\r\n      time = _ref$time === void 0 ? undefined : _ref$time,\r\n      callback = _ref.callback;\r\n\r\n  if (!callback) {\r\n    throw new Error('getProgramTime: callback must be provided');\r\n  }\r\n\r\n  if (!playlist || time === undefined) {\r\n    return callback({\r\n      message: 'getProgramTime: playlist and time must be provided'\r\n    });\r\n  }\r\n\r\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\r\n\r\n  if (!matchedSegment) {\r\n    return callback({\r\n      message: 'valid programTime was not found'\r\n    });\r\n  }\r\n\r\n  if (matchedSegment.type === 'estimate') {\r\n    return callback({\r\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\r\n      seekTime: matchedSegment.estimatedStart\r\n    });\r\n  }\r\n\r\n  var programTimeObject = {\r\n    mediaSeconds: time\r\n  };\r\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\r\n\r\n  if (programTime) {\r\n    programTimeObject.programDateTime = programTime.toISOString();\r\n  }\r\n\r\n  return callback(null, programTimeObject);\r\n};\r\n/**\r\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\r\n *\r\n * @param {Object} args\r\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\r\n * @param {Object} args.playlist A playlist to look within\r\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\r\n * @param {Function} args.seekTo A method to perform a seek\r\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\r\n * @param {Object} args.tech The tech to seek on\r\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\r\n * @return {string} err.message A detailed error message\r\n * @return {number} newTime The exact time that was seeked to in seconds\r\n */\r\n\r\n\r\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\r\n  var programTime = _ref2.programTime,\r\n      playlist = _ref2.playlist,\r\n      _ref2$retryCount = _ref2.retryCount,\r\n      retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\r\n      seekTo = _ref2.seekTo,\r\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\r\n      pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\r\n      tech = _ref2.tech,\r\n      callback = _ref2.callback;\r\n\r\n  if (!callback) {\r\n    throw new Error('seekToProgramTime: callback must be provided');\r\n  }\r\n\r\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\r\n    return callback({\r\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\r\n    });\r\n  }\r\n\r\n  if (!playlist.endList && !tech.hasStarted_) {\r\n    return callback({\r\n      message: 'player must be playing a live stream to start buffering'\r\n    });\r\n  }\r\n\r\n  if (!verifyProgramDateTimeTags(playlist)) {\r\n    return callback({\r\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\r\n    });\r\n  }\r\n\r\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\r\n\r\n  if (!matchedSegment) {\r\n    return callback({\r\n      message: programTime + \" was not found in the stream\"\r\n    });\r\n  }\r\n\r\n  var segment = matchedSegment.segment;\r\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\r\n\r\n  if (matchedSegment.type === 'estimate') {\r\n    // we've run out of retries\r\n    if (retryCount === 0) {\r\n      return callback({\r\n        message: programTime + \" is not buffered yet. Try again\"\r\n      });\r\n    }\r\n\r\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\r\n    tech.one('seeked', function () {\r\n      seekToProgramTime({\r\n        programTime: programTime,\r\n        playlist: playlist,\r\n        retryCount: retryCount - 1,\r\n        seekTo: seekTo,\r\n        pauseAfterSeek: pauseAfterSeek,\r\n        tech: tech,\r\n        callback: callback\r\n      });\r\n    });\r\n    return;\r\n  } // Since the segment.start value is determined from the buffered end or ending time\r\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\r\n  // modifications.\r\n\r\n\r\n  var seekToTime = segment.start + mediaOffset;\r\n\r\n  var seekedCallback = function seekedCallback() {\r\n    return callback(null, tech.currentTime());\r\n  }; // listen for seeked event\r\n\r\n\r\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\r\n\r\n  if (pauseAfterSeek) {\r\n    tech.pause();\r\n  }\r\n\r\n  seekTo(seekToTime);\r\n}; // which will only happen if the request is complete.\r\n\r\n\r\nvar callbackOnCompleted = function callbackOnCompleted(request, cb) {\r\n  if (request.readyState === 4) {\r\n    return cb();\r\n  }\r\n\r\n  return;\r\n};\r\n\r\nvar containerRequest = function containerRequest(uri, xhr, cb) {\r\n  var bytes = [];\r\n  var id3Offset;\r\n  var finished = false;\r\n\r\n  var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\r\n    req.abort();\r\n    finished = true;\r\n    return cb(err, req, type, _bytes);\r\n  };\r\n\r\n  var progressListener = function progressListener(error, request) {\r\n    if (finished) {\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      return endRequestAndCallback(error, request, '', bytes);\r\n    } // grap the new part of content that was just downloaded\r\n\r\n\r\n    var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\r\n\r\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\r\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\r\n    // or we need at least two bytes after an id3Offset\r\n\r\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\r\n      return callbackOnCompleted(request, function () {\r\n        return endRequestAndCallback(error, request, '', bytes);\r\n      });\r\n    }\r\n\r\n    var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\r\n    // to see the second sync byte, wait until we have enough data\r\n    // before declaring it ts\r\n\r\n    if (type === 'ts' && bytes.length < 188) {\r\n      return callbackOnCompleted(request, function () {\r\n        return endRequestAndCallback(error, request, '', bytes);\r\n      });\r\n    } // this may be an unsynced ts segment\r\n    // wait for 376 bytes before detecting no container\r\n\r\n\r\n    if (!type && bytes.length < 376) {\r\n      return callbackOnCompleted(request, function () {\r\n        return endRequestAndCallback(error, request, '', bytes);\r\n      });\r\n    }\r\n\r\n    return endRequestAndCallback(null, request, type, bytes);\r\n  };\r\n\r\n  var options = {\r\n    uri: uri,\r\n    beforeSend: function beforeSend(request) {\r\n      // this forces the browser to pass the bytes to us unprocessed\r\n      request.overrideMimeType('text/plain; charset=x-user-defined');\r\n      request.addEventListener('progress', function (_ref) {\r\n        _ref.total;\r\n        _ref.loaded;\r\n        return callbackWrapper(request, null, {\r\n          statusCode: request.status\r\n        }, progressListener);\r\n      });\r\n    }\r\n  };\r\n  var request = xhr(options, function (error, response) {\r\n    return callbackWrapper(request, error, response, progressListener);\r\n  });\r\n  return request;\r\n};\r\n\r\nvar EventTarget = videojs.EventTarget,\r\n    mergeOptions = videojs.mergeOptions;\r\n\r\nvar dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\r\n  if (!isPlaylistUnchanged(a, b)) {\r\n    return false;\r\n  } // for dash the above check will often return true in scenarios where\r\n  // the playlist actually has changed because mediaSequence isn't a\r\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\r\n  // of segments we return true.\r\n  // So for dash we need to make sure that the underlying segments are different.\r\n  // if sidx changed then the playlists are different.\r\n\r\n\r\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\r\n    return false;\r\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\r\n    return false;\r\n  } // one or the other does not have segments\r\n  // there was a change.\r\n\r\n\r\n  if (a.segments && !b.segments || !a.segments && b.segments) {\r\n    return false;\r\n  } // neither has segments nothing changed\r\n\r\n\r\n  if (!a.segments && !b.segments) {\r\n    return true;\r\n  } // check segments themselves\r\n\r\n\r\n  for (var i = 0; i < a.segments.length; i++) {\r\n    var aSegment = a.segments[i];\r\n    var bSegment = b.segments[i]; // if uris are different between segments there was a change\r\n\r\n    if (aSegment.uri !== bSegment.uri) {\r\n      return false;\r\n    } // neither segment has a byterange, there will be no byterange change.\r\n\r\n\r\n    if (!aSegment.byterange && !bSegment.byterange) {\r\n      continue;\r\n    }\r\n\r\n    var aByterange = aSegment.byterange;\r\n    var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\r\n\r\n    if (aByterange && !bByterange || !aByterange && bByterange) {\r\n      return false;\r\n    } // if both segments have byterange with different offsets, there was a change.\r\n\r\n\r\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\r\n      return false;\r\n    }\r\n  } // if everything was the same with segments, this is the same playlist.\r\n\r\n\r\n  return true;\r\n};\r\n/**\r\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\r\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\r\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\r\n * periods without continuous playback this function may need modification as well as the parser.\r\n */\r\n\r\n\r\nvar dashGroupId = function dashGroupId(type, group, label, playlist) {\r\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\r\n  var playlistId = playlist.attributes.NAME || label;\r\n  return \"placeholder-uri-\" + type + \"-\" + group + \"-\" + playlistId;\r\n};\r\n/**\r\n * Parses the master XML string and updates playlist URI references.\r\n *\r\n * @param {Object} config\r\n *        Object of arguments\r\n * @param {string} config.masterXml\r\n *        The mpd XML\r\n * @param {string} config.srcUrl\r\n *        The mpd URL\r\n * @param {Date} config.clientOffset\r\n *         A time difference between server and client\r\n * @param {Object} config.sidxMapping\r\n *        SIDX mappings for moof/mdat URIs and byte ranges\r\n * @return {Object}\r\n *         The parsed mpd manifest object\r\n */\r\n\r\n\r\nvar parseMasterXml = function parseMasterXml(_ref) {\r\n  var masterXml = _ref.masterXml,\r\n      srcUrl = _ref.srcUrl,\r\n      clientOffset = _ref.clientOffset,\r\n      sidxMapping = _ref.sidxMapping,\r\n      previousManifest = _ref.previousManifest;\r\n  var manifest = parse(masterXml, {\r\n    manifestUri: srcUrl,\r\n    clientOffset: clientOffset,\r\n    sidxMapping: sidxMapping,\r\n    previousManifest: previousManifest\r\n  });\r\n  addPropertiesToMaster(manifest, srcUrl, dashGroupId);\r\n  return manifest;\r\n};\r\n/**\r\n * Removes any mediaGroup labels that no longer exist in the newMaster\r\n *\r\n * @param {Object} update\r\n *         The previous mpd object being updated\r\n * @param {Object} newMaster\r\n *         The new mpd object\r\n */\r\n\r\n\r\nvar removeOldMediaGroupLabels = function removeOldMediaGroupLabels(update, newMaster) {\r\n  forEachMediaGroup(update, function (properties, type, group, label) {\r\n    if (!(label in newMaster.mediaGroups[type][group])) {\r\n      delete update.mediaGroups[type][group][label];\r\n    }\r\n  });\r\n};\r\n/**\r\n * Returns a new master manifest that is the result of merging an updated master manifest\r\n * into the original version.\r\n *\r\n * @param {Object} oldMaster\r\n *        The old parsed mpd object\r\n * @param {Object} newMaster\r\n *        The updated parsed mpd object\r\n * @return {Object}\r\n *         A new object representing the original master manifest with the updated media\r\n *         playlists merged in\r\n */\r\n\r\n\r\nvar updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\r\n  var noChanges = true;\r\n  var update = mergeOptions(oldMaster, {\r\n    // These are top level properties that can be updated\r\n    duration: newMaster.duration,\r\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod,\r\n    timelineStarts: newMaster.timelineStarts\r\n  }); // First update the playlists in playlist list\r\n\r\n  for (var i = 0; i < newMaster.playlists.length; i++) {\r\n    var playlist = newMaster.playlists[i];\r\n\r\n    if (playlist.sidx) {\r\n      var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\r\n\r\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\r\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\r\n      }\r\n    }\r\n\r\n    var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\r\n\r\n    if (playlistUpdate) {\r\n      update = playlistUpdate;\r\n      noChanges = false;\r\n    }\r\n  } // Then update media group playlists\r\n\r\n\r\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\r\n    if (properties.playlists && properties.playlists.length) {\r\n      var id = properties.playlists[0].id;\r\n\r\n      var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\r\n\r\n      if (_playlistUpdate) {\r\n        update = _playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\r\n\r\n        if (!(label in update.mediaGroups[type][group])) {\r\n          update.mediaGroups[type][group][label] = properties;\r\n        } // update the playlist reference within media groups\r\n\r\n\r\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\r\n        noChanges = false;\r\n      }\r\n    }\r\n  }); // remove mediaGroup labels and references that no longer exist in the newMaster\r\n\r\n  removeOldMediaGroupLabels(update, newMaster);\r\n\r\n  if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\r\n    noChanges = false;\r\n  }\r\n\r\n  if (noChanges) {\r\n    return null;\r\n  }\r\n\r\n  return update;\r\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\r\n// If the SIDXs have maps, the two maps should match,\r\n// both `a` and `b` missing SIDXs is considered matching.\r\n// If `a` or `b` but not both have a map, they aren't matching.\r\n\r\n\r\nvar equivalentSidx = function equivalentSidx(a, b) {\r\n  var neitherMap = Boolean(!a.map && !b.map);\r\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\r\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\r\n}; // exported for testing\r\n\r\n\r\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\r\n  var newSidxMapping = {};\r\n\r\n  for (var id in playlists) {\r\n    var playlist = playlists[id];\r\n    var currentSidxInfo = playlist.sidx;\r\n\r\n    if (currentSidxInfo) {\r\n      var key = generateSidxKey(currentSidxInfo);\r\n\r\n      if (!oldSidxMapping[key]) {\r\n        break;\r\n      }\r\n\r\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\r\n\r\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\r\n        newSidxMapping[key] = oldSidxMapping[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return newSidxMapping;\r\n};\r\n/**\r\n *  A function that filters out changed items as they need to be requested separately.\r\n *\r\n *  The method is exported for testing\r\n *\r\n *  @param {Object} master the parsed mpd XML returned via mpd-parser\r\n *  @param {Object} oldSidxMapping the SIDX to compare against\r\n */\r\n\r\n\r\nvar filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\r\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\r\n  var mediaGroupSidx = videoSidx;\r\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\r\n    if (properties.playlists && properties.playlists.length) {\r\n      var playlists = properties.playlists;\r\n      mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\r\n    }\r\n  });\r\n  return mediaGroupSidx;\r\n};\r\n\r\nvar DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\r\n  _inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\r\n  // playlist loader setups from media groups will expect to be able to pass a playlist\r\n  // (since there aren't external URLs to media playlists with DASH)\r\n\r\n\r\n  function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _EventTarget.call(this) || this;\r\n    _this.masterPlaylistLoader_ = masterPlaylistLoader || _assertThisInitialized(_this);\r\n\r\n    if (!masterPlaylistLoader) {\r\n      _this.isMaster_ = true;\r\n    }\r\n\r\n    var _options = options,\r\n        _options$withCredenti = _options.withCredentials,\r\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\r\n        _options$handleManife = _options.handleManifestRedirects,\r\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\r\n    _this.vhs_ = vhs;\r\n    _this.withCredentials = withCredentials;\r\n    _this.handleManifestRedirects = handleManifestRedirects;\r\n\r\n    if (!srcUrlOrPlaylist) {\r\n      throw new Error('A non-empty playlist URL or object is required');\r\n    } // event naming?\r\n\r\n\r\n    _this.on('minimumUpdatePeriod', function () {\r\n      _this.refreshXml_();\r\n    }); // live playlist staleness timeout\r\n\r\n\r\n    _this.on('mediaupdatetimeout', function () {\r\n      _this.refreshMedia_(_this.media().id);\r\n    });\r\n\r\n    _this.state = 'HAVE_NOTHING';\r\n    _this.loadedPlaylists_ = {};\r\n    _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\r\n    // The masterPlaylistLoader will be created with a string\r\n\r\n    if (_this.isMaster_) {\r\n      _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\r\n      // once multi-period is refactored\r\n\r\n      _this.masterPlaylistLoader_.sidxMapping_ = {};\r\n    } else {\r\n      _this.childPlaylist_ = srcUrlOrPlaylist;\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = DashPlaylistLoader.prototype;\r\n\r\n  _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\r\n    // disposed\r\n    if (!this.request) {\r\n      return true;\r\n    } // pending request is cleared\r\n\r\n\r\n    this.request = null;\r\n\r\n    if (err) {\r\n      // use the provided error object or create one\r\n      // based on the request/response\r\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\r\n        status: request.status,\r\n        message: 'DASH request error at URL: ' + request.uri,\r\n        response: request.response,\r\n        // MEDIA_ERR_NETWORK\r\n        code: 2\r\n      };\r\n\r\n      if (startingState) {\r\n        this.state = startingState;\r\n      }\r\n\r\n      this.trigger('error');\r\n      return true;\r\n    }\r\n  }\r\n  /**\r\n   * Verify that the container of the sidx segment can be parsed\r\n   * and if it can, get and parse that segment.\r\n   */\r\n  ;\r\n\r\n  _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\r\n    var _this2 = this;\r\n\r\n    var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\r\n\r\n    if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\r\n      // keep this function async\r\n      this.mediaRequest_ = window$1.setTimeout(function () {\r\n        return cb(false);\r\n      }, 0);\r\n      return;\r\n    } // resolve the segment URL relative to the playlist\r\n\r\n\r\n    var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\r\n\r\n    var fin = function fin(err, request) {\r\n      if (_this2.requestErrored_(err, request, startingState)) {\r\n        return;\r\n      }\r\n\r\n      var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\r\n      var sidx;\r\n\r\n      try {\r\n        sidx = parseSidx(toUint8(request.response).subarray(8));\r\n      } catch (e) {\r\n        // sidx parsing failed.\r\n        _this2.requestErrored_(e, request, startingState);\r\n\r\n        return;\r\n      }\r\n\r\n      sidxMapping[sidxKey] = {\r\n        sidxInfo: playlist.sidx,\r\n        sidx: sidx\r\n      };\r\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\r\n      return cb(true);\r\n    };\r\n\r\n    this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\r\n      if (err) {\r\n        return fin(err, request);\r\n      }\r\n\r\n      if (!container || container !== 'mp4') {\r\n        return fin({\r\n          status: request.status,\r\n          message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\r\n          // response is just bytes in this case\r\n          // but we really don't want to return that.\r\n          response: '',\r\n          playlist: playlist,\r\n          internal: true,\r\n          blacklistDuration: Infinity,\r\n          // MEDIA_ERR_NETWORK\r\n          code: 2\r\n        }, request);\r\n      } // if we already downloaded the sidx bytes in the container request, use them\r\n\r\n\r\n      var _playlist$sidx$bytera = playlist.sidx.byterange,\r\n          offset = _playlist$sidx$bytera.offset,\r\n          length = _playlist$sidx$bytera.length;\r\n\r\n      if (bytes.length >= length + offset) {\r\n        return fin(err, {\r\n          response: bytes.subarray(offset, offset + length),\r\n          status: request.status,\r\n          uri: request.uri\r\n        });\r\n      } // otherwise request sidx bytes\r\n\r\n\r\n      _this2.request = _this2.vhs_.xhr({\r\n        uri: uri,\r\n        responseType: 'arraybuffer',\r\n        headers: segmentXhrHeaders({\r\n          byterange: playlist.sidx.byterange\r\n        })\r\n      }, fin);\r\n    });\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.trigger('dispose');\r\n    this.stopRequest();\r\n    this.loadedPlaylists_ = {};\r\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\r\n    window$1.clearTimeout(this.mediaRequest_);\r\n    window$1.clearTimeout(this.mediaUpdateTimeout);\r\n    this.mediaUpdateTimeout = null;\r\n    this.mediaRequest_ = null;\r\n    this.minimumUpdatePeriodTimeout_ = null;\r\n\r\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\r\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\r\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\r\n    }\r\n\r\n    this.off();\r\n  };\r\n\r\n  _proto.hasPendingRequest = function hasPendingRequest() {\r\n    return this.request || this.mediaRequest_;\r\n  };\r\n\r\n  _proto.stopRequest = function stopRequest() {\r\n    if (this.request) {\r\n      var oldRequest = this.request;\r\n      this.request = null;\r\n      oldRequest.onreadystatechange = null;\r\n      oldRequest.abort();\r\n    }\r\n  };\r\n\r\n  _proto.media = function media(playlist) {\r\n    var _this3 = this; // getter\r\n\r\n\r\n    if (!playlist) {\r\n      return this.media_;\r\n    } // setter\r\n\r\n\r\n    if (this.state === 'HAVE_NOTHING') {\r\n      throw new Error('Cannot switch media playlist from ' + this.state);\r\n    }\r\n\r\n    var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\r\n\r\n    if (typeof playlist === 'string') {\r\n      if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\r\n        throw new Error('Unknown playlist URI: ' + playlist);\r\n      }\r\n\r\n      playlist = this.masterPlaylistLoader_.master.playlists[playlist];\r\n    }\r\n\r\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\r\n\r\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\r\n      this.state = 'HAVE_METADATA';\r\n      this.media_ = playlist; // trigger media change if the active media has been updated\r\n\r\n      if (mediaChange) {\r\n        this.trigger('mediachanging');\r\n        this.trigger('mediachange');\r\n      }\r\n\r\n      return;\r\n    } // switching to the active playlist is a no-op\r\n\r\n\r\n    if (!mediaChange) {\r\n      return;\r\n    } // switching from an already loaded playlist\r\n\r\n\r\n    if (this.media_) {\r\n      this.trigger('mediachanging');\r\n    }\r\n\r\n    this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\r\n      // everything is ready just continue to haveMetadata\r\n      _this3.haveMetadata({\r\n        startingState: startingState,\r\n        playlist: playlist\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.haveMetadata = function haveMetadata(_ref2) {\r\n    var startingState = _ref2.startingState,\r\n        playlist = _ref2.playlist;\r\n    this.state = 'HAVE_METADATA';\r\n    this.loadedPlaylists_[playlist.id] = playlist;\r\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\r\n\r\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\r\n    // to resolve setup of media groups\r\n\r\n    if (startingState === 'HAVE_MASTER') {\r\n      this.trigger('loadedmetadata');\r\n    } else {\r\n      // trigger media change if the active media has been updated\r\n      this.trigger('mediachange');\r\n    }\r\n  };\r\n\r\n  _proto.pause = function pause() {\r\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\r\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\r\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\r\n    }\r\n\r\n    this.stopRequest();\r\n    window$1.clearTimeout(this.mediaUpdateTimeout);\r\n    this.mediaUpdateTimeout = null;\r\n\r\n    if (this.isMaster_) {\r\n      window$1.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\r\n      this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\r\n    }\r\n\r\n    if (this.state === 'HAVE_NOTHING') {\r\n      // If we pause the loader before any data has been retrieved, its as if we never\r\n      // started, so reset to an unstarted state.\r\n      this.started = false;\r\n    }\r\n  };\r\n\r\n  _proto.load = function load(isFinalRendition) {\r\n    var _this4 = this;\r\n\r\n    window$1.clearTimeout(this.mediaUpdateTimeout);\r\n    this.mediaUpdateTimeout = null;\r\n    var media = this.media();\r\n\r\n    if (isFinalRendition) {\r\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\r\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\r\n        return _this4.load();\r\n      }, delay);\r\n      return;\r\n    } // because the playlists are internal to the manifest, load should either load the\r\n    // main manifest, or do nothing but trigger an event\r\n\r\n\r\n    if (!this.started) {\r\n      this.start();\r\n      return;\r\n    }\r\n\r\n    if (media && !media.endList) {\r\n      // Check to see if this is the master loader and the MUP was cleared (this happens\r\n      // when the loader was paused). `media` should be set at this point since one is always\r\n      // set during `start()`.\r\n      if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\r\n        // Trigger minimumUpdatePeriod to refresh the master manifest\r\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\r\n\r\n        this.updateMinimumUpdatePeriodTimeout_();\r\n      }\r\n\r\n      this.trigger('mediaupdatetimeout');\r\n    } else {\r\n      this.trigger('loadedplaylist');\r\n    }\r\n  };\r\n\r\n  _proto.start = function start() {\r\n    var _this5 = this;\r\n\r\n    this.started = true; // We don't need to request the master manifest again\r\n    // Call this asynchronously to match the xhr request behavior below\r\n\r\n    if (!this.isMaster_) {\r\n      this.mediaRequest_ = window$1.setTimeout(function () {\r\n        return _this5.haveMaster_();\r\n      }, 0);\r\n      return;\r\n    }\r\n\r\n    this.requestMaster_(function (req, masterChanged) {\r\n      _this5.haveMaster_();\r\n\r\n      if (!_this5.hasPendingRequest() && !_this5.media_) {\r\n        _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.requestMaster_ = function requestMaster_(cb) {\r\n    var _this6 = this;\r\n\r\n    this.request = this.vhs_.xhr({\r\n      uri: this.masterPlaylistLoader_.srcUrl,\r\n      withCredentials: this.withCredentials\r\n    }, function (error, req) {\r\n      if (_this6.requestErrored_(error, req)) {\r\n        if (_this6.state === 'HAVE_NOTHING') {\r\n          _this6.started = false;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\r\n      _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\r\n\r\n      if (req.responseHeaders && req.responseHeaders.date) {\r\n        _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\r\n      } else {\r\n        _this6.masterLoaded_ = Date.now();\r\n      }\r\n\r\n      _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\r\n\r\n      if (masterChanged) {\r\n        _this6.handleMaster_();\r\n\r\n        _this6.syncClientServerClock_(function () {\r\n          return cb(req, masterChanged);\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      return cb(req, masterChanged);\r\n    });\r\n  }\r\n  /**\r\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\r\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\r\n   *\r\n   * @param {Function} done\r\n   *        Function to call when clock sync has completed\r\n   */\r\n  ;\r\n\r\n  _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\r\n    var _this7 = this;\r\n\r\n    var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\r\n    // server clock\r\n\r\n    if (utcTiming === null) {\r\n      this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\r\n      return done();\r\n    }\r\n\r\n    if (utcTiming.method === 'DIRECT') {\r\n      this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\r\n      return done();\r\n    }\r\n\r\n    this.request = this.vhs_.xhr({\r\n      uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\r\n      method: utcTiming.method,\r\n      withCredentials: this.withCredentials\r\n    }, function (error, req) {\r\n      // disposed\r\n      if (!_this7.request) {\r\n        return;\r\n      }\r\n\r\n      if (error) {\r\n        // sync request failed, fall back to using date header from mpd\r\n        // TODO: log warning\r\n        _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\r\n        return done();\r\n      }\r\n\r\n      var serverTime;\r\n\r\n      if (utcTiming.method === 'HEAD') {\r\n        if (!req.responseHeaders || !req.responseHeaders.date) {\r\n          // expected date header not preset, fall back to using date header from mpd\r\n          // TODO: log warning\r\n          serverTime = _this7.masterLoaded_;\r\n        } else {\r\n          serverTime = Date.parse(req.responseHeaders.date);\r\n        }\r\n      } else {\r\n        serverTime = Date.parse(req.responseText);\r\n      }\r\n\r\n      _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\r\n      done();\r\n    });\r\n  };\r\n\r\n  _proto.haveMaster_ = function haveMaster_() {\r\n    this.state = 'HAVE_MASTER';\r\n\r\n    if (this.isMaster_) {\r\n      // We have the master playlist at this point, so\r\n      // trigger this to allow MasterPlaylistController\r\n      // to make an initial playlist selection\r\n      this.trigger('loadedplaylist');\r\n    } else if (!this.media_) {\r\n      // no media playlist was specifically selected so select\r\n      // the one the child playlist loader was created with\r\n      this.media(this.childPlaylist_);\r\n    }\r\n  };\r\n\r\n  _proto.handleMaster_ = function handleMaster_() {\r\n    // clear media request\r\n    this.mediaRequest_ = null;\r\n    var oldMaster = this.masterPlaylistLoader_.master;\r\n    var newMaster = parseMasterXml({\r\n      masterXml: this.masterPlaylistLoader_.masterXml_,\r\n      srcUrl: this.masterPlaylistLoader_.srcUrl,\r\n      clientOffset: this.masterPlaylistLoader_.clientOffset_,\r\n      sidxMapping: this.masterPlaylistLoader_.sidxMapping_,\r\n      previousManifest: oldMaster\r\n    }); // if we have an old master to compare the new master against\r\n\r\n    if (oldMaster) {\r\n      newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\r\n    } // only update master if we have a new master\r\n\r\n\r\n    this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\r\n    var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\r\n\r\n    if (location && location !== this.masterPlaylistLoader_.srcUrl) {\r\n      this.masterPlaylistLoader_.srcUrl = location;\r\n    }\r\n\r\n    if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\r\n      this.updateMinimumUpdatePeriodTimeout_();\r\n    }\r\n\r\n    return Boolean(newMaster);\r\n  };\r\n\r\n  _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\r\n    var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\r\n    // a new one will be added if needed.\r\n\r\n    if (mpl.createMupOnMedia_) {\r\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\r\n      mpl.createMupOnMedia_ = null;\r\n    } // clear any pending timeouts\r\n\r\n\r\n    if (mpl.minimumUpdatePeriodTimeout_) {\r\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\r\n      mpl.minimumUpdatePeriodTimeout_ = null;\r\n    }\r\n\r\n    var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\r\n    // MPD has no future validity, so a new one will need to be acquired when new\r\n    // media segments are to be made available. Thus, we use the target duration\r\n    // in this case\r\n\r\n    if (mup === 0) {\r\n      if (mpl.media()) {\r\n        mup = mpl.media().targetDuration * 1000;\r\n      } else {\r\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\r\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\r\n      }\r\n    } // if minimumUpdatePeriod is invalid or <= zero, which\r\n    // can happen when a live video becomes VOD. skip timeout\r\n    // creation.\r\n\r\n\r\n    if (typeof mup !== 'number' || mup <= 0) {\r\n      if (mup < 0) {\r\n        this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.createMUPTimeout_(mup);\r\n  };\r\n\r\n  _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\r\n    var mpl = this.masterPlaylistLoader_;\r\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\r\n      mpl.minimumUpdatePeriodTimeout_ = null;\r\n      mpl.trigger('minimumUpdatePeriod');\r\n      mpl.createMUPTimeout_(mup);\r\n    }, mup);\r\n  }\r\n  /**\r\n   * Sends request to refresh the master xml and updates the parsed master manifest\r\n   */\r\n  ;\r\n\r\n  _proto.refreshXml_ = function refreshXml_() {\r\n    var _this8 = this;\r\n\r\n    this.requestMaster_(function (req, masterChanged) {\r\n      if (!masterChanged) {\r\n        return;\r\n      }\r\n\r\n      if (_this8.media_) {\r\n        _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\r\n      } // This will filter out updated sidx info from the mapping\r\n\r\n\r\n      _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\r\n\r\n      _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\r\n        // TODO: do we need to reload the current playlist?\r\n        _this8.refreshMedia_(_this8.media().id);\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\r\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\r\n   * from the master loader.\r\n   */\r\n  ;\r\n\r\n  _proto.refreshMedia_ = function refreshMedia_(mediaID) {\r\n    var _this9 = this;\r\n\r\n    if (!mediaID) {\r\n      throw new Error('refreshMedia_ must take a media id');\r\n    } // for master we have to reparse the master xml\r\n    // to re-create segments based on current timing values\r\n    // which may change media. We only skip updating master\r\n    // if this is the first time this.media_ is being set.\r\n    // as master was just parsed in that case.\r\n\r\n\r\n    if (this.media_ && this.isMaster_) {\r\n      this.handleMaster_();\r\n    }\r\n\r\n    var playlists = this.masterPlaylistLoader_.master.playlists;\r\n    var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\r\n\r\n    if (mediaChanged) {\r\n      this.media_ = playlists[mediaID];\r\n    } else {\r\n      this.trigger('playlistunchanged');\r\n    }\r\n\r\n    if (!this.mediaUpdateTimeout) {\r\n      var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\r\n        if (_this9.media().endList) {\r\n          return;\r\n        }\r\n\r\n        _this9.mediaUpdateTimeout = window$1.setTimeout(function () {\r\n          _this9.trigger('mediaupdatetimeout');\r\n\r\n          createMediaUpdateTimeout();\r\n        }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\r\n      };\r\n\r\n      createMediaUpdateTimeout();\r\n    }\r\n\r\n    this.trigger('loadedplaylist');\r\n  };\r\n\r\n  return DashPlaylistLoader;\r\n}(EventTarget);\r\n\r\nvar Config = {\r\n  GOAL_BUFFER_LENGTH: 30,\r\n  MAX_GOAL_BUFFER_LENGTH: 60,\r\n  BACK_BUFFER_LENGTH: 30,\r\n  GOAL_BUFFER_LENGTH_RATE: 1,\r\n  // 0.5 MB/s\r\n  INITIAL_BANDWIDTH: 4194304,\r\n  // A fudge factor to apply to advertised playlist bitrates to account for\r\n  // temporary flucations in client bandwidth\r\n  BANDWIDTH_VARIANCE: 1.2,\r\n  // How much of the buffer must be filled before we consider upswitching\r\n  BUFFER_LOW_WATER_LINE: 0,\r\n  MAX_BUFFER_LOW_WATER_LINE: 30,\r\n  // TODO: Remove this when experimentalBufferBasedABR is removed\r\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\r\n  BUFFER_LOW_WATER_LINE_RATE: 1,\r\n  // If the buffer is greater than the high water line, we won't switch down\r\n  BUFFER_HIGH_WATER_LINE: 30\r\n};\r\n\r\nvar stringToArrayBuffer = function stringToArrayBuffer(string) {\r\n  var view = new Uint8Array(new ArrayBuffer(string.length));\r\n\r\n  for (var i = 0; i < string.length; i++) {\r\n    view[i] = string.charCodeAt(i);\r\n  }\r\n\r\n  return view.buffer;\r\n};\r\n/* global Blob, BlobBuilder, Worker */\r\n// unify worker interface\r\n\r\n\r\nvar browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\r\n  // node only supports on/off\r\n  workerObj.on = workerObj.addEventListener;\r\n  workerObj.off = workerObj.removeEventListener;\r\n  return workerObj;\r\n};\r\n\r\nvar createObjectURL = function createObjectURL(str) {\r\n  try {\r\n    return URL.createObjectURL(new Blob([str], {\r\n      type: 'application/javascript'\r\n    }));\r\n  } catch (e) {\r\n    var blob = new BlobBuilder();\r\n    blob.append(str);\r\n    return URL.createObjectURL(blob.getBlob());\r\n  }\r\n};\r\n\r\nvar factory = function factory(code) {\r\n  return function () {\r\n    var objectUrl = createObjectURL(code);\r\n    var worker = browserWorkerPolyFill(new Worker(objectUrl));\r\n    worker.objURL = objectUrl;\r\n    var terminate = worker.terminate;\r\n    worker.on = worker.addEventListener;\r\n    worker.off = worker.removeEventListener;\r\n\r\n    worker.terminate = function () {\r\n      URL.revokeObjectURL(objectUrl);\r\n      return terminate.call(this);\r\n    };\r\n\r\n    return worker;\r\n  };\r\n};\r\n\r\nvar transform = function transform(code) {\r\n  return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\r\n};\r\n\r\nvar getWorkerString = function getWorkerString(fn) {\r\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\r\n};\r\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\r\n\r\n\r\nvar workerCode$1 = transform(getWorkerString(function () {\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   *\r\n   * A lightweight readable stream implemention that handles event dispatching.\r\n   * Objects that inherit from streams should call init in their constructors.\r\n   */\r\n  var Stream = function Stream() {\r\n    this.init = function () {\r\n      var listeners = {};\r\n      /**\r\n       * Add a listener for a specified event type.\r\n       * @param type {string} the event name\r\n       * @param listener {function} the callback to be invoked when an event of\r\n       * the specified type occurs\r\n       */\r\n\r\n      this.on = function (type, listener) {\r\n        if (!listeners[type]) {\r\n          listeners[type] = [];\r\n        }\r\n\r\n        listeners[type] = listeners[type].concat(listener);\r\n      };\r\n      /**\r\n       * Remove a listener for a specified event type.\r\n       * @param type {string} the event name\r\n       * @param listener {function} a function previously registered for this\r\n       * type of event through `on`\r\n       */\r\n\r\n\r\n      this.off = function (type, listener) {\r\n        var index;\r\n\r\n        if (!listeners[type]) {\r\n          return false;\r\n        }\r\n\r\n        index = listeners[type].indexOf(listener);\r\n        listeners[type] = listeners[type].slice();\r\n        listeners[type].splice(index, 1);\r\n        return index > -1;\r\n      };\r\n      /**\r\n       * Trigger an event of the specified type on this stream. Any additional\r\n       * arguments to this function are passed as parameters to event listeners.\r\n       * @param type {string} the event name\r\n       */\r\n\r\n\r\n      this.trigger = function (type) {\r\n        var callbacks, i, length, args;\r\n        callbacks = listeners[type];\r\n\r\n        if (!callbacks) {\r\n          return;\r\n        } // Slicing the arguments on every invocation of this method\r\n        // can add a significant amount of overhead. Avoid the\r\n        // intermediate object creation for the common case of a\r\n        // single callback argument\r\n\r\n\r\n        if (arguments.length === 2) {\r\n          length = callbacks.length;\r\n\r\n          for (i = 0; i < length; ++i) {\r\n            callbacks[i].call(this, arguments[1]);\r\n          }\r\n        } else {\r\n          args = [];\r\n          i = arguments.length;\r\n\r\n          for (i = 1; i < arguments.length; ++i) {\r\n            args.push(arguments[i]);\r\n          }\r\n\r\n          length = callbacks.length;\r\n\r\n          for (i = 0; i < length; ++i) {\r\n            callbacks[i].apply(this, args);\r\n          }\r\n        }\r\n      };\r\n      /**\r\n       * Destroys the stream and cleans up.\r\n       */\r\n\r\n\r\n      this.dispose = function () {\r\n        listeners = {};\r\n      };\r\n    };\r\n  };\r\n  /**\r\n   * Forwards all `data` events on this stream to the destination stream. The\r\n   * destination stream should provide a method `push` to receive the data\r\n   * events as they arrive.\r\n   * @param destination {stream} the stream that will receive all `data` events\r\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\r\n   *                            when the current stream emits a 'done' event\r\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\r\n   */\r\n\r\n\r\n  Stream.prototype.pipe = function (destination) {\r\n    this.on('data', function (data) {\r\n      destination.push(data);\r\n    });\r\n    this.on('done', function (flushSource) {\r\n      destination.flush(flushSource);\r\n    });\r\n    this.on('partialdone', function (flushSource) {\r\n      destination.partialFlush(flushSource);\r\n    });\r\n    this.on('endedtimeline', function (flushSource) {\r\n      destination.endTimeline(flushSource);\r\n    });\r\n    this.on('reset', function (flushSource) {\r\n      destination.reset(flushSource);\r\n    });\r\n    return destination;\r\n  }; // Default stream functions that are expected to be overridden to perform\r\n  // actual work. These are provided by the prototype as a sort of no-op\r\n  // implementation so that we don't have to check for their existence in the\r\n  // `pipe` function above.\r\n\r\n\r\n  Stream.prototype.push = function (data) {\r\n    this.trigger('data', data);\r\n  };\r\n\r\n  Stream.prototype.flush = function (flushSource) {\r\n    this.trigger('done', flushSource);\r\n  };\r\n\r\n  Stream.prototype.partialFlush = function (flushSource) {\r\n    this.trigger('partialdone', flushSource);\r\n  };\r\n\r\n  Stream.prototype.endTimeline = function (flushSource) {\r\n    this.trigger('endedtimeline', flushSource);\r\n  };\r\n\r\n  Stream.prototype.reset = function (flushSource) {\r\n    this.trigger('reset', flushSource);\r\n  };\r\n\r\n  var stream = Stream;\r\n  var MAX_UINT32$1 = Math.pow(2, 32);\r\n\r\n  var getUint64$2 = function getUint64(uint8) {\r\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\r\n    var value;\r\n\r\n    if (dv.getBigUint64) {\r\n      value = dv.getBigUint64(0);\r\n\r\n      if (value < Number.MAX_SAFE_INTEGER) {\r\n        return Number(value);\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\r\n  };\r\n\r\n  var numbers = {\r\n    getUint64: getUint64$2,\r\n    MAX_UINT32: MAX_UINT32$1\r\n  };\r\n  var MAX_UINT32 = numbers.MAX_UINT32;\r\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\r\n\r\n  (function () {\r\n    var i;\r\n    types = {\r\n      avc1: [],\r\n      // codingname\r\n      avcC: [],\r\n      btrt: [],\r\n      dinf: [],\r\n      dref: [],\r\n      esds: [],\r\n      ftyp: [],\r\n      hdlr: [],\r\n      mdat: [],\r\n      mdhd: [],\r\n      mdia: [],\r\n      mfhd: [],\r\n      minf: [],\r\n      moof: [],\r\n      moov: [],\r\n      mp4a: [],\r\n      // codingname\r\n      mvex: [],\r\n      mvhd: [],\r\n      pasp: [],\r\n      sdtp: [],\r\n      smhd: [],\r\n      stbl: [],\r\n      stco: [],\r\n      stsc: [],\r\n      stsd: [],\r\n      stsz: [],\r\n      stts: [],\r\n      styp: [],\r\n      tfdt: [],\r\n      tfhd: [],\r\n      traf: [],\r\n      trak: [],\r\n      trun: [],\r\n      trex: [],\r\n      tkhd: [],\r\n      vmhd: []\r\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\r\n    // don't throw an error\r\n\r\n    if (typeof Uint8Array === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    for (i in types) {\r\n      if (types.hasOwnProperty(i)) {\r\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\r\n      }\r\n    }\r\n\r\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\r\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\r\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\r\n    VIDEO_HDLR = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x00, // pre_defined\r\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\r\n    ]);\r\n    AUDIO_HDLR = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x00, // pre_defined\r\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\r\n    ]);\r\n    HDLR_TYPES = {\r\n      video: VIDEO_HDLR,\r\n      audio: AUDIO_HDLR\r\n    };\r\n    DREF = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x01, // entry_count\r\n    0x00, 0x00, 0x00, 0x0c, // entry_size\r\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\r\n    0x00, // version 0\r\n    0x00, 0x00, 0x01 // entry_flags\r\n    ]);\r\n    SMHD = new Uint8Array([0x00, // version\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, // balance, 0 means centered\r\n    0x00, 0x00 // reserved\r\n    ]);\r\n    STCO = new Uint8Array([0x00, // version\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x00 // entry_count\r\n    ]);\r\n    STSC = STCO;\r\n    STSZ = new Uint8Array([0x00, // version\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x00, // sample_size\r\n    0x00, 0x00, 0x00, 0x00 // sample_count\r\n    ]);\r\n    STTS = STCO;\r\n    VMHD = new Uint8Array([0x00, // version\r\n    0x00, 0x00, 0x01, // flags\r\n    0x00, 0x00, // graphicsmode\r\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\r\n    ]);\r\n  })();\r\n\r\n  box = function box(type) {\r\n    var payload = [],\r\n        size = 0,\r\n        i,\r\n        result,\r\n        view;\r\n\r\n    for (i = 1; i < arguments.length; i++) {\r\n      payload.push(arguments[i]);\r\n    }\r\n\r\n    i = payload.length; // calculate the total size we need to allocate\r\n\r\n    while (i--) {\r\n      size += payload[i].byteLength;\r\n    }\r\n\r\n    result = new Uint8Array(size + 8);\r\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\r\n    view.setUint32(0, result.byteLength);\r\n    result.set(type, 4); // copy the payload into the result\r\n\r\n    for (i = 0, size = 8; i < payload.length; i++) {\r\n      result.set(payload[i], size);\r\n      size += payload[i].byteLength;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  dinf = function dinf() {\r\n    return box(types.dinf, box(types.dref, DREF));\r\n  };\r\n\r\n  esds = function esds(track) {\r\n    return box(types.esds, new Uint8Array([0x00, // version\r\n    0x00, 0x00, 0x00, // flags\r\n    // ES_Descriptor\r\n    0x03, // tag, ES_DescrTag\r\n    0x19, // length\r\n    0x00, 0x00, // ES_ID\r\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\r\n    // DecoderConfigDescriptor\r\n    0x04, // tag, DecoderConfigDescrTag\r\n    0x11, // length\r\n    0x40, // object type\r\n    0x15, // streamType\r\n    0x00, 0x06, 0x00, // bufferSizeDB\r\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\r\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\r\n    // DecoderSpecificInfo\r\n    0x05, // tag, DecoderSpecificInfoTag\r\n    0x02, // length\r\n    // ISO/IEC 14496-3, AudioSpecificConfig\r\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\r\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\r\n    ]));\r\n  };\r\n\r\n  ftyp = function ftyp() {\r\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\r\n  };\r\n\r\n  hdlr = function hdlr(type) {\r\n    return box(types.hdlr, HDLR_TYPES[type]);\r\n  };\r\n\r\n  mdat = function mdat(data) {\r\n    return box(types.mdat, data);\r\n  };\r\n\r\n  mdhd = function mdhd(track) {\r\n    var result = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x02, // creation_time\r\n    0x00, 0x00, 0x00, 0x03, // modification_time\r\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\r\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\r\n    0x55, 0xc4, // 'und' language (undetermined)\r\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\r\n    // defined. The sample rate can be parsed out of an ADTS header, for\r\n    // instance.\r\n\r\n    if (track.samplerate) {\r\n      result[12] = track.samplerate >>> 24 & 0xFF;\r\n      result[13] = track.samplerate >>> 16 & 0xFF;\r\n      result[14] = track.samplerate >>> 8 & 0xFF;\r\n      result[15] = track.samplerate & 0xFF;\r\n    }\r\n\r\n    return box(types.mdhd, result);\r\n  };\r\n\r\n  mdia = function mdia(track) {\r\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\r\n  };\r\n\r\n  mfhd = function mfhd(sequenceNumber) {\r\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\r\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\r\n    ]));\r\n  };\r\n\r\n  minf = function minf(track) {\r\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\r\n  };\r\n\r\n  moof = function moof(sequenceNumber, tracks) {\r\n    var trackFragments = [],\r\n        i = tracks.length; // build traf boxes for each track fragment\r\n\r\n    while (i--) {\r\n      trackFragments[i] = traf(tracks[i]);\r\n    }\r\n\r\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\r\n  };\r\n  /**\r\n   * Returns a movie box.\r\n   * @param tracks {array} the tracks associated with this movie\r\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\r\n   */\r\n\r\n\r\n  moov = function moov(tracks) {\r\n    var i = tracks.length,\r\n        boxes = [];\r\n\r\n    while (i--) {\r\n      boxes[i] = trak(tracks[i]);\r\n    }\r\n\r\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\r\n  };\r\n\r\n  mvex = function mvex(tracks) {\r\n    var i = tracks.length,\r\n        boxes = [];\r\n\r\n    while (i--) {\r\n      boxes[i] = trex(tracks[i]);\r\n    }\r\n\r\n    return box.apply(null, [types.mvex].concat(boxes));\r\n  };\r\n\r\n  mvhd = function mvhd(duration) {\r\n    var bytes = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x00, // flags\r\n    0x00, 0x00, 0x00, 0x01, // creation_time\r\n    0x00, 0x00, 0x00, 0x02, // modification_time\r\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\r\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\r\n    0x00, 0x01, 0x00, 0x00, // 1.0 rate\r\n    0x01, 0x00, // 1.0 volume\r\n    0x00, 0x00, // reserved\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\r\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\r\n    0xff, 0xff, 0xff, 0xff // next_track_ID\r\n    ]);\r\n    return box(types.mvhd, bytes);\r\n  };\r\n\r\n  sdtp = function sdtp(track) {\r\n    var samples = track.samples || [],\r\n        bytes = new Uint8Array(4 + samples.length),\r\n        flags,\r\n        i; // leave the full box header (4 bytes) all zero\r\n    // write the sample table\r\n\r\n    for (i = 0; i < samples.length; i++) {\r\n      flags = samples[i].flags;\r\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\r\n    }\r\n\r\n    return box(types.sdtp, bytes);\r\n  };\r\n\r\n  stbl = function stbl(track) {\r\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\r\n  };\r\n\r\n  (function () {\r\n    var videoSample, audioSample;\r\n\r\n    stsd = function stsd(track) {\r\n      return box(types.stsd, new Uint8Array([0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\r\n    };\r\n\r\n    videoSample = function videoSample(track) {\r\n      var sps = track.sps || [],\r\n          pps = track.pps || [],\r\n          sequenceParameterSets = [],\r\n          pictureParameterSets = [],\r\n          i,\r\n          avc1Box; // assemble the SPSs\r\n\r\n      for (i = 0; i < sps.length; i++) {\r\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\r\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\r\n\r\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\r\n      } // assemble the PPSs\r\n\r\n\r\n      for (i = 0; i < pps.length; i++) {\r\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\r\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\r\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\r\n      }\r\n\r\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x01, // data_reference_index\r\n      0x00, 0x00, // pre_defined\r\n      0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\r\n      (track.width & 0xff00) >> 8, track.width & 0xff, // width\r\n      (track.height & 0xff00) >> 8, track.height & 0xff, // height\r\n      0x00, 0x48, 0x00, 0x00, // horizresolution\r\n      0x00, 0x48, 0x00, 0x00, // vertresolution\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x01, // frame_count\r\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\r\n      0x00, 0x18, // depth = 24\r\n      0x11, 0x11 // pre_defined = -1\r\n      ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\r\n      track.profileIdc, // AVCProfileIndication\r\n      track.profileCompatibility, // profile_compatibility\r\n      track.levelIdc, // AVCLevelIndication\r\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\r\n      ].concat([sps.length], // numOfSequenceParameterSets\r\n      sequenceParameterSets, // \"SPS\"\r\n      [pps.length], // numOfPictureParameterSets\r\n      pictureParameterSets // \"PPS\"\r\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\r\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\r\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\r\n      ]))];\r\n\r\n      if (track.sarRatio) {\r\n        var hSpacing = track.sarRatio[0],\r\n            vSpacing = track.sarRatio[1];\r\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\r\n      }\r\n\r\n      return box.apply(null, avc1Box);\r\n    };\r\n\r\n    audioSample = function audioSample(track) {\r\n      return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\r\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x01, // data_reference_index\r\n      // AudioSampleEntry, ISO/IEC 14496-12\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\r\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\r\n      0x00, 0x00, // pre_defined\r\n      0x00, 0x00, // reserved\r\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\r\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\r\n      ]), esds(track));\r\n    };\r\n  })();\r\n\r\n  tkhd = function tkhd(track) {\r\n    var result = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x07, // flags\r\n    0x00, 0x00, 0x00, 0x00, // creation_time\r\n    0x00, 0x00, 0x00, 0x00, // modification_time\r\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\r\n    0x00, 0x00, 0x00, 0x00, // reserved\r\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\r\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\r\n    0x00, 0x00, // layer\r\n    0x00, 0x00, // alternate_group\r\n    0x01, 0x00, // non-audio track volume\r\n    0x00, 0x00, // reserved\r\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\r\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\r\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\r\n    ]);\r\n    return box(types.tkhd, result);\r\n  };\r\n  /**\r\n   * Generate a track fragment (traf) box. A traf box collects metadata\r\n   * about tracks in a movie fragment (moof) box.\r\n   */\r\n\r\n\r\n  traf = function traf(track) {\r\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\r\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x3a, // flags\r\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\r\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\r\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\r\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\r\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\r\n    ]));\r\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\r\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\r\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\r\n    0x00, 0x00, 0x00, // flags\r\n    // baseMediaDecodeTime\r\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\r\n    // the containing moof to the first payload byte of the associated\r\n    // mdat\r\n\r\n    dataOffset = 32 + // tfhd\r\n    20 + // tfdt\r\n    8 + // traf header\r\n    16 + // mfhd\r\n    8 + // moof header\r\n    8; // mdat header\r\n    // audio tracks require less metadata\r\n\r\n    if (track.type === 'audio') {\r\n      trackFragmentRun = trun$1(track, dataOffset);\r\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\r\n    } // video tracks should contain an independent and disposable samples\r\n    // box (sdtp)\r\n    // generate one and adjust offsets to match\r\n\r\n\r\n    sampleDependencyTable = sdtp(track);\r\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\r\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\r\n  };\r\n  /**\r\n   * Generate a track box.\r\n   * @param track {object} a track definition\r\n   * @return {Uint8Array} the track box\r\n   */\r\n\r\n\r\n  trak = function trak(track) {\r\n    track.duration = track.duration || 0xffffffff;\r\n    return box(types.trak, tkhd(track), mdia(track));\r\n  };\r\n\r\n  trex = function trex(track) {\r\n    var result = new Uint8Array([0x00, // version 0\r\n    0x00, 0x00, 0x00, // flags\r\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\r\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\r\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\r\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\r\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\r\n    ]); // the last two bytes of default_sample_flags is the sample\r\n    // degradation priority, a hint about the importance of this sample\r\n    // relative to others. Lower the degradation priority for all sample\r\n    // types other than video.\r\n\r\n    if (track.type !== 'video') {\r\n      result[result.length - 1] = 0x00;\r\n    }\r\n\r\n    return box(types.trex, result);\r\n  };\r\n\r\n  (function () {\r\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\r\n    // duration is present for the first sample, it will be present for\r\n    // all subsequent samples.\r\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\r\n\r\n    trunHeader = function trunHeader(samples, offset) {\r\n      var durationPresent = 0,\r\n          sizePresent = 0,\r\n          flagsPresent = 0,\r\n          compositionTimeOffset = 0; // trun flag constants\r\n\r\n      if (samples.length) {\r\n        if (samples[0].duration !== undefined) {\r\n          durationPresent = 0x1;\r\n        }\r\n\r\n        if (samples[0].size !== undefined) {\r\n          sizePresent = 0x2;\r\n        }\r\n\r\n        if (samples[0].flags !== undefined) {\r\n          flagsPresent = 0x4;\r\n        }\r\n\r\n        if (samples[0].compositionTimeOffset !== undefined) {\r\n          compositionTimeOffset = 0x8;\r\n        }\r\n      }\r\n\r\n      return [0x00, // version 0\r\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\r\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\r\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\r\n      ];\r\n    };\r\n\r\n    videoTrun = function videoTrun(track, offset) {\r\n      var bytesOffest, bytes, header, samples, sample, i;\r\n      samples = track.samples || [];\r\n      offset += 8 + 12 + 16 * samples.length;\r\n      header = trunHeader(samples, offset);\r\n      bytes = new Uint8Array(header.length + samples.length * 16);\r\n      bytes.set(header);\r\n      bytesOffest = header.length;\r\n\r\n      for (i = 0; i < samples.length; i++) {\r\n        sample = samples[i];\r\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\r\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\r\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\r\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\r\n\r\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\r\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\r\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\r\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\r\n\r\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\r\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\r\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\r\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\r\n\r\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\r\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\r\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\r\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\r\n      }\r\n\r\n      return box(types.trun, bytes);\r\n    };\r\n\r\n    audioTrun = function audioTrun(track, offset) {\r\n      var bytes, bytesOffest, header, samples, sample, i;\r\n      samples = track.samples || [];\r\n      offset += 8 + 12 + 8 * samples.length;\r\n      header = trunHeader(samples, offset);\r\n      bytes = new Uint8Array(header.length + samples.length * 8);\r\n      bytes.set(header);\r\n      bytesOffest = header.length;\r\n\r\n      for (i = 0; i < samples.length; i++) {\r\n        sample = samples[i];\r\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\r\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\r\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\r\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\r\n\r\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\r\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\r\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\r\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\r\n      }\r\n\r\n      return box(types.trun, bytes);\r\n    };\r\n\r\n    trun$1 = function trun(track, offset) {\r\n      if (track.type === 'audio') {\r\n        return audioTrun(track, offset);\r\n      }\r\n\r\n      return videoTrun(track, offset);\r\n    };\r\n  })();\r\n\r\n  var mp4Generator = {\r\n    ftyp: ftyp,\r\n    mdat: mdat,\r\n    moof: moof,\r\n    moov: moov,\r\n    initSegment: function initSegment(tracks) {\r\n      var fileType = ftyp(),\r\n          movie = moov(tracks),\r\n          result;\r\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\r\n      result.set(fileType);\r\n      result.set(movie, fileType.byteLength);\r\n      return result;\r\n    }\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n  // Convert an array of nal units into an array of frames with each frame being\r\n  // composed of the nal units that make up that frame\r\n  // Also keep track of cummulative data about the frame from the nal units such\r\n  // as the frame duration, starting pts, etc.\r\n\r\n  var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\r\n    var i,\r\n        currentNal,\r\n        currentFrame = [],\r\n        frames = []; // TODO added for LHLS, make sure this is OK\r\n\r\n    frames.byteLength = 0;\r\n    frames.nalCount = 0;\r\n    frames.duration = 0;\r\n    currentFrame.byteLength = 0;\r\n\r\n    for (i = 0; i < nalUnits.length; i++) {\r\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\r\n\r\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\r\n        // Since the very first nal unit is expected to be an AUD\r\n        // only push to the frames array when currentFrame is not empty\r\n        if (currentFrame.length) {\r\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\r\n\r\n          frames.byteLength += currentFrame.byteLength;\r\n          frames.nalCount += currentFrame.length;\r\n          frames.duration += currentFrame.duration;\r\n          frames.push(currentFrame);\r\n        }\r\n\r\n        currentFrame = [currentNal];\r\n        currentFrame.byteLength = currentNal.data.byteLength;\r\n        currentFrame.pts = currentNal.pts;\r\n        currentFrame.dts = currentNal.dts;\r\n      } else {\r\n        // Specifically flag key frames for ease of use later\r\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\r\n          currentFrame.keyFrame = true;\r\n        }\r\n\r\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\r\n        currentFrame.byteLength += currentNal.data.byteLength;\r\n        currentFrame.push(currentNal);\r\n      }\r\n    } // For the last frame, use the duration of the previous frame if we\r\n    // have nothing better to go on\r\n\r\n\r\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\r\n      currentFrame.duration = frames[frames.length - 1].duration;\r\n    } // Push the final frame\r\n    // TODO added for LHLS, make sure this is OK\r\n\r\n\r\n    frames.byteLength += currentFrame.byteLength;\r\n    frames.nalCount += currentFrame.length;\r\n    frames.duration += currentFrame.duration;\r\n    frames.push(currentFrame);\r\n    return frames;\r\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\r\n  // of the frames that make up that Gop\r\n  // Also keep track of cummulative data about the Gop from the frames such as the\r\n  // Gop duration, starting pts, etc.\r\n\r\n\r\n  var groupFramesIntoGops = function groupFramesIntoGops(frames) {\r\n    var i,\r\n        currentFrame,\r\n        currentGop = [],\r\n        gops = []; // We must pre-set some of the values on the Gop since we\r\n    // keep running totals of these values\r\n\r\n    currentGop.byteLength = 0;\r\n    currentGop.nalCount = 0;\r\n    currentGop.duration = 0;\r\n    currentGop.pts = frames[0].pts;\r\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\r\n\r\n    gops.byteLength = 0;\r\n    gops.nalCount = 0;\r\n    gops.duration = 0;\r\n    gops.pts = frames[0].pts;\r\n    gops.dts = frames[0].dts;\r\n\r\n    for (i = 0; i < frames.length; i++) {\r\n      currentFrame = frames[i];\r\n\r\n      if (currentFrame.keyFrame) {\r\n        // Since the very first frame is expected to be an keyframe\r\n        // only push to the gops array when currentGop is not empty\r\n        if (currentGop.length) {\r\n          gops.push(currentGop);\r\n          gops.byteLength += currentGop.byteLength;\r\n          gops.nalCount += currentGop.nalCount;\r\n          gops.duration += currentGop.duration;\r\n        }\r\n\r\n        currentGop = [currentFrame];\r\n        currentGop.nalCount = currentFrame.length;\r\n        currentGop.byteLength = currentFrame.byteLength;\r\n        currentGop.pts = currentFrame.pts;\r\n        currentGop.dts = currentFrame.dts;\r\n        currentGop.duration = currentFrame.duration;\r\n      } else {\r\n        currentGop.duration += currentFrame.duration;\r\n        currentGop.nalCount += currentFrame.length;\r\n        currentGop.byteLength += currentFrame.byteLength;\r\n        currentGop.push(currentFrame);\r\n      }\r\n    }\r\n\r\n    if (gops.length && currentGop.duration <= 0) {\r\n      currentGop.duration = gops[gops.length - 1].duration;\r\n    }\r\n\r\n    gops.byteLength += currentGop.byteLength;\r\n    gops.nalCount += currentGop.nalCount;\r\n    gops.duration += currentGop.duration; // push the final Gop\r\n\r\n    gops.push(currentGop);\r\n    return gops;\r\n  };\r\n  /*\r\n   * Search for the first keyframe in the GOPs and throw away all frames\r\n   * until that keyframe. Then extend the duration of the pulled keyframe\r\n   * and pull the PTS and DTS of the keyframe so that it covers the time\r\n   * range of the frames that were disposed.\r\n   *\r\n   * @param {Array} gops video GOPs\r\n   * @returns {Array} modified video GOPs\r\n   */\r\n\r\n\r\n  var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\r\n    var currentGop;\r\n\r\n    if (!gops[0][0].keyFrame && gops.length > 1) {\r\n      // Remove the first GOP\r\n      currentGop = gops.shift();\r\n      gops.byteLength -= currentGop.byteLength;\r\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\r\n      // first gop to cover the time period of the\r\n      // frames we just removed\r\n\r\n      gops[0][0].dts = currentGop.dts;\r\n      gops[0][0].pts = currentGop.pts;\r\n      gops[0][0].duration += currentGop.duration;\r\n    }\r\n\r\n    return gops;\r\n  };\r\n  /**\r\n   * Default sample object\r\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\r\n   */\r\n\r\n\r\n  var createDefaultSample = function createDefaultSample() {\r\n    return {\r\n      size: 0,\r\n      flags: {\r\n        isLeading: 0,\r\n        dependsOn: 1,\r\n        isDependedOn: 0,\r\n        hasRedundancy: 0,\r\n        degradationPriority: 0,\r\n        isNonSyncSample: 1\r\n      }\r\n    };\r\n  };\r\n  /*\r\n   * Collates information from a video frame into an object for eventual\r\n   * entry into an MP4 sample table.\r\n   *\r\n   * @param {Object} frame the video frame\r\n   * @param {Number} dataOffset the byte offset to position the sample\r\n   * @return {Object} object containing sample table info for a frame\r\n   */\r\n\r\n\r\n  var sampleForFrame = function sampleForFrame(frame, dataOffset) {\r\n    var sample = createDefaultSample();\r\n    sample.dataOffset = dataOffset;\r\n    sample.compositionTimeOffset = frame.pts - frame.dts;\r\n    sample.duration = frame.duration;\r\n    sample.size = 4 * frame.length; // Space for nal unit size\r\n\r\n    sample.size += frame.byteLength;\r\n\r\n    if (frame.keyFrame) {\r\n      sample.flags.dependsOn = 2;\r\n      sample.flags.isNonSyncSample = 0;\r\n    }\r\n\r\n    return sample;\r\n  }; // generate the track's sample table from an array of gops\r\n\r\n\r\n  var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\r\n    var h,\r\n        i,\r\n        sample,\r\n        currentGop,\r\n        currentFrame,\r\n        dataOffset = baseDataOffset || 0,\r\n        samples = [];\r\n\r\n    for (h = 0; h < gops.length; h++) {\r\n      currentGop = gops[h];\r\n\r\n      for (i = 0; i < currentGop.length; i++) {\r\n        currentFrame = currentGop[i];\r\n        sample = sampleForFrame(currentFrame, dataOffset);\r\n        dataOffset += sample.size;\r\n        samples.push(sample);\r\n      }\r\n    }\r\n\r\n    return samples;\r\n  }; // generate the track's raw mdat data from an array of gops\r\n\r\n\r\n  var concatenateNalData = function concatenateNalData(gops) {\r\n    var h,\r\n        i,\r\n        j,\r\n        currentGop,\r\n        currentFrame,\r\n        currentNal,\r\n        dataOffset = 0,\r\n        nalsByteLength = gops.byteLength,\r\n        numberOfNals = gops.nalCount,\r\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\r\n        data = new Uint8Array(totalByteLength),\r\n        view = new DataView(data.buffer); // For each Gop..\r\n\r\n    for (h = 0; h < gops.length; h++) {\r\n      currentGop = gops[h]; // For each Frame..\r\n\r\n      for (i = 0; i < currentGop.length; i++) {\r\n        currentFrame = currentGop[i]; // For each NAL..\r\n\r\n        for (j = 0; j < currentFrame.length; j++) {\r\n          currentNal = currentFrame[j];\r\n          view.setUint32(dataOffset, currentNal.data.byteLength);\r\n          dataOffset += 4;\r\n          data.set(currentNal.data, dataOffset);\r\n          dataOffset += currentNal.data.byteLength;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }; // generate the track's sample table from a frame\r\n\r\n\r\n  var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\r\n    var sample,\r\n        dataOffset = baseDataOffset || 0,\r\n        samples = [];\r\n    sample = sampleForFrame(frame, dataOffset);\r\n    samples.push(sample);\r\n    return samples;\r\n  }; // generate the track's raw mdat data from a frame\r\n\r\n\r\n  var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\r\n    var i,\r\n        currentNal,\r\n        dataOffset = 0,\r\n        nalsByteLength = frame.byteLength,\r\n        numberOfNals = frame.length,\r\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\r\n        data = new Uint8Array(totalByteLength),\r\n        view = new DataView(data.buffer); // For each NAL..\r\n\r\n    for (i = 0; i < frame.length; i++) {\r\n      currentNal = frame[i];\r\n      view.setUint32(dataOffset, currentNal.data.byteLength);\r\n      dataOffset += 4;\r\n      data.set(currentNal.data, dataOffset);\r\n      dataOffset += currentNal.data.byteLength;\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  var frameUtils = {\r\n    groupNalsIntoFrames: groupNalsIntoFrames,\r\n    groupFramesIntoGops: groupFramesIntoGops,\r\n    extendFirstKeyFrame: extendFirstKeyFrame,\r\n    generateSampleTable: generateSampleTable$1,\r\n    concatenateNalData: concatenateNalData,\r\n    generateSampleTableForFrame: generateSampleTableForFrame,\r\n    concatenateNalDataForFrame: concatenateNalDataForFrame\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n  var highPrefix = [33, 16, 5, 32, 164, 27];\r\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\r\n\r\n  var zeroFill = function zeroFill(count) {\r\n    var a = [];\r\n\r\n    while (count--) {\r\n      a.push(0);\r\n    }\r\n\r\n    return a;\r\n  };\r\n\r\n  var makeTable = function makeTable(metaTable) {\r\n    return Object.keys(metaTable).reduce(function (obj, key) {\r\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\r\n        return arr.concat(part);\r\n      }, []));\r\n      return obj;\r\n    }, {});\r\n  };\r\n\r\n  var silence;\r\n\r\n  var silence_1 = function silence_1() {\r\n    if (!silence) {\r\n      // Frames-of-silence to use for filling in missing AAC frames\r\n      var coneOfSilence = {\r\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\r\n        88200: [highPrefix, [231], zeroFill(170), [56]],\r\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\r\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\r\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\r\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\r\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\r\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\r\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\r\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\r\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\r\n      };\r\n      silence = makeTable(coneOfSilence);\r\n    }\r\n\r\n    return silence;\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n\r\n  var ONE_SECOND_IN_TS$4 = 90000,\r\n      // 90kHz clock\r\n  secondsToVideoTs,\r\n      secondsToAudioTs,\r\n      videoTsToSeconds,\r\n      audioTsToSeconds,\r\n      audioTsToVideoTs,\r\n      videoTsToAudioTs,\r\n      metadataTsToSeconds;\r\n\r\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\r\n    return seconds * ONE_SECOND_IN_TS$4;\r\n  };\r\n\r\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\r\n    return seconds * sampleRate;\r\n  };\r\n\r\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\r\n    return timestamp / ONE_SECOND_IN_TS$4;\r\n  };\r\n\r\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\r\n    return timestamp / sampleRate;\r\n  };\r\n\r\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\r\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\r\n  };\r\n\r\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\r\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\r\n  };\r\n  /**\r\n   * Adjust ID3 tag or caption timing information by the timeline pts values\r\n   * (if keepOriginalTimestamps is false) and convert to seconds\r\n   */\r\n\r\n\r\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\r\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\r\n  };\r\n\r\n  var clock = {\r\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\r\n    secondsToVideoTs: secondsToVideoTs,\r\n    secondsToAudioTs: secondsToAudioTs,\r\n    videoTsToSeconds: videoTsToSeconds,\r\n    audioTsToSeconds: audioTsToSeconds,\r\n    audioTsToVideoTs: audioTsToVideoTs,\r\n    videoTsToAudioTs: videoTsToAudioTs,\r\n    metadataTsToSeconds: metadataTsToSeconds\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n  /**\r\n   * Sum the `byteLength` properties of the data in each AAC frame\r\n   */\r\n\r\n  var sumFrameByteLengths = function sumFrameByteLengths(array) {\r\n    var i,\r\n        currentObj,\r\n        sum = 0; // sum the byteLength's all each nal unit in the frame\r\n\r\n    for (i = 0; i < array.length; i++) {\r\n      currentObj = array[i];\r\n      sum += currentObj.data.byteLength;\r\n    }\r\n\r\n    return sum;\r\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\r\n  // would lead to the introduction of a gap in the audio buffer\r\n\r\n\r\n  var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\r\n    var baseMediaDecodeTimeTs,\r\n        frameDuration = 0,\r\n        audioGapDuration = 0,\r\n        audioFillFrameCount = 0,\r\n        audioFillDuration = 0,\r\n        silentFrame,\r\n        i,\r\n        firstFrame;\r\n\r\n    if (!frames.length) {\r\n      return;\r\n    }\r\n\r\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\r\n\r\n    frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\r\n\r\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\r\n      // insert the shortest possible amount (audio gap or audio to video gap)\r\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\r\n\r\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\r\n      audioFillDuration = audioFillFrameCount * frameDuration;\r\n    } // don't attempt to fill gaps smaller than a single frame or larger\r\n    // than a half second\r\n\r\n\r\n    if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\r\n      return;\r\n    }\r\n\r\n    silentFrame = silence_1()[track.samplerate];\r\n\r\n    if (!silentFrame) {\r\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\r\n      // from the content instead\r\n      silentFrame = frames[0].data;\r\n    }\r\n\r\n    for (i = 0; i < audioFillFrameCount; i++) {\r\n      firstFrame = frames[0];\r\n      frames.splice(0, 0, {\r\n        data: silentFrame,\r\n        dts: firstFrame.dts - frameDuration,\r\n        pts: firstFrame.pts - frameDuration\r\n      });\r\n    }\r\n\r\n    track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\r\n    return audioFillDuration;\r\n  }; // If the audio segment extends before the earliest allowed dts\r\n  // value, remove AAC frames until starts at or after the earliest\r\n  // allowed DTS so that we don't end up with a negative baseMedia-\r\n  // DecodeTime for the audio track\r\n\r\n\r\n  var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\r\n    if (track.minSegmentDts >= earliestAllowedDts) {\r\n      return adtsFrames;\r\n    } // We will need to recalculate the earliest segment Dts\r\n\r\n\r\n    track.minSegmentDts = Infinity;\r\n    return adtsFrames.filter(function (currentFrame) {\r\n      // If this is an allowed frame, keep it and record it's Dts\r\n      if (currentFrame.dts >= earliestAllowedDts) {\r\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\r\n        track.minSegmentPts = track.minSegmentDts;\r\n        return true;\r\n      } // Otherwise, discard it\r\n\r\n\r\n      return false;\r\n    });\r\n  }; // generate the track's raw mdat data from an array of frames\r\n\r\n\r\n  var generateSampleTable = function generateSampleTable(frames) {\r\n    var i,\r\n        currentFrame,\r\n        samples = [];\r\n\r\n    for (i = 0; i < frames.length; i++) {\r\n      currentFrame = frames[i];\r\n      samples.push({\r\n        size: currentFrame.data.byteLength,\r\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\r\n\r\n      });\r\n    }\r\n\r\n    return samples;\r\n  }; // generate the track's sample table from an array of frames\r\n\r\n\r\n  var concatenateFrameData = function concatenateFrameData(frames) {\r\n    var i,\r\n        currentFrame,\r\n        dataOffset = 0,\r\n        data = new Uint8Array(sumFrameByteLengths(frames));\r\n\r\n    for (i = 0; i < frames.length; i++) {\r\n      currentFrame = frames[i];\r\n      data.set(currentFrame.data, dataOffset);\r\n      dataOffset += currentFrame.data.byteLength;\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  var audioFrameUtils = {\r\n    prefixWithSilence: prefixWithSilence,\r\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\r\n    generateSampleTable: generateSampleTable,\r\n    concatenateFrameData: concatenateFrameData\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n  var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\r\n  /**\r\n   * Store information about the start and end of the track and the\r\n   * duration for each frame/sample we process in order to calculate\r\n   * the baseMediaDecodeTime\r\n   */\r\n\r\n  var collectDtsInfo = function collectDtsInfo(track, data) {\r\n    if (typeof data.pts === 'number') {\r\n      if (track.timelineStartInfo.pts === undefined) {\r\n        track.timelineStartInfo.pts = data.pts;\r\n      }\r\n\r\n      if (track.minSegmentPts === undefined) {\r\n        track.minSegmentPts = data.pts;\r\n      } else {\r\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\r\n      }\r\n\r\n      if (track.maxSegmentPts === undefined) {\r\n        track.maxSegmentPts = data.pts;\r\n      } else {\r\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\r\n      }\r\n    }\r\n\r\n    if (typeof data.dts === 'number') {\r\n      if (track.timelineStartInfo.dts === undefined) {\r\n        track.timelineStartInfo.dts = data.dts;\r\n      }\r\n\r\n      if (track.minSegmentDts === undefined) {\r\n        track.minSegmentDts = data.dts;\r\n      } else {\r\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\r\n      }\r\n\r\n      if (track.maxSegmentDts === undefined) {\r\n        track.maxSegmentDts = data.dts;\r\n      } else {\r\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Clear values used to calculate the baseMediaDecodeTime between\r\n   * tracks\r\n   */\r\n\r\n\r\n  var clearDtsInfo = function clearDtsInfo(track) {\r\n    delete track.minSegmentDts;\r\n    delete track.maxSegmentDts;\r\n    delete track.minSegmentPts;\r\n    delete track.maxSegmentPts;\r\n  };\r\n  /**\r\n   * Calculate the track's baseMediaDecodeTime based on the earliest\r\n   * DTS the transmuxer has ever seen and the minimum DTS for the\r\n   * current track\r\n   * @param track {object} track metadata configuration\r\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\r\n   *        in the source; false to adjust the first segment to start at 0.\r\n   */\r\n\r\n\r\n  var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\r\n    var baseMediaDecodeTime,\r\n        scale,\r\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\r\n\r\n    if (!keepOriginalTimestamps) {\r\n      minSegmentDts -= track.timelineStartInfo.dts;\r\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\r\n    // we want the start of the first segment to be placed\r\n\r\n\r\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\r\n\r\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\r\n\r\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\r\n\r\n    if (track.type === 'audio') {\r\n      // Audio has a different clock equal to the sampling_rate so we need to\r\n      // scale the PTS values into the clock rate of the track\r\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\r\n      baseMediaDecodeTime *= scale;\r\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\r\n    }\r\n\r\n    return baseMediaDecodeTime;\r\n  };\r\n\r\n  var trackDecodeInfo = {\r\n    clearDtsInfo: clearDtsInfo,\r\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\r\n    collectDtsInfo: collectDtsInfo\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   *\r\n   * Reads in-band caption information from a video elementary\r\n   * stream. Captions must follow the CEA-708 standard for injection\r\n   * into an MPEG-2 transport streams.\r\n   * @see https://en.wikipedia.org/wiki/CEA-708\r\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\r\n   */\r\n  // payload type field to indicate how they are to be\r\n  // interpreted. CEAS-708 caption content is always transmitted with\r\n  // payload type 0x04.\r\n\r\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\r\n      RBSP_TRAILING_BITS = 128;\r\n  /**\r\n    * Parse a supplemental enhancement information (SEI) NAL unit.\r\n    * Stops parsing once a message of type ITU T T35 has been found.\r\n    *\r\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\r\n    * @return {object} the parsed SEI payload\r\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\r\n    */\r\n\r\n  var parseSei = function parseSei(bytes) {\r\n    var i = 0,\r\n        result = {\r\n      payloadType: -1,\r\n      payloadSize: 0\r\n    },\r\n        payloadType = 0,\r\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\r\n\r\n    while (i < bytes.byteLength) {\r\n      // stop once we have hit the end of the sei_rbsp\r\n      if (bytes[i] === RBSP_TRAILING_BITS) {\r\n        break;\r\n      } // Parse payload type\r\n\r\n\r\n      while (bytes[i] === 0xFF) {\r\n        payloadType += 255;\r\n        i++;\r\n      }\r\n\r\n      payloadType += bytes[i++]; // Parse payload size\r\n\r\n      while (bytes[i] === 0xFF) {\r\n        payloadSize += 255;\r\n        i++;\r\n      }\r\n\r\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\r\n      // there can only ever be one caption message in a frame's sei\r\n\r\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\r\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\r\n\r\n        if (userIdentifier === 'GA94') {\r\n          result.payloadType = payloadType;\r\n          result.payloadSize = payloadSize;\r\n          result.payload = bytes.subarray(i, i + payloadSize);\r\n          break;\r\n        } else {\r\n          result.payload = void 0;\r\n        }\r\n      } // skip the payload and parse the next message\r\n\r\n\r\n      i += payloadSize;\r\n      payloadType = 0;\r\n      payloadSize = 0;\r\n    }\r\n\r\n    return result;\r\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\r\n\r\n\r\n  var parseUserData = function parseUserData(sei) {\r\n    // itu_t_t35_contry_code must be 181 (United States) for\r\n    // captions\r\n    if (sei.payload[0] !== 181) {\r\n      return null;\r\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\r\n\r\n\r\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\r\n      return null;\r\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\r\n\r\n\r\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\r\n      return null;\r\n    } // finally, user_data_type_code should be 0x03 for caption data\r\n\r\n\r\n    if (sei.payload[7] !== 0x03) {\r\n      return null;\r\n    } // return the user_data_type_structure and strip the trailing\r\n    // marker bits\r\n\r\n\r\n    return sei.payload.subarray(8, sei.payload.length - 1);\r\n  }; // see CEA-708-D, section 4.4\r\n\r\n\r\n  var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\r\n    var results = [],\r\n        i,\r\n        count,\r\n        offset,\r\n        data; // if this is just filler, return immediately\r\n\r\n    if (!(userData[0] & 0x40)) {\r\n      return results;\r\n    } // parse out the cc_data_1 and cc_data_2 fields\r\n\r\n\r\n    count = userData[0] & 0x1f;\r\n\r\n    for (i = 0; i < count; i++) {\r\n      offset = i * 3;\r\n      data = {\r\n        type: userData[offset + 2] & 0x03,\r\n        pts: pts\r\n      }; // capture cc data when cc_valid is 1\r\n\r\n      if (userData[offset + 2] & 0x04) {\r\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\r\n        results.push(data);\r\n      }\r\n    }\r\n\r\n    return results;\r\n  };\r\n\r\n  var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\r\n    var length = data.byteLength,\r\n        emulationPreventionBytesPositions = [],\r\n        i = 1,\r\n        newLength,\r\n        newData; // Find all `Emulation Prevention Bytes`\r\n\r\n    while (i < length - 2) {\r\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\r\n        emulationPreventionBytesPositions.push(i + 2);\r\n        i += 2;\r\n      } else {\r\n        i++;\r\n      }\r\n    } // If no Emulation Prevention Bytes were found just return the original\r\n    // array\r\n\r\n\r\n    if (emulationPreventionBytesPositions.length === 0) {\r\n      return data;\r\n    } // Create a new array to hold the NAL unit data\r\n\r\n\r\n    newLength = length - emulationPreventionBytesPositions.length;\r\n    newData = new Uint8Array(newLength);\r\n    var sourceIndex = 0;\r\n\r\n    for (i = 0; i < newLength; sourceIndex++, i++) {\r\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\r\n        // Skip this byte\r\n        sourceIndex++; // Remove this position index\r\n\r\n        emulationPreventionBytesPositions.shift();\r\n      }\r\n\r\n      newData[i] = data[sourceIndex];\r\n    }\r\n\r\n    return newData;\r\n  }; // exports\r\n\r\n\r\n  var captionPacketParser = {\r\n    parseSei: parseSei,\r\n    parseUserData: parseUserData,\r\n    parseCaptionPackets: parseCaptionPackets,\r\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\r\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\r\n  }; // Link To Transport\r\n  // -----------------\r\n\r\n  var CaptionStream$1 = function CaptionStream(options) {\r\n    options = options || {};\r\n    CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\r\n\r\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\r\n    this.captionPackets_ = [];\r\n    this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\r\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\r\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\r\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\r\n    ];\r\n\r\n    if (this.parse708captions_) {\r\n      this.cc708Stream_ = new Cea708Stream({\r\n        captionServices: options.captionServices\r\n      }); // eslint-disable-line no-use-before-define\r\n    }\r\n\r\n    this.reset(); // forward data and done events from CCs to this CaptionStream\r\n\r\n    this.ccStreams_.forEach(function (cc) {\r\n      cc.on('data', this.trigger.bind(this, 'data'));\r\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\r\n      cc.on('done', this.trigger.bind(this, 'done'));\r\n    }, this);\r\n\r\n    if (this.parse708captions_) {\r\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\r\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\r\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\r\n    }\r\n  };\r\n\r\n  CaptionStream$1.prototype = new stream();\r\n\r\n  CaptionStream$1.prototype.push = function (event) {\r\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\r\n\r\n    if (event.nalUnitType !== 'sei_rbsp') {\r\n      return;\r\n    } // parse the sei\r\n\r\n\r\n    sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\r\n\r\n    if (!sei.payload) {\r\n      return;\r\n    } // ignore everything but user_data_registered_itu_t_t35\r\n\r\n\r\n    if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\r\n      return;\r\n    } // parse out the user data payload\r\n\r\n\r\n    userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\r\n\r\n    if (!userData) {\r\n      return;\r\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\r\n    // caption data from being processed twice, we track the latest dts we've\r\n    // received and ignore everything with a dts before that. However, since\r\n    // data for a specific dts can be split across packets on either side of\r\n    // a segment boundary, we need to make sure we *don't* ignore the packets\r\n    // from the *next* segment that have dts === this.latestDts_. By constantly\r\n    // tracking the number of packets received with dts === this.latestDts_, we\r\n    // know how many should be ignored once we start receiving duplicates.\r\n\r\n\r\n    if (event.dts < this.latestDts_) {\r\n      // We've started getting older data, so set the flag.\r\n      this.ignoreNextEqualDts_ = true;\r\n      return;\r\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\r\n      this.numSameDts_--;\r\n\r\n      if (!this.numSameDts_) {\r\n        // We've received the last duplicate packet, time to start processing again\r\n        this.ignoreNextEqualDts_ = false;\r\n      }\r\n\r\n      return;\r\n    } // parse out CC data packets and save them for later\r\n\r\n\r\n    newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\r\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\r\n\r\n    if (this.latestDts_ !== event.dts) {\r\n      this.numSameDts_ = 0;\r\n    }\r\n\r\n    this.numSameDts_++;\r\n    this.latestDts_ = event.dts;\r\n  };\r\n\r\n  CaptionStream$1.prototype.flushCCStreams = function (flushType) {\r\n    this.ccStreams_.forEach(function (cc) {\r\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\r\n    }, this);\r\n  };\r\n\r\n  CaptionStream$1.prototype.flushStream = function (flushType) {\r\n    // make sure we actually parsed captions before proceeding\r\n    if (!this.captionPackets_.length) {\r\n      this.flushCCStreams(flushType);\r\n      return;\r\n    } // In Chrome, the Array#sort function is not stable so add a\r\n    // presortIndex that we can use to ensure we get a stable-sort\r\n\r\n\r\n    this.captionPackets_.forEach(function (elem, idx) {\r\n      elem.presortIndex = idx;\r\n    }); // sort caption byte-pairs based on their PTS values\r\n\r\n    this.captionPackets_.sort(function (a, b) {\r\n      if (a.pts === b.pts) {\r\n        return a.presortIndex - b.presortIndex;\r\n      }\r\n\r\n      return a.pts - b.pts;\r\n    });\r\n    this.captionPackets_.forEach(function (packet) {\r\n      if (packet.type < 2) {\r\n        // Dispatch packet to the right Cea608Stream\r\n        this.dispatchCea608Packet(packet);\r\n      } else {\r\n        // Dispatch packet to the Cea708Stream\r\n        this.dispatchCea708Packet(packet);\r\n      }\r\n    }, this);\r\n    this.captionPackets_.length = 0;\r\n    this.flushCCStreams(flushType);\r\n  };\r\n\r\n  CaptionStream$1.prototype.flush = function () {\r\n    return this.flushStream('flush');\r\n  }; // Only called if handling partial data\r\n\r\n\r\n  CaptionStream$1.prototype.partialFlush = function () {\r\n    return this.flushStream('partialFlush');\r\n  };\r\n\r\n  CaptionStream$1.prototype.reset = function () {\r\n    this.latestDts_ = null;\r\n    this.ignoreNextEqualDts_ = false;\r\n    this.numSameDts_ = 0;\r\n    this.activeCea608Channel_ = [null, null];\r\n    this.ccStreams_.forEach(function (ccStream) {\r\n      ccStream.reset();\r\n    });\r\n  }; // From the CEA-608 spec:\r\n\r\n  /*\r\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\r\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\r\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\r\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\r\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\r\n   * to switch to captioning or Text.\r\n  */\r\n  // With that in mind, we ignore any data between an XDS control code and a\r\n  // subsequent closed-captioning control code.\r\n\r\n\r\n  CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\r\n    // NOTE: packet.type is the CEA608 field\r\n    if (this.setsTextOrXDSActive(packet)) {\r\n      this.activeCea608Channel_[packet.type] = null;\r\n    } else if (this.setsChannel1Active(packet)) {\r\n      this.activeCea608Channel_[packet.type] = 0;\r\n    } else if (this.setsChannel2Active(packet)) {\r\n      this.activeCea608Channel_[packet.type] = 1;\r\n    }\r\n\r\n    if (this.activeCea608Channel_[packet.type] === null) {\r\n      // If we haven't received anything to set the active channel, or the\r\n      // packets are Text/XDS data, discard the data; we don't want jumbled\r\n      // captions\r\n      return;\r\n    }\r\n\r\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\r\n  };\r\n\r\n  CaptionStream$1.prototype.setsChannel1Active = function (packet) {\r\n    return (packet.ccData & 0x7800) === 0x1000;\r\n  };\r\n\r\n  CaptionStream$1.prototype.setsChannel2Active = function (packet) {\r\n    return (packet.ccData & 0x7800) === 0x1800;\r\n  };\r\n\r\n  CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\r\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\r\n  };\r\n\r\n  CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\r\n    if (this.parse708captions_) {\r\n      this.cc708Stream_.push(packet);\r\n    }\r\n  }; // ----------------------\r\n  // Session to Application\r\n  // ----------------------\r\n  // This hash maps special and extended character codes to their\r\n  // proper Unicode equivalent. The first one-byte key is just a\r\n  // non-standard character code. The two-byte keys that follow are\r\n  // the extended CEA708 character codes, along with the preceding\r\n  // 0x10 extended character byte to distinguish these codes from\r\n  // non-extended character codes. Every CEA708 character code that\r\n  // is not in this object maps directly to a standard unicode\r\n  // character code.\r\n  // The transparent space and non-breaking transparent space are\r\n  // technically not fully supported since there is no code to\r\n  // make them transparent, so they have normal non-transparent\r\n  // stand-ins.\r\n  // The special closed caption (CC) character isn't a standard\r\n  // unicode character, so a fairly similar unicode character was\r\n  // chosen in it's place.\r\n\r\n\r\n  var CHARACTER_TRANSLATION_708 = {\r\n    0x7f: 0x266a,\r\n    // \u266A\r\n    0x1020: 0x20,\r\n    // Transparent Space\r\n    0x1021: 0xa0,\r\n    // Nob-breaking Transparent Space\r\n    0x1025: 0x2026,\r\n    // \u2026\r\n    0x102a: 0x0160,\r\n    // \u0160\r\n    0x102c: 0x0152,\r\n    // \u0152\r\n    0x1030: 0x2588,\r\n    // \u2588\r\n    0x1031: 0x2018,\r\n    // \u2018\r\n    0x1032: 0x2019,\r\n    // \u2019\r\n    0x1033: 0x201c,\r\n    // \u201C\r\n    0x1034: 0x201d,\r\n    // \u201D\r\n    0x1035: 0x2022,\r\n    // \u2022\r\n    0x1039: 0x2122,\r\n    // \u2122\r\n    0x103a: 0x0161,\r\n    // \u0161\r\n    0x103c: 0x0153,\r\n    // \u0153\r\n    0x103d: 0x2120,\r\n    // \u2120\r\n    0x103f: 0x0178,\r\n    // \u0178\r\n    0x1076: 0x215b,\r\n    // \u215B\r\n    0x1077: 0x215c,\r\n    // \u215C\r\n    0x1078: 0x215d,\r\n    // \u215D\r\n    0x1079: 0x215e,\r\n    // \u215E\r\n    0x107a: 0x23d0,\r\n    // \u23D0\r\n    0x107b: 0x23a4,\r\n    // \u23A4\r\n    0x107c: 0x23a3,\r\n    // \u23A3\r\n    0x107d: 0x23af,\r\n    // \u23AF\r\n    0x107e: 0x23a6,\r\n    // \u23A6\r\n    0x107f: 0x23a1,\r\n    // \u23A1\r\n    0x10a0: 0x3138 // \u3138 (CC char)\r\n\r\n  };\r\n\r\n  var get708CharFromCode = function get708CharFromCode(code) {\r\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\r\n\r\n    if (code & 0x1000 && code === newCode) {\r\n      // Invalid extended code\r\n      return '';\r\n    }\r\n\r\n    return String.fromCharCode(newCode);\r\n  };\r\n\r\n  var within708TextBlock = function within708TextBlock(b) {\r\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\r\n  };\r\n\r\n  var Cea708Window = function Cea708Window(windowNum) {\r\n    this.windowNum = windowNum;\r\n    this.reset();\r\n  };\r\n\r\n  Cea708Window.prototype.reset = function () {\r\n    this.clearText();\r\n    this.pendingNewLine = false;\r\n    this.winAttr = {};\r\n    this.penAttr = {};\r\n    this.penLoc = {};\r\n    this.penColor = {}; // These default values are arbitrary,\r\n    // defineWindow will usually override them\r\n\r\n    this.visible = 0;\r\n    this.rowLock = 0;\r\n    this.columnLock = 0;\r\n    this.priority = 0;\r\n    this.relativePositioning = 0;\r\n    this.anchorVertical = 0;\r\n    this.anchorHorizontal = 0;\r\n    this.anchorPoint = 0;\r\n    this.rowCount = 1;\r\n    this.virtualRowCount = this.rowCount + 1;\r\n    this.columnCount = 41;\r\n    this.windowStyle = 0;\r\n    this.penStyle = 0;\r\n  };\r\n\r\n  Cea708Window.prototype.getText = function () {\r\n    return this.rows.join('\\n');\r\n  };\r\n\r\n  Cea708Window.prototype.clearText = function () {\r\n    this.rows = [''];\r\n    this.rowIdx = 0;\r\n  };\r\n\r\n  Cea708Window.prototype.newLine = function (pts) {\r\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\r\n      this.beforeRowOverflow(pts);\r\n    }\r\n\r\n    if (this.rows.length > 0) {\r\n      this.rows.push('');\r\n      this.rowIdx++;\r\n    } // Show all virtual rows since there's no visible scrolling\r\n\r\n\r\n    while (this.rows.length > this.virtualRowCount) {\r\n      this.rows.shift();\r\n      this.rowIdx--;\r\n    }\r\n  };\r\n\r\n  Cea708Window.prototype.isEmpty = function () {\r\n    if (this.rows.length === 0) {\r\n      return true;\r\n    } else if (this.rows.length === 1) {\r\n      return this.rows[0] === '';\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  Cea708Window.prototype.addText = function (text) {\r\n    this.rows[this.rowIdx] += text;\r\n  };\r\n\r\n  Cea708Window.prototype.backspace = function () {\r\n    if (!this.isEmpty()) {\r\n      var row = this.rows[this.rowIdx];\r\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\r\n    }\r\n  };\r\n\r\n  var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\r\n    this.serviceNum = serviceNum;\r\n    this.text = '';\r\n    this.currentWindow = new Cea708Window(-1);\r\n    this.windows = [];\r\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\r\n\r\n    if (typeof encoding === 'string') {\r\n      this.createTextDecoder(encoding);\r\n    }\r\n  };\r\n  /**\r\n   * Initialize service windows\r\n   * Must be run before service use\r\n   *\r\n   * @param  {Integer}  pts               PTS value\r\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\r\n   */\r\n\r\n\r\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\r\n    this.startPts = pts;\r\n\r\n    for (var win = 0; win < 8; win++) {\r\n      this.windows[win] = new Cea708Window(win);\r\n\r\n      if (typeof beforeRowOverflow === 'function') {\r\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Set current window of service to be affected by commands\r\n   *\r\n   * @param  {Integer} windowNum Window number\r\n   */\r\n\r\n\r\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\r\n    this.currentWindow = this.windows[windowNum];\r\n  };\r\n  /**\r\n   * Try to create a TextDecoder if it is natively supported\r\n   */\r\n\r\n\r\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\r\n    if (typeof TextDecoder === 'undefined') {\r\n      this.stream.trigger('log', {\r\n        level: 'warn',\r\n        message: 'The `encoding` option is unsupported without TextDecoder support'\r\n      });\r\n    } else {\r\n      try {\r\n        this.textDecoder_ = new TextDecoder(encoding);\r\n      } catch (error) {\r\n        this.stream.trigger('log', {\r\n          level: 'warn',\r\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  var Cea708Stream = function Cea708Stream(options) {\r\n    options = options || {};\r\n    Cea708Stream.prototype.init.call(this);\r\n    var self = this;\r\n    var captionServices = options.captionServices || {};\r\n    var captionServiceEncodings = {};\r\n    var serviceProps; // Get service encodings from captionServices option block\r\n\r\n    Object.keys(captionServices).forEach(function (serviceName) {\r\n      serviceProps = captionServices[serviceName];\r\n\r\n      if (/^SERVICE/.test(serviceName)) {\r\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\r\n      }\r\n    });\r\n    this.serviceEncodings = captionServiceEncodings;\r\n    this.current708Packet = null;\r\n    this.services = {};\r\n\r\n    this.push = function (packet) {\r\n      if (packet.type === 3) {\r\n        // 708 packet start\r\n        self.new708Packet();\r\n        self.add708Bytes(packet);\r\n      } else {\r\n        if (self.current708Packet === null) {\r\n          // This should only happen at the start of a file if there's no packet start.\r\n          self.new708Packet();\r\n        }\r\n\r\n        self.add708Bytes(packet);\r\n      }\r\n    };\r\n  };\r\n\r\n  Cea708Stream.prototype = new stream();\r\n  /**\r\n   * Push current 708 packet, create new 708 packet.\r\n   */\r\n\r\n  Cea708Stream.prototype.new708Packet = function () {\r\n    if (this.current708Packet !== null) {\r\n      this.push708Packet();\r\n    }\r\n\r\n    this.current708Packet = {\r\n      data: [],\r\n      ptsVals: []\r\n    };\r\n  };\r\n  /**\r\n   * Add pts and both bytes from packet into current 708 packet.\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.add708Bytes = function (packet) {\r\n    var data = packet.ccData;\r\n    var byte0 = data >>> 8;\r\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\r\n    // that service blocks will always line up with byte pairs.\r\n\r\n    this.current708Packet.ptsVals.push(packet.pts);\r\n    this.current708Packet.data.push(byte0);\r\n    this.current708Packet.data.push(byte1);\r\n  };\r\n  /**\r\n   * Parse completed 708 packet into service blocks and push each service block.\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.push708Packet = function () {\r\n    var packet708 = this.current708Packet;\r\n    var packetData = packet708.data;\r\n    var serviceNum = null;\r\n    var blockSize = null;\r\n    var i = 0;\r\n    var b = packetData[i++];\r\n    packet708.seq = b >> 6;\r\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\r\n\r\n    for (; i < packetData.length; i++) {\r\n      b = packetData[i++];\r\n      serviceNum = b >> 5;\r\n      blockSize = b & 0x1f; // 0b00011111\r\n\r\n      if (serviceNum === 7 && blockSize > 0) {\r\n        // Extended service num\r\n        b = packetData[i++];\r\n        serviceNum = b;\r\n      }\r\n\r\n      this.pushServiceBlock(serviceNum, i, blockSize);\r\n\r\n      if (blockSize > 0) {\r\n        i += blockSize - 1;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Parse service block, execute commands, read text.\r\n   *\r\n   * Note: While many of these commands serve important purposes,\r\n   * many others just parse out the parameters or attributes, but\r\n   * nothing is done with them because this is not a full and complete\r\n   * implementation of the entire 708 spec.\r\n   *\r\n   * @param  {Integer} serviceNum Service number\r\n   * @param  {Integer} start      Start index of the 708 packet data\r\n   * @param  {Integer} size       Block size\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\r\n    var b;\r\n    var i = start;\r\n    var packetData = this.current708Packet.data;\r\n    var service = this.services[serviceNum];\r\n\r\n    if (!service) {\r\n      service = this.initService(serviceNum, i);\r\n    }\r\n\r\n    for (; i < start + size && i < packetData.length; i++) {\r\n      b = packetData[i];\r\n\r\n      if (within708TextBlock(b)) {\r\n        i = this.handleText(i, service);\r\n      } else if (b === 0x18) {\r\n        i = this.multiByteCharacter(i, service);\r\n      } else if (b === 0x10) {\r\n        i = this.extendedCommands(i, service);\r\n      } else if (0x80 <= b && b <= 0x87) {\r\n        i = this.setCurrentWindow(i, service);\r\n      } else if (0x98 <= b && b <= 0x9f) {\r\n        i = this.defineWindow(i, service);\r\n      } else if (b === 0x88) {\r\n        i = this.clearWindows(i, service);\r\n      } else if (b === 0x8c) {\r\n        i = this.deleteWindows(i, service);\r\n      } else if (b === 0x89) {\r\n        i = this.displayWindows(i, service);\r\n      } else if (b === 0x8a) {\r\n        i = this.hideWindows(i, service);\r\n      } else if (b === 0x8b) {\r\n        i = this.toggleWindows(i, service);\r\n      } else if (b === 0x97) {\r\n        i = this.setWindowAttributes(i, service);\r\n      } else if (b === 0x90) {\r\n        i = this.setPenAttributes(i, service);\r\n      } else if (b === 0x91) {\r\n        i = this.setPenColor(i, service);\r\n      } else if (b === 0x92) {\r\n        i = this.setPenLocation(i, service);\r\n      } else if (b === 0x8f) {\r\n        service = this.reset(i, service);\r\n      } else if (b === 0x08) {\r\n        // BS: Backspace\r\n        service.currentWindow.backspace();\r\n      } else if (b === 0x0c) {\r\n        // FF: Form feed\r\n        service.currentWindow.clearText();\r\n      } else if (b === 0x0d) {\r\n        // CR: Carriage return\r\n        service.currentWindow.pendingNewLine = true;\r\n      } else if (b === 0x0e) {\r\n        // HCR: Horizontal carriage return\r\n        service.currentWindow.clearText();\r\n      } else if (b === 0x8d) {\r\n        // DLY: Delay, nothing to do\r\n        i++;\r\n      } else ;\r\n    }\r\n  };\r\n  /**\r\n   * Execute an extended command\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[++i];\r\n\r\n    if (within708TextBlock(b)) {\r\n      i = this.handleText(i, service, {\r\n        isExtended: true\r\n      });\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Get PTS value of a given byte index\r\n   *\r\n   * @param  {Integer} byteIndex  Index of the byte\r\n   * @return {Integer}            PTS\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.getPts = function (byteIndex) {\r\n    // There's 1 pts value per 2 bytes\r\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\r\n  };\r\n  /**\r\n   * Initializes a service\r\n   *\r\n   * @param  {Integer} serviceNum Service number\r\n   * @return {Service}            Initialized service object\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\r\n    var serviceName = 'SERVICE' + serviceNum;\r\n    var self = this;\r\n    var serviceName;\r\n    var encoding;\r\n\r\n    if (serviceName in this.serviceEncodings) {\r\n      encoding = this.serviceEncodings[serviceName];\r\n    }\r\n\r\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\r\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\r\n      self.flushDisplayed(pts, self.services[serviceNum]);\r\n    });\r\n    return this.services[serviceNum];\r\n  };\r\n  /**\r\n   * Execute text writing to current window\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.handleText = function (i, service, options) {\r\n    var isExtended = options && options.isExtended;\r\n    var isMultiByte = options && options.isMultiByte;\r\n    var packetData = this.current708Packet.data;\r\n    var extended = isExtended ? 0x1000 : 0x0000;\r\n    var currentByte = packetData[i];\r\n    var nextByte = packetData[i + 1];\r\n    var win = service.currentWindow;\r\n\r\n    var _char;\r\n\r\n    var charCodeArray; // Use the TextDecoder if one was created for this service\r\n\r\n    if (service.textDecoder_ && !isExtended) {\r\n      if (isMultiByte) {\r\n        charCodeArray = [currentByte, nextByte];\r\n        i++;\r\n      } else {\r\n        charCodeArray = [currentByte];\r\n      }\r\n\r\n      _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\r\n    } else {\r\n      _char = get708CharFromCode(extended | currentByte);\r\n    }\r\n\r\n    if (win.pendingNewLine && !win.isEmpty()) {\r\n      win.newLine(this.getPts(i));\r\n    }\r\n\r\n    win.pendingNewLine = false;\r\n    win.addText(_char);\r\n    return i;\r\n  };\r\n  /**\r\n   * Handle decoding of multibyte character\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var firstByte = packetData[i + 1];\r\n    var secondByte = packetData[i + 2];\r\n\r\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\r\n      i = this.handleText(++i, service, {\r\n        isMultiByte: true\r\n      });\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the CW# command.\r\n   *\r\n   * Set the current window.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[i];\r\n    var windowNum = b & 0x07;\r\n    service.setCurrentWindow(windowNum);\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the DF# command.\r\n   *\r\n   * Define a window and set it as the current window.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.defineWindow = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[i];\r\n    var windowNum = b & 0x07;\r\n    service.setCurrentWindow(windowNum);\r\n    var win = service.currentWindow;\r\n    b = packetData[++i];\r\n    win.visible = (b & 0x20) >> 5; // v\r\n\r\n    win.rowLock = (b & 0x10) >> 4; // rl\r\n\r\n    win.columnLock = (b & 0x08) >> 3; // cl\r\n\r\n    win.priority = b & 0x07; // p\r\n\r\n    b = packetData[++i];\r\n    win.relativePositioning = (b & 0x80) >> 7; // rp\r\n\r\n    win.anchorVertical = b & 0x7f; // av\r\n\r\n    b = packetData[++i];\r\n    win.anchorHorizontal = b; // ah\r\n\r\n    b = packetData[++i];\r\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\r\n\r\n    win.rowCount = b & 0x0f; // rc\r\n\r\n    b = packetData[++i];\r\n    win.columnCount = b & 0x3f; // cc\r\n\r\n    b = packetData[++i];\r\n    win.windowStyle = (b & 0x38) >> 3; // ws\r\n\r\n    win.penStyle = b & 0x07; // ps\r\n    // The spec says there are (rowCount+1) \"virtual rows\"\r\n\r\n    win.virtualRowCount = win.rowCount + 1;\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the SWA command.\r\n   *\r\n   * Set attributes of the current window.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[i];\r\n    var winAttr = service.currentWindow.winAttr;\r\n    b = packetData[++i];\r\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\r\n\r\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\r\n\r\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\r\n\r\n    winAttr.fillBlue = b & 0x03; // fb\r\n\r\n    b = packetData[++i];\r\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\r\n\r\n    winAttr.borderRed = (b & 0x30) >> 4; // br\r\n\r\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\r\n\r\n    winAttr.borderBlue = b & 0x03; // bb\r\n\r\n    b = packetData[++i];\r\n    winAttr.borderType += (b & 0x80) >> 5; // bt\r\n\r\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\r\n\r\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\r\n\r\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\r\n\r\n    winAttr.justify = b & 0x03; // j\r\n\r\n    b = packetData[++i];\r\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\r\n\r\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\r\n\r\n    winAttr.displayEffect = b & 0x03; // de\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Gather text from all displayed windows and push a caption to output.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\r\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\r\n    // display text in the correct order, but sample files so far have not shown any issue.\r\n\r\n    for (var winId = 0; winId < 8; winId++) {\r\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\r\n        displayedText.push(service.windows[winId].getText());\r\n      }\r\n    }\r\n\r\n    service.endPts = pts;\r\n    service.text = displayedText.join('\\n\\n');\r\n    this.pushCaption(service);\r\n    service.startPts = pts;\r\n  };\r\n  /**\r\n   * Push a caption to output if the caption contains text.\r\n   *\r\n   * @param  {Service} service  The service object to be affected\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.pushCaption = function (service) {\r\n    if (service.text !== '') {\r\n      this.trigger('data', {\r\n        startPts: service.startPts,\r\n        endPts: service.endPts,\r\n        text: service.text,\r\n        stream: 'cc708_' + service.serviceNum\r\n      });\r\n      service.text = '';\r\n      service.startPts = service.endPts;\r\n    }\r\n  };\r\n  /**\r\n   * Parse and execute the DSW command.\r\n   *\r\n   * Set visible property of windows based on the parsed bitmask.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.displayWindows = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[++i];\r\n    var pts = this.getPts(i);\r\n    this.flushDisplayed(pts, service);\r\n\r\n    for (var winId = 0; winId < 8; winId++) {\r\n      if (b & 0x01 << winId) {\r\n        service.windows[winId].visible = 1;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the HDW command.\r\n   *\r\n   * Set visible property of windows based on the parsed bitmask.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.hideWindows = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[++i];\r\n    var pts = this.getPts(i);\r\n    this.flushDisplayed(pts, service);\r\n\r\n    for (var winId = 0; winId < 8; winId++) {\r\n      if (b & 0x01 << winId) {\r\n        service.windows[winId].visible = 0;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the TGW command.\r\n   *\r\n   * Set visible property of windows based on the parsed bitmask.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[++i];\r\n    var pts = this.getPts(i);\r\n    this.flushDisplayed(pts, service);\r\n\r\n    for (var winId = 0; winId < 8; winId++) {\r\n      if (b & 0x01 << winId) {\r\n        service.windows[winId].visible ^= 1;\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the CLW command.\r\n   *\r\n   * Clear text of windows based on the parsed bitmask.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.clearWindows = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[++i];\r\n    var pts = this.getPts(i);\r\n    this.flushDisplayed(pts, service);\r\n\r\n    for (var winId = 0; winId < 8; winId++) {\r\n      if (b & 0x01 << winId) {\r\n        service.windows[winId].clearText();\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the DLW command.\r\n   *\r\n   * Re-initialize windows based on the parsed bitmask.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[++i];\r\n    var pts = this.getPts(i);\r\n    this.flushDisplayed(pts, service);\r\n\r\n    for (var winId = 0; winId < 8; winId++) {\r\n      if (b & 0x01 << winId) {\r\n        service.windows[winId].reset();\r\n      }\r\n    }\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the SPA command.\r\n   *\r\n   * Set pen attributes of the current window.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[i];\r\n    var penAttr = service.currentWindow.penAttr;\r\n    b = packetData[++i];\r\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\r\n\r\n    penAttr.offset = (b & 0x0c) >> 2; // o\r\n\r\n    penAttr.penSize = b & 0x03; // s\r\n\r\n    b = packetData[++i];\r\n    penAttr.italics = (b & 0x80) >> 7; // i\r\n\r\n    penAttr.underline = (b & 0x40) >> 6; // u\r\n\r\n    penAttr.edgeType = (b & 0x38) >> 3; // et\r\n\r\n    penAttr.fontStyle = b & 0x07; // fs\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the SPC command.\r\n   *\r\n   * Set pen color of the current window.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.setPenColor = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[i];\r\n    var penColor = service.currentWindow.penColor;\r\n    b = packetData[++i];\r\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\r\n\r\n    penColor.fgRed = (b & 0x30) >> 4; // fr\r\n\r\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\r\n\r\n    penColor.fgBlue = b & 0x03; // fb\r\n\r\n    b = packetData[++i];\r\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\r\n\r\n    penColor.bgRed = (b & 0x30) >> 4; // br\r\n\r\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\r\n\r\n    penColor.bgBlue = b & 0x03; // bb\r\n\r\n    b = packetData[++i];\r\n    penColor.edgeRed = (b & 0x30) >> 4; // er\r\n\r\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\r\n\r\n    penColor.edgeBlue = b & 0x03; // eb\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Parse and execute the SPL command.\r\n   *\r\n   * Set pen location of the current window.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Integer}          New index after parsing\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\r\n    var packetData = this.current708Packet.data;\r\n    var b = packetData[i];\r\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\r\n\r\n    service.currentWindow.pendingNewLine = true;\r\n    b = packetData[++i];\r\n    penLoc.row = b & 0x0f; // r\r\n\r\n    b = packetData[++i];\r\n    penLoc.column = b & 0x3f; // c\r\n\r\n    return i;\r\n  };\r\n  /**\r\n   * Execute the RST command.\r\n   *\r\n   * Reset service to a clean slate. Re-initialize.\r\n   *\r\n   * @param  {Integer} i        Current index in the 708 packet\r\n   * @param  {Service} service  The service object to be affected\r\n   * @return {Service}          Re-initialized service\r\n   */\r\n\r\n\r\n  Cea708Stream.prototype.reset = function (i, service) {\r\n    var pts = this.getPts(i);\r\n    this.flushDisplayed(pts, service);\r\n    return this.initService(service.serviceNum, i);\r\n  }; // This hash maps non-ASCII, special, and extended character codes to their\r\n  // proper Unicode equivalent. The first keys that are only a single byte\r\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\r\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\r\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\r\n  // can be performed regardless of the field and data channel on which the\r\n  // character code was received.\r\n\r\n\r\n  var CHARACTER_TRANSLATION = {\r\n    0x2a: 0xe1,\r\n    // \u00E1\r\n    0x5c: 0xe9,\r\n    // \u00E9\r\n    0x5e: 0xed,\r\n    // \u00ED\r\n    0x5f: 0xf3,\r\n    // \u00F3\r\n    0x60: 0xfa,\r\n    // \u00FA\r\n    0x7b: 0xe7,\r\n    // \u00E7\r\n    0x7c: 0xf7,\r\n    // \u00F7\r\n    0x7d: 0xd1,\r\n    // \u00D1\r\n    0x7e: 0xf1,\r\n    // \u00F1\r\n    0x7f: 0x2588,\r\n    // \u2588\r\n    0x0130: 0xae,\r\n    // \u00AE\r\n    0x0131: 0xb0,\r\n    // \u00B0\r\n    0x0132: 0xbd,\r\n    // \u00BD\r\n    0x0133: 0xbf,\r\n    // \u00BF\r\n    0x0134: 0x2122,\r\n    // \u2122\r\n    0x0135: 0xa2,\r\n    // \u00A2\r\n    0x0136: 0xa3,\r\n    // \u00A3\r\n    0x0137: 0x266a,\r\n    // \u266A\r\n    0x0138: 0xe0,\r\n    // \u00E0\r\n    0x0139: 0xa0,\r\n    //\r\n    0x013a: 0xe8,\r\n    // \u00E8\r\n    0x013b: 0xe2,\r\n    // \u00E2\r\n    0x013c: 0xea,\r\n    // \u00EA\r\n    0x013d: 0xee,\r\n    // \u00EE\r\n    0x013e: 0xf4,\r\n    // \u00F4\r\n    0x013f: 0xfb,\r\n    // \u00FB\r\n    0x0220: 0xc1,\r\n    // \u00C1\r\n    0x0221: 0xc9,\r\n    // \u00C9\r\n    0x0222: 0xd3,\r\n    // \u00D3\r\n    0x0223: 0xda,\r\n    // \u00DA\r\n    0x0224: 0xdc,\r\n    // \u00DC\r\n    0x0225: 0xfc,\r\n    // \u00FC\r\n    0x0226: 0x2018,\r\n    // \u2018\r\n    0x0227: 0xa1,\r\n    // \u00A1\r\n    0x0228: 0x2a,\r\n    // *\r\n    0x0229: 0x27,\r\n    // '\r\n    0x022a: 0x2014,\r\n    // \u2014\r\n    0x022b: 0xa9,\r\n    // \u00A9\r\n    0x022c: 0x2120,\r\n    // \u2120\r\n    0x022d: 0x2022,\r\n    // \u2022\r\n    0x022e: 0x201c,\r\n    // \u201C\r\n    0x022f: 0x201d,\r\n    // \u201D\r\n    0x0230: 0xc0,\r\n    // \u00C0\r\n    0x0231: 0xc2,\r\n    // \u00C2\r\n    0x0232: 0xc7,\r\n    // \u00C7\r\n    0x0233: 0xc8,\r\n    // \u00C8\r\n    0x0234: 0xca,\r\n    // \u00CA\r\n    0x0235: 0xcb,\r\n    // \u00CB\r\n    0x0236: 0xeb,\r\n    // \u00EB\r\n    0x0237: 0xce,\r\n    // \u00CE\r\n    0x0238: 0xcf,\r\n    // \u00CF\r\n    0x0239: 0xef,\r\n    // \u00EF\r\n    0x023a: 0xd4,\r\n    // \u00D4\r\n    0x023b: 0xd9,\r\n    // \u00D9\r\n    0x023c: 0xf9,\r\n    // \u00F9\r\n    0x023d: 0xdb,\r\n    // \u00DB\r\n    0x023e: 0xab,\r\n    // \u00AB\r\n    0x023f: 0xbb,\r\n    // \u00BB\r\n    0x0320: 0xc3,\r\n    // \u00C3\r\n    0x0321: 0xe3,\r\n    // \u00E3\r\n    0x0322: 0xcd,\r\n    // \u00CD\r\n    0x0323: 0xcc,\r\n    // \u00CC\r\n    0x0324: 0xec,\r\n    // \u00EC\r\n    0x0325: 0xd2,\r\n    // \u00D2\r\n    0x0326: 0xf2,\r\n    // \u00F2\r\n    0x0327: 0xd5,\r\n    // \u00D5\r\n    0x0328: 0xf5,\r\n    // \u00F5\r\n    0x0329: 0x7b,\r\n    // {\r\n    0x032a: 0x7d,\r\n    // }\r\n    0x032b: 0x5c,\r\n    // \\\r\n    0x032c: 0x5e,\r\n    // ^\r\n    0x032d: 0x5f,\r\n    // _\r\n    0x032e: 0x7c,\r\n    // |\r\n    0x032f: 0x7e,\r\n    // ~\r\n    0x0330: 0xc4,\r\n    // \u00C4\r\n    0x0331: 0xe4,\r\n    // \u00E4\r\n    0x0332: 0xd6,\r\n    // \u00D6\r\n    0x0333: 0xf6,\r\n    // \u00F6\r\n    0x0334: 0xdf,\r\n    // \u00DF\r\n    0x0335: 0xa5,\r\n    // \u00A5\r\n    0x0336: 0xa4,\r\n    // \u00A4\r\n    0x0337: 0x2502,\r\n    // \u2502\r\n    0x0338: 0xc5,\r\n    // \u00C5\r\n    0x0339: 0xe5,\r\n    // \u00E5\r\n    0x033a: 0xd8,\r\n    // \u00D8\r\n    0x033b: 0xf8,\r\n    // \u00F8\r\n    0x033c: 0x250c,\r\n    // \u250C\r\n    0x033d: 0x2510,\r\n    // \u2510\r\n    0x033e: 0x2514,\r\n    // \u2514\r\n    0x033f: 0x2518 // \u2518\r\n\r\n  };\r\n\r\n  var getCharFromCode = function getCharFromCode(code) {\r\n    if (code === null) {\r\n      return '';\r\n    }\r\n\r\n    code = CHARACTER_TRANSLATION[code] || code;\r\n    return String.fromCharCode(code);\r\n  }; // the index of the last row in a CEA-608 display buffer\r\n\r\n\r\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\r\n  // getting it through bit logic.\r\n\r\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\r\n  // cells. The \"bottom\" row is the last element in the outer array.\r\n\r\n  var createDisplayBuffer = function createDisplayBuffer() {\r\n    var result = [],\r\n        i = BOTTOM_ROW + 1;\r\n\r\n    while (i--) {\r\n      result.push('');\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  var Cea608Stream = function Cea608Stream(field, dataChannel) {\r\n    Cea608Stream.prototype.init.call(this);\r\n    this.field_ = field || 0;\r\n    this.dataChannel_ = dataChannel || 0;\r\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\r\n    this.setConstants();\r\n    this.reset();\r\n\r\n    this.push = function (packet) {\r\n      var data, swap, char0, char1, text; // remove the parity bits\r\n\r\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\r\n\r\n      if (data === this.lastControlCode_) {\r\n        this.lastControlCode_ = null;\r\n        return;\r\n      } // Store control codes\r\n\r\n\r\n      if ((data & 0xf000) === 0x1000) {\r\n        this.lastControlCode_ = data;\r\n      } else if (data !== this.PADDING_) {\r\n        this.lastControlCode_ = null;\r\n      }\r\n\r\n      char0 = data >>> 8;\r\n      char1 = data & 0xff;\r\n\r\n      if (data === this.PADDING_) {\r\n        return;\r\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\r\n        this.mode_ = 'popOn';\r\n      } else if (data === this.END_OF_CAPTION_) {\r\n        // If an EOC is received while in paint-on mode, the displayed caption\r\n        // text should be swapped to non-displayed memory as if it was a pop-on\r\n        // caption. Because of that, we should explicitly switch back to pop-on\r\n        // mode\r\n        this.mode_ = 'popOn';\r\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\r\n\r\n        this.flushDisplayed(packet.pts); // flip memory\r\n\r\n        swap = this.displayed_;\r\n        this.displayed_ = this.nonDisplayed_;\r\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\r\n\r\n        this.startPts_ = packet.pts;\r\n      } else if (data === this.ROLL_UP_2_ROWS_) {\r\n        this.rollUpRows_ = 2;\r\n        this.setRollUp(packet.pts);\r\n      } else if (data === this.ROLL_UP_3_ROWS_) {\r\n        this.rollUpRows_ = 3;\r\n        this.setRollUp(packet.pts);\r\n      } else if (data === this.ROLL_UP_4_ROWS_) {\r\n        this.rollUpRows_ = 4;\r\n        this.setRollUp(packet.pts);\r\n      } else if (data === this.CARRIAGE_RETURN_) {\r\n        this.clearFormatting(packet.pts);\r\n        this.flushDisplayed(packet.pts);\r\n        this.shiftRowsUp_();\r\n        this.startPts_ = packet.pts;\r\n      } else if (data === this.BACKSPACE_) {\r\n        if (this.mode_ === 'popOn') {\r\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\r\n        } else {\r\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\r\n        }\r\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\r\n        this.flushDisplayed(packet.pts);\r\n        this.displayed_ = createDisplayBuffer();\r\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\r\n        this.nonDisplayed_ = createDisplayBuffer();\r\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\r\n        if (this.mode_ !== 'paintOn') {\r\n          // NOTE: This should be removed when proper caption positioning is\r\n          // implemented\r\n          this.flushDisplayed(packet.pts);\r\n          this.displayed_ = createDisplayBuffer();\r\n        }\r\n\r\n        this.mode_ = 'paintOn';\r\n        this.startPts_ = packet.pts; // Append special characters to caption text\r\n      } else if (this.isSpecialCharacter(char0, char1)) {\r\n        // Bitmask char0 so that we can apply character transformations\r\n        // regardless of field and data channel.\r\n        // Then byte-shift to the left and OR with char1 so we can pass the\r\n        // entire character code to `getCharFromCode`.\r\n        char0 = (char0 & 0x03) << 8;\r\n        text = getCharFromCode(char0 | char1);\r\n        this[this.mode_](packet.pts, text);\r\n        this.column_++; // Append extended characters to caption text\r\n      } else if (this.isExtCharacter(char0, char1)) {\r\n        // Extended characters always follow their \"non-extended\" equivalents.\r\n        // IE if a \"\u00E8\" is desired, you'll always receive \"e\u00E8\"; non-compliant\r\n        // decoders are supposed to drop the \"\u00E8\", while compliant decoders\r\n        // backspace the \"e\" and insert \"\u00E8\".\r\n        // Delete the previous character\r\n        if (this.mode_ === 'popOn') {\r\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\r\n        } else {\r\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\r\n        } // Bitmask char0 so that we can apply character transformations\r\n        // regardless of field and data channel.\r\n        // Then byte-shift to the left and OR with char1 so we can pass the\r\n        // entire character code to `getCharFromCode`.\r\n\r\n\r\n        char0 = (char0 & 0x03) << 8;\r\n        text = getCharFromCode(char0 | char1);\r\n        this[this.mode_](packet.pts, text);\r\n        this.column_++; // Process mid-row codes\r\n      } else if (this.isMidRowCode(char0, char1)) {\r\n        // Attributes are not additive, so clear all formatting\r\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\r\n        // should be replaced with spaces, so add one now\r\n\r\n        this[this.mode_](packet.pts, ' ');\r\n        this.column_++;\r\n\r\n        if ((char1 & 0xe) === 0xe) {\r\n          this.addFormatting(packet.pts, ['i']);\r\n        }\r\n\r\n        if ((char1 & 0x1) === 0x1) {\r\n          this.addFormatting(packet.pts, ['u']);\r\n        } // Detect offset control codes and adjust cursor\r\n\r\n      } else if (this.isOffsetControlCode(char0, char1)) {\r\n        // Cursor position is set by indent PAC (see below) in 4-column\r\n        // increments, with an additional offset code of 1-3 to reach any\r\n        // of the 32 columns specified by CEA-608. So all we need to do\r\n        // here is increment the column cursor by the given offset.\r\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\r\n      } else if (this.isPAC(char0, char1)) {\r\n        // There's no logic for PAC -> row mapping, so we have to just\r\n        // find the row code in an array and use its index :(\r\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\r\n\r\n        if (this.mode_ === 'rollUp') {\r\n          // This implies that the base row is incorrectly set.\r\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\r\n          // of roll-up rows set.\r\n          if (row - this.rollUpRows_ + 1 < 0) {\r\n            row = this.rollUpRows_ - 1;\r\n          }\r\n\r\n          this.setRollUp(packet.pts, row);\r\n        }\r\n\r\n        if (row !== this.row_) {\r\n          // formatting is only persistent for current row\r\n          this.clearFormatting(packet.pts);\r\n          this.row_ = row;\r\n        } // All PACs can apply underline, so detect and apply\r\n        // (All odd-numbered second bytes set underline)\r\n\r\n\r\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\r\n          this.addFormatting(packet.pts, ['u']);\r\n        }\r\n\r\n        if ((data & 0x10) === 0x10) {\r\n          // We've got an indent level code. Each successive even number\r\n          // increments the column cursor by 4, so we can get the desired\r\n          // column position by bit-shifting to the right (to get n/2)\r\n          // and multiplying by 4.\r\n          this.column_ = ((data & 0xe) >> 1) * 4;\r\n        }\r\n\r\n        if (this.isColorPAC(char1)) {\r\n          // it's a color code, though we only support white, which\r\n          // can be either normal or italicized. white italics can be\r\n          // either 0x4e or 0x6e depending on the row, so we just\r\n          // bitwise-and with 0xe to see if italics should be turned on\r\n          if ((char1 & 0xe) === 0xe) {\r\n            this.addFormatting(packet.pts, ['i']);\r\n          }\r\n        } // We have a normal character in char0, and possibly one in char1\r\n\r\n      } else if (this.isNormalChar(char0)) {\r\n        if (char1 === 0x00) {\r\n          char1 = null;\r\n        }\r\n\r\n        text = getCharFromCode(char0);\r\n        text += getCharFromCode(char1);\r\n        this[this.mode_](packet.pts, text);\r\n        this.column_ += text.length;\r\n      } // finish data processing\r\n\r\n    };\r\n  };\r\n\r\n  Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\r\n  // display buffer\r\n\r\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\r\n    var content = this.displayed_ // remove spaces from the start and end of the string\r\n    .map(function (row, index) {\r\n      try {\r\n        return row.trim();\r\n      } catch (e) {\r\n        // Ordinarily, this shouldn't happen. However, caption\r\n        // parsing errors should not throw exceptions and\r\n        // break playback.\r\n        this.trigger('log', {\r\n          level: 'warn',\r\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\r\n        });\r\n        return '';\r\n      }\r\n    }, this) // combine all text rows to display in one cue\r\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\r\n    .replace(/^\\n+|\\n+$/g, '');\r\n\r\n    if (content.length) {\r\n      this.trigger('data', {\r\n        startPts: this.startPts_,\r\n        endPts: pts,\r\n        text: content,\r\n        stream: this.name_\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Zero out the data, used for startup and on seek\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.reset = function () {\r\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\r\n    // actually display captions. If a caption is shifted to a row\r\n    // with a lower index than this, it is cleared from the display\r\n    // buffer\r\n\r\n    this.topRow_ = 0;\r\n    this.startPts_ = 0;\r\n    this.displayed_ = createDisplayBuffer();\r\n    this.nonDisplayed_ = createDisplayBuffer();\r\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\r\n\r\n    this.column_ = 0;\r\n    this.row_ = BOTTOM_ROW;\r\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\r\n\r\n    this.formatting_ = [];\r\n  };\r\n  /**\r\n   * Sets up control code and related constants for this instance\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.setConstants = function () {\r\n    // The following attributes have these uses:\r\n    // ext_ :    char0 for mid-row codes, and the base for extended\r\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\r\n    //           extended codes)\r\n    // control_: char0 for control codes, except byte-shifted to the\r\n    //           left so that we can do this.control_ | CONTROL_CODE\r\n    // offset_:  char0 for tab offset codes\r\n    //\r\n    // It's also worth noting that control codes, and _only_ control codes,\r\n    // differ between field 1 and field2. Field 2 control codes are always\r\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\r\n    // control value.\r\n    if (this.dataChannel_ === 0) {\r\n      this.BASE_ = 0x10;\r\n      this.EXT_ = 0x11;\r\n      this.CONTROL_ = (0x14 | this.field_) << 8;\r\n      this.OFFSET_ = 0x17;\r\n    } else if (this.dataChannel_ === 1) {\r\n      this.BASE_ = 0x18;\r\n      this.EXT_ = 0x19;\r\n      this.CONTROL_ = (0x1c | this.field_) << 8;\r\n      this.OFFSET_ = 0x1f;\r\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\r\n    // list is not exhaustive. For a more comprehensive listing and semantics see\r\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\r\n    // Padding\r\n\r\n\r\n    this.PADDING_ = 0x0000; // Pop-on Mode\r\n\r\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\r\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\r\n\r\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\r\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\r\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\r\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\r\n\r\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\r\n\r\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\r\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\r\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\r\n  };\r\n  /**\r\n   * Detects if the 2-byte packet data is a special character\r\n   *\r\n   * Special characters have a second byte in the range 0x30 to 0x3f,\r\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\r\n   * data channel 2).\r\n   *\r\n   * @param  {Integer} char0 The first byte\r\n   * @param  {Integer} char1 The second byte\r\n   * @return {Boolean}       Whether the 2 bytes are an special character\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\r\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\r\n  };\r\n  /**\r\n   * Detects if the 2-byte packet data is an extended character\r\n   *\r\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\r\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\r\n   * 0x1a or 0x1b (for data channel 2).\r\n   *\r\n   * @param  {Integer} char0 The first byte\r\n   * @param  {Integer} char1 The second byte\r\n   * @return {Boolean}       Whether the 2 bytes are an extended character\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\r\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\r\n  };\r\n  /**\r\n   * Detects if the 2-byte packet is a mid-row code\r\n   *\r\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\r\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\r\n   * channel 2).\r\n   *\r\n   * @param  {Integer} char0 The first byte\r\n   * @param  {Integer} char1 The second byte\r\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\r\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\r\n  };\r\n  /**\r\n   * Detects if the 2-byte packet is an offset control code\r\n   *\r\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\r\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\r\n   * data channel 2).\r\n   *\r\n   * @param  {Integer} char0 The first byte\r\n   * @param  {Integer} char1 The second byte\r\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\r\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\r\n  };\r\n  /**\r\n   * Detects if the 2-byte packet is a Preamble Address Code\r\n   *\r\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\r\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\r\n   * range 0x40 to 0x7f.\r\n   *\r\n   * @param  {Integer} char0 The first byte\r\n   * @param  {Integer} char1 The second byte\r\n   * @return {Boolean}       Whether the 2 bytes are a PAC\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\r\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\r\n  };\r\n  /**\r\n   * Detects if a packet's second byte is in the range of a PAC color code\r\n   *\r\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\r\n   * 0x60 to 0x6f.\r\n   *\r\n   * @param  {Integer} char1 The second byte\r\n   * @return {Boolean}       Whether the byte is a color PAC\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isColorPAC = function (char1) {\r\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\r\n  };\r\n  /**\r\n   * Detects if a single byte is in the range of a normal character\r\n   *\r\n   * Normal text bytes are in the range 0x20 to 0x7f.\r\n   *\r\n   * @param  {Integer} char  The byte\r\n   * @return {Boolean}       Whether the byte is a normal character\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.isNormalChar = function (_char2) {\r\n    return _char2 >= 0x20 && _char2 <= 0x7f;\r\n  };\r\n  /**\r\n   * Configures roll-up\r\n   *\r\n   * @param  {Integer} pts         Current PTS\r\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\r\n   *                               a new position\r\n   */\r\n\r\n\r\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\r\n    // Reset the base row to the bottom row when switching modes\r\n    if (this.mode_ !== 'rollUp') {\r\n      this.row_ = BOTTOM_ROW;\r\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\r\n\r\n      this.flushDisplayed(pts);\r\n      this.nonDisplayed_ = createDisplayBuffer();\r\n      this.displayed_ = createDisplayBuffer();\r\n    }\r\n\r\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\r\n      // move currently displayed captions (up or down) to the new base row\r\n      for (var i = 0; i < this.rollUpRows_; i++) {\r\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\r\n        this.displayed_[this.row_ - i] = '';\r\n      }\r\n    }\r\n\r\n    if (newBaseRow === undefined) {\r\n      newBaseRow = this.row_;\r\n    }\r\n\r\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\r\n  }; // Adds the opening HTML tag for the passed character to the caption text,\r\n  // and keeps track of it for later closing\r\n\r\n\r\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\r\n    this.formatting_ = this.formatting_.concat(format);\r\n    var text = format.reduce(function (text, format) {\r\n      return text + '<' + format + '>';\r\n    }, '');\r\n    this[this.mode_](pts, text);\r\n  }; // Adds HTML closing tags for current formatting to caption text and\r\n  // clears remembered formatting\r\n\r\n\r\n  Cea608Stream.prototype.clearFormatting = function (pts) {\r\n    if (!this.formatting_.length) {\r\n      return;\r\n    }\r\n\r\n    var text = this.formatting_.reverse().reduce(function (text, format) {\r\n      return text + '</' + format + '>';\r\n    }, '');\r\n    this.formatting_ = [];\r\n    this[this.mode_](pts, text);\r\n  }; // Mode Implementations\r\n\r\n\r\n  Cea608Stream.prototype.popOn = function (pts, text) {\r\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\r\n\r\n    baseRow += text;\r\n    this.nonDisplayed_[this.row_] = baseRow;\r\n  };\r\n\r\n  Cea608Stream.prototype.rollUp = function (pts, text) {\r\n    var baseRow = this.displayed_[this.row_];\r\n    baseRow += text;\r\n    this.displayed_[this.row_] = baseRow;\r\n  };\r\n\r\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\r\n    var i; // clear out inactive rows\r\n\r\n    for (i = 0; i < this.topRow_; i++) {\r\n      this.displayed_[i] = '';\r\n    }\r\n\r\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\r\n      this.displayed_[i] = '';\r\n    } // shift displayed rows up\r\n\r\n\r\n    for (i = this.topRow_; i < this.row_; i++) {\r\n      this.displayed_[i] = this.displayed_[i + 1];\r\n    } // clear out the bottom row\r\n\r\n\r\n    this.displayed_[this.row_] = '';\r\n  };\r\n\r\n  Cea608Stream.prototype.paintOn = function (pts, text) {\r\n    var baseRow = this.displayed_[this.row_];\r\n    baseRow += text;\r\n    this.displayed_[this.row_] = baseRow;\r\n  }; // exports\r\n\r\n\r\n  var captionStream = {\r\n    CaptionStream: CaptionStream$1,\r\n    Cea608Stream: Cea608Stream,\r\n    Cea708Stream: Cea708Stream\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n  var streamTypes = {\r\n    H264_STREAM_TYPE: 0x1B,\r\n    ADTS_STREAM_TYPE: 0x0F,\r\n    METADATA_STREAM_TYPE: 0x15\r\n  };\r\n  var MAX_TS = 8589934592;\r\n  var RO_THRESH = 4294967296;\r\n  var TYPE_SHARED = 'shared';\r\n\r\n  var handleRollover$1 = function handleRollover(value, reference) {\r\n    var direction = 1;\r\n\r\n    if (value > reference) {\r\n      // If the current timestamp value is greater than our reference timestamp and we detect a\r\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\r\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\r\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\r\n      // rollover point. In loading this segment, the timestamp values will be very large,\r\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\r\n      // the time stamp to be `value - 2^33`.\r\n      direction = -1;\r\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\r\n    // cause an incorrect adjustment.\r\n\r\n\r\n    while (Math.abs(reference - value) > RO_THRESH) {\r\n      value += direction * MAX_TS;\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\r\n    var lastDTS, referenceDTS;\r\n    TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\r\n    // video and audio. We could use `undefined` here, but having a string\r\n    // makes debugging a little clearer.\r\n\r\n    this.type_ = type || TYPE_SHARED;\r\n\r\n    this.push = function (data) {\r\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\r\n      // streams will only accept data that matches their type.\r\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\r\n        return;\r\n      }\r\n\r\n      if (referenceDTS === undefined) {\r\n        referenceDTS = data.dts;\r\n      }\r\n\r\n      data.dts = handleRollover$1(data.dts, referenceDTS);\r\n      data.pts = handleRollover$1(data.pts, referenceDTS);\r\n      lastDTS = data.dts;\r\n      this.trigger('data', data);\r\n    };\r\n\r\n    this.flush = function () {\r\n      referenceDTS = lastDTS;\r\n      this.trigger('done');\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      this.flush();\r\n      this.trigger('endedtimeline');\r\n    };\r\n\r\n    this.discontinuity = function () {\r\n      referenceDTS = void 0;\r\n      lastDTS = void 0;\r\n    };\r\n\r\n    this.reset = function () {\r\n      this.discontinuity();\r\n      this.trigger('reset');\r\n    };\r\n  };\r\n\r\n  TimestampRolloverStream$1.prototype = new stream();\r\n  var timestampRolloverStream = {\r\n    TimestampRolloverStream: TimestampRolloverStream$1,\r\n    handleRollover: handleRollover$1\r\n  };\r\n\r\n  var percentEncode$1 = function percentEncode(bytes, start, end) {\r\n    var i,\r\n        result = '';\r\n\r\n    for (i = start; i < end; i++) {\r\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\r\n    }\r\n\r\n    return result;\r\n  },\r\n      // return the string representation of the specified byte range,\r\n  // interpreted as UTf-8.\r\n  parseUtf8 = function parseUtf8(bytes, start, end) {\r\n    return decodeURIComponent(percentEncode$1(bytes, start, end));\r\n  },\r\n      // return the string representation of the specified byte range,\r\n  // interpreted as ISO-8859-1.\r\n  parseIso88591$1 = function parseIso88591(bytes, start, end) {\r\n    return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\r\n  },\r\n      parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\r\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\r\n  },\r\n      tagParsers = {\r\n    TXXX: function TXXX(tag) {\r\n      var i;\r\n\r\n      if (tag.data[0] !== 3) {\r\n        // ignore frames with unrecognized character encodings\r\n        return;\r\n      }\r\n\r\n      for (i = 1; i < tag.data.length; i++) {\r\n        if (tag.data[i] === 0) {\r\n          // parse the text fields\r\n          tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\r\n\r\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\r\n          break;\r\n        }\r\n      }\r\n\r\n      tag.data = tag.value;\r\n    },\r\n    WXXX: function WXXX(tag) {\r\n      var i;\r\n\r\n      if (tag.data[0] !== 3) {\r\n        // ignore frames with unrecognized character encodings\r\n        return;\r\n      }\r\n\r\n      for (i = 1; i < tag.data.length; i++) {\r\n        if (tag.data[i] === 0) {\r\n          // parse the description and URL fields\r\n          tag.description = parseUtf8(tag.data, 1, i);\r\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    PRIV: function PRIV(tag) {\r\n      var i;\r\n\r\n      for (i = 0; i < tag.data.length; i++) {\r\n        if (tag.data[i] === 0) {\r\n          // parse the description and URL fields\r\n          tag.owner = parseIso88591$1(tag.data, 0, i);\r\n          break;\r\n        }\r\n      }\r\n\r\n      tag.privateData = tag.data.subarray(i + 1);\r\n      tag.data = tag.privateData;\r\n    }\r\n  },\r\n      _MetadataStream;\r\n\r\n  _MetadataStream = function MetadataStream(options) {\r\n    var settings = {\r\n      // the bytes of the program-level descriptor field in MP2T\r\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\r\n      // program element descriptors\"\r\n      descriptor: options && options.descriptor\r\n    },\r\n        // the total size in bytes of the ID3 tag being parsed\r\n    tagSize = 0,\r\n        // tag data that is not complete enough to be parsed\r\n    buffer = [],\r\n        // the total number of bytes currently in the buffer\r\n    bufferSize = 0,\r\n        i;\r\n\r\n    _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\r\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\r\n\r\n\r\n    this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\r\n\r\n    if (settings.descriptor) {\r\n      for (i = 0; i < settings.descriptor.length; i++) {\r\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\r\n      }\r\n    }\r\n\r\n    this.push = function (chunk) {\r\n      var tag, frameStart, frameSize, frame, i, frameHeader;\r\n\r\n      if (chunk.type !== 'timed-metadata') {\r\n        return;\r\n      } // if data_alignment_indicator is set in the PES header,\r\n      // we must have the start of a new ID3 tag. Assume anything\r\n      // remaining in the buffer was malformed and throw it out\r\n\r\n\r\n      if (chunk.dataAlignmentIndicator) {\r\n        bufferSize = 0;\r\n        buffer.length = 0;\r\n      } // ignore events that don't look like ID3 data\r\n\r\n\r\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\r\n        this.trigger('log', {\r\n          level: 'warn',\r\n          message: 'Skipping unrecognized metadata packet'\r\n        });\r\n        return;\r\n      } // add this chunk to the data we've collected so far\r\n\r\n\r\n      buffer.push(chunk);\r\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\r\n\r\n      if (buffer.length === 1) {\r\n        // the frame size is transmitted as a 28-bit integer in the\r\n        // last four bytes of the ID3 header.\r\n        // The most significant bit of each byte is dropped and the\r\n        // results concatenated to recover the actual value.\r\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\r\n        // convenient for our comparisons to include it\r\n\r\n        tagSize += 10;\r\n      } // if the entire frame has not arrived, wait for more data\r\n\r\n\r\n      if (bufferSize < tagSize) {\r\n        return;\r\n      } // collect the entire frame so it can be parsed\r\n\r\n\r\n      tag = {\r\n        data: new Uint8Array(tagSize),\r\n        frames: [],\r\n        pts: buffer[0].pts,\r\n        dts: buffer[0].dts\r\n      };\r\n\r\n      for (i = 0; i < tagSize;) {\r\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\r\n        i += buffer[0].data.byteLength;\r\n        bufferSize -= buffer[0].data.byteLength;\r\n        buffer.shift();\r\n      } // find the start of the first frame and the end of the tag\r\n\r\n\r\n      frameStart = 10;\r\n\r\n      if (tag.data[5] & 0x40) {\r\n        // advance the frame start past the extended header\r\n        frameStart += 4; // header size field\r\n\r\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\r\n\r\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\r\n      } // parse one or more ID3 frames\r\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\r\n\r\n\r\n      do {\r\n        // determine the number of bytes in this frame\r\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\r\n\r\n        if (frameSize < 1) {\r\n          this.trigger('log', {\r\n            level: 'warn',\r\n            message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\r\n          });\r\n          return;\r\n        }\r\n\r\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\r\n        frame = {\r\n          id: frameHeader,\r\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\r\n        };\r\n        frame.key = frame.id;\r\n\r\n        if (tagParsers[frame.id]) {\r\n          tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\r\n          // time for raw AAC data\r\n\r\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\r\n            var d = frame.data,\r\n                size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\r\n            size *= 4;\r\n            size += d[7] & 0x03;\r\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\r\n            // on the value of this frame\r\n            // we couldn't have known the appropriate pts and dts before\r\n            // parsing this ID3 tag so set those values now\r\n\r\n            if (tag.pts === undefined && tag.dts === undefined) {\r\n              tag.pts = frame.timeStamp;\r\n              tag.dts = frame.timeStamp;\r\n            }\r\n\r\n            this.trigger('timestamp', frame);\r\n          }\r\n        }\r\n\r\n        tag.frames.push(frame);\r\n        frameStart += 10; // advance past the frame header\r\n\r\n        frameStart += frameSize; // advance past the frame body\r\n      } while (frameStart < tagSize);\r\n\r\n      this.trigger('data', tag);\r\n    };\r\n  };\r\n\r\n  _MetadataStream.prototype = new stream();\r\n  var metadataStream = _MetadataStream;\r\n  var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\r\n\r\n  var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\r\n\r\n\r\n  var MP2T_PACKET_LENGTH$1 = 188,\r\n      // bytes\r\n  SYNC_BYTE$1 = 0x47;\r\n  /**\r\n   * Splits an incoming stream of binary data into MPEG-2 Transport\r\n   * Stream packets.\r\n   */\r\n\r\n  _TransportPacketStream = function TransportPacketStream() {\r\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\r\n        bytesInBuffer = 0;\r\n\r\n    _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\r\n\r\n    /**\r\n     * Split a stream of data into M2TS packets\r\n    **/\r\n\r\n\r\n    this.push = function (bytes) {\r\n      var startIndex = 0,\r\n          endIndex = MP2T_PACKET_LENGTH$1,\r\n          everything; // If there are bytes remaining from the last segment, prepend them to the\r\n      // bytes that were pushed in\r\n\r\n      if (bytesInBuffer) {\r\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\r\n        everything.set(buffer.subarray(0, bytesInBuffer));\r\n        everything.set(bytes, bytesInBuffer);\r\n        bytesInBuffer = 0;\r\n      } else {\r\n        everything = bytes;\r\n      } // While we have enough data for a packet\r\n\r\n\r\n      while (endIndex < everything.byteLength) {\r\n        // Look for a pair of start and end sync bytes in the data..\r\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\r\n          // We found a packet so emit it and jump one whole packet forward in\r\n          // the stream\r\n          this.trigger('data', everything.subarray(startIndex, endIndex));\r\n          startIndex += MP2T_PACKET_LENGTH$1;\r\n          endIndex += MP2T_PACKET_LENGTH$1;\r\n          continue;\r\n        } // If we get here, we have somehow become de-synchronized and we need to step\r\n        // forward one byte at a time until we find a pair of sync bytes that denote\r\n        // a packet\r\n\r\n\r\n        startIndex++;\r\n        endIndex++;\r\n      } // If there was some data left over at the end of the segment that couldn't\r\n      // possibly be a whole packet, keep it because it might be the start of a packet\r\n      // that continues in the next segment\r\n\r\n\r\n      if (startIndex < everything.byteLength) {\r\n        buffer.set(everything.subarray(startIndex), 0);\r\n        bytesInBuffer = everything.byteLength - startIndex;\r\n      }\r\n    };\r\n    /**\r\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\r\n    **/\r\n\r\n\r\n    this.flush = function () {\r\n      // If the buffer contains a whole packet when we are being flushed, emit it\r\n      // and empty the buffer. Otherwise hold onto the data because it may be\r\n      // important for decoding the next segment\r\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\r\n        this.trigger('data', buffer);\r\n        bytesInBuffer = 0;\r\n      }\r\n\r\n      this.trigger('done');\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      this.flush();\r\n      this.trigger('endedtimeline');\r\n    };\r\n\r\n    this.reset = function () {\r\n      bytesInBuffer = 0;\r\n      this.trigger('reset');\r\n    };\r\n  };\r\n\r\n  _TransportPacketStream.prototype = new stream();\r\n  /**\r\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\r\n   * forms of the individual transport stream packets.\r\n   */\r\n\r\n  _TransportParseStream = function TransportParseStream() {\r\n    var parsePsi, parsePat, parsePmt, self;\r\n\r\n    _TransportParseStream.prototype.init.call(this);\r\n\r\n    self = this;\r\n    this.packetsWaitingForPmt = [];\r\n    this.programMapTable = undefined;\r\n\r\n    parsePsi = function parsePsi(payload, psi) {\r\n      var offset = 0; // PSI packets may be split into multiple sections and those\r\n      // sections may be split into multiple packets. If a PSI\r\n      // section starts in this packet, the payload_unit_start_indicator\r\n      // will be true and the first byte of the payload will indicate\r\n      // the offset from the current position to the start of the\r\n      // section.\r\n\r\n      if (psi.payloadUnitStartIndicator) {\r\n        offset += payload[offset] + 1;\r\n      }\r\n\r\n      if (psi.type === 'pat') {\r\n        parsePat(payload.subarray(offset), psi);\r\n      } else {\r\n        parsePmt(payload.subarray(offset), psi);\r\n      }\r\n    };\r\n\r\n    parsePat = function parsePat(payload, pat) {\r\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\r\n\r\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\r\n      // skip the PSI header and parse the first PMT entry\r\n\r\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\r\n      pat.pmtPid = self.pmtPid;\r\n    };\r\n    /**\r\n     * Parse out the relevant fields of a Program Map Table (PMT).\r\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\r\n     * packet. The first byte in this array should be the table_id\r\n     * field.\r\n     * @param pmt {object} the object that should be decorated with\r\n     * fields parsed from the PMT.\r\n     */\r\n\r\n\r\n    parsePmt = function parsePmt(payload, pmt) {\r\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\r\n      // take effect. We don't believe this should ever be the case\r\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\r\n      // them. Future PMT declarations have the current_next_indicator\r\n      // set to zero.\r\n\r\n      if (!(payload[5] & 0x01)) {\r\n        return;\r\n      } // overwrite any existing program map table\r\n\r\n\r\n      self.programMapTable = {\r\n        video: null,\r\n        audio: null,\r\n        'timed-metadata': {}\r\n      }; // the mapping table ends at the end of the current section\r\n\r\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\r\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\r\n      // long the program info descriptors are\r\n\r\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\r\n\r\n      offset = 12 + programInfoLength;\r\n\r\n      while (offset < tableEnd) {\r\n        var streamType = payload[offset];\r\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\r\n        // TODO: should this be done for metadata too? for now maintain behavior of\r\n        //       multiple metadata streams\r\n\r\n        if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\r\n          self.programMapTable.video = pid;\r\n        } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\r\n          self.programMapTable.audio = pid;\r\n        } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\r\n          // map pid to stream type for metadata streams\r\n          self.programMapTable['timed-metadata'][pid] = streamType;\r\n        } // move to the next table entry\r\n        // skip past the elementary stream descriptors, if present\r\n\r\n\r\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\r\n      } // record the map on the packet as well\r\n\r\n\r\n      pmt.programMapTable = self.programMapTable;\r\n    };\r\n    /**\r\n     * Deliver a new MP2T packet to the next stream in the pipeline.\r\n     */\r\n\r\n\r\n    this.push = function (packet) {\r\n      var result = {},\r\n          offset = 4;\r\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\r\n\r\n      result.pid = packet[1] & 0x1f;\r\n      result.pid <<= 8;\r\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\r\n      // fifth byte of the TS packet header. The adaptation field is\r\n      // used to add stuffing to PES packets that don't fill a complete\r\n      // TS packet, and to specify some forms of timing and control data\r\n      // that we do not currently use.\r\n\r\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\r\n        offset += packet[offset] + 1;\r\n      } // parse the rest of the packet based on the type\r\n\r\n\r\n      if (result.pid === 0) {\r\n        result.type = 'pat';\r\n        parsePsi(packet.subarray(offset), result);\r\n        this.trigger('data', result);\r\n      } else if (result.pid === this.pmtPid) {\r\n        result.type = 'pmt';\r\n        parsePsi(packet.subarray(offset), result);\r\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\r\n\r\n        while (this.packetsWaitingForPmt.length) {\r\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\r\n        }\r\n      } else if (this.programMapTable === undefined) {\r\n        // When we have not seen a PMT yet, defer further processing of\r\n        // PES packets until one has been parsed\r\n        this.packetsWaitingForPmt.push([packet, offset, result]);\r\n      } else {\r\n        this.processPes_(packet, offset, result);\r\n      }\r\n    };\r\n\r\n    this.processPes_ = function (packet, offset, result) {\r\n      // set the appropriate stream type\r\n      if (result.pid === this.programMapTable.video) {\r\n        result.streamType = streamTypes.H264_STREAM_TYPE;\r\n      } else if (result.pid === this.programMapTable.audio) {\r\n        result.streamType = streamTypes.ADTS_STREAM_TYPE;\r\n      } else {\r\n        // if not video or audio, it is timed-metadata or unknown\r\n        // if unknown, streamType will be undefined\r\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\r\n      }\r\n\r\n      result.type = 'pes';\r\n      result.data = packet.subarray(offset);\r\n      this.trigger('data', result);\r\n    };\r\n  };\r\n\r\n  _TransportParseStream.prototype = new stream();\r\n  _TransportParseStream.STREAM_TYPES = {\r\n    h264: 0x1b,\r\n    adts: 0x0f\r\n  };\r\n  /**\r\n   * Reconsistutes program elementary stream (PES) packets from parsed\r\n   * transport stream packets. That is, if you pipe an\r\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\r\n   * events will be events which capture the bytes for individual PES\r\n   * packets plus relevant metadata that has been extracted from the\r\n   * container.\r\n   */\r\n\r\n  _ElementaryStream = function ElementaryStream() {\r\n    var self = this,\r\n        segmentHadPmt = false,\r\n        // PES packet fragments\r\n    video = {\r\n      data: [],\r\n      size: 0\r\n    },\r\n        audio = {\r\n      data: [],\r\n      size: 0\r\n    },\r\n        timedMetadata = {\r\n      data: [],\r\n      size: 0\r\n    },\r\n        programMapTable,\r\n        parsePes = function parsePes(payload, pes) {\r\n      var ptsDtsFlags;\r\n      var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\r\n\r\n      pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\r\n      // that are frame data that is continuing from the previous fragment. This\r\n      // is to check that the pes data is the start of a new pes payload\r\n\r\n      if (startPrefix !== 1) {\r\n        return;\r\n      } // get the packet length, this will be 0 for video\r\n\r\n\r\n      pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\r\n\r\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\r\n      // and a DTS value. Determine what combination of values is\r\n      // available to work with.\r\n\r\n      ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\r\n      // performs all bitwise operations on 32-bit integers but javascript\r\n      // supports a much greater range (52-bits) of integer using standard\r\n      // mathematical operations.\r\n      // We construct a 31-bit value using bitwise operators over the 31\r\n      // most significant bits and then multiply by 4 (equal to a left-shift\r\n      // of 2) before we add the final 2 least significant bits of the\r\n      // timestamp (equal to an OR.)\r\n\r\n      if (ptsDtsFlags & 0xC0) {\r\n        // the PTS and DTS are not written out directly. For information\r\n        // on how they are encoded, see\r\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\r\n        pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\r\n        pes.pts *= 4; // Left shift by 2\r\n\r\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\r\n\r\n        pes.dts = pes.pts;\r\n\r\n        if (ptsDtsFlags & 0x40) {\r\n          pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\r\n          pes.dts *= 4; // Left shift by 2\r\n\r\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\r\n        }\r\n      } // the data section starts immediately after the PES header.\r\n      // pes_header_data_length specifies the number of header bytes\r\n      // that follow the last byte of the field.\r\n\r\n\r\n      pes.data = payload.subarray(9 + payload[8]);\r\n    },\r\n\r\n    /**\r\n      * Pass completely parsed PES packets to the next stream in the pipeline\r\n     **/\r\n    flushStream = function flushStream(stream, type, forceFlush) {\r\n      var packetData = new Uint8Array(stream.size),\r\n          event = {\r\n        type: type\r\n      },\r\n          i = 0,\r\n          offset = 0,\r\n          packetFlushable = false,\r\n          fragment; // do nothing if there is not enough buffered data for a complete\r\n      // PES header\r\n\r\n      if (!stream.data.length || stream.size < 9) {\r\n        return;\r\n      }\r\n\r\n      event.trackId = stream.data[0].pid; // reassemble the packet\r\n\r\n      for (i = 0; i < stream.data.length; i++) {\r\n        fragment = stream.data[i];\r\n        packetData.set(fragment.data, offset);\r\n        offset += fragment.data.byteLength;\r\n      } // parse assembled packet's PES header\r\n\r\n\r\n      parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\r\n      // check that there is enough stream data to fill the packet\r\n\r\n      packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\r\n\r\n      if (forceFlush || packetFlushable) {\r\n        stream.size = 0;\r\n        stream.data.length = 0;\r\n      } // only emit packets that are complete. this is to avoid assembling\r\n      // incomplete PES packets due to poor segmentation\r\n\r\n\r\n      if (packetFlushable) {\r\n        self.trigger('data', event);\r\n      }\r\n    };\r\n\r\n    _ElementaryStream.prototype.init.call(this);\r\n    /**\r\n     * Identifies M2TS packet types and parses PES packets using metadata\r\n     * parsed from the PMT\r\n     **/\r\n\r\n\r\n    this.push = function (data) {\r\n      ({\r\n        pat: function pat() {// we have to wait for the PMT to arrive as well before we\r\n          // have any meaningful metadata\r\n        },\r\n        pes: function pes() {\r\n          var stream, streamType;\r\n\r\n          switch (data.streamType) {\r\n            case streamTypes.H264_STREAM_TYPE:\r\n              stream = video;\r\n              streamType = 'video';\r\n              break;\r\n\r\n            case streamTypes.ADTS_STREAM_TYPE:\r\n              stream = audio;\r\n              streamType = 'audio';\r\n              break;\r\n\r\n            case streamTypes.METADATA_STREAM_TYPE:\r\n              stream = timedMetadata;\r\n              streamType = 'timed-metadata';\r\n              break;\r\n\r\n            default:\r\n              // ignore unknown stream types\r\n              return;\r\n          } // if a new packet is starting, we can flush the completed\r\n          // packet\r\n\r\n\r\n          if (data.payloadUnitStartIndicator) {\r\n            flushStream(stream, streamType, true);\r\n          } // buffer this fragment until we are sure we've received the\r\n          // complete payload\r\n\r\n\r\n          stream.data.push(data);\r\n          stream.size += data.data.byteLength;\r\n        },\r\n        pmt: function pmt() {\r\n          var event = {\r\n            type: 'metadata',\r\n            tracks: []\r\n          };\r\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\r\n\r\n          if (programMapTable.video !== null) {\r\n            event.tracks.push({\r\n              timelineStartInfo: {\r\n                baseMediaDecodeTime: 0\r\n              },\r\n              id: +programMapTable.video,\r\n              codec: 'avc',\r\n              type: 'video'\r\n            });\r\n          }\r\n\r\n          if (programMapTable.audio !== null) {\r\n            event.tracks.push({\r\n              timelineStartInfo: {\r\n                baseMediaDecodeTime: 0\r\n              },\r\n              id: +programMapTable.audio,\r\n              codec: 'adts',\r\n              type: 'audio'\r\n            });\r\n          }\r\n\r\n          segmentHadPmt = true;\r\n          self.trigger('data', event);\r\n        }\r\n      })[data.type]();\r\n    };\r\n\r\n    this.reset = function () {\r\n      video.size = 0;\r\n      video.data.length = 0;\r\n      audio.size = 0;\r\n      audio.data.length = 0;\r\n      this.trigger('reset');\r\n    };\r\n    /**\r\n     * Flush any remaining input. Video PES packets may be of variable\r\n     * length. Normally, the start of a new video packet can trigger the\r\n     * finalization of the previous packet. That is not possible if no\r\n     * more video is forthcoming, however. In that case, some other\r\n     * mechanism (like the end of the file) has to be employed. When it is\r\n     * clear that no additional data is forthcoming, calling this method\r\n     * will flush the buffered packets.\r\n     */\r\n\r\n\r\n    this.flushStreams_ = function () {\r\n      // !!THIS ORDER IS IMPORTANT!!\r\n      // video first then audio\r\n      flushStream(video, 'video');\r\n      flushStream(audio, 'audio');\r\n      flushStream(timedMetadata, 'timed-metadata');\r\n    };\r\n\r\n    this.flush = function () {\r\n      // if on flush we haven't had a pmt emitted\r\n      // and we have a pmt to emit. emit the pmt\r\n      // so that we trigger a trackinfo downstream.\r\n      if (!segmentHadPmt && programMapTable) {\r\n        var pmt = {\r\n          type: 'metadata',\r\n          tracks: []\r\n        }; // translate audio and video streams to tracks\r\n\r\n        if (programMapTable.video !== null) {\r\n          pmt.tracks.push({\r\n            timelineStartInfo: {\r\n              baseMediaDecodeTime: 0\r\n            },\r\n            id: +programMapTable.video,\r\n            codec: 'avc',\r\n            type: 'video'\r\n          });\r\n        }\r\n\r\n        if (programMapTable.audio !== null) {\r\n          pmt.tracks.push({\r\n            timelineStartInfo: {\r\n              baseMediaDecodeTime: 0\r\n            },\r\n            id: +programMapTable.audio,\r\n            codec: 'adts',\r\n            type: 'audio'\r\n          });\r\n        }\r\n\r\n        self.trigger('data', pmt);\r\n      }\r\n\r\n      segmentHadPmt = false;\r\n      this.flushStreams_();\r\n      this.trigger('done');\r\n    };\r\n  };\r\n\r\n  _ElementaryStream.prototype = new stream();\r\n  var m2ts = {\r\n    PAT_PID: 0x0000,\r\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\r\n    TransportPacketStream: _TransportPacketStream,\r\n    TransportParseStream: _TransportParseStream,\r\n    ElementaryStream: _ElementaryStream,\r\n    TimestampRolloverStream: TimestampRolloverStream,\r\n    CaptionStream: captionStream.CaptionStream,\r\n    Cea608Stream: captionStream.Cea608Stream,\r\n    Cea708Stream: captionStream.Cea708Stream,\r\n    MetadataStream: metadataStream\r\n  };\r\n\r\n  for (var type in streamTypes) {\r\n    if (streamTypes.hasOwnProperty(type)) {\r\n      m2ts[type] = streamTypes[type];\r\n    }\r\n  }\r\n\r\n  var m2ts_1 = m2ts;\r\n  var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\r\n\r\n  var _AdtsStream;\r\n\r\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\r\n  /*\r\n   * Accepts a ElementaryStream and emits data events with parsed\r\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\r\n   * format is unpacked and re-emitted as AAC frames.\r\n   *\r\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\r\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\r\n   */\r\n\r\n  _AdtsStream = function AdtsStream(handlePartialSegments) {\r\n    var buffer,\r\n        frameNum = 0;\r\n\r\n    _AdtsStream.prototype.init.call(this);\r\n\r\n    this.skipWarn_ = function (start, end) {\r\n      this.trigger('log', {\r\n        level: 'warn',\r\n        message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\r\n      });\r\n    };\r\n\r\n    this.push = function (packet) {\r\n      var i = 0,\r\n          frameLength,\r\n          protectionSkipBytes,\r\n          oldBuffer,\r\n          sampleCount,\r\n          adtsFrameDuration;\r\n\r\n      if (!handlePartialSegments) {\r\n        frameNum = 0;\r\n      }\r\n\r\n      if (packet.type !== 'audio') {\r\n        // ignore non-audio data\r\n        return;\r\n      } // Prepend any data in the buffer to the input data so that we can parse\r\n      // aac frames the cross a PES packet boundary\r\n\r\n\r\n      if (buffer && buffer.length) {\r\n        oldBuffer = buffer;\r\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\r\n        buffer.set(oldBuffer);\r\n        buffer.set(packet.data, oldBuffer.byteLength);\r\n      } else {\r\n        buffer = packet.data;\r\n      } // unpack any ADTS frames which have been fully received\r\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\r\n\r\n\r\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\r\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\r\n\r\n      while (i + 7 < buffer.length) {\r\n        // Look for the start of an ADTS header..\r\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\r\n          if (typeof skip !== 'number') {\r\n            skip = i;\r\n          } // If a valid header was not found,  jump one forward and attempt to\r\n          // find a valid ADTS header starting at the next byte\r\n\r\n\r\n          i++;\r\n          continue;\r\n        }\r\n\r\n        if (typeof skip === 'number') {\r\n          this.skipWarn_(skip, i);\r\n          skip = null;\r\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\r\n        // end of the ADTS header\r\n\r\n\r\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\r\n        // end of the sync sequence\r\n        // NOTE: frame length includes the size of the header\r\n\r\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\r\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\r\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\r\n        // then we have to wait for more data\r\n\r\n        if (buffer.byteLength - i < frameLength) {\r\n          break;\r\n        } // Otherwise, deliver the complete AAC frame\r\n\r\n\r\n        this.trigger('data', {\r\n          pts: packet.pts + frameNum * adtsFrameDuration,\r\n          dts: packet.dts + frameNum * adtsFrameDuration,\r\n          sampleCount: sampleCount,\r\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\r\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\r\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\r\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\r\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\r\n          samplesize: 16,\r\n          // data is the frame without it's header\r\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\r\n        });\r\n        frameNum++;\r\n        i += frameLength;\r\n      }\r\n\r\n      if (typeof skip === 'number') {\r\n        this.skipWarn_(skip, i);\r\n        skip = null;\r\n      } // remove processed bytes from the buffer.\r\n\r\n\r\n      buffer = buffer.subarray(i);\r\n    };\r\n\r\n    this.flush = function () {\r\n      frameNum = 0;\r\n      this.trigger('done');\r\n    };\r\n\r\n    this.reset = function () {\r\n      buffer = void 0;\r\n      this.trigger('reset');\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      buffer = void 0;\r\n      this.trigger('endedtimeline');\r\n    };\r\n  };\r\n\r\n  _AdtsStream.prototype = new stream();\r\n  var adts = _AdtsStream;\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n  var ExpGolomb;\r\n  /**\r\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\r\n   * scheme used by h264.\r\n   */\r\n\r\n  ExpGolomb = function ExpGolomb(workingData) {\r\n    var // the number of bytes left to examine in workingData\r\n    workingBytesAvailable = workingData.byteLength,\r\n        // the current word being examined\r\n    workingWord = 0,\r\n        // :uint\r\n    // the number of bits left to examine in the current word\r\n    workingBitsAvailable = 0; // :uint;\r\n    // ():uint\r\n\r\n    this.length = function () {\r\n      return 8 * workingBytesAvailable;\r\n    }; // ():uint\r\n\r\n\r\n    this.bitsAvailable = function () {\r\n      return 8 * workingBytesAvailable + workingBitsAvailable;\r\n    }; // ():void\r\n\r\n\r\n    this.loadWord = function () {\r\n      var position = workingData.byteLength - workingBytesAvailable,\r\n          workingBytes = new Uint8Array(4),\r\n          availableBytes = Math.min(4, workingBytesAvailable);\r\n\r\n      if (availableBytes === 0) {\r\n        throw new Error('no bytes available');\r\n      }\r\n\r\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\r\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\r\n\r\n      workingBitsAvailable = availableBytes * 8;\r\n      workingBytesAvailable -= availableBytes;\r\n    }; // (count:int):void\r\n\r\n\r\n    this.skipBits = function (count) {\r\n      var skipBytes; // :int\r\n\r\n      if (workingBitsAvailable > count) {\r\n        workingWord <<= count;\r\n        workingBitsAvailable -= count;\r\n      } else {\r\n        count -= workingBitsAvailable;\r\n        skipBytes = Math.floor(count / 8);\r\n        count -= skipBytes * 8;\r\n        workingBytesAvailable -= skipBytes;\r\n        this.loadWord();\r\n        workingWord <<= count;\r\n        workingBitsAvailable -= count;\r\n      }\r\n    }; // (size:int):uint\r\n\r\n\r\n    this.readBits = function (size) {\r\n      var bits = Math.min(workingBitsAvailable, size),\r\n          // :uint\r\n      valu = workingWord >>> 32 - bits; // :uint\r\n      // if size > 31, handle error\r\n\r\n      workingBitsAvailable -= bits;\r\n\r\n      if (workingBitsAvailable > 0) {\r\n        workingWord <<= bits;\r\n      } else if (workingBytesAvailable > 0) {\r\n        this.loadWord();\r\n      }\r\n\r\n      bits = size - bits;\r\n\r\n      if (bits > 0) {\r\n        return valu << bits | this.readBits(bits);\r\n      }\r\n\r\n      return valu;\r\n    }; // ():uint\r\n\r\n\r\n    this.skipLeadingZeros = function () {\r\n      var leadingZeroCount; // :uint\r\n\r\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\r\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\r\n          // the first bit of working word is 1\r\n          workingWord <<= leadingZeroCount;\r\n          workingBitsAvailable -= leadingZeroCount;\r\n          return leadingZeroCount;\r\n        }\r\n      } // we exhausted workingWord and still have not found a 1\r\n\r\n\r\n      this.loadWord();\r\n      return leadingZeroCount + this.skipLeadingZeros();\r\n    }; // ():void\r\n\r\n\r\n    this.skipUnsignedExpGolomb = function () {\r\n      this.skipBits(1 + this.skipLeadingZeros());\r\n    }; // ():void\r\n\r\n\r\n    this.skipExpGolomb = function () {\r\n      this.skipBits(1 + this.skipLeadingZeros());\r\n    }; // ():uint\r\n\r\n\r\n    this.readUnsignedExpGolomb = function () {\r\n      var clz = this.skipLeadingZeros(); // :uint\r\n\r\n      return this.readBits(clz + 1) - 1;\r\n    }; // ():int\r\n\r\n\r\n    this.readExpGolomb = function () {\r\n      var valu = this.readUnsignedExpGolomb(); // :int\r\n\r\n      if (0x01 & valu) {\r\n        // the number is odd if the low order bit is set\r\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\r\n      }\r\n\r\n      return -1 * (valu >>> 1); // divide by two then make it negative\r\n    }; // Some convenience functions\r\n    // :Boolean\r\n\r\n\r\n    this.readBoolean = function () {\r\n      return this.readBits(1) === 1;\r\n    }; // ():int\r\n\r\n\r\n    this.readUnsignedByte = function () {\r\n      return this.readBits(8);\r\n    };\r\n\r\n    this.loadWord();\r\n  };\r\n\r\n  var expGolomb = ExpGolomb;\r\n\r\n  var _H264Stream, _NalByteStream;\r\n\r\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\r\n  /**\r\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\r\n   */\r\n\r\n  _NalByteStream = function NalByteStream() {\r\n    var syncPoint = 0,\r\n        i,\r\n        buffer;\r\n\r\n    _NalByteStream.prototype.init.call(this);\r\n    /*\r\n     * Scans a byte stream and triggers a data event with the NAL units found.\r\n     * @param {Object} data Event received from H264Stream\r\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\r\n     *\r\n     * @see H264Stream.push\r\n     */\r\n\r\n\r\n    this.push = function (data) {\r\n      var swapBuffer;\r\n\r\n      if (!buffer) {\r\n        buffer = data.data;\r\n      } else {\r\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\r\n        swapBuffer.set(buffer);\r\n        swapBuffer.set(data.data, buffer.byteLength);\r\n        buffer = swapBuffer;\r\n      }\r\n\r\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\r\n      // scan for NAL unit boundaries\r\n      // a match looks like this:\r\n      // 0 0 1 .. NAL .. 0 0 1\r\n      // ^ sync point        ^ i\r\n      // or this:\r\n      // 0 0 1 .. NAL .. 0 0 0\r\n      // ^ sync point        ^ i\r\n      // advance the sync point to a NAL start, if necessary\r\n\r\n      for (; syncPoint < len - 3; syncPoint++) {\r\n        if (buffer[syncPoint + 2] === 1) {\r\n          // the sync point is properly aligned\r\n          i = syncPoint + 5;\r\n          break;\r\n        }\r\n      }\r\n\r\n      while (i < len) {\r\n        // look at the current byte to determine if we've hit the end of\r\n        // a NAL unit boundary\r\n        switch (buffer[i]) {\r\n          case 0:\r\n            // skip past non-sync sequences\r\n            if (buffer[i - 1] !== 0) {\r\n              i += 2;\r\n              break;\r\n            } else if (buffer[i - 2] !== 0) {\r\n              i++;\r\n              break;\r\n            } // deliver the NAL unit if it isn't empty\r\n\r\n\r\n            if (syncPoint + 3 !== i - 2) {\r\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\r\n            } // drop trailing zeroes\r\n\r\n\r\n            do {\r\n              i++;\r\n            } while (buffer[i] !== 1 && i < len);\r\n\r\n            syncPoint = i - 2;\r\n            i += 3;\r\n            break;\r\n\r\n          case 1:\r\n            // skip past non-sync sequences\r\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\r\n              i += 3;\r\n              break;\r\n            } // deliver the NAL unit\r\n\r\n\r\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\r\n            syncPoint = i - 2;\r\n            i += 3;\r\n            break;\r\n\r\n          default:\r\n            // the current byte isn't a one or zero, so it cannot be part\r\n            // of a sync sequence\r\n            i += 3;\r\n            break;\r\n        }\r\n      } // filter out the NAL units that were delivered\r\n\r\n\r\n      buffer = buffer.subarray(syncPoint);\r\n      i -= syncPoint;\r\n      syncPoint = 0;\r\n    };\r\n\r\n    this.reset = function () {\r\n      buffer = null;\r\n      syncPoint = 0;\r\n      this.trigger('reset');\r\n    };\r\n\r\n    this.flush = function () {\r\n      // deliver the last buffered NAL unit\r\n      if (buffer && buffer.byteLength > 3) {\r\n        this.trigger('data', buffer.subarray(syncPoint + 3));\r\n      } // reset the stream state\r\n\r\n\r\n      buffer = null;\r\n      syncPoint = 0;\r\n      this.trigger('done');\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      this.flush();\r\n      this.trigger('endedtimeline');\r\n    };\r\n  };\r\n\r\n  _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\r\n  // see Recommendation ITU-T H.264 (4/2013),\r\n  // 7.3.2.1.1 Sequence parameter set data syntax\r\n\r\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\r\n    100: true,\r\n    110: true,\r\n    122: true,\r\n    244: true,\r\n    44: true,\r\n    83: true,\r\n    86: true,\r\n    118: true,\r\n    128: true,\r\n    // TODO: the three profiles below don't\r\n    // appear to have sps data in the specificiation anymore?\r\n    138: true,\r\n    139: true,\r\n    134: true\r\n  };\r\n  /**\r\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\r\n   * events.\r\n   */\r\n\r\n  _H264Stream = function H264Stream() {\r\n    var nalByteStream = new _NalByteStream(),\r\n        self,\r\n        trackId,\r\n        currentPts,\r\n        currentDts,\r\n        discardEmulationPreventionBytes,\r\n        readSequenceParameterSet,\r\n        skipScalingList;\r\n\r\n    _H264Stream.prototype.init.call(this);\r\n\r\n    self = this;\r\n    /*\r\n     * Pushes a packet from a stream onto the NalByteStream\r\n     *\r\n     * @param {Object} packet - A packet received from a stream\r\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\r\n     * @param {Number} packet.dts - Decode timestamp of the packet\r\n     * @param {Number} packet.pts - Presentation timestamp of the packet\r\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\r\n     * @param {('video'|'audio')} packet.type - The type of packet\r\n     *\r\n     */\r\n\r\n    this.push = function (packet) {\r\n      if (packet.type !== 'video') {\r\n        return;\r\n      }\r\n\r\n      trackId = packet.trackId;\r\n      currentPts = packet.pts;\r\n      currentDts = packet.dts;\r\n      nalByteStream.push(packet);\r\n    };\r\n    /*\r\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\r\n     * for the NALUs to the next stream component.\r\n     * Also, preprocess caption and sequence parameter NALUs.\r\n     *\r\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\r\n     * @see NalByteStream.push\r\n     */\r\n\r\n\r\n    nalByteStream.on('data', function (data) {\r\n      var event = {\r\n        trackId: trackId,\r\n        pts: currentPts,\r\n        dts: currentDts,\r\n        data: data,\r\n        nalUnitTypeCode: data[0] & 0x1f\r\n      };\r\n\r\n      switch (event.nalUnitTypeCode) {\r\n        case 0x05:\r\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\r\n          break;\r\n\r\n        case 0x06:\r\n          event.nalUnitType = 'sei_rbsp';\r\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\r\n          break;\r\n\r\n        case 0x07:\r\n          event.nalUnitType = 'seq_parameter_set_rbsp';\r\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\r\n          event.config = readSequenceParameterSet(event.escapedRBSP);\r\n          break;\r\n\r\n        case 0x08:\r\n          event.nalUnitType = 'pic_parameter_set_rbsp';\r\n          break;\r\n\r\n        case 0x09:\r\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\r\n          break;\r\n      } // This triggers data on the H264Stream\r\n\r\n\r\n      self.trigger('data', event);\r\n    });\r\n    nalByteStream.on('done', function () {\r\n      self.trigger('done');\r\n    });\r\n    nalByteStream.on('partialdone', function () {\r\n      self.trigger('partialdone');\r\n    });\r\n    nalByteStream.on('reset', function () {\r\n      self.trigger('reset');\r\n    });\r\n    nalByteStream.on('endedtimeline', function () {\r\n      self.trigger('endedtimeline');\r\n    });\r\n\r\n    this.flush = function () {\r\n      nalByteStream.flush();\r\n    };\r\n\r\n    this.partialFlush = function () {\r\n      nalByteStream.partialFlush();\r\n    };\r\n\r\n    this.reset = function () {\r\n      nalByteStream.reset();\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      nalByteStream.endTimeline();\r\n    };\r\n    /**\r\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\r\n     * list is optionally transmitted as part of a sequence parameter\r\n     * set and is not relevant to transmuxing.\r\n     * @param count {number} the number of entries in this scaling list\r\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\r\n     * start of a scaling list\r\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\r\n     */\r\n\r\n\r\n    skipScalingList = function skipScalingList(count, expGolombDecoder) {\r\n      var lastScale = 8,\r\n          nextScale = 8,\r\n          j,\r\n          deltaScale;\r\n\r\n      for (j = 0; j < count; j++) {\r\n        if (nextScale !== 0) {\r\n          deltaScale = expGolombDecoder.readExpGolomb();\r\n          nextScale = (lastScale + deltaScale + 256) % 256;\r\n        }\r\n\r\n        lastScale = nextScale === 0 ? lastScale : nextScale;\r\n      }\r\n    };\r\n    /**\r\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\r\n     * Sequence Payload\"\r\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\r\n     * unit\r\n     * @return {Uint8Array} the RBSP without any Emulation\r\n     * Prevention Bytes\r\n     */\r\n\r\n\r\n    discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\r\n      var length = data.byteLength,\r\n          emulationPreventionBytesPositions = [],\r\n          i = 1,\r\n          newLength,\r\n          newData; // Find all `Emulation Prevention Bytes`\r\n\r\n      while (i < length - 2) {\r\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\r\n          emulationPreventionBytesPositions.push(i + 2);\r\n          i += 2;\r\n        } else {\r\n          i++;\r\n        }\r\n      } // If no Emulation Prevention Bytes were found just return the original\r\n      // array\r\n\r\n\r\n      if (emulationPreventionBytesPositions.length === 0) {\r\n        return data;\r\n      } // Create a new array to hold the NAL unit data\r\n\r\n\r\n      newLength = length - emulationPreventionBytesPositions.length;\r\n      newData = new Uint8Array(newLength);\r\n      var sourceIndex = 0;\r\n\r\n      for (i = 0; i < newLength; sourceIndex++, i++) {\r\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\r\n          // Skip this byte\r\n          sourceIndex++; // Remove this position index\r\n\r\n          emulationPreventionBytesPositions.shift();\r\n        }\r\n\r\n        newData[i] = data[sourceIndex];\r\n      }\r\n\r\n      return newData;\r\n    };\r\n    /**\r\n     * Read a sequence parameter set and return some interesting video\r\n     * properties. A sequence parameter set is the H264 metadata that\r\n     * describes the properties of upcoming video frames.\r\n     * @param data {Uint8Array} the bytes of a sequence parameter set\r\n     * @return {object} an object with configuration parsed from the\r\n     * sequence parameter set, including the dimensions of the\r\n     * associated video frames.\r\n     */\r\n\r\n\r\n    readSequenceParameterSet = function readSequenceParameterSet(data) {\r\n      var frameCropLeftOffset = 0,\r\n          frameCropRightOffset = 0,\r\n          frameCropTopOffset = 0,\r\n          frameCropBottomOffset = 0,\r\n          expGolombDecoder,\r\n          profileIdc,\r\n          levelIdc,\r\n          profileCompatibility,\r\n          chromaFormatIdc,\r\n          picOrderCntType,\r\n          numRefFramesInPicOrderCntCycle,\r\n          picWidthInMbsMinus1,\r\n          picHeightInMapUnitsMinus1,\r\n          frameMbsOnlyFlag,\r\n          scalingListCount,\r\n          sarRatio = [1, 1],\r\n          aspectRatioIdc,\r\n          i;\r\n      expGolombDecoder = new expGolomb(data);\r\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\r\n\r\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\r\n\r\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\r\n\r\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\r\n      // some profiles have more optional data we don't need\r\n\r\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\r\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\r\n\r\n        if (chromaFormatIdc === 3) {\r\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\r\n        }\r\n\r\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\r\n\r\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\r\n\r\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\r\n\r\n        if (expGolombDecoder.readBoolean()) {\r\n          // seq_scaling_matrix_present_flag\r\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\r\n\r\n          for (i = 0; i < scalingListCount; i++) {\r\n            if (expGolombDecoder.readBoolean()) {\r\n              // seq_scaling_list_present_flag[ i ]\r\n              if (i < 6) {\r\n                skipScalingList(16, expGolombDecoder);\r\n              } else {\r\n                skipScalingList(64, expGolombDecoder);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\r\n\r\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\r\n\r\n      if (picOrderCntType === 0) {\r\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\r\n      } else if (picOrderCntType === 1) {\r\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\r\n\r\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\r\n\r\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\r\n\r\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\r\n\r\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\r\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\r\n        }\r\n      }\r\n\r\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\r\n\r\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\r\n\r\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\r\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\r\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\r\n\r\n      if (frameMbsOnlyFlag === 0) {\r\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\r\n      }\r\n\r\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\r\n\r\n      if (expGolombDecoder.readBoolean()) {\r\n        // frame_cropping_flag\r\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\r\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\r\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\r\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\r\n      }\r\n\r\n      if (expGolombDecoder.readBoolean()) {\r\n        // vui_parameters_present_flag\r\n        if (expGolombDecoder.readBoolean()) {\r\n          // aspect_ratio_info_present_flag\r\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\r\n\r\n          switch (aspectRatioIdc) {\r\n            case 1:\r\n              sarRatio = [1, 1];\r\n              break;\r\n\r\n            case 2:\r\n              sarRatio = [12, 11];\r\n              break;\r\n\r\n            case 3:\r\n              sarRatio = [10, 11];\r\n              break;\r\n\r\n            case 4:\r\n              sarRatio = [16, 11];\r\n              break;\r\n\r\n            case 5:\r\n              sarRatio = [40, 33];\r\n              break;\r\n\r\n            case 6:\r\n              sarRatio = [24, 11];\r\n              break;\r\n\r\n            case 7:\r\n              sarRatio = [20, 11];\r\n              break;\r\n\r\n            case 8:\r\n              sarRatio = [32, 11];\r\n              break;\r\n\r\n            case 9:\r\n              sarRatio = [80, 33];\r\n              break;\r\n\r\n            case 10:\r\n              sarRatio = [18, 11];\r\n              break;\r\n\r\n            case 11:\r\n              sarRatio = [15, 11];\r\n              break;\r\n\r\n            case 12:\r\n              sarRatio = [64, 33];\r\n              break;\r\n\r\n            case 13:\r\n              sarRatio = [160, 99];\r\n              break;\r\n\r\n            case 14:\r\n              sarRatio = [4, 3];\r\n              break;\r\n\r\n            case 15:\r\n              sarRatio = [3, 2];\r\n              break;\r\n\r\n            case 16:\r\n              sarRatio = [2, 1];\r\n              break;\r\n\r\n            case 255:\r\n              {\r\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (sarRatio) {\r\n            sarRatio[0] / sarRatio[1];\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        profileIdc: profileIdc,\r\n        levelIdc: levelIdc,\r\n        profileCompatibility: profileCompatibility,\r\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\r\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\r\n        // sar is sample aspect ratio\r\n        sarRatio: sarRatio\r\n      };\r\n    };\r\n  };\r\n\r\n  _H264Stream.prototype = new stream();\r\n  var h264 = {\r\n    H264Stream: _H264Stream,\r\n    NalByteStream: _NalByteStream\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   *\r\n   * Utilities to detect basic properties and metadata about Aac data.\r\n   */\r\n\r\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\r\n\r\n  var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\r\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\r\n        flags = header[byteIndex + 5],\r\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\r\n\r\n    returnSize = returnSize >= 0 ? returnSize : 0;\r\n\r\n    if (footerPresent) {\r\n      return returnSize + 20;\r\n    }\r\n\r\n    return returnSize + 10;\r\n  };\r\n\r\n  var getId3Offset = function getId3Offset(data, offset) {\r\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\r\n      return offset;\r\n    }\r\n\r\n    offset += parseId3TagSize(data, offset);\r\n    return getId3Offset(data, offset);\r\n  }; // TODO: use vhs-utils\r\n\r\n\r\n  var isLikelyAacData$1 = function isLikelyAacData(data) {\r\n    var offset = getId3Offset(data, 0);\r\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\r\n    // is not mp3 data but aac data.\r\n    (data[offset + 1] & 0x16) === 0x10;\r\n  };\r\n\r\n  var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\r\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\r\n  }; // return a percent-encoded representation of the specified byte range\r\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\r\n\r\n\r\n  var percentEncode = function percentEncode(bytes, start, end) {\r\n    var i,\r\n        result = '';\r\n\r\n    for (i = start; i < end; i++) {\r\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\r\n    }\r\n\r\n    return result;\r\n  }; // return the string representation of the specified byte range,\r\n  // interpreted as ISO-8859-1.\r\n\r\n\r\n  var parseIso88591 = function parseIso88591(bytes, start, end) {\r\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\r\n  };\r\n\r\n  var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\r\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\r\n        middle = header[byteIndex + 4] << 3,\r\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\r\n    return highTwo | middle | lowThree;\r\n  };\r\n\r\n  var parseType$2 = function parseType(header, byteIndex) {\r\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\r\n      return 'timed-metadata';\r\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\r\n      return 'audio';\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var parseSampleRate = function parseSampleRate(packet) {\r\n    var i = 0;\r\n\r\n    while (i + 5 < packet.length) {\r\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\r\n        // If a valid header was not found,  jump one forward and attempt to\r\n        // find a valid ADTS header starting at the next byte\r\n        i++;\r\n        continue;\r\n      }\r\n\r\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var parseAacTimestamp = function parseAacTimestamp(packet) {\r\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\r\n\r\n    frameStart = 10;\r\n\r\n    if (packet[5] & 0x40) {\r\n      // advance the frame start past the extended header\r\n      frameStart += 4; // header size field\r\n\r\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\r\n    } // parse one or more ID3 frames\r\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\r\n\r\n\r\n    do {\r\n      // determine the number of bytes in this frame\r\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\r\n\r\n      if (frameSize < 1) {\r\n        return null;\r\n      }\r\n\r\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\r\n\r\n      if (frameHeader === 'PRIV') {\r\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\r\n\r\n        for (var i = 0; i < frame.byteLength; i++) {\r\n          if (frame[i] === 0) {\r\n            var owner = parseIso88591(frame, 0, i);\r\n\r\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\r\n              var d = frame.subarray(i + 1);\r\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\r\n              size *= 4;\r\n              size += d[7] & 0x03;\r\n              return size;\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      frameStart += 10; // advance past the frame header\r\n\r\n      frameStart += frameSize; // advance past the frame body\r\n    } while (frameStart < packet.byteLength);\r\n\r\n    return null;\r\n  };\r\n\r\n  var utils = {\r\n    isLikelyAacData: isLikelyAacData$1,\r\n    parseId3TagSize: parseId3TagSize,\r\n    parseAdtsSize: parseAdtsSize,\r\n    parseType: parseType$2,\r\n    parseSampleRate: parseSampleRate,\r\n    parseAacTimestamp: parseAacTimestamp\r\n  };\r\n\r\n  var _AacStream;\r\n  /**\r\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\r\n   */\r\n\r\n\r\n  _AacStream = function AacStream() {\r\n    var everything = new Uint8Array(),\r\n        timeStamp = 0;\r\n\r\n    _AacStream.prototype.init.call(this);\r\n\r\n    this.setTimestamp = function (timestamp) {\r\n      timeStamp = timestamp;\r\n    };\r\n\r\n    this.push = function (bytes) {\r\n      var frameSize = 0,\r\n          byteIndex = 0,\r\n          bytesLeft,\r\n          chunk,\r\n          packet,\r\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\r\n      // bytes that were pushed in\r\n\r\n      if (everything.length) {\r\n        tempLength = everything.length;\r\n        everything = new Uint8Array(bytes.byteLength + tempLength);\r\n        everything.set(everything.subarray(0, tempLength));\r\n        everything.set(bytes, tempLength);\r\n      } else {\r\n        everything = bytes;\r\n      }\r\n\r\n      while (everything.length - byteIndex >= 3) {\r\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\r\n          // Exit early because we don't have enough to parse\r\n          // the ID3 tag header\r\n          if (everything.length - byteIndex < 10) {\r\n            break;\r\n          } // check framesize\r\n\r\n\r\n          frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\r\n          // to emit a full packet\r\n          // Add to byteIndex to support multiple ID3 tags in sequence\r\n\r\n          if (byteIndex + frameSize > everything.length) {\r\n            break;\r\n          }\r\n\r\n          chunk = {\r\n            type: 'timed-metadata',\r\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\r\n          };\r\n          this.trigger('data', chunk);\r\n          byteIndex += frameSize;\r\n          continue;\r\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\r\n          // Exit early because we don't have enough to parse\r\n          // the ADTS frame header\r\n          if (everything.length - byteIndex < 7) {\r\n            break;\r\n          }\r\n\r\n          frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\r\n          // to emit a full packet\r\n\r\n          if (byteIndex + frameSize > everything.length) {\r\n            break;\r\n          }\r\n\r\n          packet = {\r\n            type: 'audio',\r\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\r\n            pts: timeStamp,\r\n            dts: timeStamp\r\n          };\r\n          this.trigger('data', packet);\r\n          byteIndex += frameSize;\r\n          continue;\r\n        }\r\n\r\n        byteIndex++;\r\n      }\r\n\r\n      bytesLeft = everything.length - byteIndex;\r\n\r\n      if (bytesLeft > 0) {\r\n        everything = everything.subarray(byteIndex);\r\n      } else {\r\n        everything = new Uint8Array();\r\n      }\r\n    };\r\n\r\n    this.reset = function () {\r\n      everything = new Uint8Array();\r\n      this.trigger('reset');\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      everything = new Uint8Array();\r\n      this.trigger('endedtimeline');\r\n    };\r\n  };\r\n\r\n  _AacStream.prototype = new stream();\r\n  var aac = _AacStream; // constants\r\n\r\n  var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\r\n  var audioProperties = AUDIO_PROPERTIES;\r\n  var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\r\n  var videoProperties = VIDEO_PROPERTIES;\r\n  var H264Stream = h264.H264Stream;\r\n  var isLikelyAacData = utils.isLikelyAacData;\r\n  var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\r\n\r\n  var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\r\n\r\n  var retriggerForStream = function retriggerForStream(key, event) {\r\n    event.stream = key;\r\n    this.trigger('log', event);\r\n  };\r\n\r\n  var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\r\n    var keys = Object.keys(pipeline);\r\n\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\r\n      // which is just a duplicate\r\n\r\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\r\n        continue;\r\n      }\r\n\r\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\r\n    }\r\n  };\r\n  /**\r\n   * Compare two arrays (even typed) for same-ness\r\n   */\r\n\r\n\r\n  var arrayEquals = function arrayEquals(a, b) {\r\n    var i;\r\n\r\n    if (a.length !== b.length) {\r\n      return false;\r\n    } // compare the value of each element in the array\r\n\r\n\r\n    for (i = 0; i < a.length; i++) {\r\n      if (a[i] !== b[i]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\r\n    var ptsOffsetFromDts = startPts - startDts,\r\n        decodeDuration = endDts - startDts,\r\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\r\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\r\n    // In order to provide relevant values for the player times, base timing info on the\r\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\r\n\r\n    return {\r\n      start: {\r\n        dts: baseMediaDecodeTime,\r\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\r\n      },\r\n      end: {\r\n        dts: baseMediaDecodeTime + decodeDuration,\r\n        pts: baseMediaDecodeTime + presentationDuration\r\n      },\r\n      prependedContentDuration: prependedContentDuration,\r\n      baseMediaDecodeTime: baseMediaDecodeTime\r\n    };\r\n  };\r\n  /**\r\n   * Constructs a single-track, ISO BMFF media segment from AAC data\r\n   * events. The output of this stream can be fed to a SourceBuffer\r\n   * configured with a suitable initialization segment.\r\n   * @param track {object} track metadata configuration\r\n   * @param options {object} transmuxer options object\r\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\r\n   *        in the source; false to adjust the first segment to start at 0.\r\n   */\r\n\r\n\r\n  _AudioSegmentStream = function AudioSegmentStream(track, options) {\r\n    var adtsFrames = [],\r\n        sequenceNumber,\r\n        earliestAllowedDts = 0,\r\n        audioAppendStartTs = 0,\r\n        videoBaseMediaDecodeTime = Infinity;\r\n    options = options || {};\r\n    sequenceNumber = options.firstSequenceNumber || 0;\r\n\r\n    _AudioSegmentStream.prototype.init.call(this);\r\n\r\n    this.push = function (data) {\r\n      trackDecodeInfo.collectDtsInfo(track, data);\r\n\r\n      if (track) {\r\n        audioProperties.forEach(function (prop) {\r\n          track[prop] = data[prop];\r\n        });\r\n      } // buffer audio data until end() is called\r\n\r\n\r\n      adtsFrames.push(data);\r\n    };\r\n\r\n    this.setEarliestDts = function (earliestDts) {\r\n      earliestAllowedDts = earliestDts;\r\n    };\r\n\r\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\r\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\r\n    };\r\n\r\n    this.setAudioAppendStart = function (timestamp) {\r\n      audioAppendStartTs = timestamp;\r\n    };\r\n\r\n    this.flush = function () {\r\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\r\n\r\n      if (adtsFrames.length === 0) {\r\n        this.trigger('done', 'AudioSegmentStream');\r\n        return;\r\n      }\r\n\r\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\r\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\r\n\r\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\r\n      // samples (that is, adts frames) in the audio data\r\n\r\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\r\n\r\n      mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\r\n      adtsFrames = [];\r\n      moof = mp4Generator.moof(sequenceNumber, [track]);\r\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\r\n\r\n      sequenceNumber++;\r\n      boxes.set(moof);\r\n      boxes.set(mdat, moof.byteLength);\r\n      trackDecodeInfo.clearDtsInfo(track);\r\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\r\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\r\n      // valid use-case where an init segment/data should be triggered without associated\r\n      // frames. Leaving for now, but should be looked into.\r\n\r\n      if (frames.length) {\r\n        segmentDuration = frames.length * frameDuration;\r\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\r\n        // frame info is in video clock cycles. Convert to match expectation of\r\n        // listeners (that all timestamps will be based on video clock cycles).\r\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\r\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\r\n        this.trigger('timingInfo', {\r\n          start: frames[0].pts,\r\n          end: frames[0].pts + segmentDuration\r\n        });\r\n      }\r\n\r\n      this.trigger('data', {\r\n        track: track,\r\n        boxes: boxes\r\n      });\r\n      this.trigger('done', 'AudioSegmentStream');\r\n    };\r\n\r\n    this.reset = function () {\r\n      trackDecodeInfo.clearDtsInfo(track);\r\n      adtsFrames = [];\r\n      this.trigger('reset');\r\n    };\r\n  };\r\n\r\n  _AudioSegmentStream.prototype = new stream();\r\n  /**\r\n   * Constructs a single-track, ISO BMFF media segment from H264 data\r\n   * events. The output of this stream can be fed to a SourceBuffer\r\n   * configured with a suitable initialization segment.\r\n   * @param track {object} track metadata configuration\r\n   * @param options {object} transmuxer options object\r\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\r\n   *        gopsToAlignWith list when attempting to align gop pts\r\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\r\n   *        in the source; false to adjust the first segment to start at 0.\r\n   */\r\n\r\n  _VideoSegmentStream = function VideoSegmentStream(track, options) {\r\n    var sequenceNumber,\r\n        nalUnits = [],\r\n        gopsToAlignWith = [],\r\n        config,\r\n        pps;\r\n    options = options || {};\r\n    sequenceNumber = options.firstSequenceNumber || 0;\r\n\r\n    _VideoSegmentStream.prototype.init.call(this);\r\n\r\n    delete track.minPTS;\r\n    this.gopCache_ = [];\r\n    /**\r\n      * Constructs a ISO BMFF segment given H264 nalUnits\r\n      * @param {Object} nalUnit A data event representing a nalUnit\r\n      * @param {String} nalUnit.nalUnitType\r\n      * @param {Object} nalUnit.config Properties for a mp4 track\r\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\r\n      * @see lib/codecs/h264.js\r\n     **/\r\n\r\n    this.push = function (nalUnit) {\r\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\r\n\r\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\r\n        config = nalUnit.config;\r\n        track.sps = [nalUnit.data];\r\n        videoProperties.forEach(function (prop) {\r\n          track[prop] = config[prop];\r\n        }, this);\r\n      }\r\n\r\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\r\n        pps = nalUnit.data;\r\n        track.pps = [nalUnit.data];\r\n      } // buffer video until flush() is called\r\n\r\n\r\n      nalUnits.push(nalUnit);\r\n    };\r\n    /**\r\n      * Pass constructed ISO BMFF track and boxes on to the\r\n      * next stream in the pipeline\r\n     **/\r\n\r\n\r\n    this.flush = function () {\r\n      var frames,\r\n          gopForFusion,\r\n          gops,\r\n          moof,\r\n          mdat,\r\n          boxes,\r\n          prependedContentDuration = 0,\r\n          firstGop,\r\n          lastGop; // Throw away nalUnits at the start of the byte stream until\r\n      // we find the first AUD\r\n\r\n      while (nalUnits.length) {\r\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\r\n          break;\r\n        }\r\n\r\n        nalUnits.shift();\r\n      } // Return early if no video data has been observed\r\n\r\n\r\n      if (nalUnits.length === 0) {\r\n        this.resetStream_();\r\n        this.trigger('done', 'VideoSegmentStream');\r\n        return;\r\n      } // Organize the raw nal-units into arrays that represent\r\n      // higher-level constructs such as frames and gops\r\n      // (group-of-pictures)\r\n\r\n\r\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\r\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\r\n      // a problem since MSE (on Chrome) requires a leading keyframe.\r\n      //\r\n      // We have two approaches to repairing this situation:\r\n      // 1) GOP-FUSION:\r\n      //    This is where we keep track of the GOPS (group-of-pictures)\r\n      //    from previous fragments and attempt to find one that we can\r\n      //    prepend to the current fragment in order to create a valid\r\n      //    fragment.\r\n      // 2) KEYFRAME-PULLING:\r\n      //    Here we search for the first keyframe in the fragment and\r\n      //    throw away all the frames between the start of the fragment\r\n      //    and that keyframe. We then extend the duration and pull the\r\n      //    PTS of the keyframe forward so that it covers the time range\r\n      //    of the frames that were disposed of.\r\n      //\r\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\r\n      // requires more things to be just right.\r\n\r\n      if (!gops[0][0].keyFrame) {\r\n        // Search for a gop for fusion from our gopCache\r\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\r\n\r\n        if (gopForFusion) {\r\n          // in order to provide more accurate timing information about the segment, save\r\n          // the number of seconds prepended to the original segment due to GOP fusion\r\n          prependedContentDuration = gopForFusion.duration;\r\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\r\n          // new gop at the beginning\r\n\r\n          gops.byteLength += gopForFusion.byteLength;\r\n          gops.nalCount += gopForFusion.nalCount;\r\n          gops.pts = gopForFusion.pts;\r\n          gops.dts = gopForFusion.dts;\r\n          gops.duration += gopForFusion.duration;\r\n        } else {\r\n          // If we didn't find a candidate gop fall back to keyframe-pulling\r\n          gops = frameUtils.extendFirstKeyFrame(gops);\r\n        }\r\n      } // Trim gops to align with gopsToAlignWith\r\n\r\n\r\n      if (gopsToAlignWith.length) {\r\n        var alignedGops;\r\n\r\n        if (options.alignGopsAtEnd) {\r\n          alignedGops = this.alignGopsAtEnd_(gops);\r\n        } else {\r\n          alignedGops = this.alignGopsAtStart_(gops);\r\n        }\r\n\r\n        if (!alignedGops) {\r\n          // save all the nals in the last GOP into the gop cache\r\n          this.gopCache_.unshift({\r\n            gop: gops.pop(),\r\n            pps: track.pps,\r\n            sps: track.sps\r\n          }); // Keep a maximum of 6 GOPs in the cache\r\n\r\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\r\n\r\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\r\n\r\n          this.resetStream_();\r\n          this.trigger('done', 'VideoSegmentStream');\r\n          return;\r\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\r\n        // when recalculated before sending off to CoalesceStream\r\n\r\n\r\n        trackDecodeInfo.clearDtsInfo(track);\r\n        gops = alignedGops;\r\n      }\r\n\r\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\r\n      // samples (that is, frames) in the video data\r\n\r\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\r\n\r\n      mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\r\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\r\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\r\n        return {\r\n          pts: gop.pts,\r\n          dts: gop.dts,\r\n          byteLength: gop.byteLength\r\n        };\r\n      }));\r\n      firstGop = gops[0];\r\n      lastGop = gops[gops.length - 1];\r\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\r\n      this.trigger('timingInfo', {\r\n        start: gops[0].pts,\r\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\r\n      }); // save all the nals in the last GOP into the gop cache\r\n\r\n      this.gopCache_.unshift({\r\n        gop: gops.pop(),\r\n        pps: track.pps,\r\n        sps: track.sps\r\n      }); // Keep a maximum of 6 GOPs in the cache\r\n\r\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\r\n\r\n      nalUnits = [];\r\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\r\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\r\n      moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\r\n      // throwing away hundreds of media segment fragments\r\n\r\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\r\n\r\n      sequenceNumber++;\r\n      boxes.set(moof);\r\n      boxes.set(mdat, moof.byteLength);\r\n      this.trigger('data', {\r\n        track: track,\r\n        boxes: boxes\r\n      });\r\n      this.resetStream_(); // Continue with the flush process now\r\n\r\n      this.trigger('done', 'VideoSegmentStream');\r\n    };\r\n\r\n    this.reset = function () {\r\n      this.resetStream_();\r\n      nalUnits = [];\r\n      this.gopCache_.length = 0;\r\n      gopsToAlignWith.length = 0;\r\n      this.trigger('reset');\r\n    };\r\n\r\n    this.resetStream_ = function () {\r\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\r\n      // for instance, when we are rendition switching\r\n\r\n      config = undefined;\r\n      pps = undefined;\r\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\r\n    // return it or return null if no good candidate was found\r\n\r\n\r\n    this.getGopForFusion_ = function (nalUnit) {\r\n      var halfSecond = 45000,\r\n          // Half-a-second in a 90khz clock\r\n      allowableOverlap = 10000,\r\n          // About 3 frames @ 30fps\r\n      nearestDistance = Infinity,\r\n          dtsDistance,\r\n          nearestGopObj,\r\n          currentGop,\r\n          currentGopObj,\r\n          i; // Search for the GOP nearest to the beginning of this nal unit\r\n\r\n      for (i = 0; i < this.gopCache_.length; i++) {\r\n        currentGopObj = this.gopCache_[i];\r\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\r\n\r\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\r\n          continue;\r\n        } // Reject Gops that would require a negative baseMediaDecodeTime\r\n\r\n\r\n        if (currentGop.dts < track.timelineStartInfo.dts) {\r\n          continue;\r\n        } // The distance between the end of the gop and the start of the nalUnit\r\n\r\n\r\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\r\n        // a half-second of the nal unit\r\n\r\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\r\n          // Always use the closest GOP we found if there is more than\r\n          // one candidate\r\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\r\n            nearestGopObj = currentGopObj;\r\n            nearestDistance = dtsDistance;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nearestGopObj) {\r\n        return nearestGopObj.gop;\r\n      }\r\n\r\n      return null;\r\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\r\n    // of gopsToAlignWith starting from the START of the list\r\n\r\n\r\n    this.alignGopsAtStart_ = function (gops) {\r\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\r\n      byteLength = gops.byteLength;\r\n      nalCount = gops.nalCount;\r\n      duration = gops.duration;\r\n      alignIndex = gopIndex = 0;\r\n\r\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\r\n        align = gopsToAlignWith[alignIndex];\r\n        gop = gops[gopIndex];\r\n\r\n        if (align.pts === gop.pts) {\r\n          break;\r\n        }\r\n\r\n        if (gop.pts > align.pts) {\r\n          // this current gop starts after the current gop we want to align on, so increment\r\n          // align index\r\n          alignIndex++;\r\n          continue;\r\n        } // current gop starts before the current gop we want to align on. so increment gop\r\n        // index\r\n\r\n\r\n        gopIndex++;\r\n        byteLength -= gop.byteLength;\r\n        nalCount -= gop.nalCount;\r\n        duration -= gop.duration;\r\n      }\r\n\r\n      if (gopIndex === 0) {\r\n        // no gops to trim\r\n        return gops;\r\n      }\r\n\r\n      if (gopIndex === gops.length) {\r\n        // all gops trimmed, skip appending all gops\r\n        return null;\r\n      }\r\n\r\n      alignedGops = gops.slice(gopIndex);\r\n      alignedGops.byteLength = byteLength;\r\n      alignedGops.duration = duration;\r\n      alignedGops.nalCount = nalCount;\r\n      alignedGops.pts = alignedGops[0].pts;\r\n      alignedGops.dts = alignedGops[0].dts;\r\n      return alignedGops;\r\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\r\n    // of gopsToAlignWith starting from the END of the list\r\n\r\n\r\n    this.alignGopsAtEnd_ = function (gops) {\r\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\r\n      alignIndex = gopsToAlignWith.length - 1;\r\n      gopIndex = gops.length - 1;\r\n      alignEndIndex = null;\r\n      matchFound = false;\r\n\r\n      while (alignIndex >= 0 && gopIndex >= 0) {\r\n        align = gopsToAlignWith[alignIndex];\r\n        gop = gops[gopIndex];\r\n\r\n        if (align.pts === gop.pts) {\r\n          matchFound = true;\r\n          break;\r\n        }\r\n\r\n        if (align.pts > gop.pts) {\r\n          alignIndex--;\r\n          continue;\r\n        }\r\n\r\n        if (alignIndex === gopsToAlignWith.length - 1) {\r\n          // gop.pts is greater than the last alignment candidate. If no match is found\r\n          // by the end of this loop, we still want to append gops that come after this\r\n          // point\r\n          alignEndIndex = gopIndex;\r\n        }\r\n\r\n        gopIndex--;\r\n      }\r\n\r\n      if (!matchFound && alignEndIndex === null) {\r\n        return null;\r\n      }\r\n\r\n      var trimIndex;\r\n\r\n      if (matchFound) {\r\n        trimIndex = gopIndex;\r\n      } else {\r\n        trimIndex = alignEndIndex;\r\n      }\r\n\r\n      if (trimIndex === 0) {\r\n        return gops;\r\n      }\r\n\r\n      var alignedGops = gops.slice(trimIndex);\r\n      var metadata = alignedGops.reduce(function (total, gop) {\r\n        total.byteLength += gop.byteLength;\r\n        total.duration += gop.duration;\r\n        total.nalCount += gop.nalCount;\r\n        return total;\r\n      }, {\r\n        byteLength: 0,\r\n        duration: 0,\r\n        nalCount: 0\r\n      });\r\n      alignedGops.byteLength = metadata.byteLength;\r\n      alignedGops.duration = metadata.duration;\r\n      alignedGops.nalCount = metadata.nalCount;\r\n      alignedGops.pts = alignedGops[0].pts;\r\n      alignedGops.dts = alignedGops[0].dts;\r\n      return alignedGops;\r\n    };\r\n\r\n    this.alignGopsWith = function (newGopsToAlignWith) {\r\n      gopsToAlignWith = newGopsToAlignWith;\r\n    };\r\n  };\r\n\r\n  _VideoSegmentStream.prototype = new stream();\r\n  /**\r\n   * A Stream that can combine multiple streams (ie. audio & video)\r\n   * into a single output segment for MSE. Also supports audio-only\r\n   * and video-only streams.\r\n   * @param options {object} transmuxer options object\r\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\r\n   *        in the source; false to adjust the first segment to start at media timeline start.\r\n   */\r\n\r\n  _CoalesceStream = function CoalesceStream(options, metadataStream) {\r\n    // Number of Tracks per output segment\r\n    // If greater than 1, we combine multiple\r\n    // tracks into a single segment\r\n    this.numberOfTracks = 0;\r\n    this.metadataStream = metadataStream;\r\n    options = options || {};\r\n\r\n    if (typeof options.remux !== 'undefined') {\r\n      this.remuxTracks = !!options.remux;\r\n    } else {\r\n      this.remuxTracks = true;\r\n    }\r\n\r\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\r\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\r\n    } else {\r\n      this.keepOriginalTimestamps = false;\r\n    }\r\n\r\n    this.pendingTracks = [];\r\n    this.videoTrack = null;\r\n    this.pendingBoxes = [];\r\n    this.pendingCaptions = [];\r\n    this.pendingMetadata = [];\r\n    this.pendingBytes = 0;\r\n    this.emittedTracks = 0;\r\n\r\n    _CoalesceStream.prototype.init.call(this); // Take output from multiple\r\n\r\n\r\n    this.push = function (output) {\r\n      // buffer incoming captions until the associated video segment\r\n      // finishes\r\n      if (output.text) {\r\n        return this.pendingCaptions.push(output);\r\n      } // buffer incoming id3 tags until the final flush\r\n\r\n\r\n      if (output.frames) {\r\n        return this.pendingMetadata.push(output);\r\n      } // Add this track to the list of pending tracks and store\r\n      // important information required for the construction of\r\n      // the final segment\r\n\r\n\r\n      this.pendingTracks.push(output.track);\r\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\r\n      // We unshift audio and push video because\r\n      // as of Chrome 75 when switching from\r\n      // one init segment to another if the video\r\n      // mdat does not appear after the audio mdat\r\n      // only audio will play for the duration of our transmux.\r\n\r\n      if (output.track.type === 'video') {\r\n        this.videoTrack = output.track;\r\n        this.pendingBoxes.push(output.boxes);\r\n      }\r\n\r\n      if (output.track.type === 'audio') {\r\n        this.audioTrack = output.track;\r\n        this.pendingBoxes.unshift(output.boxes);\r\n      }\r\n    };\r\n  };\r\n\r\n  _CoalesceStream.prototype = new stream();\r\n\r\n  _CoalesceStream.prototype.flush = function (flushSource) {\r\n    var offset = 0,\r\n        event = {\r\n      captions: [],\r\n      captionStreams: {},\r\n      metadata: [],\r\n      info: {}\r\n    },\r\n        caption,\r\n        id3,\r\n        initSegment,\r\n        timelineStartPts = 0,\r\n        i;\r\n\r\n    if (this.pendingTracks.length < this.numberOfTracks) {\r\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\r\n        // Return because we haven't received a flush from a data-generating\r\n        // portion of the segment (meaning that we have only recieved meta-data\r\n        // or captions.)\r\n        return;\r\n      } else if (this.remuxTracks) {\r\n        // Return until we have enough tracks from the pipeline to remux (if we\r\n        // are remuxing audio and video into a single MP4)\r\n        return;\r\n      } else if (this.pendingTracks.length === 0) {\r\n        // In the case where we receive a flush without any data having been\r\n        // received we consider it an emitted track for the purposes of coalescing\r\n        // `done` events.\r\n        // We do this for the case where there is an audio and video track in the\r\n        // segment but no audio data. (seen in several playlists with alternate\r\n        // audio tracks and no audio present in the main TS segments.)\r\n        this.emittedTracks++;\r\n\r\n        if (this.emittedTracks >= this.numberOfTracks) {\r\n          this.trigger('done');\r\n          this.emittedTracks = 0;\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.videoTrack) {\r\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\r\n      videoProperties.forEach(function (prop) {\r\n        event.info[prop] = this.videoTrack[prop];\r\n      }, this);\r\n    } else if (this.audioTrack) {\r\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\r\n      audioProperties.forEach(function (prop) {\r\n        event.info[prop] = this.audioTrack[prop];\r\n      }, this);\r\n    }\r\n\r\n    if (this.videoTrack || this.audioTrack) {\r\n      if (this.pendingTracks.length === 1) {\r\n        event.type = this.pendingTracks[0].type;\r\n      } else {\r\n        event.type = 'combined';\r\n      }\r\n\r\n      this.emittedTracks += this.pendingTracks.length;\r\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\r\n\r\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\r\n      // and track definitions\r\n\r\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\r\n\r\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\r\n\r\n      for (i = 0; i < this.pendingBoxes.length; i++) {\r\n        event.data.set(this.pendingBoxes[i], offset);\r\n        offset += this.pendingBoxes[i].byteLength;\r\n      } // Translate caption PTS times into second offsets to match the\r\n      // video timeline for the segment, and add track info\r\n\r\n\r\n      for (i = 0; i < this.pendingCaptions.length; i++) {\r\n        caption = this.pendingCaptions[i];\r\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\r\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\r\n        event.captionStreams[caption.stream] = true;\r\n        event.captions.push(caption);\r\n      } // Translate ID3 frame PTS times into second offsets to match the\r\n      // video timeline for the segment\r\n\r\n\r\n      for (i = 0; i < this.pendingMetadata.length; i++) {\r\n        id3 = this.pendingMetadata[i];\r\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\r\n        event.metadata.push(id3);\r\n      } // We add this to every single emitted segment even though we only need\r\n      // it for the first\r\n\r\n\r\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\r\n\r\n      this.pendingTracks.length = 0;\r\n      this.videoTrack = null;\r\n      this.pendingBoxes.length = 0;\r\n      this.pendingCaptions.length = 0;\r\n      this.pendingBytes = 0;\r\n      this.pendingMetadata.length = 0; // Emit the built segment\r\n      // We include captions and ID3 tags for backwards compatibility,\r\n      // ideally we should send only video and audio in the data event\r\n\r\n      this.trigger('data', event); // Emit each caption to the outside world\r\n      // Ideally, this would happen immediately on parsing captions,\r\n      // but we need to ensure that video data is sent back first\r\n      // so that caption timing can be adjusted to match video timing\r\n\r\n      for (i = 0; i < event.captions.length; i++) {\r\n        caption = event.captions[i];\r\n        this.trigger('caption', caption);\r\n      } // Emit each id3 tag to the outside world\r\n      // Ideally, this would happen immediately on parsing the tag,\r\n      // but we need to ensure that video data is sent back first\r\n      // so that ID3 frame timing can be adjusted to match video timing\r\n\r\n\r\n      for (i = 0; i < event.metadata.length; i++) {\r\n        id3 = event.metadata[i];\r\n        this.trigger('id3Frame', id3);\r\n      }\r\n    } // Only emit `done` if all tracks have been flushed and emitted\r\n\r\n\r\n    if (this.emittedTracks >= this.numberOfTracks) {\r\n      this.trigger('done');\r\n      this.emittedTracks = 0;\r\n    }\r\n  };\r\n\r\n  _CoalesceStream.prototype.setRemux = function (val) {\r\n    this.remuxTracks = val;\r\n  };\r\n  /**\r\n   * A Stream that expects MP2T binary data as input and produces\r\n   * corresponding media segments, suitable for use with Media Source\r\n   * Extension (MSE) implementations that support the ISO BMFF byte\r\n   * stream format, like Chrome.\r\n   */\r\n\r\n\r\n  _Transmuxer = function Transmuxer(options) {\r\n    var self = this,\r\n        hasFlushed = true,\r\n        videoTrack,\r\n        audioTrack;\r\n\r\n    _Transmuxer.prototype.init.call(this);\r\n\r\n    options = options || {};\r\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\r\n    this.transmuxPipeline_ = {};\r\n\r\n    this.setupAacPipeline = function () {\r\n      var pipeline = {};\r\n      this.transmuxPipeline_ = pipeline;\r\n      pipeline.type = 'aac';\r\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\r\n\r\n      pipeline.aacStream = new aac();\r\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\r\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\r\n      pipeline.adtsStream = new adts();\r\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\r\n      pipeline.headOfPipeline = pipeline.aacStream;\r\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\r\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\r\n      pipeline.metadataStream.on('timestamp', function (frame) {\r\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\r\n      });\r\n      pipeline.aacStream.on('data', function (data) {\r\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\r\n          return;\r\n        }\r\n\r\n        audioTrack = audioTrack || {\r\n          timelineStartInfo: {\r\n            baseMediaDecodeTime: self.baseMediaDecodeTime\r\n          },\r\n          codec: 'adts',\r\n          type: 'audio'\r\n        }; // hook up the audio segment stream to the first track with aac data\r\n\r\n        pipeline.coalesceStream.numberOfTracks++;\r\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\r\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\r\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\r\n\r\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\r\n\r\n        self.trigger('trackinfo', {\r\n          hasAudio: !!audioTrack,\r\n          hasVideo: !!videoTrack\r\n        });\r\n      }); // Re-emit any data coming from the coalesce stream to the outside world\r\n\r\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\r\n\r\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\r\n      addPipelineLogRetriggers(this, pipeline);\r\n    };\r\n\r\n    this.setupTsPipeline = function () {\r\n      var pipeline = {};\r\n      this.transmuxPipeline_ = pipeline;\r\n      pipeline.type = 'ts';\r\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\r\n\r\n      pipeline.packetStream = new m2ts_1.TransportPacketStream();\r\n      pipeline.parseStream = new m2ts_1.TransportParseStream();\r\n      pipeline.elementaryStream = new m2ts_1.ElementaryStream();\r\n      pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\r\n      pipeline.adtsStream = new adts();\r\n      pipeline.h264Stream = new H264Stream();\r\n      pipeline.captionStream = new m2ts_1.CaptionStream(options);\r\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\r\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\r\n\r\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\r\n      // demux the streams\r\n\r\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\r\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\r\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\r\n\r\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\r\n      pipeline.elementaryStream.on('data', function (data) {\r\n        var i;\r\n\r\n        if (data.type === 'metadata') {\r\n          i = data.tracks.length; // scan the tracks listed in the metadata\r\n\r\n          while (i--) {\r\n            if (!videoTrack && data.tracks[i].type === 'video') {\r\n              videoTrack = data.tracks[i];\r\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\r\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\r\n              audioTrack = data.tracks[i];\r\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\r\n            }\r\n          } // hook up the video segment stream to the first track with h264 data\r\n\r\n\r\n          if (videoTrack && !pipeline.videoSegmentStream) {\r\n            pipeline.coalesceStream.numberOfTracks++;\r\n            pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\r\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\r\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\r\n              // When video emits timelineStartInfo data after a flush, we forward that\r\n              // info to the AudioSegmentStream, if it exists, because video timeline\r\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\r\n              // because this is a particularly subtle form of timestamp alteration.\r\n              if (audioTrack && !options.keepOriginalTimestamps) {\r\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\r\n                // very earliest DTS we have seen in video because Chrome will\r\n                // interpret any video track with a baseMediaDecodeTime that is\r\n                // non-zero as a gap.\r\n\r\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\r\n              }\r\n            });\r\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\r\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\r\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\r\n              if (audioTrack) {\r\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\r\n              }\r\n            });\r\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\r\n\r\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\r\n          }\r\n\r\n          if (audioTrack && !pipeline.audioSegmentStream) {\r\n            // hook up the audio segment stream to the first track with aac data\r\n            pipeline.coalesceStream.numberOfTracks++;\r\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\r\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\r\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\r\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\r\n\r\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\r\n          } // emit pmt info\r\n\r\n\r\n          self.trigger('trackinfo', {\r\n            hasAudio: !!audioTrack,\r\n            hasVideo: !!videoTrack\r\n          });\r\n        }\r\n      }); // Re-emit any data coming from the coalesce stream to the outside world\r\n\r\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\r\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\r\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\r\n        self.trigger('id3Frame', id3Frame);\r\n      });\r\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\r\n\r\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\r\n      addPipelineLogRetriggers(this, pipeline);\r\n    }; // hook up the segment streams once track metadata is delivered\r\n\r\n\r\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\r\n      var pipeline = this.transmuxPipeline_;\r\n\r\n      if (!options.keepOriginalTimestamps) {\r\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\r\n      }\r\n\r\n      if (audioTrack) {\r\n        audioTrack.timelineStartInfo.dts = undefined;\r\n        audioTrack.timelineStartInfo.pts = undefined;\r\n        trackDecodeInfo.clearDtsInfo(audioTrack);\r\n\r\n        if (pipeline.audioTimestampRolloverStream) {\r\n          pipeline.audioTimestampRolloverStream.discontinuity();\r\n        }\r\n      }\r\n\r\n      if (videoTrack) {\r\n        if (pipeline.videoSegmentStream) {\r\n          pipeline.videoSegmentStream.gopCache_ = [];\r\n        }\r\n\r\n        videoTrack.timelineStartInfo.dts = undefined;\r\n        videoTrack.timelineStartInfo.pts = undefined;\r\n        trackDecodeInfo.clearDtsInfo(videoTrack);\r\n        pipeline.captionStream.reset();\r\n      }\r\n\r\n      if (pipeline.timestampRolloverStream) {\r\n        pipeline.timestampRolloverStream.discontinuity();\r\n      }\r\n    };\r\n\r\n    this.setAudioAppendStart = function (timestamp) {\r\n      if (audioTrack) {\r\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\r\n      }\r\n    };\r\n\r\n    this.setRemux = function (val) {\r\n      var pipeline = this.transmuxPipeline_;\r\n      options.remux = val;\r\n\r\n      if (pipeline && pipeline.coalesceStream) {\r\n        pipeline.coalesceStream.setRemux(val);\r\n      }\r\n    };\r\n\r\n    this.alignGopsWith = function (gopsToAlignWith) {\r\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\r\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\r\n      }\r\n    };\r\n\r\n    this.getLogTrigger_ = function (key) {\r\n      var self = this;\r\n      return function (event) {\r\n        event.stream = key;\r\n        self.trigger('log', event);\r\n      };\r\n    }; // feed incoming data to the front of the parsing pipeline\r\n\r\n\r\n    this.push = function (data) {\r\n      if (hasFlushed) {\r\n        var isAac = isLikelyAacData(data);\r\n\r\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\r\n          this.setupAacPipeline();\r\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\r\n          this.setupTsPipeline();\r\n        }\r\n\r\n        hasFlushed = false;\r\n      }\r\n\r\n      this.transmuxPipeline_.headOfPipeline.push(data);\r\n    }; // flush any buffered data\r\n\r\n\r\n    this.flush = function () {\r\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\r\n\r\n      this.transmuxPipeline_.headOfPipeline.flush();\r\n    };\r\n\r\n    this.endTimeline = function () {\r\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\r\n    };\r\n\r\n    this.reset = function () {\r\n      if (this.transmuxPipeline_.headOfPipeline) {\r\n        this.transmuxPipeline_.headOfPipeline.reset();\r\n      }\r\n    }; // Caption data has to be reset when seeking outside buffered range\r\n\r\n\r\n    this.resetCaptions = function () {\r\n      if (this.transmuxPipeline_.captionStream) {\r\n        this.transmuxPipeline_.captionStream.reset();\r\n      }\r\n    };\r\n  };\r\n\r\n  _Transmuxer.prototype = new stream();\r\n  var transmuxer = {\r\n    Transmuxer: _Transmuxer,\r\n    VideoSegmentStream: _VideoSegmentStream,\r\n    AudioSegmentStream: _AudioSegmentStream,\r\n    AUDIO_PROPERTIES: audioProperties,\r\n    VIDEO_PROPERTIES: videoProperties,\r\n    // exported for testing\r\n    generateSegmentTimingInfo: generateSegmentTimingInfo\r\n  };\r\n  /**\r\n   * mux.js\r\n   *\r\n   * Copyright (c) Brightcove\r\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\r\n   */\r\n\r\n  var toUnsigned$3 = function toUnsigned(value) {\r\n    return value >>> 0;\r\n  };\r\n\r\n  var toHexString$1 = function toHexString(value) {\r\n    return ('00' + value.toString(16)).slice(-2);\r\n  };\r\n\r\n  var bin = {\r\n    toUnsigned: toUnsigned$3,\r\n    toHexString: toHexString$1\r\n  };\r\n\r\n  var parseType$1 = function parseType(buffer) {\r\n    var result = '';\r\n    result += String.fromCharCode(buffer[0]);\r\n    result += String.fromCharCode(buffer[1]);\r\n    result += String.fromCharCode(buffer[2]);\r\n    result += String.fromCharCode(buffer[3]);\r\n    return result;\r\n  };\r\n\r\n  var parseType_1 = parseType$1;\r\n  var toUnsigned$2 = bin.toUnsigned;\r\n\r\n  var findBox = function findBox(data, path) {\r\n    var results = [],\r\n        i,\r\n        size,\r\n        type,\r\n        end,\r\n        subresults;\r\n\r\n    if (!path.length) {\r\n      // short-circuit the search for empty paths\r\n      return null;\r\n    }\r\n\r\n    for (i = 0; i < data.byteLength;) {\r\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\r\n      type = parseType_1(data.subarray(i + 4, i + 8));\r\n      end = size > 1 ? i + size : data.byteLength;\r\n\r\n      if (type === path[0]) {\r\n        if (path.length === 1) {\r\n          // this is the end of the path and we've found the box we were\r\n          // looking for\r\n          results.push(data.subarray(i + 8, end));\r\n        } else {\r\n          // recursively search for the next box along the path\r\n          subresults = findBox(data.subarray(i + 8, end), path.slice(1));\r\n\r\n          if (subresults.length) {\r\n            results = results.concat(subresults);\r\n          }\r\n        }\r\n      }\r\n\r\n      i = end;\r\n    } // we've finished searching all of data\r\n\r\n\r\n    return results;\r\n  };\r\n\r\n  var findBox_1 = findBox;\r\n  var toUnsigned$1 = bin.toUnsigned;\r\n  var getUint64$1 = numbers.getUint64;\r\n\r\n  var tfdt = function tfdt(data) {\r\n    var result = {\r\n      version: data[0],\r\n      flags: new Uint8Array(data.subarray(1, 4))\r\n    };\r\n\r\n    if (result.version === 1) {\r\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\r\n    } else {\r\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  var parseTfdt = tfdt;\r\n\r\n  var parseSampleFlags = function parseSampleFlags(flags) {\r\n    return {\r\n      isLeading: (flags[0] & 0x0c) >>> 2,\r\n      dependsOn: flags[0] & 0x03,\r\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\r\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\r\n      paddingValue: (flags[1] & 0x0e) >>> 1,\r\n      isNonSyncSample: flags[1] & 0x01,\r\n      degradationPriority: flags[2] << 8 | flags[3]\r\n    };\r\n  };\r\n\r\n  var parseSampleFlags_1 = parseSampleFlags;\r\n\r\n  var trun = function trun(data) {\r\n    var result = {\r\n      version: data[0],\r\n      flags: new Uint8Array(data.subarray(1, 4)),\r\n      samples: []\r\n    },\r\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n        // Flag interpretation\r\n    dataOffsetPresent = result.flags[2] & 0x01,\r\n        // compare with 2nd byte of 0x1\r\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\r\n        // compare with 2nd byte of 0x4\r\n    sampleDurationPresent = result.flags[1] & 0x01,\r\n        // compare with 2nd byte of 0x100\r\n    sampleSizePresent = result.flags[1] & 0x02,\r\n        // compare with 2nd byte of 0x200\r\n    sampleFlagsPresent = result.flags[1] & 0x04,\r\n        // compare with 2nd byte of 0x400\r\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\r\n        // compare with 2nd byte of 0x800\r\n    sampleCount = view.getUint32(4),\r\n        offset = 8,\r\n        sample;\r\n\r\n    if (dataOffsetPresent) {\r\n      // 32 bit signed integer\r\n      result.dataOffset = view.getInt32(offset);\r\n      offset += 4;\r\n    } // Overrides the flags for the first sample only. The order of\r\n    // optional values will be: duration, size, compositionTimeOffset\r\n\r\n\r\n    if (firstSampleFlagsPresent && sampleCount) {\r\n      sample = {\r\n        flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\r\n      };\r\n      offset += 4;\r\n\r\n      if (sampleDurationPresent) {\r\n        sample.duration = view.getUint32(offset);\r\n        offset += 4;\r\n      }\r\n\r\n      if (sampleSizePresent) {\r\n        sample.size = view.getUint32(offset);\r\n        offset += 4;\r\n      }\r\n\r\n      if (sampleCompositionTimeOffsetPresent) {\r\n        if (result.version === 1) {\r\n          sample.compositionTimeOffset = view.getInt32(offset);\r\n        } else {\r\n          sample.compositionTimeOffset = view.getUint32(offset);\r\n        }\r\n\r\n        offset += 4;\r\n      }\r\n\r\n      result.samples.push(sample);\r\n      sampleCount--;\r\n    }\r\n\r\n    while (sampleCount--) {\r\n      sample = {};\r\n\r\n      if (sampleDurationPresent) {\r\n        sample.duration = view.getUint32(offset);\r\n        offset += 4;\r\n      }\r\n\r\n      if (sampleSizePresent) {\r\n        sample.size = view.getUint32(offset);\r\n        offset += 4;\r\n      }\r\n\r\n      if (sampleFlagsPresent) {\r\n        sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\r\n        offset += 4;\r\n      }\r\n\r\n      if (sampleCompositionTimeOffsetPresent) {\r\n        if (result.version === 1) {\r\n          sample.compositionTimeOffset = view.getInt32(offset);\r\n        } else {\r\n          sample.compositionTimeOffset = view.getUint32(offset);\r\n        }\r\n\r\n        offset += 4;\r\n      }\r\n\r\n      result.samples.push(sample);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  var parseTrun = trun;\r\n\r\n  var tfhd = function tfhd(data) {\r\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n        result = {\r\n      version: data[0],\r\n      flags: new Uint8Array(data.subarray(1, 4)),\r\n      trackId: view.getUint32(4)\r\n    },\r\n        baseDataOffsetPresent = result.flags[2] & 0x01,\r\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\r\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\r\n        defaultSampleSizePresent = result.flags[2] & 0x10,\r\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\r\n        durationIsEmpty = result.flags[0] & 0x010000,\r\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\r\n        i;\r\n    i = 8;\r\n\r\n    if (baseDataOffsetPresent) {\r\n      i += 4; // truncate top 4 bytes\r\n      // FIXME: should we read the full 64 bits?\r\n\r\n      result.baseDataOffset = view.getUint32(12);\r\n      i += 4;\r\n    }\r\n\r\n    if (sampleDescriptionIndexPresent) {\r\n      result.sampleDescriptionIndex = view.getUint32(i);\r\n      i += 4;\r\n    }\r\n\r\n    if (defaultSampleDurationPresent) {\r\n      result.defaultSampleDuration = view.getUint32(i);\r\n      i += 4;\r\n    }\r\n\r\n    if (defaultSampleSizePresent) {\r\n      result.defaultSampleSize = view.getUint32(i);\r\n      i += 4;\r\n    }\r\n\r\n    if (defaultSampleFlagsPresent) {\r\n      result.defaultSampleFlags = view.getUint32(i);\r\n    }\r\n\r\n    if (durationIsEmpty) {\r\n      result.durationIsEmpty = true;\r\n    }\r\n\r\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\r\n      result.baseDataOffsetIsMoof = true;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  var parseTfhd = tfhd;\r\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\r\n  var win;\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    win = window;\r\n  } else if (typeof commonjsGlobal !== \"undefined\") {\r\n    win = commonjsGlobal;\r\n  } else if (typeof self !== \"undefined\") {\r\n    win = self;\r\n  } else {\r\n    win = {};\r\n  }\r\n\r\n  var window_1 = win;\r\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\r\n  var CaptionStream = captionStream.CaptionStream;\r\n  /**\r\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\r\n    * Assumes that `parseSamples` has been called first.\r\n    *\r\n    * @param {Number} offset - The offset into the mdat\r\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\r\n    * @return {?Object} The matching sample, or null if no match was found.\r\n    *\r\n    * @see ISO-BMFF-12/2015, Section 8.8.8\r\n   **/\r\n\r\n  var mapToSample = function mapToSample(offset, samples) {\r\n    var approximateOffset = offset;\r\n\r\n    for (var i = 0; i < samples.length; i++) {\r\n      var sample = samples[i];\r\n\r\n      if (approximateOffset < sample.size) {\r\n        return sample;\r\n      }\r\n\r\n      approximateOffset -= sample.size;\r\n    }\r\n\r\n    return null;\r\n  };\r\n  /**\r\n    * Finds SEI nal units contained in a Media Data Box.\r\n    * Assumes that `parseSamples` has been called first.\r\n    *\r\n    * @param {Uint8Array} avcStream - The bytes of the mdat\r\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\r\n    * @param {Number} trackId - The trackId of this video track\r\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\r\n    *   The contents of the seiNal should match what is expected by\r\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\r\n    *\r\n    * @see ISO-BMFF-12/2015, Section 8.1.1\r\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\r\n   **/\r\n\r\n\r\n  var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\r\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\r\n        result = {\r\n      logs: [],\r\n      seiNals: []\r\n    },\r\n        seiNal,\r\n        i,\r\n        length,\r\n        lastMatchedSample;\r\n\r\n    for (i = 0; i + 4 < avcStream.length; i += length) {\r\n      length = avcView.getUint32(i);\r\n      i += 4; // Bail if this doesn't appear to be an H264 stream\r\n\r\n      if (length <= 0) {\r\n        continue;\r\n      }\r\n\r\n      switch (avcStream[i] & 0x1F) {\r\n        case 0x06:\r\n          var data = avcStream.subarray(i + 1, i + 1 + length);\r\n          var matchingSample = mapToSample(i, samples);\r\n          seiNal = {\r\n            nalUnitType: 'sei_rbsp',\r\n            size: length,\r\n            data: data,\r\n            escapedRBSP: discardEmulationPreventionBytes(data),\r\n            trackId: trackId\r\n          };\r\n\r\n          if (matchingSample) {\r\n            seiNal.pts = matchingSample.pts;\r\n            seiNal.dts = matchingSample.dts;\r\n            lastMatchedSample = matchingSample;\r\n          } else if (lastMatchedSample) {\r\n            // If a matching sample cannot be found, use the last\r\n            // sample's values as they should be as close as possible\r\n            seiNal.pts = lastMatchedSample.pts;\r\n            seiNal.dts = lastMatchedSample.dts;\r\n          } else {\r\n            result.logs.push({\r\n              level: 'warn',\r\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\r\n            });\r\n            break;\r\n          }\r\n\r\n          result.seiNals.push(seiNal);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n    * Parses sample information out of Track Run Boxes and calculates\r\n    * the absolute presentation and decode timestamps of each sample.\r\n    *\r\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\r\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\r\n        @see ISO-BMFF-12/2015, Section 8.8.12\r\n    * @param {Object} tfhd - The parsed Track Fragment Header\r\n    *   @see inspect.parseTfhd\r\n    * @return {Object[]} the parsed samples\r\n    *\r\n    * @see ISO-BMFF-12/2015, Section 8.8.8\r\n   **/\r\n\r\n\r\n  var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\r\n    var currentDts = baseMediaDecodeTime;\r\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\r\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\r\n    var trackId = tfhd.trackId;\r\n    var allSamples = [];\r\n    truns.forEach(function (trun) {\r\n      // Note: We currently do not parse the sample table as well\r\n      // as the trun. It's possible some sources will require this.\r\n      // moov > trak > mdia > minf > stbl\r\n      var trackRun = parseTrun(trun);\r\n      var samples = trackRun.samples;\r\n      samples.forEach(function (sample) {\r\n        if (sample.duration === undefined) {\r\n          sample.duration = defaultSampleDuration;\r\n        }\r\n\r\n        if (sample.size === undefined) {\r\n          sample.size = defaultSampleSize;\r\n        }\r\n\r\n        sample.trackId = trackId;\r\n        sample.dts = currentDts;\r\n\r\n        if (sample.compositionTimeOffset === undefined) {\r\n          sample.compositionTimeOffset = 0;\r\n        }\r\n\r\n        if (typeof currentDts === 'bigint') {\r\n          sample.pts = currentDts + window_1.BigInt(sample.compositionTimeOffset);\r\n          currentDts += window_1.BigInt(sample.duration);\r\n        } else {\r\n          sample.pts = currentDts + sample.compositionTimeOffset;\r\n          currentDts += sample.duration;\r\n        }\r\n      });\r\n      allSamples = allSamples.concat(samples);\r\n    });\r\n    return allSamples;\r\n  };\r\n  /**\r\n    * Parses out caption nals from an FMP4 segment's video tracks.\r\n    *\r\n    * @param {Uint8Array} segment - The bytes of a single segment\r\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\r\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\r\n    *   a list of seiNals found in that track\r\n   **/\r\n\r\n\r\n  var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\r\n    // To get the samples\r\n    var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\r\n\r\n    var mdats = findBox_1(segment, ['mdat']);\r\n    var captionNals = {};\r\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\r\n\r\n    mdats.forEach(function (mdat, index) {\r\n      var matchingTraf = trafs[index];\r\n      mdatTrafPairs.push({\r\n        mdat: mdat,\r\n        traf: matchingTraf\r\n      });\r\n    });\r\n    mdatTrafPairs.forEach(function (pair) {\r\n      var mdat = pair.mdat;\r\n      var traf = pair.traf;\r\n      var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\r\n\r\n      var headerInfo = parseTfhd(tfhd[0]);\r\n      var trackId = headerInfo.trackId;\r\n      var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\r\n\r\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\r\n      var truns = findBox_1(traf, ['trun']);\r\n      var samples;\r\n      var result; // Only parse video data for the chosen video track\r\n\r\n      if (videoTrackId === trackId && truns.length > 0) {\r\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\r\n        result = findSeiNals(mdat, samples, trackId);\r\n\r\n        if (!captionNals[trackId]) {\r\n          captionNals[trackId] = {\r\n            seiNals: [],\r\n            logs: []\r\n          };\r\n        }\r\n\r\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\r\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\r\n      }\r\n    });\r\n    return captionNals;\r\n  };\r\n  /**\r\n    * Parses out inband captions from an MP4 container and returns\r\n    * caption objects that can be used by WebVTT and the TextTrack API.\r\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\r\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\r\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\r\n    *\r\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\r\n    * @param {Number} trackId - The id of the video track to parse\r\n    * @param {Number} timescale - The timescale for the video track from the init segment\r\n    *\r\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\r\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\r\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\r\n    * @return {String} parsedCaptions[].text - The visible content of the caption\r\n   **/\r\n\r\n\r\n  var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\r\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\r\n\r\n    if (trackId === null) {\r\n      return null;\r\n    }\r\n\r\n    captionNals = parseCaptionNals(segment, trackId);\r\n    var trackNals = captionNals[trackId] || {};\r\n    return {\r\n      seiNals: trackNals.seiNals,\r\n      logs: trackNals.logs,\r\n      timescale: timescale\r\n    };\r\n  };\r\n  /**\r\n    * Converts SEI NALUs into captions that can be used by video.js\r\n   **/\r\n\r\n\r\n  var CaptionParser = function CaptionParser() {\r\n    var isInitialized = false;\r\n    var captionStream; // Stores segments seen before trackId and timescale are set\r\n\r\n    var segmentCache; // Stores video track ID of the track being parsed\r\n\r\n    var trackId; // Stores the timescale of the track being parsed\r\n\r\n    var timescale; // Stores captions parsed so far\r\n\r\n    var parsedCaptions; // Stores whether we are receiving partial data or not\r\n\r\n    var parsingPartial;\r\n    /**\r\n      * A method to indicate whether a CaptionParser has been initalized\r\n      * @returns {Boolean}\r\n     **/\r\n\r\n    this.isInitialized = function () {\r\n      return isInitialized;\r\n    };\r\n    /**\r\n      * Initializes the underlying CaptionStream, SEI NAL parsing\r\n      * and management, and caption collection\r\n     **/\r\n\r\n\r\n    this.init = function (options) {\r\n      captionStream = new CaptionStream();\r\n      isInitialized = true;\r\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\r\n\r\n      captionStream.on('data', function (event) {\r\n        // Convert to seconds in the source's timescale\r\n        event.startTime = event.startPts / timescale;\r\n        event.endTime = event.endPts / timescale;\r\n        parsedCaptions.captions.push(event);\r\n        parsedCaptions.captionStreams[event.stream] = true;\r\n      });\r\n      captionStream.on('log', function (log) {\r\n        parsedCaptions.logs.push(log);\r\n      });\r\n    };\r\n    /**\r\n      * Determines if a new video track will be selected\r\n      * or if the timescale changed\r\n      * @return {Boolean}\r\n     **/\r\n\r\n\r\n    this.isNewInit = function (videoTrackIds, timescales) {\r\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\r\n        return false;\r\n      }\r\n\r\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\r\n    };\r\n    /**\r\n      * Parses out SEI captions and interacts with underlying\r\n      * CaptionStream to return dispatched captions\r\n      *\r\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\r\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\r\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\r\n      * @see parseEmbeddedCaptions\r\n      * @see m2ts/caption-stream.js\r\n     **/\r\n\r\n\r\n    this.parse = function (segment, videoTrackIds, timescales) {\r\n      var parsedData;\r\n\r\n      if (!this.isInitialized()) {\r\n        return null; // This is not likely to be a video segment\r\n      } else if (!videoTrackIds || !timescales) {\r\n        return null;\r\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\r\n        // Use the first video track only as there is no\r\n        // mechanism to switch to other video tracks\r\n        trackId = videoTrackIds[0];\r\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\r\n        // data until we have one.\r\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\r\n      } else if (trackId === null || !timescale) {\r\n        segmentCache.push(segment);\r\n        return null;\r\n      } // Now that a timescale and trackId is set, parse cached segments\r\n\r\n\r\n      while (segmentCache.length > 0) {\r\n        var cachedSegment = segmentCache.shift();\r\n        this.parse(cachedSegment, videoTrackIds, timescales);\r\n      }\r\n\r\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\r\n\r\n      if (parsedData && parsedData.logs) {\r\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\r\n      }\r\n\r\n      if (parsedData === null || !parsedData.seiNals) {\r\n        if (parsedCaptions.logs.length) {\r\n          return {\r\n            logs: parsedCaptions.logs,\r\n            captions: [],\r\n            captionStreams: []\r\n          };\r\n        }\r\n\r\n        return null;\r\n      }\r\n\r\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\r\n\r\n      this.flushStream();\r\n      return parsedCaptions;\r\n    };\r\n    /**\r\n      * Pushes SEI NALUs onto CaptionStream\r\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\r\n      * Assumes that `parseCaptionNals` has been called first\r\n      * @see m2ts/caption-stream.js\r\n      **/\r\n\r\n\r\n    this.pushNals = function (nals) {\r\n      if (!this.isInitialized() || !nals || nals.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      nals.forEach(function (nal) {\r\n        captionStream.push(nal);\r\n      });\r\n    };\r\n    /**\r\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\r\n      * @see m2ts/caption-stream.js\r\n     **/\r\n\r\n\r\n    this.flushStream = function () {\r\n      if (!this.isInitialized()) {\r\n        return null;\r\n      }\r\n\r\n      if (!parsingPartial) {\r\n        captionStream.flush();\r\n      } else {\r\n        captionStream.partialFlush();\r\n      }\r\n    };\r\n    /**\r\n      * Reset caption buckets for new data\r\n     **/\r\n\r\n\r\n    this.clearParsedCaptions = function () {\r\n      parsedCaptions.captions = [];\r\n      parsedCaptions.captionStreams = {};\r\n      parsedCaptions.logs = [];\r\n    };\r\n    /**\r\n      * Resets underlying CaptionStream\r\n      * @see m2ts/caption-stream.js\r\n     **/\r\n\r\n\r\n    this.resetCaptionStream = function () {\r\n      if (!this.isInitialized()) {\r\n        return null;\r\n      }\r\n\r\n      captionStream.reset();\r\n    };\r\n    /**\r\n      * Convenience method to clear all captions flushed from the\r\n      * CaptionStream and still being parsed\r\n      * @see m2ts/caption-stream.js\r\n     **/\r\n\r\n\r\n    this.clearAllCaptions = function () {\r\n      this.clearParsedCaptions();\r\n      this.resetCaptionStream();\r\n    };\r\n    /**\r\n      * Reset caption parser\r\n     **/\r\n\r\n\r\n    this.reset = function () {\r\n      segmentCache = [];\r\n      trackId = null;\r\n      timescale = null;\r\n\r\n      if (!parsedCaptions) {\r\n        parsedCaptions = {\r\n          captions: [],\r\n          // CC1, CC2, CC3, CC4\r\n          captionStreams: {},\r\n          logs: []\r\n        };\r\n      } else {\r\n        this.clearParsedCaptions();\r\n      }\r\n\r\n      this.resetCaptionStream();\r\n    };\r\n\r\n    this.reset();\r\n  };\r\n\r\n  var captionParser = CaptionParser;\r\n  var toUnsigned = bin.toUnsigned;\r\n  var toHexString = bin.toHexString;\r\n  var getUint64 = numbers.getUint64;\r\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\r\n  /**\r\n   * Parses an MP4 initialization segment and extracts the timescale\r\n   * values for any declared tracks. Timescale values indicate the\r\n   * number of clock ticks per second to assume for time-based values\r\n   * elsewhere in the MP4.\r\n   *\r\n   * To determine the start time of an MP4, you need two pieces of\r\n   * information: the timescale unit and the earliest base media decode\r\n   * time. Multiple timescales can be specified within an MP4 but the\r\n   * base media decode time is always expressed in the timescale from\r\n   * the media header box for the track:\r\n   * ```\r\n   * moov > trak > mdia > mdhd.timescale\r\n   * ```\r\n   * @param init {Uint8Array} the bytes of the init segment\r\n   * @return {object} a hash of track ids to timescale values or null if\r\n   * the init segment is malformed.\r\n   */\r\n\r\n  timescale = function timescale(init) {\r\n    var result = {},\r\n        traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\r\n\r\n    return traks.reduce(function (result, trak) {\r\n      var tkhd, version, index, id, mdhd;\r\n      tkhd = findBox_1(trak, ['tkhd'])[0];\r\n\r\n      if (!tkhd) {\r\n        return null;\r\n      }\r\n\r\n      version = tkhd[0];\r\n      index = version === 0 ? 12 : 20;\r\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\r\n      mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\r\n\r\n      if (!mdhd) {\r\n        return null;\r\n      }\r\n\r\n      version = mdhd[0];\r\n      index = version === 0 ? 12 : 20;\r\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\r\n      return result;\r\n    }, result);\r\n  };\r\n  /**\r\n   * Determine the base media decode start time, in seconds, for an MP4\r\n   * fragment. If multiple fragments are specified, the earliest time is\r\n   * returned.\r\n   *\r\n   * The base media decode time can be parsed from track fragment\r\n   * metadata:\r\n   * ```\r\n   * moof > traf > tfdt.baseMediaDecodeTime\r\n   * ```\r\n   * It requires the timescale value from the mdhd to interpret.\r\n   *\r\n   * @param timescale {object} a hash of track ids to timescale values.\r\n   * @return {number} the earliest base media decode start time for the\r\n   * fragment, in seconds\r\n   */\r\n\r\n\r\n  startTime = function startTime(timescale, fragment) {\r\n    var trafs; // we need info from two childrend of each track fragment box\r\n\r\n    trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\r\n\r\n    var lowestTime = trafs.reduce(function (acc, traf) {\r\n      var tfhd = findBox_1(traf, ['tfhd'])[0]; // get the track id from the tfhd\r\n\r\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\r\n\r\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\r\n\r\n      var tfdt = findBox_1(traf, ['tfdt'])[0];\r\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\r\n      var baseTime; // version 1 is 64 bit\r\n\r\n      if (tfdt[0] === 1) {\r\n        baseTime = getUint64(tfdt.subarray(4, 12));\r\n      } else {\r\n        baseTime = dv.getUint32(4);\r\n      } // convert base time to seconds if it is a valid number.\r\n\r\n\r\n      var seconds;\r\n\r\n      if (typeof baseTime === 'bigint') {\r\n        seconds = baseTime / window_1.BigInt(scale);\r\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\r\n        seconds = baseTime / scale;\r\n      }\r\n\r\n      if (seconds < Number.MAX_SAFE_INTEGER) {\r\n        seconds = Number(seconds);\r\n      }\r\n\r\n      if (seconds < acc) {\r\n        acc = seconds;\r\n      }\r\n\r\n      return acc;\r\n    }, Infinity);\r\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\r\n  };\r\n  /**\r\n   * Determine the composition start, in seconds, for an MP4\r\n   * fragment.\r\n   *\r\n   * The composition start time of a fragment can be calculated using the base\r\n   * media decode time, composition time offset, and timescale, as follows:\r\n   *\r\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\r\n   *\r\n   * All of the aforementioned information is contained within a media fragment's\r\n   * `traf` box, except for timescale info, which comes from the initialization\r\n   * segment, so a track id (also contained within a `traf`) is also necessary to\r\n   * associate it with a timescale\r\n   *\r\n   *\r\n   * @param timescales {object} - a hash of track ids to timescale values.\r\n   * @param fragment {Unit8Array} - the bytes of a media segment\r\n   * @return {number} the composition start time for the fragment, in seconds\r\n   **/\r\n\r\n\r\n  compositionStartTime = function compositionStartTime(timescales, fragment) {\r\n    var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\r\n    var baseMediaDecodeTime = 0;\r\n    var compositionTimeOffset = 0;\r\n    var trackId;\r\n\r\n    if (trafBoxes && trafBoxes.length) {\r\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\r\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\r\n      // We will assume that they are, so we only need the first to calculate start time.\r\n      var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\r\n      var trun = findBox_1(trafBoxes[0], ['trun'])[0];\r\n      var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\r\n\r\n      if (tfhd) {\r\n        var parsedTfhd = parseTfhd(tfhd);\r\n        trackId = parsedTfhd.trackId;\r\n      }\r\n\r\n      if (tfdt) {\r\n        var parsedTfdt = parseTfdt(tfdt);\r\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\r\n      }\r\n\r\n      if (trun) {\r\n        var parsedTrun = parseTrun(trun);\r\n\r\n        if (parsedTrun.samples && parsedTrun.samples.length) {\r\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\r\n        }\r\n      }\r\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\r\n    // specified.\r\n\r\n\r\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\r\n\r\n    if (typeof baseMediaDecodeTime === 'bigint') {\r\n      compositionTimeOffset = window_1.BigInt(compositionTimeOffset);\r\n      timescale = window_1.BigInt(timescale);\r\n    }\r\n\r\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\r\n\r\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\r\n      result = Number(result);\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n    * Find the trackIds of the video tracks in this source.\r\n    * Found by parsing the Handler Reference and Track Header Boxes:\r\n    *   moov > trak > mdia > hdlr\r\n    *   moov > trak > tkhd\r\n    *\r\n    * @param {Uint8Array} init - The bytes of the init segment for this source\r\n    * @return {Number[]} A list of trackIds\r\n    *\r\n    * @see ISO-BMFF-12/2015, Section 8.4.3\r\n   **/\r\n\r\n\r\n  getVideoTrackIds = function getVideoTrackIds(init) {\r\n    var traks = findBox_1(init, ['moov', 'trak']);\r\n    var videoTrackIds = [];\r\n    traks.forEach(function (trak) {\r\n      var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\r\n      var tkhds = findBox_1(trak, ['tkhd']);\r\n      hdlrs.forEach(function (hdlr, index) {\r\n        var handlerType = parseType_1(hdlr.subarray(8, 12));\r\n        var tkhd = tkhds[index];\r\n        var view;\r\n        var version;\r\n        var trackId;\r\n\r\n        if (handlerType === 'vide') {\r\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\r\n          version = view.getUint8(0);\r\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\r\n          videoTrackIds.push(trackId);\r\n        }\r\n      });\r\n    });\r\n    return videoTrackIds;\r\n  };\r\n\r\n  getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\r\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\r\n    var version = mdhd[0];\r\n    var index = version === 0 ? 12 : 20;\r\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\r\n  };\r\n  /**\r\n   * Get all the video, audio, and hint tracks from a non fragmented\r\n   * mp4 segment\r\n   */\r\n\r\n\r\n  getTracks = function getTracks(init) {\r\n    var traks = findBox_1(init, ['moov', 'trak']);\r\n    var tracks = [];\r\n    traks.forEach(function (trak) {\r\n      var track = {};\r\n      var tkhd = findBox_1(trak, ['tkhd'])[0];\r\n      var view, tkhdVersion; // id\r\n\r\n      if (tkhd) {\r\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\r\n        tkhdVersion = view.getUint8(0);\r\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\r\n      }\r\n\r\n      var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\r\n\r\n      if (hdlr) {\r\n        var type = parseType_1(hdlr.subarray(8, 12));\r\n\r\n        if (type === 'vide') {\r\n          track.type = 'video';\r\n        } else if (type === 'soun') {\r\n          track.type = 'audio';\r\n        } else {\r\n          track.type = type;\r\n        }\r\n      } // codec\r\n\r\n\r\n      var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\r\n\r\n      if (stsd) {\r\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\r\n\r\n        track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\r\n        var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\r\n        var codecConfig, codecConfigType;\r\n\r\n        if (codecBox) {\r\n          // https://tools.ietf.org/html/rfc6381#section-3.3\r\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\r\n            // we don't need anything but the \"config\" parameter of the\r\n            // avc1 codecBox\r\n            codecConfig = codecBox.subarray(78);\r\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\r\n\r\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\r\n              track.codec += '.'; // left padded with zeroes for single digit hex\r\n              // profile idc\r\n\r\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\r\n\r\n              track.codec += toHexString(codecConfig[10]); // level idc\r\n\r\n              track.codec += toHexString(codecConfig[11]);\r\n            } else {\r\n              // TODO: show a warning that we couldn't parse the codec\r\n              // and are using the default\r\n              track.codec = 'avc1.4d400d';\r\n            }\r\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\r\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\r\n            codecConfig = codecBox.subarray(28);\r\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\r\n\r\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\r\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\r\n\r\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\r\n            } else {\r\n              // TODO: show a warning that we couldn't parse the codec\r\n              // and are using the default\r\n              track.codec = 'mp4a.40.2';\r\n            }\r\n          } else {\r\n            // flac, opus, etc\r\n            track.codec = track.codec.toLowerCase();\r\n          }\r\n        }\r\n      }\r\n\r\n      var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\r\n\r\n      if (mdhd) {\r\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\r\n      }\r\n\r\n      tracks.push(track);\r\n    });\r\n    return tracks;\r\n  };\r\n\r\n  var probe$2 = {\r\n    // export mp4 inspector's findBox and parseType for backwards compatibility\r\n    findBox: findBox_1,\r\n    parseType: parseType_1,\r\n    timescale: timescale,\r\n    startTime: startTime,\r\n    compositionStartTime: compositionStartTime,\r\n    videoTrackIds: getVideoTrackIds,\r\n    tracks: getTracks,\r\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\r\n  };\r\n\r\n  var parsePid = function parsePid(packet) {\r\n    var pid = packet[1] & 0x1f;\r\n    pid <<= 8;\r\n    pid |= packet[2];\r\n    return pid;\r\n  };\r\n\r\n  var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\r\n    return !!(packet[1] & 0x40);\r\n  };\r\n\r\n  var parseAdaptionField = function parseAdaptionField(packet) {\r\n    var offset = 0; // if an adaption field is present, its length is specified by the\r\n    // fifth byte of the TS packet header. The adaptation field is\r\n    // used to add stuffing to PES packets that don't fill a complete\r\n    // TS packet, and to specify some forms of timing and control data\r\n    // that we do not currently use.\r\n\r\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\r\n      offset += packet[4] + 1;\r\n    }\r\n\r\n    return offset;\r\n  };\r\n\r\n  var parseType = function parseType(packet, pmtPid) {\r\n    var pid = parsePid(packet);\r\n\r\n    if (pid === 0) {\r\n      return 'pat';\r\n    } else if (pid === pmtPid) {\r\n      return 'pmt';\r\n    } else if (pmtPid) {\r\n      return 'pes';\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var parsePat = function parsePat(packet) {\r\n    var pusi = parsePayloadUnitStartIndicator(packet);\r\n    var offset = 4 + parseAdaptionField(packet);\r\n\r\n    if (pusi) {\r\n      offset += packet[offset] + 1;\r\n    }\r\n\r\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\r\n  };\r\n\r\n  var parsePmt = function parsePmt(packet) {\r\n    var programMapTable = {};\r\n    var pusi = parsePayloadUnitStartIndicator(packet);\r\n    var payloadOffset = 4 + parseAdaptionField(packet);\r\n\r\n    if (pusi) {\r\n      payloadOffset += packet[payloadOffset] + 1;\r\n    } // PMTs can be sent ahead of the time when they should actually\r\n    // take effect. We don't believe this should ever be the case\r\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\r\n    // them. Future PMT declarations have the current_next_indicator\r\n    // set to zero.\r\n\r\n\r\n    if (!(packet[payloadOffset + 5] & 0x01)) {\r\n      return;\r\n    }\r\n\r\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\r\n\r\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\r\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\r\n    // long the program info descriptors are\r\n\r\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\r\n\r\n    var offset = 12 + programInfoLength;\r\n\r\n    while (offset < tableEnd) {\r\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\r\n\r\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\r\n      // skip past the elementary stream descriptors, if present\r\n\r\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\r\n    }\r\n\r\n    return programMapTable;\r\n  };\r\n\r\n  var parsePesType = function parsePesType(packet, programMapTable) {\r\n    var pid = parsePid(packet);\r\n    var type = programMapTable[pid];\r\n\r\n    switch (type) {\r\n      case streamTypes.H264_STREAM_TYPE:\r\n        return 'video';\r\n\r\n      case streamTypes.ADTS_STREAM_TYPE:\r\n        return 'audio';\r\n\r\n      case streamTypes.METADATA_STREAM_TYPE:\r\n        return 'timed-metadata';\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  var parsePesTime = function parsePesTime(packet) {\r\n    var pusi = parsePayloadUnitStartIndicator(packet);\r\n\r\n    if (!pusi) {\r\n      return null;\r\n    }\r\n\r\n    var offset = 4 + parseAdaptionField(packet);\r\n\r\n    if (offset >= packet.byteLength) {\r\n      // From the H 222.0 MPEG-TS spec\r\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\r\n      //  is insufficient PES packet data to completely fill the transport stream packet\r\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\r\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\r\n      //  remaining after the adaptation field exactly accommodates the available PES packet\r\n      //  data.\"\r\n      //\r\n      // If the offset is >= the length of the packet, then the packet contains no data\r\n      // and instead is just adaption field stuffing bytes\r\n      return null;\r\n    }\r\n\r\n    var pes = null;\r\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\r\n    // and a DTS value. Determine what combination of values is\r\n    // available to work with.\r\n\r\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\r\n    // performs all bitwise operations on 32-bit integers but javascript\r\n    // supports a much greater range (52-bits) of integer using standard\r\n    // mathematical operations.\r\n    // We construct a 31-bit value using bitwise operators over the 31\r\n    // most significant bits and then multiply by 4 (equal to a left-shift\r\n    // of 2) before we add the final 2 least significant bits of the\r\n    // timestamp (equal to an OR.)\r\n\r\n    if (ptsDtsFlags & 0xC0) {\r\n      pes = {}; // the PTS and DTS are not written out directly. For information\r\n      // on how they are encoded, see\r\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\r\n\r\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\r\n      pes.pts *= 4; // Left shift by 2\r\n\r\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\r\n\r\n      pes.dts = pes.pts;\r\n\r\n      if (ptsDtsFlags & 0x40) {\r\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\r\n        pes.dts *= 4; // Left shift by 2\r\n\r\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\r\n      }\r\n    }\r\n\r\n    return pes;\r\n  };\r\n\r\n  var parseNalUnitType = function parseNalUnitType(type) {\r\n    switch (type) {\r\n      case 0x05:\r\n        return 'slice_layer_without_partitioning_rbsp_idr';\r\n\r\n      case 0x06:\r\n        return 'sei_rbsp';\r\n\r\n      case 0x07:\r\n        return 'seq_parameter_set_rbsp';\r\n\r\n      case 0x08:\r\n        return 'pic_parameter_set_rbsp';\r\n\r\n      case 0x09:\r\n        return 'access_unit_delimiter_rbsp';\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\r\n    var offset = 4 + parseAdaptionField(packet);\r\n    var frameBuffer = packet.subarray(offset);\r\n    var frameI = 0;\r\n    var frameSyncPoint = 0;\r\n    var foundKeyFrame = false;\r\n    var nalType; // advance the sync point to a NAL start, if necessary\r\n\r\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\r\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\r\n        // the sync point is properly aligned\r\n        frameI = frameSyncPoint + 5;\r\n        break;\r\n      }\r\n    }\r\n\r\n    while (frameI < frameBuffer.byteLength) {\r\n      // look at the current byte to determine if we've hit the end of\r\n      // a NAL unit boundary\r\n      switch (frameBuffer[frameI]) {\r\n        case 0:\r\n          // skip past non-sync sequences\r\n          if (frameBuffer[frameI - 1] !== 0) {\r\n            frameI += 2;\r\n            break;\r\n          } else if (frameBuffer[frameI - 2] !== 0) {\r\n            frameI++;\r\n            break;\r\n          }\r\n\r\n          if (frameSyncPoint + 3 !== frameI - 2) {\r\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\r\n\r\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\r\n              foundKeyFrame = true;\r\n            }\r\n          } // drop trailing zeroes\r\n\r\n\r\n          do {\r\n            frameI++;\r\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\r\n\r\n          frameSyncPoint = frameI - 2;\r\n          frameI += 3;\r\n          break;\r\n\r\n        case 1:\r\n          // skip past non-sync sequences\r\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\r\n            frameI += 3;\r\n            break;\r\n          }\r\n\r\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\r\n\r\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\r\n            foundKeyFrame = true;\r\n          }\r\n\r\n          frameSyncPoint = frameI - 2;\r\n          frameI += 3;\r\n          break;\r\n\r\n        default:\r\n          // the current byte isn't a one or zero, so it cannot be part\r\n          // of a sync sequence\r\n          frameI += 3;\r\n          break;\r\n      }\r\n    }\r\n\r\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\r\n    frameI -= frameSyncPoint;\r\n    frameSyncPoint = 0; // parse the final nal\r\n\r\n    if (frameBuffer && frameBuffer.byteLength > 3) {\r\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\r\n\r\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\r\n        foundKeyFrame = true;\r\n      }\r\n    }\r\n\r\n    return foundKeyFrame;\r\n  };\r\n\r\n  var probe$1 = {\r\n    parseType: parseType,\r\n    parsePat: parsePat,\r\n    parsePmt: parsePmt,\r\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\r\n    parsePesType: parsePesType,\r\n    parsePesTime: parsePesTime,\r\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\r\n  };\r\n  var handleRollover = timestampRolloverStream.handleRollover;\r\n  var probe = {};\r\n  probe.ts = probe$1;\r\n  probe.aac = utils;\r\n  var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\r\n  var MP2T_PACKET_LENGTH = 188,\r\n      // bytes\r\n  SYNC_BYTE = 0x47;\r\n  /**\r\n   * walks through segment data looking for pat and pmt packets to parse out\r\n   * program map table information\r\n   */\r\n\r\n  var parsePsi_ = function parsePsi_(bytes, pmt) {\r\n    var startIndex = 0,\r\n        endIndex = MP2T_PACKET_LENGTH,\r\n        packet,\r\n        type;\r\n\r\n    while (endIndex < bytes.byteLength) {\r\n      // Look for a pair of start and end sync bytes in the data..\r\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\r\n        // We found a packet\r\n        packet = bytes.subarray(startIndex, endIndex);\r\n        type = probe.ts.parseType(packet, pmt.pid);\r\n\r\n        switch (type) {\r\n          case 'pat':\r\n            pmt.pid = probe.ts.parsePat(packet);\r\n            break;\r\n\r\n          case 'pmt':\r\n            var table = probe.ts.parsePmt(packet);\r\n            pmt.table = pmt.table || {};\r\n            Object.keys(table).forEach(function (key) {\r\n              pmt.table[key] = table[key];\r\n            });\r\n            break;\r\n        }\r\n\r\n        startIndex += MP2T_PACKET_LENGTH;\r\n        endIndex += MP2T_PACKET_LENGTH;\r\n        continue;\r\n      } // If we get here, we have somehow become de-synchronized and we need to step\r\n      // forward one byte at a time until we find a pair of sync bytes that denote\r\n      // a packet\r\n\r\n\r\n      startIndex++;\r\n      endIndex++;\r\n    }\r\n  };\r\n  /**\r\n   * walks through the segment data from the start and end to get timing information\r\n   * for the first and last audio pes packets\r\n   */\r\n\r\n\r\n  var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\r\n    var startIndex = 0,\r\n        endIndex = MP2T_PACKET_LENGTH,\r\n        packet,\r\n        type,\r\n        pesType,\r\n        pusi,\r\n        parsed;\r\n    var endLoop = false; // Start walking from start of segment to get first audio packet\r\n\r\n    while (endIndex <= bytes.byteLength) {\r\n      // Look for a pair of start and end sync bytes in the data..\r\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\r\n        // We found a packet\r\n        packet = bytes.subarray(startIndex, endIndex);\r\n        type = probe.ts.parseType(packet, pmt.pid);\r\n\r\n        switch (type) {\r\n          case 'pes':\r\n            pesType = probe.ts.parsePesType(packet, pmt.table);\r\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\r\n\r\n            if (pesType === 'audio' && pusi) {\r\n              parsed = probe.ts.parsePesTime(packet);\r\n\r\n              if (parsed) {\r\n                parsed.type = 'audio';\r\n                result.audio.push(parsed);\r\n                endLoop = true;\r\n              }\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        if (endLoop) {\r\n          break;\r\n        }\r\n\r\n        startIndex += MP2T_PACKET_LENGTH;\r\n        endIndex += MP2T_PACKET_LENGTH;\r\n        continue;\r\n      } // If we get here, we have somehow become de-synchronized and we need to step\r\n      // forward one byte at a time until we find a pair of sync bytes that denote\r\n      // a packet\r\n\r\n\r\n      startIndex++;\r\n      endIndex++;\r\n    } // Start walking from end of segment to get last audio packet\r\n\r\n\r\n    endIndex = bytes.byteLength;\r\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\r\n    endLoop = false;\r\n\r\n    while (startIndex >= 0) {\r\n      // Look for a pair of start and end sync bytes in the data..\r\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\r\n        // We found a packet\r\n        packet = bytes.subarray(startIndex, endIndex);\r\n        type = probe.ts.parseType(packet, pmt.pid);\r\n\r\n        switch (type) {\r\n          case 'pes':\r\n            pesType = probe.ts.parsePesType(packet, pmt.table);\r\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\r\n\r\n            if (pesType === 'audio' && pusi) {\r\n              parsed = probe.ts.parsePesTime(packet);\r\n\r\n              if (parsed) {\r\n                parsed.type = 'audio';\r\n                result.audio.push(parsed);\r\n                endLoop = true;\r\n              }\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        if (endLoop) {\r\n          break;\r\n        }\r\n\r\n        startIndex -= MP2T_PACKET_LENGTH;\r\n        endIndex -= MP2T_PACKET_LENGTH;\r\n        continue;\r\n      } // If we get here, we have somehow become de-synchronized and we need to step\r\n      // forward one byte at a time until we find a pair of sync bytes that denote\r\n      // a packet\r\n\r\n\r\n      startIndex--;\r\n      endIndex--;\r\n    }\r\n  };\r\n  /**\r\n   * walks through the segment data from the start and end to get timing information\r\n   * for the first and last video pes packets as well as timing information for the first\r\n   * key frame.\r\n   */\r\n\r\n\r\n  var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\r\n    var startIndex = 0,\r\n        endIndex = MP2T_PACKET_LENGTH,\r\n        packet,\r\n        type,\r\n        pesType,\r\n        pusi,\r\n        parsed,\r\n        frame,\r\n        i,\r\n        pes;\r\n    var endLoop = false;\r\n    var currentFrame = {\r\n      data: [],\r\n      size: 0\r\n    }; // Start walking from start of segment to get first video packet\r\n\r\n    while (endIndex < bytes.byteLength) {\r\n      // Look for a pair of start and end sync bytes in the data..\r\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\r\n        // We found a packet\r\n        packet = bytes.subarray(startIndex, endIndex);\r\n        type = probe.ts.parseType(packet, pmt.pid);\r\n\r\n        switch (type) {\r\n          case 'pes':\r\n            pesType = probe.ts.parsePesType(packet, pmt.table);\r\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\r\n\r\n            if (pesType === 'video') {\r\n              if (pusi && !endLoop) {\r\n                parsed = probe.ts.parsePesTime(packet);\r\n\r\n                if (parsed) {\r\n                  parsed.type = 'video';\r\n                  result.video.push(parsed);\r\n                  endLoop = true;\r\n                }\r\n              }\r\n\r\n              if (!result.firstKeyFrame) {\r\n                if (pusi) {\r\n                  if (currentFrame.size !== 0) {\r\n                    frame = new Uint8Array(currentFrame.size);\r\n                    i = 0;\r\n\r\n                    while (currentFrame.data.length) {\r\n                      pes = currentFrame.data.shift();\r\n                      frame.set(pes, i);\r\n                      i += pes.byteLength;\r\n                    }\r\n\r\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\r\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\r\n                      // the keyframe seems to work fine with HLS playback\r\n                      // and definitely preferable to a crash with TypeError...\r\n\r\n                      if (firstKeyFrame) {\r\n                        result.firstKeyFrame = firstKeyFrame;\r\n                        result.firstKeyFrame.type = 'video';\r\n                      } else {\r\n                        // eslint-disable-next-line\r\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\r\n                      }\r\n                    }\r\n\r\n                    currentFrame.size = 0;\r\n                  }\r\n                }\r\n\r\n                currentFrame.data.push(packet);\r\n                currentFrame.size += packet.byteLength;\r\n              }\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        if (endLoop && result.firstKeyFrame) {\r\n          break;\r\n        }\r\n\r\n        startIndex += MP2T_PACKET_LENGTH;\r\n        endIndex += MP2T_PACKET_LENGTH;\r\n        continue;\r\n      } // If we get here, we have somehow become de-synchronized and we need to step\r\n      // forward one byte at a time until we find a pair of sync bytes that denote\r\n      // a packet\r\n\r\n\r\n      startIndex++;\r\n      endIndex++;\r\n    } // Start walking from end of segment to get last video packet\r\n\r\n\r\n    endIndex = bytes.byteLength;\r\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\r\n    endLoop = false;\r\n\r\n    while (startIndex >= 0) {\r\n      // Look for a pair of start and end sync bytes in the data..\r\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\r\n        // We found a packet\r\n        packet = bytes.subarray(startIndex, endIndex);\r\n        type = probe.ts.parseType(packet, pmt.pid);\r\n\r\n        switch (type) {\r\n          case 'pes':\r\n            pesType = probe.ts.parsePesType(packet, pmt.table);\r\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\r\n\r\n            if (pesType === 'video' && pusi) {\r\n              parsed = probe.ts.parsePesTime(packet);\r\n\r\n              if (parsed) {\r\n                parsed.type = 'video';\r\n                result.video.push(parsed);\r\n                endLoop = true;\r\n              }\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        if (endLoop) {\r\n          break;\r\n        }\r\n\r\n        startIndex -= MP2T_PACKET_LENGTH;\r\n        endIndex -= MP2T_PACKET_LENGTH;\r\n        continue;\r\n      } // If we get here, we have somehow become de-synchronized and we need to step\r\n      // forward one byte at a time until we find a pair of sync bytes that denote\r\n      // a packet\r\n\r\n\r\n      startIndex--;\r\n      endIndex--;\r\n    }\r\n  };\r\n  /**\r\n   * Adjusts the timestamp information for the segment to account for\r\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\r\n   */\r\n\r\n\r\n  var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\r\n    if (segmentInfo.audio && segmentInfo.audio.length) {\r\n      var audioBaseTimestamp = baseTimestamp;\r\n\r\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\r\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\r\n      }\r\n\r\n      segmentInfo.audio.forEach(function (info) {\r\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\r\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\r\n\r\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\r\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\r\n      });\r\n    }\r\n\r\n    if (segmentInfo.video && segmentInfo.video.length) {\r\n      var videoBaseTimestamp = baseTimestamp;\r\n\r\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\r\n        videoBaseTimestamp = segmentInfo.video[0].dts;\r\n      }\r\n\r\n      segmentInfo.video.forEach(function (info) {\r\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\r\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\r\n\r\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\r\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\r\n      });\r\n\r\n      if (segmentInfo.firstKeyFrame) {\r\n        var frame = segmentInfo.firstKeyFrame;\r\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\r\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\r\n\r\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\r\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * inspects the aac data stream for start and end time information\r\n   */\r\n\r\n\r\n  var inspectAac_ = function inspectAac_(bytes) {\r\n    var endLoop = false,\r\n        audioCount = 0,\r\n        sampleRate = null,\r\n        timestamp = null,\r\n        frameSize = 0,\r\n        byteIndex = 0,\r\n        packet;\r\n\r\n    while (bytes.length - byteIndex >= 3) {\r\n      var type = probe.aac.parseType(bytes, byteIndex);\r\n\r\n      switch (type) {\r\n        case 'timed-metadata':\r\n          // Exit early because we don't have enough to parse\r\n          // the ID3 tag header\r\n          if (bytes.length - byteIndex < 10) {\r\n            endLoop = true;\r\n            break;\r\n          }\r\n\r\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\r\n          // to emit a full packet\r\n\r\n          if (frameSize > bytes.length) {\r\n            endLoop = true;\r\n            break;\r\n          }\r\n\r\n          if (timestamp === null) {\r\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\r\n            timestamp = probe.aac.parseAacTimestamp(packet);\r\n          }\r\n\r\n          byteIndex += frameSize;\r\n          break;\r\n\r\n        case 'audio':\r\n          // Exit early because we don't have enough to parse\r\n          // the ADTS frame header\r\n          if (bytes.length - byteIndex < 7) {\r\n            endLoop = true;\r\n            break;\r\n          }\r\n\r\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\r\n          // to emit a full packet\r\n\r\n          if (frameSize > bytes.length) {\r\n            endLoop = true;\r\n            break;\r\n          }\r\n\r\n          if (sampleRate === null) {\r\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\r\n            sampleRate = probe.aac.parseSampleRate(packet);\r\n          }\r\n\r\n          audioCount++;\r\n          byteIndex += frameSize;\r\n          break;\r\n\r\n        default:\r\n          byteIndex++;\r\n          break;\r\n      }\r\n\r\n      if (endLoop) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (sampleRate === null || timestamp === null) {\r\n      return null;\r\n    }\r\n\r\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\r\n    var result = {\r\n      audio: [{\r\n        type: 'audio',\r\n        dts: timestamp,\r\n        pts: timestamp\r\n      }, {\r\n        type: 'audio',\r\n        dts: timestamp + audioCount * 1024 * audioTimescale,\r\n        pts: timestamp + audioCount * 1024 * audioTimescale\r\n      }]\r\n    };\r\n    return result;\r\n  };\r\n  /**\r\n   * inspects the transport stream segment data for start and end time information\r\n   * of the audio and video tracks (when present) as well as the first key frame's\r\n   * start time.\r\n   */\r\n\r\n\r\n  var inspectTs_ = function inspectTs_(bytes) {\r\n    var pmt = {\r\n      pid: null,\r\n      table: null\r\n    };\r\n    var result = {};\r\n    parsePsi_(bytes, pmt);\r\n\r\n    for (var pid in pmt.table) {\r\n      if (pmt.table.hasOwnProperty(pid)) {\r\n        var type = pmt.table[pid];\r\n\r\n        switch (type) {\r\n          case streamTypes.H264_STREAM_TYPE:\r\n            result.video = [];\r\n            parseVideoPes_(bytes, pmt, result);\r\n\r\n            if (result.video.length === 0) {\r\n              delete result.video;\r\n            }\r\n\r\n            break;\r\n\r\n          case streamTypes.ADTS_STREAM_TYPE:\r\n            result.audio = [];\r\n            parseAudioPes_(bytes, pmt, result);\r\n\r\n            if (result.audio.length === 0) {\r\n              delete result.audio;\r\n            }\r\n\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n   * Inspects segment byte data and returns an object with start and end timing information\r\n   *\r\n   * @param {Uint8Array} bytes The segment byte data\r\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\r\n   *  timestamps for rollover. This value must be in 90khz clock.\r\n   * @return {Object} Object containing start and end frame timing info of segment.\r\n   */\r\n\r\n\r\n  var inspect = function inspect(bytes, baseTimestamp) {\r\n    var isAacData = probe.aac.isLikelyAacData(bytes);\r\n    var result;\r\n\r\n    if (isAacData) {\r\n      result = inspectAac_(bytes);\r\n    } else {\r\n      result = inspectTs_(bytes);\r\n    }\r\n\r\n    if (!result || !result.audio && !result.video) {\r\n      return null;\r\n    }\r\n\r\n    adjustTimestamp_(result, baseTimestamp);\r\n    return result;\r\n  };\r\n\r\n  var tsInspector = {\r\n    inspect: inspect,\r\n    parseAudioPes_: parseAudioPes_\r\n  };\r\n  /* global self */\r\n\r\n  /**\r\n   * Re-emits transmuxer events by converting them into messages to the\r\n   * world outside the worker.\r\n   *\r\n   * @param {Object} transmuxer the transmuxer to wire events on\r\n   * @private\r\n   */\r\n\r\n  var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\r\n    transmuxer.on('data', function (segment) {\r\n      // transfer ownership of the underlying ArrayBuffer\r\n      // instead of doing a copy to save memory\r\n      // ArrayBuffers are transferable but generic TypedArrays are not\r\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\r\n      var initArray = segment.initSegment;\r\n      segment.initSegment = {\r\n        data: initArray.buffer,\r\n        byteOffset: initArray.byteOffset,\r\n        byteLength: initArray.byteLength\r\n      };\r\n      var typedArray = segment.data;\r\n      segment.data = typedArray.buffer;\r\n      self.postMessage({\r\n        action: 'data',\r\n        segment: segment,\r\n        byteOffset: typedArray.byteOffset,\r\n        byteLength: typedArray.byteLength\r\n      }, [segment.data]);\r\n    });\r\n    transmuxer.on('done', function (data) {\r\n      self.postMessage({\r\n        action: 'done'\r\n      });\r\n    });\r\n    transmuxer.on('gopInfo', function (gopInfo) {\r\n      self.postMessage({\r\n        action: 'gopInfo',\r\n        gopInfo: gopInfo\r\n      });\r\n    });\r\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\r\n      var videoSegmentTimingInfo = {\r\n        start: {\r\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\r\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\r\n        },\r\n        end: {\r\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\r\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\r\n        },\r\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\r\n      };\r\n\r\n      if (timingInfo.prependedContentDuration) {\r\n        videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\r\n      }\r\n\r\n      self.postMessage({\r\n        action: 'videoSegmentTimingInfo',\r\n        videoSegmentTimingInfo: videoSegmentTimingInfo\r\n      });\r\n    });\r\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\r\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\r\n      var audioSegmentTimingInfo = {\r\n        start: {\r\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\r\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\r\n        },\r\n        end: {\r\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\r\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\r\n        },\r\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\r\n      };\r\n\r\n      if (timingInfo.prependedContentDuration) {\r\n        audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\r\n      }\r\n\r\n      self.postMessage({\r\n        action: 'audioSegmentTimingInfo',\r\n        audioSegmentTimingInfo: audioSegmentTimingInfo\r\n      });\r\n    });\r\n    transmuxer.on('id3Frame', function (id3Frame) {\r\n      self.postMessage({\r\n        action: 'id3Frame',\r\n        id3Frame: id3Frame\r\n      });\r\n    });\r\n    transmuxer.on('caption', function (caption) {\r\n      self.postMessage({\r\n        action: 'caption',\r\n        caption: caption\r\n      });\r\n    });\r\n    transmuxer.on('trackinfo', function (trackInfo) {\r\n      self.postMessage({\r\n        action: 'trackinfo',\r\n        trackInfo: trackInfo\r\n      });\r\n    });\r\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\r\n      // convert to video TS since we prioritize video time over audio\r\n      self.postMessage({\r\n        action: 'audioTimingInfo',\r\n        audioTimingInfo: {\r\n          start: clock.videoTsToSeconds(audioTimingInfo.start),\r\n          end: clock.videoTsToSeconds(audioTimingInfo.end)\r\n        }\r\n      });\r\n    });\r\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\r\n      self.postMessage({\r\n        action: 'videoTimingInfo',\r\n        videoTimingInfo: {\r\n          start: clock.videoTsToSeconds(videoTimingInfo.start),\r\n          end: clock.videoTsToSeconds(videoTimingInfo.end)\r\n        }\r\n      });\r\n    });\r\n    transmuxer.on('log', function (log) {\r\n      self.postMessage({\r\n        action: 'log',\r\n        log: log\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * All incoming messages route through this hash. If no function exists\r\n   * to handle an incoming message, then we ignore the message.\r\n   *\r\n   * @class MessageHandlers\r\n   * @param {Object} options the options to initialize with\r\n   */\r\n\r\n\r\n  var MessageHandlers = /*#__PURE__*/function () {\r\n    function MessageHandlers(self, options) {\r\n      this.options = options || {};\r\n      this.self = self;\r\n      this.init();\r\n    }\r\n    /**\r\n     * initialize our web worker and wire all the events.\r\n     */\r\n\r\n\r\n    var _proto = MessageHandlers.prototype;\r\n\r\n    _proto.init = function init() {\r\n      if (this.transmuxer) {\r\n        this.transmuxer.dispose();\r\n      }\r\n\r\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\r\n      wireTransmuxerEvents(this.self, this.transmuxer);\r\n    };\r\n\r\n    _proto.pushMp4Captions = function pushMp4Captions(data) {\r\n      if (!this.captionParser) {\r\n        this.captionParser = new captionParser();\r\n        this.captionParser.init();\r\n      }\r\n\r\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\r\n      var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\r\n      this.self.postMessage({\r\n        action: 'mp4Captions',\r\n        captions: parsed && parsed.captions || [],\r\n        logs: parsed && parsed.logs || [],\r\n        data: segment.buffer\r\n      }, [segment.buffer]);\r\n    };\r\n\r\n    _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\r\n      var timescales = _ref.timescales,\r\n          data = _ref.data;\r\n      var startTime = probe$2.startTime(timescales, data);\r\n      this.self.postMessage({\r\n        action: 'probeMp4StartTime',\r\n        startTime: startTime,\r\n        data: data\r\n      }, [data.buffer]);\r\n    };\r\n\r\n    _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\r\n      var data = _ref2.data;\r\n      var tracks = probe$2.tracks(data);\r\n      this.self.postMessage({\r\n        action: 'probeMp4Tracks',\r\n        tracks: tracks,\r\n        data: data\r\n      }, [data.buffer]);\r\n    }\r\n    /**\r\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\r\n     * internal \"media time,\" as well as whether it contains video and/or audio.\r\n     *\r\n     * @private\r\n     * @param {Uint8Array} bytes - segment bytes\r\n     * @param {number} baseStartTime\r\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\r\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\r\n     *        function body.\r\n     * @return {Object} The start time of the current segment in \"media time\" as well as\r\n     *                  whether it contains video and/or audio\r\n     */\r\n    ;\r\n\r\n    _proto.probeTs = function probeTs(_ref3) {\r\n      var data = _ref3.data,\r\n          baseStartTime = _ref3.baseStartTime;\r\n      var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\r\n      var timeInfo = tsInspector.inspect(data, tsStartTime);\r\n      var result = null;\r\n\r\n      if (timeInfo) {\r\n        result = {\r\n          // each type's time info comes back as an array of 2 times, start and end\r\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\r\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\r\n        };\r\n\r\n        if (result.hasVideo) {\r\n          result.videoStart = timeInfo.video[0].ptsTime;\r\n        }\r\n\r\n        if (result.hasAudio) {\r\n          result.audioStart = timeInfo.audio[0].ptsTime;\r\n        }\r\n      }\r\n\r\n      this.self.postMessage({\r\n        action: 'probeTs',\r\n        result: result,\r\n        data: data\r\n      }, [data.buffer]);\r\n    };\r\n\r\n    _proto.clearAllMp4Captions = function clearAllMp4Captions() {\r\n      if (this.captionParser) {\r\n        this.captionParser.clearAllCaptions();\r\n      }\r\n    };\r\n\r\n    _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\r\n      if (this.captionParser) {\r\n        this.captionParser.clearParsedCaptions();\r\n      }\r\n    }\r\n    /**\r\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\r\n     * processing.\r\n     *\r\n     * @param {ArrayBuffer} data data to push into the muxer\r\n     */\r\n    ;\r\n\r\n    _proto.push = function push(data) {\r\n      // Cast array buffer to correct type for transmuxer\r\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\r\n      this.transmuxer.push(segment);\r\n    }\r\n    /**\r\n     * Recreate the transmuxer so that the next segment added via `push`\r\n     * start with a fresh transmuxer.\r\n     */\r\n    ;\r\n\r\n    _proto.reset = function reset() {\r\n      this.transmuxer.reset();\r\n    }\r\n    /**\r\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\r\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\r\n     * set relative to the first based on the PTS values.\r\n     *\r\n     * @param {Object} data used to set the timestamp offset in the muxer\r\n     */\r\n    ;\r\n\r\n    _proto.setTimestampOffset = function setTimestampOffset(data) {\r\n      var timestampOffset = data.timestampOffset || 0;\r\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\r\n    };\r\n\r\n    _proto.setAudioAppendStart = function setAudioAppendStart(data) {\r\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\r\n    };\r\n\r\n    _proto.setRemux = function setRemux(data) {\r\n      this.transmuxer.setRemux(data.remux);\r\n    }\r\n    /**\r\n     * Forces the pipeline to finish processing the last segment and emit it's\r\n     * results.\r\n     *\r\n     * @param {Object} data event data, not really used\r\n     */\r\n    ;\r\n\r\n    _proto.flush = function flush(data) {\r\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\r\n\r\n      self.postMessage({\r\n        action: 'done',\r\n        type: 'transmuxed'\r\n      });\r\n    };\r\n\r\n    _proto.endTimeline = function endTimeline() {\r\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\r\n      // timelines\r\n\r\n      self.postMessage({\r\n        action: 'endedtimeline',\r\n        type: 'transmuxed'\r\n      });\r\n    };\r\n\r\n    _proto.alignGopsWith = function alignGopsWith(data) {\r\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\r\n    };\r\n\r\n    return MessageHandlers;\r\n  }();\r\n  /**\r\n   * Our web worker interface so that things can talk to mux.js\r\n   * that will be running in a web worker. the scope is passed to this by\r\n   * webworkify.\r\n   *\r\n   * @param {Object} self the scope for the web worker\r\n   */\r\n\r\n\r\n  self.onmessage = function (event) {\r\n    if (event.data.action === 'init' && event.data.options) {\r\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\r\n      return;\r\n    }\r\n\r\n    if (!this.messageHandlers) {\r\n      this.messageHandlers = new MessageHandlers(self);\r\n    }\r\n\r\n    if (event.data && event.data.action && event.data.action !== 'init') {\r\n      if (this.messageHandlers[event.data.action]) {\r\n        this.messageHandlers[event.data.action](event.data);\r\n      }\r\n    }\r\n  };\r\n}));\r\nvar TransmuxWorker = factory(workerCode$1);\r\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\r\n\r\nvar handleData_ = function handleData_(event, transmuxedData, callback) {\r\n  var _event$data$segment = event.data.segment,\r\n      type = _event$data$segment.type,\r\n      initSegment = _event$data$segment.initSegment,\r\n      captions = _event$data$segment.captions,\r\n      captionStreams = _event$data$segment.captionStreams,\r\n      metadata = _event$data$segment.metadata,\r\n      videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\r\n      videoFramePtsTime = _event$data$segment.videoFramePtsTime;\r\n  transmuxedData.buffer.push({\r\n    captions: captions,\r\n    captionStreams: captionStreams,\r\n    metadata: metadata\r\n  });\r\n  var boxes = event.data.segment.boxes || {\r\n    data: event.data.segment.data\r\n  };\r\n  var result = {\r\n    type: type,\r\n    // cast ArrayBuffer to TypedArray\r\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\r\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\r\n  };\r\n\r\n  if (typeof videoFrameDtsTime !== 'undefined') {\r\n    result.videoFrameDtsTime = videoFrameDtsTime;\r\n  }\r\n\r\n  if (typeof videoFramePtsTime !== 'undefined') {\r\n    result.videoFramePtsTime = videoFramePtsTime;\r\n  }\r\n\r\n  callback(result);\r\n};\r\n\r\nvar handleDone_ = function handleDone_(_ref) {\r\n  var transmuxedData = _ref.transmuxedData,\r\n      callback = _ref.callback; // Previously we only returned data on data events,\r\n  // not on done events. Clear out the buffer to keep that consistent.\r\n\r\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\r\n  // have received\r\n\r\n  callback(transmuxedData);\r\n};\r\n\r\nvar handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\r\n  transmuxedData.gopInfo = event.data.gopInfo;\r\n};\r\n\r\nvar processTransmux = function processTransmux(options) {\r\n  var transmuxer = options.transmuxer,\r\n      bytes = options.bytes,\r\n      audioAppendStart = options.audioAppendStart,\r\n      gopsToAlignWith = options.gopsToAlignWith,\r\n      remux = options.remux,\r\n      onData = options.onData,\r\n      onTrackInfo = options.onTrackInfo,\r\n      onAudioTimingInfo = options.onAudioTimingInfo,\r\n      onVideoTimingInfo = options.onVideoTimingInfo,\r\n      onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\r\n      onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\r\n      onId3 = options.onId3,\r\n      onCaptions = options.onCaptions,\r\n      onDone = options.onDone,\r\n      onEndedTimeline = options.onEndedTimeline,\r\n      onTransmuxerLog = options.onTransmuxerLog,\r\n      isEndOfTimeline = options.isEndOfTimeline;\r\n  var transmuxedData = {\r\n    buffer: []\r\n  };\r\n  var waitForEndedTimelineEvent = isEndOfTimeline;\r\n\r\n  var handleMessage = function handleMessage(event) {\r\n    if (transmuxer.currentTransmux !== options) {\r\n      // disposed\r\n      return;\r\n    }\r\n\r\n    if (event.data.action === 'data') {\r\n      handleData_(event, transmuxedData, onData);\r\n    }\r\n\r\n    if (event.data.action === 'trackinfo') {\r\n      onTrackInfo(event.data.trackInfo);\r\n    }\r\n\r\n    if (event.data.action === 'gopInfo') {\r\n      handleGopInfo_(event, transmuxedData);\r\n    }\r\n\r\n    if (event.data.action === 'audioTimingInfo') {\r\n      onAudioTimingInfo(event.data.audioTimingInfo);\r\n    }\r\n\r\n    if (event.data.action === 'videoTimingInfo') {\r\n      onVideoTimingInfo(event.data.videoTimingInfo);\r\n    }\r\n\r\n    if (event.data.action === 'videoSegmentTimingInfo') {\r\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\r\n    }\r\n\r\n    if (event.data.action === 'audioSegmentTimingInfo') {\r\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\r\n    }\r\n\r\n    if (event.data.action === 'id3Frame') {\r\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\r\n    }\r\n\r\n    if (event.data.action === 'caption') {\r\n      onCaptions(event.data.caption);\r\n    }\r\n\r\n    if (event.data.action === 'endedtimeline') {\r\n      waitForEndedTimelineEvent = false;\r\n      onEndedTimeline();\r\n    }\r\n\r\n    if (event.data.action === 'log') {\r\n      onTransmuxerLog(event.data.log);\r\n    } // wait for the transmuxed event since we may have audio and video\r\n\r\n\r\n    if (event.data.type !== 'transmuxed') {\r\n      return;\r\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\r\n    // of a timeline, that means there may still be data events before the segment\r\n    // processing can be considerred complete. In that case, the final event should be\r\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\r\n\r\n\r\n    if (waitForEndedTimelineEvent) {\r\n      return;\r\n    }\r\n\r\n    transmuxer.onmessage = null;\r\n    handleDone_({\r\n      transmuxedData: transmuxedData,\r\n      callback: onDone\r\n    });\r\n    /* eslint-disable no-use-before-define */\r\n\r\n    dequeue(transmuxer);\r\n    /* eslint-enable */\r\n  };\r\n\r\n  transmuxer.onmessage = handleMessage;\r\n\r\n  if (audioAppendStart) {\r\n    transmuxer.postMessage({\r\n      action: 'setAudioAppendStart',\r\n      appendStart: audioAppendStart\r\n    });\r\n  } // allow empty arrays to be passed to clear out GOPs\r\n\r\n\r\n  if (Array.isArray(gopsToAlignWith)) {\r\n    transmuxer.postMessage({\r\n      action: 'alignGopsWith',\r\n      gopsToAlignWith: gopsToAlignWith\r\n    });\r\n  }\r\n\r\n  if (typeof remux !== 'undefined') {\r\n    transmuxer.postMessage({\r\n      action: 'setRemux',\r\n      remux: remux\r\n    });\r\n  }\r\n\r\n  if (bytes.byteLength) {\r\n    var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\r\n    var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\r\n    transmuxer.postMessage({\r\n      action: 'push',\r\n      // Send the typed-array of data as an ArrayBuffer so that\r\n      // it can be sent as a \"Transferable\" and avoid the costly\r\n      // memory copy\r\n      data: buffer,\r\n      // To recreate the original typed-array, we need information\r\n      // about what portion of the ArrayBuffer it was a view into\r\n      byteOffset: byteOffset,\r\n      byteLength: bytes.byteLength\r\n    }, [buffer]);\r\n  }\r\n\r\n  if (isEndOfTimeline) {\r\n    transmuxer.postMessage({\r\n      action: 'endTimeline'\r\n    });\r\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\r\n  // the end of the segment\r\n\r\n\r\n  transmuxer.postMessage({\r\n    action: 'flush'\r\n  });\r\n};\r\n\r\nvar dequeue = function dequeue(transmuxer) {\r\n  transmuxer.currentTransmux = null;\r\n\r\n  if (transmuxer.transmuxQueue.length) {\r\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\r\n\r\n    if (typeof transmuxer.currentTransmux === 'function') {\r\n      transmuxer.currentTransmux();\r\n    } else {\r\n      processTransmux(transmuxer.currentTransmux);\r\n    }\r\n  }\r\n};\r\n\r\nvar processAction = function processAction(transmuxer, action) {\r\n  transmuxer.postMessage({\r\n    action: action\r\n  });\r\n  dequeue(transmuxer);\r\n};\r\n\r\nvar enqueueAction = function enqueueAction(action, transmuxer) {\r\n  if (!transmuxer.currentTransmux) {\r\n    transmuxer.currentTransmux = action;\r\n    processAction(transmuxer, action);\r\n    return;\r\n  }\r\n\r\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\r\n};\r\n\r\nvar reset = function reset(transmuxer) {\r\n  enqueueAction('reset', transmuxer);\r\n};\r\n\r\nvar endTimeline = function endTimeline(transmuxer) {\r\n  enqueueAction('endTimeline', transmuxer);\r\n};\r\n\r\nvar transmux = function transmux(options) {\r\n  if (!options.transmuxer.currentTransmux) {\r\n    options.transmuxer.currentTransmux = options;\r\n    processTransmux(options);\r\n    return;\r\n  }\r\n\r\n  options.transmuxer.transmuxQueue.push(options);\r\n};\r\n\r\nvar createTransmuxer = function createTransmuxer(options) {\r\n  var transmuxer = new TransmuxWorker();\r\n  transmuxer.currentTransmux = null;\r\n  transmuxer.transmuxQueue = [];\r\n  var term = transmuxer.terminate;\r\n\r\n  transmuxer.terminate = function () {\r\n    transmuxer.currentTransmux = null;\r\n    transmuxer.transmuxQueue.length = 0;\r\n    return term.call(transmuxer);\r\n  };\r\n\r\n  transmuxer.postMessage({\r\n    action: 'init',\r\n    options: options\r\n  });\r\n  return transmuxer;\r\n};\r\n\r\nvar segmentTransmuxer = {\r\n  reset: reset,\r\n  endTimeline: endTimeline,\r\n  transmux: transmux,\r\n  createTransmuxer: createTransmuxer\r\n};\r\n\r\nvar workerCallback = function workerCallback(options) {\r\n  var transmuxer = options.transmuxer;\r\n  var endAction = options.endAction || options.action;\r\n  var callback = options.callback;\r\n\r\n  var message = _extends({}, options, {\r\n    endAction: null,\r\n    transmuxer: null,\r\n    callback: null\r\n  });\r\n\r\n  var listenForEndEvent = function listenForEndEvent(event) {\r\n    if (event.data.action !== endAction) {\r\n      return;\r\n    }\r\n\r\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\r\n\r\n    if (event.data.data) {\r\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\r\n\r\n      if (options.data) {\r\n        options.data = event.data.data;\r\n      }\r\n    }\r\n\r\n    callback(event.data);\r\n  };\r\n\r\n  transmuxer.addEventListener('message', listenForEndEvent);\r\n\r\n  if (options.data) {\r\n    var isArrayBuffer = options.data instanceof ArrayBuffer;\r\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\r\n    message.byteLength = options.data.byteLength;\r\n    var transfers = [isArrayBuffer ? options.data : options.data.buffer];\r\n    transmuxer.postMessage(message, transfers);\r\n  } else {\r\n    transmuxer.postMessage(message);\r\n  }\r\n};\r\n\r\nvar REQUEST_ERRORS = {\r\n  FAILURE: 2,\r\n  TIMEOUT: -101,\r\n  ABORTED: -102\r\n};\r\n/**\r\n * Abort all requests\r\n *\r\n * @param {Object} activeXhrs - an object that tracks all XHR requests\r\n */\r\n\r\nvar abortAll = function abortAll(activeXhrs) {\r\n  activeXhrs.forEach(function (xhr) {\r\n    xhr.abort();\r\n  });\r\n};\r\n/**\r\n * Gather important bandwidth stats once a request has completed\r\n *\r\n * @param {Object} request - the XHR request from which to gather stats\r\n */\r\n\r\n\r\nvar getRequestStats = function getRequestStats(request) {\r\n  return {\r\n    bandwidth: request.bandwidth,\r\n    bytesReceived: request.bytesReceived || 0,\r\n    roundTripTime: request.roundTripTime || 0\r\n  };\r\n};\r\n/**\r\n * If possible gather bandwidth stats as a request is in\r\n * progress\r\n *\r\n * @param {Event} progressEvent - an event object from an XHR's progress event\r\n */\r\n\r\n\r\nvar getProgressStats = function getProgressStats(progressEvent) {\r\n  var request = progressEvent.target;\r\n  var roundTripTime = Date.now() - request.requestTime;\r\n  var stats = {\r\n    bandwidth: Infinity,\r\n    bytesReceived: 0,\r\n    roundTripTime: roundTripTime || 0\r\n  };\r\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\r\n  // because we should only use bandwidth stats on progress to determine when\r\n  // abort a request early due to insufficient bandwidth\r\n\r\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\r\n  return stats;\r\n};\r\n/**\r\n * Handle all error conditions in one place and return an object\r\n * with all the information\r\n *\r\n * @param {Error|null} error - if non-null signals an error occured with the XHR\r\n * @param {Object} request -  the XHR request that possibly generated the error\r\n */\r\n\r\n\r\nvar handleErrors = function handleErrors(error, request) {\r\n  if (request.timedout) {\r\n    return {\r\n      status: request.status,\r\n      message: 'HLS request timed-out at URL: ' + request.uri,\r\n      code: REQUEST_ERRORS.TIMEOUT,\r\n      xhr: request\r\n    };\r\n  }\r\n\r\n  if (request.aborted) {\r\n    return {\r\n      status: request.status,\r\n      message: 'HLS request aborted at URL: ' + request.uri,\r\n      code: REQUEST_ERRORS.ABORTED,\r\n      xhr: request\r\n    };\r\n  }\r\n\r\n  if (error) {\r\n    return {\r\n      status: request.status,\r\n      message: 'HLS request errored at URL: ' + request.uri,\r\n      code: REQUEST_ERRORS.FAILURE,\r\n      xhr: request\r\n    };\r\n  }\r\n\r\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\r\n    return {\r\n      status: request.status,\r\n      message: 'Empty HLS response at URL: ' + request.uri,\r\n      code: REQUEST_ERRORS.FAILURE,\r\n      xhr: request\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n/**\r\n * Handle responses for key data and convert the key data to the correct format\r\n * for the decryption step later\r\n *\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n * @param {Array} objects - objects to add the key bytes to.\r\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\r\n *                                        this request\r\n */\r\n\r\n\r\nvar handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\r\n  return function (error, request) {\r\n    var response = request.response;\r\n    var errorObj = handleErrors(error, request);\r\n\r\n    if (errorObj) {\r\n      return finishProcessingFn(errorObj, segment);\r\n    }\r\n\r\n    if (response.byteLength !== 16) {\r\n      return finishProcessingFn({\r\n        status: request.status,\r\n        message: 'Invalid HLS key at URL: ' + request.uri,\r\n        code: REQUEST_ERRORS.FAILURE,\r\n        xhr: request\r\n      }, segment);\r\n    }\r\n\r\n    var view = new DataView(response);\r\n    var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\r\n\r\n    for (var i = 0; i < objects.length; i++) {\r\n      objects[i].bytes = bytes;\r\n    }\r\n\r\n    return finishProcessingFn(null, segment);\r\n  };\r\n};\r\n\r\nvar parseInitSegment = function parseInitSegment(segment, _callback) {\r\n  var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\r\n  // only know how to parse mp4 init segments at the moment\r\n\r\n  if (type !== 'mp4') {\r\n    var uri = segment.map.resolvedUri || segment.map.uri;\r\n    return _callback({\r\n      internal: true,\r\n      message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\r\n      code: REQUEST_ERRORS.FAILURE\r\n    });\r\n  }\r\n\r\n  workerCallback({\r\n    action: 'probeMp4Tracks',\r\n    data: segment.map.bytes,\r\n    transmuxer: segment.transmuxer,\r\n    callback: function callback(_ref) {\r\n      var tracks = _ref.tracks,\r\n          data = _ref.data; // transfer bytes back to us\r\n\r\n      segment.map.bytes = data;\r\n      tracks.forEach(function (track) {\r\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\r\n\r\n        if (segment.map.tracks[track.type]) {\r\n          return;\r\n        }\r\n\r\n        segment.map.tracks[track.type] = track;\r\n\r\n        if (typeof track.id === 'number' && track.timescale) {\r\n          segment.map.timescales = segment.map.timescales || {};\r\n          segment.map.timescales[track.id] = track.timescale;\r\n        }\r\n      });\r\n      return _callback(null);\r\n    }\r\n  });\r\n};\r\n/**\r\n * Handle init-segment responses\r\n *\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\r\n *                                        this request\r\n */\r\n\r\n\r\nvar handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\r\n  var segment = _ref2.segment,\r\n      finishProcessingFn = _ref2.finishProcessingFn;\r\n  return function (error, request) {\r\n    var errorObj = handleErrors(error, request);\r\n\r\n    if (errorObj) {\r\n      return finishProcessingFn(errorObj, segment);\r\n    }\r\n\r\n    var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\r\n    // until the key request is done to decrypt.\r\n\r\n    if (segment.map.key) {\r\n      segment.map.encryptedBytes = bytes;\r\n      return finishProcessingFn(null, segment);\r\n    }\r\n\r\n    segment.map.bytes = bytes;\r\n    parseInitSegment(segment, function (parseError) {\r\n      if (parseError) {\r\n        parseError.xhr = request;\r\n        parseError.status = request.status;\r\n        return finishProcessingFn(parseError, segment);\r\n      }\r\n\r\n      finishProcessingFn(null, segment);\r\n    });\r\n  };\r\n};\r\n/**\r\n * Response handler for segment-requests being sure to set the correct\r\n * property depending on whether the segment is encryped or not\r\n * Also records and keeps track of stats that are used for ABR purposes\r\n *\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\r\n *                                        this request\r\n */\r\n\r\n\r\nvar handleSegmentResponse = function handleSegmentResponse(_ref3) {\r\n  var segment = _ref3.segment,\r\n      finishProcessingFn = _ref3.finishProcessingFn,\r\n      responseType = _ref3.responseType;\r\n  return function (error, request) {\r\n    var errorObj = handleErrors(error, request);\r\n\r\n    if (errorObj) {\r\n      return finishProcessingFn(errorObj, segment);\r\n    }\r\n\r\n    var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\r\n    // thrown for two primary cases:\r\n    // 1. the mime type override stops working, or is not implemented for a specific\r\n    //    browser\r\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\r\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\r\n    segment.stats = getRequestStats(request);\r\n\r\n    if (segment.key) {\r\n      segment.encryptedBytes = new Uint8Array(newBytes);\r\n    } else {\r\n      segment.bytes = new Uint8Array(newBytes);\r\n    }\r\n\r\n    return finishProcessingFn(null, segment);\r\n  };\r\n};\r\n\r\nvar transmuxAndNotify = function transmuxAndNotify(_ref4) {\r\n  var segment = _ref4.segment,\r\n      bytes = _ref4.bytes,\r\n      trackInfoFn = _ref4.trackInfoFn,\r\n      timingInfoFn = _ref4.timingInfoFn,\r\n      videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\r\n      audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\r\n      id3Fn = _ref4.id3Fn,\r\n      captionsFn = _ref4.captionsFn,\r\n      isEndOfTimeline = _ref4.isEndOfTimeline,\r\n      endedTimelineFn = _ref4.endedTimelineFn,\r\n      dataFn = _ref4.dataFn,\r\n      doneFn = _ref4.doneFn,\r\n      onTransmuxerLog = _ref4.onTransmuxerLog;\r\n  var fmp4Tracks = segment.map && segment.map.tracks || {};\r\n  var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\r\n  // One reason for this is that in the case of full segments, we want to trust start\r\n  // times from the probe, rather than the transmuxer.\r\n\r\n  var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\r\n  var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\r\n  var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\r\n  var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\r\n\r\n  var finish = function finish() {\r\n    return transmux({\r\n      bytes: bytes,\r\n      transmuxer: segment.transmuxer,\r\n      audioAppendStart: segment.audioAppendStart,\r\n      gopsToAlignWith: segment.gopsToAlignWith,\r\n      remux: isMuxed,\r\n      onData: function onData(result) {\r\n        result.type = result.type === 'combined' ? 'video' : result.type;\r\n        dataFn(segment, result);\r\n      },\r\n      onTrackInfo: function onTrackInfo(trackInfo) {\r\n        if (trackInfoFn) {\r\n          if (isMuxed) {\r\n            trackInfo.isMuxed = true;\r\n          }\r\n\r\n          trackInfoFn(segment, trackInfo);\r\n        }\r\n      },\r\n      onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\r\n        // we only want the first start value we encounter\r\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\r\n          audioStartFn(audioTimingInfo.start);\r\n          audioStartFn = null;\r\n        } // we want to continually update the end time\r\n\r\n\r\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\r\n          audioEndFn(audioTimingInfo.end);\r\n        }\r\n      },\r\n      onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\r\n        // we only want the first start value we encounter\r\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\r\n          videoStartFn(videoTimingInfo.start);\r\n          videoStartFn = null;\r\n        } // we want to continually update the end time\r\n\r\n\r\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\r\n          videoEndFn(videoTimingInfo.end);\r\n        }\r\n      },\r\n      onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\r\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\r\n      },\r\n      onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\r\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\r\n      },\r\n      onId3: function onId3(id3Frames, dispatchType) {\r\n        id3Fn(segment, id3Frames, dispatchType);\r\n      },\r\n      onCaptions: function onCaptions(captions) {\r\n        captionsFn(segment, [captions]);\r\n      },\r\n      isEndOfTimeline: isEndOfTimeline,\r\n      onEndedTimeline: function onEndedTimeline() {\r\n        endedTimelineFn();\r\n      },\r\n      onTransmuxerLog: onTransmuxerLog,\r\n      onDone: function onDone(result) {\r\n        if (!doneFn) {\r\n          return;\r\n        }\r\n\r\n        result.type = result.type === 'combined' ? 'video' : result.type;\r\n        doneFn(null, segment, result);\r\n      }\r\n    });\r\n  }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\r\n  // Meaning cached frame data may corrupt our notion of where this segment\r\n  // really starts. To get around this, probe for the info needed.\r\n\r\n\r\n  workerCallback({\r\n    action: 'probeTs',\r\n    transmuxer: segment.transmuxer,\r\n    data: bytes,\r\n    baseStartTime: segment.baseStartTime,\r\n    callback: function callback(data) {\r\n      segment.bytes = bytes = data.data;\r\n      var probeResult = data.result;\r\n\r\n      if (probeResult) {\r\n        trackInfoFn(segment, {\r\n          hasAudio: probeResult.hasAudio,\r\n          hasVideo: probeResult.hasVideo,\r\n          isMuxed: isMuxed\r\n        });\r\n        trackInfoFn = null;\r\n\r\n        if (probeResult.hasAudio && !isMuxed) {\r\n          audioStartFn(probeResult.audioStart);\r\n        }\r\n\r\n        if (probeResult.hasVideo) {\r\n          videoStartFn(probeResult.videoStart);\r\n        }\r\n\r\n        audioStartFn = null;\r\n        videoStartFn = null;\r\n      }\r\n\r\n      finish();\r\n    }\r\n  });\r\n};\r\n\r\nvar handleSegmentBytes = function handleSegmentBytes(_ref5) {\r\n  var segment = _ref5.segment,\r\n      bytes = _ref5.bytes,\r\n      trackInfoFn = _ref5.trackInfoFn,\r\n      timingInfoFn = _ref5.timingInfoFn,\r\n      videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\r\n      audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\r\n      id3Fn = _ref5.id3Fn,\r\n      captionsFn = _ref5.captionsFn,\r\n      isEndOfTimeline = _ref5.isEndOfTimeline,\r\n      endedTimelineFn = _ref5.endedTimelineFn,\r\n      dataFn = _ref5.dataFn,\r\n      doneFn = _ref5.doneFn,\r\n      onTransmuxerLog = _ref5.onTransmuxerLog;\r\n  var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\r\n  // We should have a handler that fetches the number of bytes required\r\n  // to check if something is fmp4. This will allow us to save bandwidth\r\n  // because we can only blacklist a playlist and abort requests\r\n  // by codec after trackinfo triggers.\r\n\r\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\r\n    segment.isFmp4 = true;\r\n    var tracks = segment.map.tracks;\r\n    var trackInfo = {\r\n      isFmp4: true,\r\n      hasVideo: !!tracks.video,\r\n      hasAudio: !!tracks.audio\r\n    }; // if we have a audio track, with a codec that is not set to\r\n    // encrypted audio\r\n\r\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\r\n      trackInfo.audioCodec = tracks.audio.codec;\r\n    } // if we have a video track, with a codec that is not set to\r\n    // encrypted video\r\n\r\n\r\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\r\n      trackInfo.videoCodec = tracks.video.codec;\r\n    }\r\n\r\n    if (tracks.video && tracks.audio) {\r\n      trackInfo.isMuxed = true;\r\n    } // since we don't support appending fmp4 data on progress, we know we have the full\r\n    // segment here\r\n\r\n\r\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\r\n    // time. The end time can be roughly calculated by the receiver using the duration.\r\n    //\r\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\r\n    // that is the true start of the segment (where the playback engine should begin\r\n    // decoding).\r\n\r\n    var finishLoading = function finishLoading(captions) {\r\n      // if the track still has audio at this point it is only possible\r\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\r\n      // above.\r\n      // we make sure to use segment.bytes here as that\r\n      dataFn(segment, {\r\n        data: bytesAsUint8Array,\r\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\r\n      });\r\n\r\n      if (captions && captions.length) {\r\n        captionsFn(segment, captions);\r\n      }\r\n\r\n      doneFn(null, segment, {});\r\n    };\r\n\r\n    workerCallback({\r\n      action: 'probeMp4StartTime',\r\n      timescales: segment.map.timescales,\r\n      data: bytesAsUint8Array,\r\n      transmuxer: segment.transmuxer,\r\n      callback: function callback(_ref6) {\r\n        var data = _ref6.data,\r\n            startTime = _ref6.startTime; // transfer bytes back to us\r\n\r\n        bytes = data.buffer;\r\n        segment.bytes = bytesAsUint8Array = data;\r\n\r\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\r\n          timingInfoFn(segment, 'audio', 'start', startTime);\r\n        }\r\n\r\n        if (trackInfo.hasVideo) {\r\n          timingInfoFn(segment, 'video', 'start', startTime);\r\n        } // Run through the CaptionParser in case there are captions.\r\n        // Initialize CaptionParser if it hasn't been yet\r\n\r\n\r\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\r\n          finishLoading();\r\n          return;\r\n        }\r\n\r\n        workerCallback({\r\n          action: 'pushMp4Captions',\r\n          endAction: 'mp4Captions',\r\n          transmuxer: segment.transmuxer,\r\n          data: bytesAsUint8Array,\r\n          timescales: segment.map.timescales,\r\n          trackIds: [tracks.video.id],\r\n          callback: function callback(message) {\r\n            // transfer bytes back to us\r\n            bytes = message.data.buffer;\r\n            segment.bytes = bytesAsUint8Array = message.data;\r\n            message.logs.forEach(function (log) {\r\n              onTransmuxerLog(videojs.mergeOptions(log, {\r\n                stream: 'mp4CaptionParser'\r\n              }));\r\n            });\r\n            finishLoading(message.captions);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return;\r\n  } // VTT or other segments that don't need processing\r\n\r\n\r\n  if (!segment.transmuxer) {\r\n    doneFn(null, segment, {});\r\n    return;\r\n  }\r\n\r\n  if (typeof segment.container === 'undefined') {\r\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\r\n  }\r\n\r\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\r\n    trackInfoFn(segment, {\r\n      hasAudio: false,\r\n      hasVideo: false\r\n    });\r\n    doneFn(null, segment, {});\r\n    return;\r\n  } // ts or aac\r\n\r\n\r\n  transmuxAndNotify({\r\n    segment: segment,\r\n    bytes: bytes,\r\n    trackInfoFn: trackInfoFn,\r\n    timingInfoFn: timingInfoFn,\r\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\r\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\r\n    id3Fn: id3Fn,\r\n    captionsFn: captionsFn,\r\n    isEndOfTimeline: isEndOfTimeline,\r\n    endedTimelineFn: endedTimelineFn,\r\n    dataFn: dataFn,\r\n    doneFn: doneFn,\r\n    onTransmuxerLog: onTransmuxerLog\r\n  });\r\n};\r\n\r\nvar decrypt = function decrypt(_ref7, callback) {\r\n  var id = _ref7.id,\r\n      key = _ref7.key,\r\n      encryptedBytes = _ref7.encryptedBytes,\r\n      decryptionWorker = _ref7.decryptionWorker;\r\n\r\n  var decryptionHandler = function decryptionHandler(event) {\r\n    if (event.data.source === id) {\r\n      decryptionWorker.removeEventListener('message', decryptionHandler);\r\n      var decrypted = event.data.decrypted;\r\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\r\n    }\r\n  };\r\n\r\n  decryptionWorker.addEventListener('message', decryptionHandler);\r\n  var keyBytes;\r\n\r\n  if (key.bytes.slice) {\r\n    keyBytes = key.bytes.slice();\r\n  } else {\r\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\r\n  } // incrementally decrypt the bytes\r\n\r\n\r\n  decryptionWorker.postMessage(createTransferableMessage({\r\n    source: id,\r\n    encrypted: encryptedBytes,\r\n    key: keyBytes,\r\n    iv: key.iv\r\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\r\n};\r\n/**\r\n * Decrypt the segment via the decryption web worker\r\n *\r\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\r\n *                                       routines\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n * @param {Function} trackInfoFn - a callback that receives track info\r\n * @param {Function} timingInfoFn - a callback that receives timing info\r\n * @param {Function} videoSegmentTimingInfoFn\r\n *                   a callback that receives video timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {Function} audioSegmentTimingInfoFn\r\n *                   a callback that receives audio timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {boolean}  isEndOfTimeline\r\n *                   true if this segment represents the last segment in a timeline\r\n * @param {Function} endedTimelineFn\r\n *                   a callback made when a timeline is ended, will only be called if\r\n *                   isEndOfTimeline is true\r\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\r\n *                            and ready to use\r\n * @param {Function} doneFn - a callback that is executed after decryption has completed\r\n */\r\n\r\n\r\nvar decryptSegment = function decryptSegment(_ref8) {\r\n  var decryptionWorker = _ref8.decryptionWorker,\r\n      segment = _ref8.segment,\r\n      trackInfoFn = _ref8.trackInfoFn,\r\n      timingInfoFn = _ref8.timingInfoFn,\r\n      videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\r\n      audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\r\n      id3Fn = _ref8.id3Fn,\r\n      captionsFn = _ref8.captionsFn,\r\n      isEndOfTimeline = _ref8.isEndOfTimeline,\r\n      endedTimelineFn = _ref8.endedTimelineFn,\r\n      dataFn = _ref8.dataFn,\r\n      doneFn = _ref8.doneFn,\r\n      onTransmuxerLog = _ref8.onTransmuxerLog;\r\n  decrypt({\r\n    id: segment.requestId,\r\n    key: segment.key,\r\n    encryptedBytes: segment.encryptedBytes,\r\n    decryptionWorker: decryptionWorker\r\n  }, function (decryptedBytes) {\r\n    segment.bytes = decryptedBytes;\r\n    handleSegmentBytes({\r\n      segment: segment,\r\n      bytes: segment.bytes,\r\n      trackInfoFn: trackInfoFn,\r\n      timingInfoFn: timingInfoFn,\r\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\r\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\r\n      id3Fn: id3Fn,\r\n      captionsFn: captionsFn,\r\n      isEndOfTimeline: isEndOfTimeline,\r\n      endedTimelineFn: endedTimelineFn,\r\n      dataFn: dataFn,\r\n      doneFn: doneFn,\r\n      onTransmuxerLog: onTransmuxerLog\r\n    });\r\n  });\r\n};\r\n/**\r\n * This function waits for all XHRs to finish (with either success or failure)\r\n * before continueing processing via it's callback. The function gathers errors\r\n * from each request into a single errors array so that the error status for\r\n * each request can be examined later.\r\n *\r\n * @param {Object} activeXhrs - an object that tracks all XHR requests\r\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\r\n *                                       routines\r\n * @param {Function} trackInfoFn - a callback that receives track info\r\n * @param {Function} timingInfoFn - a callback that receives timing info\r\n * @param {Function} videoSegmentTimingInfoFn\r\n *                   a callback that receives video timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {Function} audioSegmentTimingInfoFn\r\n *                   a callback that receives audio timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {Function} id3Fn - a callback that receives ID3 metadata\r\n * @param {Function} captionsFn - a callback that receives captions\r\n * @param {boolean}  isEndOfTimeline\r\n *                   true if this segment represents the last segment in a timeline\r\n * @param {Function} endedTimelineFn\r\n *                   a callback made when a timeline is ended, will only be called if\r\n *                   isEndOfTimeline is true\r\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\r\n *                            and ready to use\r\n * @param {Function} doneFn - a callback that is executed after all resources have been\r\n *                            downloaded and any decryption completed\r\n */\r\n\r\n\r\nvar waitForCompletion = function waitForCompletion(_ref9) {\r\n  var activeXhrs = _ref9.activeXhrs,\r\n      decryptionWorker = _ref9.decryptionWorker,\r\n      trackInfoFn = _ref9.trackInfoFn,\r\n      timingInfoFn = _ref9.timingInfoFn,\r\n      videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\r\n      audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\r\n      id3Fn = _ref9.id3Fn,\r\n      captionsFn = _ref9.captionsFn,\r\n      isEndOfTimeline = _ref9.isEndOfTimeline,\r\n      endedTimelineFn = _ref9.endedTimelineFn,\r\n      dataFn = _ref9.dataFn,\r\n      doneFn = _ref9.doneFn,\r\n      onTransmuxerLog = _ref9.onTransmuxerLog;\r\n  var count = 0;\r\n  var didError = false;\r\n  return function (error, segment) {\r\n    if (didError) {\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      didError = true; // If there are errors, we have to abort any outstanding requests\r\n\r\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\r\n      // handle the aborted events from those requests, there are some cases where we may\r\n      // never get an aborted event. For instance, if the network connection is lost and\r\n      // there were two requests, the first may have triggered an error immediately, while\r\n      // the second request remains unsent. In that case, the aborted algorithm will not\r\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\r\n      //\r\n      // We also can't rely on the ready state of the XHR, since the request that\r\n      // triggered the connection error may also show as a ready state of 0 (unsent).\r\n      // Therefore, we have to finish this group of requests immediately after the first\r\n      // seen error.\r\n\r\n      return doneFn(error, segment);\r\n    }\r\n\r\n    count += 1;\r\n\r\n    if (count === activeXhrs.length) {\r\n      var segmentFinish = function segmentFinish() {\r\n        if (segment.encryptedBytes) {\r\n          return decryptSegment({\r\n            decryptionWorker: decryptionWorker,\r\n            segment: segment,\r\n            trackInfoFn: trackInfoFn,\r\n            timingInfoFn: timingInfoFn,\r\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\r\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\r\n            id3Fn: id3Fn,\r\n            captionsFn: captionsFn,\r\n            isEndOfTimeline: isEndOfTimeline,\r\n            endedTimelineFn: endedTimelineFn,\r\n            dataFn: dataFn,\r\n            doneFn: doneFn,\r\n            onTransmuxerLog: onTransmuxerLog\r\n          });\r\n        } // Otherwise, everything is ready just continue\r\n\r\n\r\n        handleSegmentBytes({\r\n          segment: segment,\r\n          bytes: segment.bytes,\r\n          trackInfoFn: trackInfoFn,\r\n          timingInfoFn: timingInfoFn,\r\n          videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\r\n          audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\r\n          id3Fn: id3Fn,\r\n          captionsFn: captionsFn,\r\n          isEndOfTimeline: isEndOfTimeline,\r\n          endedTimelineFn: endedTimelineFn,\r\n          dataFn: dataFn,\r\n          doneFn: doneFn,\r\n          onTransmuxerLog: onTransmuxerLog\r\n        });\r\n      }; // Keep track of when *all* of the requests have completed\r\n\r\n\r\n      segment.endOfAllRequests = Date.now();\r\n\r\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\r\n        return decrypt({\r\n          decryptionWorker: decryptionWorker,\r\n          // add -init to the \"id\" to differentiate between segment\r\n          // and init segment decryption, just in case they happen\r\n          // at the same time at some point in the future.\r\n          id: segment.requestId + '-init',\r\n          encryptedBytes: segment.map.encryptedBytes,\r\n          key: segment.map.key\r\n        }, function (decryptedBytes) {\r\n          segment.map.bytes = decryptedBytes;\r\n          parseInitSegment(segment, function (parseError) {\r\n            if (parseError) {\r\n              abortAll(activeXhrs);\r\n              return doneFn(parseError, segment);\r\n            }\r\n\r\n            segmentFinish();\r\n          });\r\n        });\r\n      }\r\n\r\n      segmentFinish();\r\n    }\r\n  };\r\n};\r\n/**\r\n * Calls the abort callback if any request within the batch was aborted. Will only call\r\n * the callback once per batch of requests, even if multiple were aborted.\r\n *\r\n * @param {Object} loadendState - state to check to see if the abort function was called\r\n * @param {Function} abortFn - callback to call for abort\r\n */\r\n\r\n\r\nvar handleLoadEnd = function handleLoadEnd(_ref10) {\r\n  var loadendState = _ref10.loadendState,\r\n      abortFn = _ref10.abortFn;\r\n  return function (event) {\r\n    var request = event.target;\r\n\r\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\r\n      abortFn();\r\n      loadendState.calledAbortFn = true;\r\n    }\r\n  };\r\n};\r\n/**\r\n * Simple progress event callback handler that gathers some stats before\r\n * executing a provided callback with the `segment` object\r\n *\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n * @param {Function} progressFn - a callback that is executed each time a progress event\r\n *                                is received\r\n * @param {Function} trackInfoFn - a callback that receives track info\r\n * @param {Function} timingInfoFn - a callback that receives timing info\r\n * @param {Function} videoSegmentTimingInfoFn\r\n *                   a callback that receives video timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {Function} audioSegmentTimingInfoFn\r\n *                   a callback that receives audio timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {boolean}  isEndOfTimeline\r\n *                   true if this segment represents the last segment in a timeline\r\n * @param {Function} endedTimelineFn\r\n *                   a callback made when a timeline is ended, will only be called if\r\n *                   isEndOfTimeline is true\r\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\r\n *                            and ready to use\r\n * @param {Event} event - the progress event object from XMLHttpRequest\r\n */\r\n\r\n\r\nvar handleProgress = function handleProgress(_ref11) {\r\n  var segment = _ref11.segment,\r\n      progressFn = _ref11.progressFn;\r\n  _ref11.trackInfoFn;\r\n  _ref11.timingInfoFn;\r\n  _ref11.videoSegmentTimingInfoFn;\r\n  _ref11.audioSegmentTimingInfoFn;\r\n  _ref11.id3Fn;\r\n  _ref11.captionsFn;\r\n  _ref11.isEndOfTimeline;\r\n  _ref11.endedTimelineFn;\r\n  _ref11.dataFn;\r\n  return function (event) {\r\n    var request = event.target;\r\n\r\n    if (request.aborted) {\r\n      return;\r\n    }\r\n\r\n    segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\r\n\r\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\r\n      segment.stats.firstBytesReceivedAt = Date.now();\r\n    }\r\n\r\n    return progressFn(event, segment);\r\n  };\r\n};\r\n/**\r\n * Load all resources and does any processing necessary for a media-segment\r\n *\r\n * Features:\r\n *   decrypts the media-segment if it has a key uri and an iv\r\n *   aborts *all* requests if *any* one request fails\r\n *\r\n * The segment object, at minimum, has the following format:\r\n * {\r\n *   resolvedUri: String,\r\n *   [transmuxer]: Object,\r\n *   [byterange]: {\r\n *     offset: Number,\r\n *     length: Number\r\n *   },\r\n *   [key]: {\r\n *     resolvedUri: String\r\n *     [byterange]: {\r\n *       offset: Number,\r\n *       length: Number\r\n *     },\r\n *     iv: {\r\n *       bytes: Uint32Array\r\n *     }\r\n *   },\r\n *   [map]: {\r\n *     resolvedUri: String,\r\n *     [byterange]: {\r\n *       offset: Number,\r\n *       length: Number\r\n *     },\r\n *     [bytes]: Uint8Array\r\n *   }\r\n * }\r\n * ...where [name] denotes optional properties\r\n *\r\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\r\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\r\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\r\n *                                       decryption routines\r\n * @param {Object} segment - a simplified copy of the segmentInfo object\r\n *                           from SegmentLoader\r\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\r\n *                             aborted\r\n * @param {Function} progressFn - a callback that receives progress events from the main\r\n *                                segment's xhr request\r\n * @param {Function} trackInfoFn - a callback that receives track info\r\n * @param {Function} timingInfoFn - a callback that receives timing info\r\n * @param {Function} videoSegmentTimingInfoFn\r\n *                   a callback that receives video timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {Function} audioSegmentTimingInfoFn\r\n *                   a callback that receives audio timing info based on media times and\r\n *                   any adjustments made by the transmuxer\r\n * @param {Function} id3Fn - a callback that receives ID3 metadata\r\n * @param {Function} captionsFn - a callback that receives captions\r\n * @param {boolean}  isEndOfTimeline\r\n *                   true if this segment represents the last segment in a timeline\r\n * @param {Function} endedTimelineFn\r\n *                   a callback made when a timeline is ended, will only be called if\r\n *                   isEndOfTimeline is true\r\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\r\n *                            request, transmuxed if needed\r\n * @param {Function} doneFn - a callback that is executed only once all requests have\r\n *                            succeeded or failed\r\n * @return {Function} a function that, when invoked, immediately aborts all\r\n *                     outstanding requests\r\n */\r\n\r\n\r\nvar mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\r\n  var xhr = _ref12.xhr,\r\n      xhrOptions = _ref12.xhrOptions,\r\n      decryptionWorker = _ref12.decryptionWorker,\r\n      segment = _ref12.segment,\r\n      abortFn = _ref12.abortFn,\r\n      progressFn = _ref12.progressFn,\r\n      trackInfoFn = _ref12.trackInfoFn,\r\n      timingInfoFn = _ref12.timingInfoFn,\r\n      videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\r\n      audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\r\n      id3Fn = _ref12.id3Fn,\r\n      captionsFn = _ref12.captionsFn,\r\n      isEndOfTimeline = _ref12.isEndOfTimeline,\r\n      endedTimelineFn = _ref12.endedTimelineFn,\r\n      dataFn = _ref12.dataFn,\r\n      doneFn = _ref12.doneFn,\r\n      onTransmuxerLog = _ref12.onTransmuxerLog;\r\n  var activeXhrs = [];\r\n  var finishProcessingFn = waitForCompletion({\r\n    activeXhrs: activeXhrs,\r\n    decryptionWorker: decryptionWorker,\r\n    trackInfoFn: trackInfoFn,\r\n    timingInfoFn: timingInfoFn,\r\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\r\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\r\n    id3Fn: id3Fn,\r\n    captionsFn: captionsFn,\r\n    isEndOfTimeline: isEndOfTimeline,\r\n    endedTimelineFn: endedTimelineFn,\r\n    dataFn: dataFn,\r\n    doneFn: doneFn,\r\n    onTransmuxerLog: onTransmuxerLog\r\n  }); // optionally, request the decryption key\r\n\r\n  if (segment.key && !segment.key.bytes) {\r\n    var objects = [segment.key];\r\n\r\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\r\n      objects.push(segment.map.key);\r\n    }\r\n\r\n    var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\r\n      uri: segment.key.resolvedUri,\r\n      responseType: 'arraybuffer'\r\n    });\r\n    var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\r\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\r\n    activeXhrs.push(keyXhr);\r\n  } // optionally, request the associated media init segment\r\n\r\n\r\n  if (segment.map && !segment.map.bytes) {\r\n    var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\r\n\r\n    if (differentMapKey) {\r\n      var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\r\n        uri: segment.map.key.resolvedUri,\r\n        responseType: 'arraybuffer'\r\n      });\r\n      var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\r\n      var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\r\n      activeXhrs.push(mapKeyXhr);\r\n    }\r\n\r\n    var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\r\n      uri: segment.map.resolvedUri,\r\n      responseType: 'arraybuffer',\r\n      headers: segmentXhrHeaders(segment.map)\r\n    });\r\n    var initSegmentRequestCallback = handleInitSegmentResponse({\r\n      segment: segment,\r\n      finishProcessingFn: finishProcessingFn\r\n    });\r\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\r\n    activeXhrs.push(initSegmentXhr);\r\n  }\r\n\r\n  var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\r\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\r\n    responseType: 'arraybuffer',\r\n    headers: segmentXhrHeaders(segment)\r\n  });\r\n  var segmentRequestCallback = handleSegmentResponse({\r\n    segment: segment,\r\n    finishProcessingFn: finishProcessingFn,\r\n    responseType: segmentRequestOptions.responseType\r\n  });\r\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\r\n  segmentXhr.addEventListener('progress', handleProgress({\r\n    segment: segment,\r\n    progressFn: progressFn,\r\n    trackInfoFn: trackInfoFn,\r\n    timingInfoFn: timingInfoFn,\r\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\r\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\r\n    id3Fn: id3Fn,\r\n    captionsFn: captionsFn,\r\n    isEndOfTimeline: isEndOfTimeline,\r\n    endedTimelineFn: endedTimelineFn,\r\n    dataFn: dataFn\r\n  }));\r\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\r\n  // multiple times, provide a shared state object\r\n\r\n  var loadendState = {};\r\n  activeXhrs.forEach(function (activeXhr) {\r\n    activeXhr.addEventListener('loadend', handleLoadEnd({\r\n      loadendState: loadendState,\r\n      abortFn: abortFn\r\n    }));\r\n  });\r\n  return function () {\r\n    return abortAll(activeXhrs);\r\n  };\r\n};\r\n/**\r\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\r\n * codec strings, or translating codec strings into objects that can be examined.\r\n */\r\n\r\n\r\nvar logFn$1 = logger('CodecUtils');\r\n/**\r\n * Returns a set of codec strings parsed from the playlist or the default\r\n * codec strings if no codecs were specified in the playlist\r\n *\r\n * @param {Playlist} media the current media playlist\r\n * @return {Object} an object with the video and audio codecs\r\n */\r\n\r\nvar getCodecs = function getCodecs(media) {\r\n  // if the codecs were explicitly specified, use them instead of the\r\n  // defaults\r\n  var mediaAttributes = media.attributes || {};\r\n\r\n  if (mediaAttributes.CODECS) {\r\n    return parseCodecs(mediaAttributes.CODECS);\r\n  }\r\n};\r\n\r\nvar isMaat = function isMaat(master, media) {\r\n  var mediaAttributes = media.attributes || {};\r\n  return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\r\n};\r\n\r\nvar isMuxed = function isMuxed(master, media) {\r\n  if (!isMaat(master, media)) {\r\n    return true;\r\n  }\r\n\r\n  var mediaAttributes = media.attributes || {};\r\n  var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\r\n\r\n  for (var groupId in audioGroup) {\r\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\r\n    // or there are listed playlists (the case for DASH, as the manifest will have already\r\n    // provided all of the details necessary to generate the audio playlist, as opposed to\r\n    // HLS' externally requested playlists), then the content is demuxed.\r\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nvar unwrapCodecList = function unwrapCodecList(codecList) {\r\n  var codecs = {};\r\n  codecList.forEach(function (_ref) {\r\n    var mediaType = _ref.mediaType,\r\n        type = _ref.type,\r\n        details = _ref.details;\r\n    codecs[mediaType] = codecs[mediaType] || [];\r\n    codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\r\n  });\r\n  Object.keys(codecs).forEach(function (mediaType) {\r\n    if (codecs[mediaType].length > 1) {\r\n      logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\r\n      codecs[mediaType] = null;\r\n      return;\r\n    }\r\n\r\n    codecs[mediaType] = codecs[mediaType][0];\r\n  });\r\n  return codecs;\r\n};\r\n\r\nvar codecCount = function codecCount(codecObj) {\r\n  var count = 0;\r\n\r\n  if (codecObj.audio) {\r\n    count++;\r\n  }\r\n\r\n  if (codecObj.video) {\r\n    count++;\r\n  }\r\n\r\n  return count;\r\n};\r\n/**\r\n * Calculates the codec strings for a working configuration of\r\n * SourceBuffers to play variant streams in a master playlist. If\r\n * there is no possible working configuration, an empty object will be\r\n * returned.\r\n *\r\n * @param master {Object} the m3u8 object for the master playlist\r\n * @param media {Object} the m3u8 object for the variant playlist\r\n * @return {Object} the codec strings.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nvar codecsForPlaylist = function codecsForPlaylist(master, media) {\r\n  var mediaAttributes = media.attributes || {};\r\n  var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\r\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\r\n\r\n  if (isMaat(master, media) && !codecInfo.audio) {\r\n    if (!isMuxed(master, media)) {\r\n      // It is possible for codecs to be specified on the audio media group playlist but\r\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\r\n      // video are always separate (and separately specified).\r\n      var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\r\n\r\n      if (defaultCodecs.audio) {\r\n        codecInfo.audio = defaultCodecs.audio;\r\n      }\r\n    }\r\n  }\r\n\r\n  return codecInfo;\r\n};\r\n\r\nvar logFn = logger('PlaylistSelector');\r\n\r\nvar representationToString = function representationToString(representation) {\r\n  if (!representation || !representation.playlist) {\r\n    return;\r\n  }\r\n\r\n  var playlist = representation.playlist;\r\n  return JSON.stringify({\r\n    id: playlist.id,\r\n    bandwidth: representation.bandwidth,\r\n    width: representation.width,\r\n    height: representation.height,\r\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\r\n  });\r\n}; // Utilities\r\n\r\n/**\r\n * Returns the CSS value for the specified property on an element\r\n * using `getComputedStyle`. Firefox has a long-standing issue where\r\n * getComputedStyle() may return null when running in an iframe with\r\n * `display: none`.\r\n *\r\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n * @param {HTMLElement} el the htmlelement to work on\r\n * @param {string} the proprety to get the style for\r\n */\r\n\r\n\r\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\r\n  if (!el) {\r\n    return '';\r\n  }\r\n\r\n  var result = window$1.getComputedStyle(el);\r\n\r\n  if (!result) {\r\n    return '';\r\n  }\r\n\r\n  return result[property];\r\n};\r\n/**\r\n * Resuable stable sort function\r\n *\r\n * @param {Playlists} array\r\n * @param {Function} sortFn Different comparators\r\n * @function stableSort\r\n */\r\n\r\n\r\nvar stableSort = function stableSort(array, sortFn) {\r\n  var newArray = array.slice();\r\n  array.sort(function (left, right) {\r\n    var cmp = sortFn(left, right);\r\n\r\n    if (cmp === 0) {\r\n      return newArray.indexOf(left) - newArray.indexOf(right);\r\n    }\r\n\r\n    return cmp;\r\n  });\r\n};\r\n/**\r\n * A comparator function to sort two playlist object by bandwidth.\r\n *\r\n * @param {Object} left a media playlist object\r\n * @param {Object} right a media playlist object\r\n * @return {number} Greater than zero if the bandwidth attribute of\r\n * left is greater than the corresponding attribute of right. Less\r\n * than zero if the bandwidth of right is greater than left and\r\n * exactly zero if the two are equal.\r\n */\r\n\r\n\r\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\r\n  var leftBandwidth;\r\n  var rightBandwidth;\r\n\r\n  if (left.attributes.BANDWIDTH) {\r\n    leftBandwidth = left.attributes.BANDWIDTH;\r\n  }\r\n\r\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\r\n\r\n  if (right.attributes.BANDWIDTH) {\r\n    rightBandwidth = right.attributes.BANDWIDTH;\r\n  }\r\n\r\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\r\n  return leftBandwidth - rightBandwidth;\r\n};\r\n/**\r\n * A comparator function to sort two playlist object by resolution (width).\r\n *\r\n * @param {Object} left a media playlist object\r\n * @param {Object} right a media playlist object\r\n * @return {number} Greater than zero if the resolution.width attribute of\r\n * left is greater than the corresponding attribute of right. Less\r\n * than zero if the resolution.width of right is greater than left and\r\n * exactly zero if the two are equal.\r\n */\r\n\r\n\r\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\r\n  var leftWidth;\r\n  var rightWidth;\r\n\r\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\r\n    leftWidth = left.attributes.RESOLUTION.width;\r\n  }\r\n\r\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\r\n\r\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\r\n    rightWidth = right.attributes.RESOLUTION.width;\r\n  }\r\n\r\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\r\n  // have the same media dimensions/ resolution\r\n\r\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\r\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\r\n  }\r\n\r\n  return leftWidth - rightWidth;\r\n};\r\n/**\r\n * Chooses the appropriate media playlist based on bandwidth and player size\r\n *\r\n * @param {Object} master\r\n *        Object representation of the master manifest\r\n * @param {number} playerBandwidth\r\n *        Current calculated bandwidth of the player\r\n * @param {number} playerWidth\r\n *        Current width of the player element (should account for the device pixel ratio)\r\n * @param {number} playerHeight\r\n *        Current height of the player element (should account for the device pixel ratio)\r\n * @param {boolean} limitRenditionByPlayerDimensions\r\n *        True if the player width and height should be used during the selection, false otherwise\r\n * @param {Object} masterPlaylistController\r\n *        the current masterPlaylistController object\r\n * @return {Playlist} the highest bitrate playlist less than the\r\n * currently detected bandwidth, accounting for some amount of\r\n * bandwidth variance\r\n */\r\n\r\n\r\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\r\n  // If we end up getting called before `master` is available, exit early\r\n  if (!master) {\r\n    return;\r\n  }\r\n\r\n  var options = {\r\n    bandwidth: playerBandwidth,\r\n    width: playerWidth,\r\n    height: playerHeight,\r\n    limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\r\n  };\r\n  var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\r\n\r\n  if (Playlist.isAudioOnly(master)) {\r\n    playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\r\n    // at the buttom of this function for debugging.\r\n\r\n    options.audioOnly = true;\r\n  } // convert the playlists to an intermediary representation to make comparisons easier\r\n\r\n\r\n  var sortedPlaylistReps = playlists.map(function (playlist) {\r\n    var bandwidth;\r\n    var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\r\n    var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\r\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\r\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\r\n    return {\r\n      bandwidth: bandwidth,\r\n      width: width,\r\n      height: height,\r\n      playlist: playlist\r\n    };\r\n  });\r\n  stableSort(sortedPlaylistReps, function (left, right) {\r\n    return left.bandwidth - right.bandwidth;\r\n  }); // filter out any playlists that have been excluded due to\r\n  // incompatible configurations\r\n\r\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\r\n    return !Playlist.isIncompatible(rep.playlist);\r\n  }); // filter out any playlists that have been disabled manually through the representations\r\n  // api or blacklisted temporarily due to playback errors.\r\n\r\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\r\n    return Playlist.isEnabled(rep.playlist);\r\n  });\r\n\r\n  if (!enabledPlaylistReps.length) {\r\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\r\n    // by the user through the representations api. In this case, ignore blacklisting and\r\n    // fallback to what the user wants by using playlists the user has not disabled.\r\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\r\n      return !Playlist.isDisabled(rep.playlist);\r\n    });\r\n  } // filter out any variant that has greater effective bitrate\r\n  // than the current estimated bandwidth\r\n\r\n\r\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\r\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\r\n  });\r\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\r\n  // and then taking the very first element\r\n\r\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\r\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\r\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\r\n\r\n  if (limitRenditionByPlayerDimensions === false) {\r\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\r\n\r\n    if (_chosenRep && _chosenRep.playlist) {\r\n      var type = 'sortedPlaylistReps';\r\n\r\n      if (bandwidthBestRep) {\r\n        type = 'bandwidthBestRep';\r\n      }\r\n\r\n      if (enabledPlaylistReps[0]) {\r\n        type = 'enabledPlaylistReps';\r\n      }\r\n\r\n      logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\r\n      return _chosenRep.playlist;\r\n    }\r\n\r\n    logFn('could not choose a playlist with options', options);\r\n    return null;\r\n  } // filter out playlists without resolution information\r\n\r\n\r\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\r\n    return rep.width && rep.height;\r\n  }); // sort variants by resolution\r\n\r\n  stableSort(haveResolution, function (left, right) {\r\n    return left.width - right.width;\r\n  }); // if we have the exact resolution as the player use it\r\n\r\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\r\n    return rep.width === playerWidth && rep.height === playerHeight;\r\n  });\r\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\r\n\r\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\r\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\r\n  })[0];\r\n  var resolutionPlusOneList;\r\n  var resolutionPlusOneSmallest;\r\n  var resolutionPlusOneRep; // find the smallest variant that is larger than the player\r\n  // if there is no match of exact resolution\r\n\r\n  if (!resolutionBestRep) {\r\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\r\n      return rep.width > playerWidth || rep.height > playerHeight;\r\n    }); // find all the variants have the same smallest resolution\r\n\r\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\r\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\r\n    }); // ensure that we also pick the highest bandwidth variant that\r\n    // is just-larger-than the video player\r\n\r\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\r\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\r\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\r\n    })[0];\r\n  }\r\n\r\n  var leastPixelDiffRep; // If this selector proves to be better than others,\r\n  // resolutionPlusOneRep and resolutionBestRep and all\r\n  // the code involving them should be removed.\r\n\r\n  if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\r\n    // find the variant that is closest to the player's pixel size\r\n    var leastPixelDiffList = haveResolution.map(function (rep) {\r\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\r\n      return rep;\r\n    }); // get the highest bandwidth, closest resolution playlist\r\n\r\n    stableSort(leastPixelDiffList, function (left, right) {\r\n      // sort by highest bandwidth if pixelDiff is the same\r\n      if (left.pixelDiff === right.pixelDiff) {\r\n        return right.bandwidth - left.bandwidth;\r\n      }\r\n\r\n      return left.pixelDiff - right.pixelDiff;\r\n    });\r\n    leastPixelDiffRep = leastPixelDiffList[0];\r\n  } // fallback chain of variants\r\n\r\n\r\n  var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\r\n\r\n  if (chosenRep && chosenRep.playlist) {\r\n    var _type = 'sortedPlaylistReps';\r\n\r\n    if (leastPixelDiffRep) {\r\n      _type = 'leastPixelDiffRep';\r\n    } else if (resolutionPlusOneRep) {\r\n      _type = 'resolutionPlusOneRep';\r\n    } else if (resolutionBestRep) {\r\n      _type = 'resolutionBestRep';\r\n    } else if (bandwidthBestRep) {\r\n      _type = 'bandwidthBestRep';\r\n    } else if (enabledPlaylistReps[0]) {\r\n      _type = 'enabledPlaylistReps';\r\n    }\r\n\r\n    logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\r\n    return chosenRep.playlist;\r\n  }\r\n\r\n  logFn('could not choose a playlist with options', options);\r\n  return null;\r\n};\r\n/**\r\n * Chooses the appropriate media playlist based on the most recent\r\n * bandwidth estimate and the player size.\r\n *\r\n * Expects to be called within the context of an instance of VhsHandler\r\n *\r\n * @return {Playlist} the highest bitrate playlist less than the\r\n * currently detected bandwidth, accounting for some amount of\r\n * bandwidth variance\r\n */\r\n\r\n\r\nvar lastBandwidthSelector = function lastBandwidthSelector() {\r\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\r\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\r\n};\r\n/**\r\n * Chooses the appropriate media playlist based on an\r\n * exponential-weighted moving average of the bandwidth after\r\n * filtering for player size.\r\n *\r\n * Expects to be called within the context of an instance of VhsHandler\r\n *\r\n * @param {number} decay - a number between 0 and 1. Higher values of\r\n * this parameter will cause previous bandwidth estimates to lose\r\n * significance more quickly.\r\n * @return {Function} a function which can be invoked to create a new\r\n * playlist selector function.\r\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\r\n */\r\n\r\n\r\nvar movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\r\n  var average = -1;\r\n  var lastSystemBandwidth = -1;\r\n\r\n  if (decay < 0 || decay > 1) {\r\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\r\n  }\r\n\r\n  return function () {\r\n    var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\r\n\r\n    if (average < 0) {\r\n      average = this.systemBandwidth;\r\n      lastSystemBandwidth = this.systemBandwidth;\r\n    } // stop the average value from decaying for every 250ms\r\n    // when the systemBandwidth is constant\r\n    // and\r\n    // stop average from setting to a very low value when the\r\n    // systemBandwidth becomes 0 in case of chunk cancellation\r\n\r\n\r\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\r\n      average = decay * this.systemBandwidth + (1 - decay) * average;\r\n      lastSystemBandwidth = this.systemBandwidth;\r\n    }\r\n\r\n    return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\r\n  };\r\n};\r\n/**\r\n * Chooses the appropriate media playlist based on the potential to rebuffer\r\n *\r\n * @param {Object} settings\r\n *        Object of information required to use this selector\r\n * @param {Object} settings.master\r\n *        Object representation of the master manifest\r\n * @param {number} settings.currentTime\r\n *        The current time of the player\r\n * @param {number} settings.bandwidth\r\n *        Current measured bandwidth\r\n * @param {number} settings.duration\r\n *        Duration of the media\r\n * @param {number} settings.segmentDuration\r\n *        Segment duration to be used in round trip time calculations\r\n * @param {number} settings.timeUntilRebuffer\r\n *        Time left in seconds until the player has to rebuffer\r\n * @param {number} settings.currentTimeline\r\n *        The current timeline segments are being loaded from\r\n * @param {SyncController} settings.syncController\r\n *        SyncController for determining if we have a sync point for a given playlist\r\n * @return {Object|null}\r\n *         {Object} return.playlist\r\n *         The highest bandwidth playlist with the least amount of rebuffering\r\n *         {Number} return.rebufferingImpact\r\n *         The amount of time in seconds switching to this playlist will rebuffer. A\r\n *         negative value means that switching will cause zero rebuffering.\r\n */\r\n\r\n\r\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\r\n  var master = settings.master,\r\n      currentTime = settings.currentTime,\r\n      bandwidth = settings.bandwidth,\r\n      duration = settings.duration,\r\n      segmentDuration = settings.segmentDuration,\r\n      timeUntilRebuffer = settings.timeUntilRebuffer,\r\n      currentTimeline = settings.currentTimeline,\r\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\r\n  // incompatible configurations\r\n\r\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\r\n    return !Playlist.isIncompatible(playlist);\r\n  }); // filter out any playlists that have been disabled manually through the representations\r\n  // api or blacklisted temporarily due to playback errors.\r\n\r\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\r\n\r\n  if (!enabledPlaylists.length) {\r\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\r\n    // by the user through the representations api. In this case, ignore blacklisting and\r\n    // fallback to what the user wants by using playlists the user has not disabled.\r\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\r\n      return !Playlist.isDisabled(playlist);\r\n    });\r\n  }\r\n\r\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\r\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\r\n    var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\r\n    // sync request first. This will double the request time\r\n\r\n    var numRequests = syncPoint ? 1 : 2;\r\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\r\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\r\n    return {\r\n      playlist: playlist,\r\n      rebufferingImpact: rebufferingImpact\r\n    };\r\n  });\r\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\r\n    return estimate.rebufferingImpact <= 0;\r\n  }); // Sort by bandwidth DESC\r\n\r\n  stableSort(noRebufferingPlaylists, function (a, b) {\r\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\r\n  });\r\n\r\n  if (noRebufferingPlaylists.length) {\r\n    return noRebufferingPlaylists[0];\r\n  }\r\n\r\n  stableSort(rebufferingEstimates, function (a, b) {\r\n    return a.rebufferingImpact - b.rebufferingImpact;\r\n  });\r\n  return rebufferingEstimates[0] || null;\r\n};\r\n/**\r\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\r\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\r\n *\r\n * Expects to be called within the context of an instance of VhsHandler\r\n *\r\n * @return {Object|null}\r\n *         {Object} return.playlist\r\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\r\n *         exists pick the lowest audio rendition.\r\n */\r\n\r\n\r\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\r\n  var _this = this; // filter out any playlists that have been excluded due to\r\n  // incompatible configurations or playback errors\r\n\r\n\r\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\r\n\r\n  stableSort(playlists, function (a, b) {\r\n    return comparePlaylistBandwidth(a, b);\r\n  }); // Parse and assume that playlists with no video codec have no video\r\n  // (this is not necessarily true, although it is generally true).\r\n  //\r\n  // If an entire manifest has no valid videos everything will get filtered\r\n  // out.\r\n\r\n  var playlistsWithVideo = playlists.filter(function (playlist) {\r\n    return !!codecsForPlaylist(_this.playlists.master, playlist).video;\r\n  });\r\n  return playlistsWithVideo[0] || null;\r\n};\r\n/**\r\n * Combine all segments into a single Uint8Array\r\n *\r\n * @param {Object} segmentObj\r\n * @return {Uint8Array} concatenated bytes\r\n * @private\r\n */\r\n\r\n\r\nvar concatSegments = function concatSegments(segmentObj) {\r\n  var offset = 0;\r\n  var tempBuffer;\r\n\r\n  if (segmentObj.bytes) {\r\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\r\n\r\n    segmentObj.segments.forEach(function (segment) {\r\n      tempBuffer.set(segment, offset);\r\n      offset += segment.byteLength;\r\n    });\r\n  }\r\n\r\n  return tempBuffer;\r\n};\r\n/**\r\n * @file text-tracks.js\r\n */\r\n\r\n/**\r\n * Create captions text tracks on video.js if they do not exist\r\n *\r\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\r\n * @param {Object} tech the video.js tech\r\n * @param {Object} captionStream the caption stream to create\r\n * @private\r\n */\r\n\r\n\r\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\r\n  if (!inbandTextTracks[captionStream]) {\r\n    tech.trigger({\r\n      type: 'usage',\r\n      name: 'vhs-608'\r\n    });\r\n    tech.trigger({\r\n      type: 'usage',\r\n      name: 'hls-608'\r\n    });\r\n    var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\r\n\r\n    if (/^cc708_/.test(captionStream)) {\r\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\r\n    }\r\n\r\n    var track = tech.textTracks().getTrackById(instreamId);\r\n\r\n    if (track) {\r\n      // Resuse an existing track with a CC# id because this was\r\n      // very likely created by videojs-contrib-hls from information\r\n      // in the m3u8 for us to use\r\n      inbandTextTracks[captionStream] = track;\r\n    } else {\r\n      // This section gets called when we have caption services that aren't specified in the manifest.\r\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\r\n      var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\r\n      var label = captionStream;\r\n      var language = captionStream;\r\n      var def = false;\r\n      var captionService = captionServices[instreamId];\r\n\r\n      if (captionService) {\r\n        label = captionService.label;\r\n        language = captionService.language;\r\n        def = captionService[\"default\"];\r\n      } // Otherwise, create a track with the default `CC#` label and\r\n      // without a language\r\n\r\n\r\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\r\n        kind: 'captions',\r\n        id: instreamId,\r\n        // TODO: investigate why this doesn't seem to turn the caption on by default\r\n        \"default\": def,\r\n        label: label,\r\n        language: language\r\n      }, false).track;\r\n    }\r\n  }\r\n};\r\n/**\r\n * Add caption text track data to a source handler given an array of captions\r\n *\r\n * @param {Object}\r\n *   @param {Object} inbandTextTracks the inband text tracks\r\n *   @param {number} timestampOffset the timestamp offset of the source buffer\r\n *   @param {Array} captionArray an array of caption data\r\n * @private\r\n */\r\n\r\n\r\nvar addCaptionData = function addCaptionData(_ref) {\r\n  var inbandTextTracks = _ref.inbandTextTracks,\r\n      captionArray = _ref.captionArray,\r\n      timestampOffset = _ref.timestampOffset;\r\n\r\n  if (!captionArray) {\r\n    return;\r\n  }\r\n\r\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\r\n  captionArray.forEach(function (caption) {\r\n    var track = caption.stream;\r\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\r\n  });\r\n};\r\n/**\r\n * Define properties on a cue for backwards compatability,\r\n * but warn the user that the way that they are using it\r\n * is depricated and will be removed at a later date.\r\n *\r\n * @param {Cue} cue the cue to add the properties on\r\n * @private\r\n */\r\n\r\n\r\nvar deprecateOldCue = function deprecateOldCue(cue) {\r\n  Object.defineProperties(cue.frame, {\r\n    id: {\r\n      get: function get() {\r\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\r\n        return cue.value.key;\r\n      }\r\n    },\r\n    value: {\r\n      get: function get() {\r\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\r\n        return cue.value.data;\r\n      }\r\n    },\r\n    privateData: {\r\n      get: function get() {\r\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\r\n        return cue.value.data;\r\n      }\r\n    }\r\n  });\r\n};\r\n/**\r\n * Add metadata text track data to a source handler given an array of metadata\r\n *\r\n * @param {Object}\r\n *   @param {Object} inbandTextTracks the inband text tracks\r\n *   @param {Array} metadataArray an array of meta data\r\n *   @param {number} timestampOffset the timestamp offset of the source buffer\r\n *   @param {number} videoDuration the duration of the video\r\n * @private\r\n */\r\n\r\n\r\nvar addMetadata = function addMetadata(_ref2) {\r\n  var inbandTextTracks = _ref2.inbandTextTracks,\r\n      metadataArray = _ref2.metadataArray,\r\n      timestampOffset = _ref2.timestampOffset,\r\n      videoDuration = _ref2.videoDuration;\r\n\r\n  if (!metadataArray) {\r\n    return;\r\n  }\r\n\r\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\r\n  var metadataTrack = inbandTextTracks.metadataTrack_;\r\n\r\n  if (!metadataTrack) {\r\n    return;\r\n  }\r\n\r\n  metadataArray.forEach(function (metadata) {\r\n    var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\r\n    // ignore this bit of metadata.\r\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\r\n    // which is the \"Title/Songname/Content description\" frame\r\n\r\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\r\n      return;\r\n    }\r\n\r\n    metadata.frames.forEach(function (frame) {\r\n      var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\r\n      cue.frame = frame;\r\n      cue.value = frame;\r\n      deprecateOldCue(cue);\r\n      metadataTrack.addCue(cue);\r\n    });\r\n  });\r\n\r\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\r\n    return;\r\n  } // Updating the metadeta cues so that\r\n  // the endTime of each cue is the startTime of the next cue\r\n  // the endTime of last cue is the duration of the video\r\n\r\n\r\n  var cues = metadataTrack.cues;\r\n  var cuesArray = []; // Create a copy of the TextTrackCueList...\r\n  // ...disregarding cues with a falsey value\r\n\r\n  for (var i = 0; i < cues.length; i++) {\r\n    if (cues[i]) {\r\n      cuesArray.push(cues[i]);\r\n    }\r\n  } // Group cues by their startTime value\r\n\r\n\r\n  var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\r\n    var timeSlot = obj[cue.startTime] || [];\r\n    timeSlot.push(cue);\r\n    obj[cue.startTime] = timeSlot;\r\n    return obj;\r\n  }, {}); // Sort startTimes by ascending order\r\n\r\n  var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\r\n    return Number(a) - Number(b);\r\n  }); // Map each cue group's endTime to the next group's startTime\r\n\r\n  sortedStartTimes.forEach(function (startTime, idx) {\r\n    var cueGroup = cuesGroupedByStartTime[startTime];\r\n    var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\r\n\r\n    cueGroup.forEach(function (cue) {\r\n      cue.endTime = nextTime;\r\n    });\r\n  });\r\n};\r\n/**\r\n * Create metadata text track on video.js if it does not exist\r\n *\r\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\r\n * @param {string} dispatchType the inband metadata track dispatch type\r\n * @param {Object} tech the video.js tech\r\n * @private\r\n */\r\n\r\n\r\nvar createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\r\n  if (inbandTextTracks.metadataTrack_) {\r\n    return;\r\n  }\r\n\r\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\r\n    kind: 'metadata',\r\n    label: 'Timed Metadata'\r\n  }, false).track;\r\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\r\n};\r\n/**\r\n * Remove cues from a track on video.js.\r\n *\r\n * @param {Double} start start of where we should remove the cue\r\n * @param {Double} end end of where the we should remove the cue\r\n * @param {Object} track the text track to remove the cues from\r\n * @private\r\n */\r\n\r\n\r\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\r\n  var i;\r\n  var cue;\r\n\r\n  if (!track) {\r\n    return;\r\n  }\r\n\r\n  if (!track.cues) {\r\n    return;\r\n  }\r\n\r\n  i = track.cues.length;\r\n\r\n  while (i--) {\r\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\r\n\r\n    if (cue.startTime >= start && cue.endTime <= end) {\r\n      track.removeCue(cue);\r\n    }\r\n  }\r\n};\r\n/**\r\n * Remove duplicate cues from a track on video.js (a cue is considered a\r\n * duplicate if it has the same time interval and text as another)\r\n *\r\n * @param {Object} track the text track to remove the duplicate cues from\r\n * @private\r\n */\r\n\r\n\r\nvar removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\r\n  var cues = track.cues;\r\n\r\n  if (!cues) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < cues.length; i++) {\r\n    var duplicates = [];\r\n    var occurrences = 0;\r\n\r\n    for (var j = 0; j < cues.length; j++) {\r\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\r\n        occurrences++;\r\n\r\n        if (occurrences > 1) {\r\n          duplicates.push(cues[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (duplicates.length) {\r\n      duplicates.forEach(function (dupe) {\r\n        return track.removeCue(dupe);\r\n      });\r\n    }\r\n  }\r\n};\r\n/**\r\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\r\n * front of current time.\r\n *\r\n * @param {Array} buffer\r\n *        The current buffer of gop information\r\n * @param {number} currentTime\r\n *        The current time\r\n * @param {Double} mapping\r\n *        Offset to map display time to stream presentation time\r\n * @return {Array}\r\n *         List of gops considered safe to append over\r\n */\r\n\r\n\r\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\r\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\r\n    return [];\r\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\r\n\r\n\r\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\r\n  var i;\r\n\r\n  for (i = 0; i < buffer.length; i++) {\r\n    if (buffer[i].pts > currentTimePts) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return buffer.slice(i);\r\n};\r\n/**\r\n * Appends gop information (timing and byteLength) received by the transmuxer for the\r\n * gops appended in the last call to appendBuffer\r\n *\r\n * @param {Array} buffer\r\n *        The current buffer of gop information\r\n * @param {Array} gops\r\n *        List of new gop information\r\n * @param {boolean} replace\r\n *        If true, replace the buffer with the new gop information. If false, append the\r\n *        new gop information to the buffer in the right location of time.\r\n * @return {Array}\r\n *         Updated list of gop information\r\n */\r\n\r\n\r\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\r\n  if (!gops.length) {\r\n    return buffer;\r\n  }\r\n\r\n  if (replace) {\r\n    // If we are in safe append mode, then completely overwrite the gop buffer\r\n    // with the most recent appeneded data. This will make sure that when appending\r\n    // future segments, we only try to align with gops that are both ahead of current\r\n    // time and in the last segment appended.\r\n    return gops.slice();\r\n  }\r\n\r\n  var start = gops[0].pts;\r\n  var i = 0;\r\n\r\n  for (i; i < buffer.length; i++) {\r\n    if (buffer[i].pts >= start) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return buffer.slice(0, i).concat(gops);\r\n};\r\n/**\r\n * Removes gop information in buffer that overlaps with provided start and end\r\n *\r\n * @param {Array} buffer\r\n *        The current buffer of gop information\r\n * @param {Double} start\r\n *        position to start the remove at\r\n * @param {Double} end\r\n *        position to end the remove at\r\n * @param {Double} mapping\r\n *        Offset to map display time to stream presentation time\r\n */\r\n\r\n\r\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\r\n  var startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\r\n  var endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\r\n  var updatedBuffer = buffer.slice();\r\n  var i = buffer.length;\r\n\r\n  while (i--) {\r\n    if (buffer[i].pts <= endPts) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (i === -1) {\r\n    // no removal because end of remove range is before start of buffer\r\n    return updatedBuffer;\r\n  }\r\n\r\n  var j = i + 1;\r\n\r\n  while (j--) {\r\n    if (buffer[j].pts <= startPts) {\r\n      break;\r\n    }\r\n  } // clamp remove range start to 0 index\r\n\r\n\r\n  j = Math.max(j, 0);\r\n  updatedBuffer.splice(j, i - j + 1);\r\n  return updatedBuffer;\r\n};\r\n\r\nvar shallowEqual = function shallowEqual(a, b) {\r\n  // if both are undefined\r\n  // or one or the other is undefined\r\n  // they are not equal\r\n  if (!a && !b || !a && b || a && !b) {\r\n    return false;\r\n  } // they are the same object and thus, equal\r\n\r\n\r\n  if (a === b) {\r\n    return true;\r\n  } // sort keys so we can make sure they have\r\n  // all the same keys later.\r\n\r\n\r\n  var akeys = Object.keys(a).sort();\r\n  var bkeys = Object.keys(b).sort(); // different number of keys, not equal\r\n\r\n  if (akeys.length !== bkeys.length) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0; i < akeys.length; i++) {\r\n    var key = akeys[i]; // different sorted keys, not equal\r\n\r\n    if (key !== bkeys[i]) {\r\n      return false;\r\n    } // different values, not equal\r\n\r\n\r\n    if (a[key] !== b[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\r\n\r\n\r\nvar QUOTA_EXCEEDED_ERR = 22;\r\n/**\r\n * The segment loader has no recourse except to fetch a segment in the\r\n * current playlist and use the internal timestamps in that segment to\r\n * generate a syncPoint. This function returns a good candidate index\r\n * for that process.\r\n *\r\n * @param {Array} segments - the segments array from a playlist.\r\n * @return {number} An index of a segment from the playlist to load\r\n */\r\n\r\nvar getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\r\n  segments = segments || [];\r\n  var timelineSegments = [];\r\n  var time = 0;\r\n\r\n  for (var i = 0; i < segments.length; i++) {\r\n    var segment = segments[i];\r\n\r\n    if (currentTimeline === segment.timeline) {\r\n      timelineSegments.push(i);\r\n      time += segment.duration;\r\n\r\n      if (time > targetTime) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (timelineSegments.length === 0) {\r\n    return 0;\r\n  } // default to the last timeline segment\r\n\r\n\r\n  return timelineSegments[timelineSegments.length - 1];\r\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\r\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\r\n// as a start to prevent any potential issues with removing content too close to the\r\n// playhead.\r\n\r\n\r\nvar MIN_BACK_BUFFER = 1; // in ms\r\n\r\nvar CHECK_BUFFER_DELAY = 500;\r\n\r\nvar finite = function finite(num) {\r\n  return typeof num === 'number' && isFinite(num);\r\n}; // With most content hovering around 30fps, if a segment has a duration less than a half\r\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\r\n// not accurately reflect the rest of the content.\r\n\r\n\r\nvar MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\r\n\r\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\r\n  // Although these checks should most likely cover non 'main' types, for now it narrows\r\n  // the scope of our checks.\r\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\r\n    return null;\r\n  }\r\n\r\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\r\n    return 'Neither audio nor video found in segment.';\r\n  }\r\n\r\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\r\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\r\n  }\r\n\r\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\r\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\r\n  }\r\n\r\n  return null;\r\n};\r\n/**\r\n * Calculates a time value that is safe to remove from the back buffer without interrupting\r\n * playback.\r\n *\r\n * @param {TimeRange} seekable\r\n *        The current seekable range\r\n * @param {number} currentTime\r\n *        The current time of the player\r\n * @param {number} targetDuration\r\n *        The target duration of the current playlist\r\n * @return {number}\r\n *         Time that is safe to remove from the back buffer without interrupting playback\r\n */\r\n\r\n\r\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\r\n  // 30 seconds before the playhead provides a safe default for trimming.\r\n  //\r\n  // Choosing a reasonable default is particularly important for high bitrate content and\r\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\r\n  // throw an APPEND_BUFFER_ERR.\r\n  var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\r\n\r\n  if (seekable.length) {\r\n    // Some live playlists may have a shorter window of content than the full allowed back\r\n    // buffer. For these playlists, don't save content that's no longer within the window.\r\n    trimTime = Math.max(trimTime, seekable.start(0));\r\n  } // Don't remove within target duration of the current time to avoid the possibility of\r\n  // removing the GOP currently being played, as removing it can cause playback stalls.\r\n\r\n\r\n  var maxTrimTime = currentTime - targetDuration;\r\n  return Math.min(maxTrimTime, trimTime);\r\n};\r\n\r\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\r\n  var startOfSegment = segmentInfo.startOfSegment,\r\n      duration = segmentInfo.duration,\r\n      segment = segmentInfo.segment,\r\n      part = segmentInfo.part,\r\n      _segmentInfo$playlist = segmentInfo.playlist,\r\n      seq = _segmentInfo$playlist.mediaSequence,\r\n      id = _segmentInfo$playlist.id,\r\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\r\n      segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\r\n      index = segmentInfo.mediaIndex,\r\n      partIndex = segmentInfo.partIndex,\r\n      timeline = segmentInfo.timeline;\r\n  var segmentLen = segments.length - 1;\r\n  var selection = 'mediaIndex/partIndex increment';\r\n\r\n  if (segmentInfo.getMediaInfoForTime) {\r\n    selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\r\n  } else if (segmentInfo.isSyncRequest) {\r\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\r\n  }\r\n\r\n  if (segmentInfo.independent) {\r\n    selection += \" with independent \" + segmentInfo.independent;\r\n  }\r\n\r\n  var hasPartIndex = typeof partIndex === 'number';\r\n  var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\r\n  var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\r\n    preloadSegment: segment\r\n  }) - 1 : 0;\r\n  return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\r\n};\r\n\r\nvar timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\r\n  return mediaType + \"TimingInfo\";\r\n};\r\n/**\r\n * Returns the timestamp offset to use for the segment.\r\n *\r\n * @param {number} segmentTimeline\r\n *        The timeline of the segment\r\n * @param {number} currentTimeline\r\n *        The timeline currently being followed by the loader\r\n * @param {number} startOfSegment\r\n *        The estimated segment start\r\n * @param {TimeRange[]} buffered\r\n *        The loader's buffer\r\n * @param {boolean} overrideCheck\r\n *        If true, no checks are made to see if the timestamp offset value should be set,\r\n *        but sets it directly to a value.\r\n *\r\n * @return {number|null}\r\n *         Either a number representing a new timestamp offset, or null if the segment is\r\n *         part of the same timeline\r\n */\r\n\r\n\r\nvar timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\r\n  var segmentTimeline = _ref.segmentTimeline,\r\n      currentTimeline = _ref.currentTimeline,\r\n      startOfSegment = _ref.startOfSegment,\r\n      buffered = _ref.buffered,\r\n      overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\r\n  // timestamp offset on the transmuxer and source buffer.\r\n  //\r\n  // Previously, we changed the timestampOffset if the start of this segment was less than\r\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\r\n  // behavior, especially around long running live streams.\r\n\r\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\r\n    return null;\r\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\r\n  // instance, given two renditions with the following:\r\n  //\r\n  // #EXTINF:10\r\n  // segment1\r\n  // #EXT-X-DISCONTINUITY\r\n  // #EXTINF:10\r\n  // segment2\r\n  // #EXTINF:10\r\n  // segment3\r\n  //\r\n  // And the current player state:\r\n  //\r\n  // current time: 8\r\n  // buffer: 0 => 20\r\n  //\r\n  // The next segment on the current rendition would be segment3, filling the buffer from\r\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\r\n  // then the next segment to be requested will be segment1 from the new rendition in\r\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\r\n  // content (since it would position segment1 of the new rendition starting at 20s). This\r\n  // case can be identified when the new segment's timeline is a prior value. Instead of\r\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\r\n  // more accurate to the actual start time of the segment.\r\n\r\n\r\n  if (segmentTimeline < currentTimeline) {\r\n    return startOfSegment;\r\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\r\n  // value uses the end of the last segment if it is available. While this value\r\n  // should often be correct, it's better to rely on the buffered end, as the new\r\n  // content post discontinuity should line up with the buffered end as if it were\r\n  // time 0 for the new content.\r\n\r\n\r\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\r\n};\r\n/**\r\n * Returns whether or not the loader should wait for a timeline change from the timeline\r\n * change controller before processing the segment.\r\n *\r\n * Primary timing in VHS goes by video. This is different from most media players, as\r\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\r\n * will continue to use video as the primary timing source, due to the current logic and\r\n * expectations built around it.\r\n\r\n * Since the timing follows video, in order to maintain sync, the video loader is\r\n * responsible for setting both audio and video source buffer timestamp offsets.\r\n *\r\n * Setting different values for audio and video source buffers could lead to\r\n * desyncing. The following examples demonstrate some of the situations where this\r\n * distinction is important. Note that all of these cases involve demuxed content. When\r\n * content is muxed, the audio and video are packaged together, therefore syncing\r\n * separate media playlists is not an issue.\r\n *\r\n * CASE 1: Audio prepares to load a new timeline before video:\r\n *\r\n * Timeline:       0                 1\r\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\r\n * Audio Loader:                     ^\r\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\r\n * Video Loader              ^\r\n *\r\n * In the above example, the audio loader is preparing to load the 6th segment, the first\r\n * after a discontinuity, while the video loader is still loading the 5th segment, before\r\n * the discontinuity.\r\n *\r\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\r\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\r\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\r\n * the audio loader must provide the audioAppendStart value to trim the content in the\r\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\r\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\r\n * segment until that value is provided.\r\n *\r\n * CASE 2: Video prepares to load a new timeline before audio:\r\n *\r\n * Timeline:       0                 1\r\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\r\n * Audio Loader:             ^\r\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\r\n * Video Loader                      ^\r\n *\r\n * In the above example, the video loader is preparing to load the 6th segment, the first\r\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\r\n * the discontinuity.\r\n *\r\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\r\n * segment is loaded and processed, both the video and audio timestamp offsets will be\r\n * set, since video is used as the primary timing source. This is to ensure content lines\r\n * up appropriately, as any modifications to the video timing are reflected by audio when\r\n * the video loader sets the audio and video timestamp offsets to the same value. However,\r\n * setting the timestamp offset for audio before audio has had a chance to change\r\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\r\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\r\n *\r\n * CASE 3: When seeking, audio prepares to load a new timeline before video\r\n *\r\n * Timeline:       0                 1\r\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\r\n * Audio Loader:           ^\r\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\r\n * Video Loader            ^\r\n *\r\n * In the above example, both audio and video loaders are loading segments from timeline\r\n * 0, but imagine that the seek originated from timeline 1.\r\n *\r\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\r\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\r\n * must wait for the video loader to load its segment and update both the audio and video\r\n * timestamp offsets before it may load and append its own segment. This is the case\r\n * whether the seek results in a mismatched segment request (e.g., the audio loader\r\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\r\n * loaders choose to load the same segment index from each playlist, as the segments may\r\n * not be aligned perfectly, even for matching segment indexes.\r\n *\r\n * @param {Object} timelinechangeController\r\n * @param {number} currentTimeline\r\n *        The timeline currently being followed by the loader\r\n * @param {number} segmentTimeline\r\n *        The timeline of the segment being loaded\r\n * @param {('main'|'audio')} loaderType\r\n *        The loader type\r\n * @param {boolean} audioDisabled\r\n *        Whether the audio is disabled for the loader. This should only be true when the\r\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\r\n *        the main loader when an alternate audio playlist is active.\r\n *\r\n * @return {boolean}\r\n *         Whether the loader should wait for a timeline change from the timeline change\r\n *         controller before processing the segment\r\n */\r\n\r\n\r\nvar shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\r\n  var timelineChangeController = _ref2.timelineChangeController,\r\n      currentTimeline = _ref2.currentTimeline,\r\n      segmentTimeline = _ref2.segmentTimeline,\r\n      loaderType = _ref2.loaderType,\r\n      audioDisabled = _ref2.audioDisabled;\r\n\r\n  if (currentTimeline === segmentTimeline) {\r\n    return false;\r\n  }\r\n\r\n  if (loaderType === 'audio') {\r\n    var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\r\n      type: 'main'\r\n    }); // Audio loader should wait if:\r\n    //\r\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\r\n    // * main hasn't yet changed to the timeline audio is looking to load\r\n\r\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\r\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\r\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\r\n  // loader's segments (or the content is audio/video only and handled by the main\r\n  // loader).\r\n\r\n\r\n  if (loaderType === 'main' && audioDisabled) {\r\n    var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\r\n      type: 'audio'\r\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\r\n    // change to the current timeline.\r\n    //\r\n    // Since the main loader is responsible for setting the timestamp offset for both\r\n    // audio and video, the main loader must wait for audio to be about to change to its\r\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\r\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\r\n    //\r\n    // This requirement means that video will not cross a timeline until the audio is\r\n    // about to cross to it, so that way audio and video will always cross the timeline\r\n    // together.\r\n    //\r\n    // In addition to normal timeline changes, these rules also apply to the start of a\r\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\r\n    // that these rules apply to the first timeline change because if they did not, it's\r\n    // possible that the main loader will cross two timelines before the audio loader has\r\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\r\n    // it's easier to simply treat all timeline changes the same.\r\n\r\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nvar mediaDuration = function mediaDuration(timingInfos) {\r\n  var maxDuration = 0;\r\n  ['video', 'audio'].forEach(function (type) {\r\n    var typeTimingInfo = timingInfos[type + \"TimingInfo\"];\r\n\r\n    if (!typeTimingInfo) {\r\n      return;\r\n    }\r\n\r\n    var start = typeTimingInfo.start,\r\n        end = typeTimingInfo.end;\r\n    var duration;\r\n\r\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\r\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\r\n    } else if (typeof start === 'number' && typeof end === 'number') {\r\n      duration = end - start;\r\n    }\r\n\r\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\r\n      maxDuration = duration;\r\n    }\r\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\r\n  // as we only need BigInt when we are above that.\r\n\r\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\r\n    maxDuration = Number(maxDuration);\r\n  }\r\n\r\n  return maxDuration;\r\n};\r\n\r\nvar segmentTooLong = function segmentTooLong(_ref3) {\r\n  var segmentDuration = _ref3.segmentDuration,\r\n      maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\r\n  // information.\r\n\r\n  if (!segmentDuration) {\r\n    return false;\r\n  } // For HLS:\r\n  //\r\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\r\n  // The EXTINF duration of each Media Segment in the Playlist\r\n  // file, when rounded to the nearest integer, MUST be less than or equal\r\n  // to the target duration; longer segments can trigger playback stalls\r\n  // or other errors.\r\n  //\r\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\r\n  // duration. Although that reported duration is occasionally approximate (i.e., not\r\n  // exact), a strict check may report that a segment is too long more often in DASH.\r\n\r\n\r\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\r\n};\r\n\r\nvar getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\r\n  // Right now we aren't following DASH's timing model exactly, so only perform\r\n  // this check for HLS content.\r\n  if (sourceType !== 'hls') {\r\n    return null;\r\n  }\r\n\r\n  var segmentDuration = mediaDuration({\r\n    audioTimingInfo: segmentInfo.audioTimingInfo,\r\n    videoTimingInfo: segmentInfo.videoTimingInfo\r\n  }); // Don't report if we lack information.\r\n  //\r\n  // If the segment has a duration of 0 it is either a lack of information or a\r\n  // metadata only segment and shouldn't be reported here.\r\n\r\n  if (!segmentDuration) {\r\n    return null;\r\n  }\r\n\r\n  var targetDuration = segmentInfo.playlist.targetDuration;\r\n  var isSegmentWayTooLong = segmentTooLong({\r\n    segmentDuration: segmentDuration,\r\n    maxDuration: targetDuration * 2\r\n  });\r\n  var isSegmentSlightlyTooLong = segmentTooLong({\r\n    segmentDuration: segmentDuration,\r\n    maxDuration: targetDuration\r\n  });\r\n  var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\r\n\r\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\r\n    return {\r\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\r\n      message: segmentTooLongMessage\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n/**\r\n * An object that manages segment loading and appending.\r\n *\r\n * @class SegmentLoader\r\n * @param {Object} options required and optional options\r\n * @extends videojs.EventTarget\r\n */\r\n\r\n\r\nvar SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\r\n  _inheritsLoose(SegmentLoader, _videojs$EventTarget);\r\n\r\n  function SegmentLoader(settings, options) {\r\n    var _this;\r\n\r\n    _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\r\n\r\n    if (!settings) {\r\n      throw new TypeError('Initialization settings are required');\r\n    }\r\n\r\n    if (typeof settings.currentTime !== 'function') {\r\n      throw new TypeError('No currentTime getter specified');\r\n    }\r\n\r\n    if (!settings.mediaSource) {\r\n      throw new TypeError('No MediaSource specified');\r\n    } // public properties\r\n\r\n\r\n    _this.bandwidth = settings.bandwidth;\r\n    _this.throughput = {\r\n      rate: 0,\r\n      count: 0\r\n    };\r\n    _this.roundTrip = NaN;\r\n\r\n    _this.resetStats_();\r\n\r\n    _this.mediaIndex = null;\r\n    _this.partIndex = null; // private settings\r\n\r\n    _this.hasPlayed_ = settings.hasPlayed;\r\n    _this.currentTime_ = settings.currentTime;\r\n    _this.seekable_ = settings.seekable;\r\n    _this.seeking_ = settings.seeking;\r\n    _this.duration_ = settings.duration;\r\n    _this.mediaSource_ = settings.mediaSource;\r\n    _this.vhs_ = settings.vhs;\r\n    _this.loaderType_ = settings.loaderType;\r\n    _this.currentMediaInfo_ = void 0;\r\n    _this.startingMediaInfo_ = void 0;\r\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\r\n    _this.goalBufferLength_ = settings.goalBufferLength;\r\n    _this.sourceType_ = settings.sourceType;\r\n    _this.sourceUpdater_ = settings.sourceUpdater;\r\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\r\n    _this.state_ = 'INIT';\r\n    _this.timelineChangeController_ = settings.timelineChangeController;\r\n    _this.shouldSaveSegmentTimingInfo_ = true;\r\n    _this.parse708captions_ = settings.parse708captions;\r\n    _this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\r\n    _this.captionServices_ = settings.captionServices;\r\n    _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\r\n\r\n    _this.checkBufferTimeout_ = null;\r\n    _this.error_ = void 0;\r\n    _this.currentTimeline_ = -1;\r\n    _this.pendingSegment_ = null;\r\n    _this.xhrOptions_ = null;\r\n    _this.pendingSegments_ = [];\r\n    _this.audioDisabled_ = false;\r\n    _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\r\n\r\n    _this.gopBuffer_ = [];\r\n    _this.timeMapping_ = 0;\r\n    _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\r\n    _this.appendInitSegment_ = {\r\n      audio: true,\r\n      video: true\r\n    };\r\n    _this.playlistOfLastInitSegment_ = {\r\n      audio: null,\r\n      video: null\r\n    };\r\n    _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\r\n    // information yet to start the loading process (e.g., if the audio loader wants to\r\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\r\n    // timeline), then the load call will be added to the queue until it is ready to be\r\n    // processed.\r\n\r\n    _this.loadQueue_ = [];\r\n    _this.metadataQueue_ = {\r\n      id3: [],\r\n      caption: []\r\n    };\r\n    _this.waitingOnRemove_ = false;\r\n    _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\r\n\r\n    _this.activeInitSegmentId_ = null;\r\n    _this.initSegments_ = {}; // HLSe playback\r\n\r\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\r\n    _this.keyCache_ = {};\r\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\r\n    // between a time in the display time and a segment index within\r\n    // a playlist\r\n\r\n    _this.syncController_ = settings.syncController;\r\n    _this.syncPoint_ = {\r\n      segmentIndex: 0,\r\n      time: 0\r\n    };\r\n    _this.transmuxer_ = _this.createTransmuxer_();\r\n\r\n    _this.triggerSyncInfoUpdate_ = function () {\r\n      return _this.trigger('syncinfoupdate');\r\n    };\r\n\r\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\r\n\r\n    _this.mediaSource_.addEventListener('sourceopen', function () {\r\n      if (!_this.isEndOfStream_()) {\r\n        _this.ended_ = false;\r\n      }\r\n    }); // ...for determining the fetch location\r\n\r\n\r\n    _this.fetchAtBuffer_ = false;\r\n    _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\r\n    Object.defineProperty(_assertThisInitialized(_this), 'state', {\r\n      get: function get() {\r\n        return this.state_;\r\n      },\r\n      set: function set(newState) {\r\n        if (newState !== this.state_) {\r\n          this.logger_(this.state_ + \" -> \" + newState);\r\n          this.state_ = newState;\r\n          this.trigger('statechange');\r\n        }\r\n      }\r\n    });\r\n\r\n    _this.sourceUpdater_.on('ready', function () {\r\n      if (_this.hasEnoughInfoToAppend_()) {\r\n        _this.processCallQueue_();\r\n      }\r\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\r\n    // loader should wait for audio to be ready to change its timeline so that both main\r\n    // and audio timelines change together. For more details, see the\r\n    // shouldWaitForTimelineChange function.\r\n\r\n\r\n    if (_this.loaderType_ === 'main') {\r\n      _this.timelineChangeController_.on('pendingtimelinechange', function () {\r\n        if (_this.hasEnoughInfoToAppend_()) {\r\n          _this.processCallQueue_();\r\n        }\r\n      });\r\n    } // The main loader only listens on pending timeline changes, but the audio loader,\r\n    // since its loads follow main, needs to listen on timeline changes. For more details,\r\n    // see the shouldWaitForTimelineChange function.\r\n\r\n\r\n    if (_this.loaderType_ === 'audio') {\r\n      _this.timelineChangeController_.on('timelinechange', function () {\r\n        if (_this.hasEnoughInfoToLoad_()) {\r\n          _this.processLoadQueue_();\r\n        }\r\n\r\n        if (_this.hasEnoughInfoToAppend_()) {\r\n          _this.processCallQueue_();\r\n        }\r\n      });\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = SegmentLoader.prototype;\r\n\r\n  _proto.createTransmuxer_ = function createTransmuxer_() {\r\n    return segmentTransmuxer.createTransmuxer({\r\n      remux: false,\r\n      alignGopsAtEnd: this.safeAppend_,\r\n      keepOriginalTimestamps: true,\r\n      parse708captions: this.parse708captions_,\r\n      captionServices: this.captionServices_\r\n    });\r\n  }\r\n  /**\r\n   * reset all of our media stats\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.resetStats_ = function resetStats_() {\r\n    this.mediaBytesTransferred = 0;\r\n    this.mediaRequests = 0;\r\n    this.mediaRequestsAborted = 0;\r\n    this.mediaRequestsTimedout = 0;\r\n    this.mediaRequestsErrored = 0;\r\n    this.mediaTransferDuration = 0;\r\n    this.mediaSecondsLoaded = 0;\r\n    this.mediaAppends = 0;\r\n  }\r\n  /**\r\n   * dispose of the SegmentLoader and reset to the default state\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.trigger('dispose');\r\n    this.state = 'DISPOSED';\r\n    this.pause();\r\n    this.abort_();\r\n\r\n    if (this.transmuxer_) {\r\n      this.transmuxer_.terminate();\r\n    }\r\n\r\n    this.resetStats_();\r\n\r\n    if (this.checkBufferTimeout_) {\r\n      window$1.clearTimeout(this.checkBufferTimeout_);\r\n    }\r\n\r\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\r\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\r\n    }\r\n\r\n    this.off();\r\n  };\r\n\r\n  _proto.setAudio = function setAudio(enable) {\r\n    this.audioDisabled_ = !enable;\r\n\r\n    if (enable) {\r\n      this.appendInitSegment_.audio = true;\r\n    } else {\r\n      // remove current track audio if it gets disabled\r\n      this.sourceUpdater_.removeAudio(0, this.duration_());\r\n    }\r\n  }\r\n  /**\r\n   * abort anything that is currently doing on with the SegmentLoader\r\n   * and reset to a default state\r\n   */\r\n  ;\r\n\r\n  _proto.abort = function abort() {\r\n    if (this.state !== 'WAITING') {\r\n      if (this.pendingSegment_) {\r\n        this.pendingSegment_ = null;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\r\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\r\n    // when the request is aborted. This will prevent the loader from being stuck in the\r\n    // WAITING state indefinitely.\r\n\r\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\r\n    // next segment\r\n\r\n    if (!this.paused()) {\r\n      this.monitorBuffer_();\r\n    }\r\n  }\r\n  /**\r\n   * abort all pending xhr requests and null any pending segements\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.abort_ = function abort_() {\r\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\r\n      this.pendingSegment_.abortRequests();\r\n    } // clear out the segment being processed\r\n\r\n\r\n    this.pendingSegment_ = null;\r\n    this.callQueue_ = [];\r\n    this.loadQueue_ = [];\r\n    this.metadataQueue_.id3 = [];\r\n    this.metadataQueue_.caption = [];\r\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\r\n    this.waitingOnRemove_ = false;\r\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\r\n    this.quotaExceededErrorRetryTimeout_ = null;\r\n  };\r\n\r\n  _proto.checkForAbort_ = function checkForAbort_(requestId) {\r\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\r\n    // callback that happens should reset the state to READY so that loading can continue.\r\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\r\n      this.state = 'READY';\r\n      return true;\r\n    }\r\n\r\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * set an error on the segment loader and null out any pending segements\r\n   *\r\n   * @param {Error} error the error to set on the SegmentLoader\r\n   * @return {Error} the error that was set or that is currently set\r\n   */\r\n  ;\r\n\r\n  _proto.error = function error(_error) {\r\n    if (typeof _error !== 'undefined') {\r\n      this.logger_('error occurred:', _error);\r\n      this.error_ = _error;\r\n    }\r\n\r\n    this.pendingSegment_ = null;\r\n    return this.error_;\r\n  };\r\n\r\n  _proto.endOfStream = function endOfStream() {\r\n    this.ended_ = true;\r\n\r\n    if (this.transmuxer_) {\r\n      // need to clear out any cached data to prepare for the new segment\r\n      segmentTransmuxer.reset(this.transmuxer_);\r\n    }\r\n\r\n    this.gopBuffer_.length = 0;\r\n    this.pause();\r\n    this.trigger('ended');\r\n  }\r\n  /**\r\n   * Indicates which time ranges are buffered\r\n   *\r\n   * @return {TimeRange}\r\n   *         TimeRange object representing the current buffered ranges\r\n   */\r\n  ;\r\n\r\n  _proto.buffered_ = function buffered_() {\r\n    var trackInfo = this.getMediaInfo_();\r\n\r\n    if (!this.sourceUpdater_ || !trackInfo) {\r\n      return videojs.createTimeRanges();\r\n    }\r\n\r\n    if (this.loaderType_ === 'main') {\r\n      var hasAudio = trackInfo.hasAudio,\r\n          hasVideo = trackInfo.hasVideo,\r\n          isMuxed = trackInfo.isMuxed;\r\n\r\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\r\n        return this.sourceUpdater_.buffered();\r\n      }\r\n\r\n      if (hasVideo) {\r\n        return this.sourceUpdater_.videoBuffered();\r\n      }\r\n    } // One case that can be ignored for now is audio only with alt audio,\r\n    // as we don't yet have proper support for that.\r\n\r\n\r\n    return this.sourceUpdater_.audioBuffered();\r\n  }\r\n  /**\r\n   * Gets and sets init segment for the provided map\r\n   *\r\n   * @param {Object} map\r\n   *        The map object representing the init segment to get or set\r\n   * @param {boolean=} set\r\n   *        If true, the init segment for the provided map should be saved\r\n   * @return {Object}\r\n   *         map object for desired init segment\r\n   */\r\n  ;\r\n\r\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\r\n    if (set === void 0) {\r\n      set = false;\r\n    }\r\n\r\n    if (!map) {\r\n      return null;\r\n    }\r\n\r\n    var id = initSegmentId(map);\r\n    var storedMap = this.initSegments_[id];\r\n\r\n    if (set && !storedMap && map.bytes) {\r\n      this.initSegments_[id] = storedMap = {\r\n        resolvedUri: map.resolvedUri,\r\n        byterange: map.byterange,\r\n        bytes: map.bytes,\r\n        tracks: map.tracks,\r\n        timescales: map.timescales\r\n      };\r\n    }\r\n\r\n    return storedMap || map;\r\n  }\r\n  /**\r\n   * Gets and sets key for the provided key\r\n   *\r\n   * @param {Object} key\r\n   *        The key object representing the key to get or set\r\n   * @param {boolean=} set\r\n   *        If true, the key for the provided key should be saved\r\n   * @return {Object}\r\n   *         Key object for desired key\r\n   */\r\n  ;\r\n\r\n  _proto.segmentKey = function segmentKey(key, set) {\r\n    if (set === void 0) {\r\n      set = false;\r\n    }\r\n\r\n    if (!key) {\r\n      return null;\r\n    }\r\n\r\n    var id = segmentKeyId(key);\r\n    var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\r\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\r\n\r\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\r\n      this.keyCache_[id] = storedKey = {\r\n        resolvedUri: key.resolvedUri,\r\n        bytes: key.bytes\r\n      };\r\n    }\r\n\r\n    var result = {\r\n      resolvedUri: (storedKey || key).resolvedUri\r\n    };\r\n\r\n    if (storedKey) {\r\n      result.bytes = storedKey.bytes;\r\n    }\r\n\r\n    return result;\r\n  }\r\n  /**\r\n   * Returns true if all configuration required for loading is present, otherwise false.\r\n   *\r\n   * @return {boolean} True if the all configuration is ready for loading\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\r\n    return this.playlist_ && !this.paused();\r\n  }\r\n  /**\r\n   * load a playlist and start to fill the buffer\r\n   */\r\n  ;\r\n\r\n  _proto.load = function load() {\r\n    // un-pause\r\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\r\n    // specified\r\n\r\n    if (!this.playlist_) {\r\n      return;\r\n    } // if all the configuration is ready, initialize and begin loading\r\n\r\n\r\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\r\n      return this.init_();\r\n    } // if we're in the middle of processing a segment already, don't\r\n    // kick off an additional segment request\r\n\r\n\r\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\r\n      return;\r\n    }\r\n\r\n    this.state = 'READY';\r\n  }\r\n  /**\r\n   * Once all the starting parameters have been specified, begin\r\n   * operation. This method should only be invoked from the INIT\r\n   * state.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.init_ = function init_() {\r\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\r\n    // audio data from the muxed content should be removed\r\n\r\n    this.resetEverything();\r\n    return this.monitorBuffer_();\r\n  }\r\n  /**\r\n   * set a playlist on the segment loader\r\n   *\r\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\r\n   */\r\n  ;\r\n\r\n  _proto.playlist = function playlist(newPlaylist, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (!newPlaylist) {\r\n      return;\r\n    }\r\n\r\n    var oldPlaylist = this.playlist_;\r\n    var segmentInfo = this.pendingSegment_;\r\n    this.playlist_ = newPlaylist;\r\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\r\n    // is always our zero-time so force a sync update each time the playlist\r\n    // is refreshed from the server\r\n    //\r\n    // Use the INIT state to determine if playback has started, as the playlist sync info\r\n    // should be fixed once requests begin (as sync points are generated based on sync\r\n    // info), but not before then.\r\n\r\n    if (this.state === 'INIT') {\r\n      newPlaylist.syncInfo = {\r\n        mediaSequence: newPlaylist.mediaSequence,\r\n        time: 0\r\n      }; // Setting the date time mapping means mapping the program date time (if available)\r\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\r\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\r\n      // be updated as the playlist is refreshed before the loader starts loading, the\r\n      // program date time mapping needs to be updated as well.\r\n      //\r\n      // This mapping is only done for the main loader because a program date time should\r\n      // map equivalently between playlists.\r\n\r\n      if (this.loaderType_ === 'main') {\r\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\r\n      }\r\n    }\r\n\r\n    var oldId = null;\r\n\r\n    if (oldPlaylist) {\r\n      if (oldPlaylist.id) {\r\n        oldId = oldPlaylist.id;\r\n      } else if (oldPlaylist.uri) {\r\n        oldId = oldPlaylist.uri;\r\n      }\r\n    }\r\n\r\n    this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\r\n    // in LIVE, we always want to update with new playlists (including refreshes)\r\n\r\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\r\n    // buffering now\r\n\r\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\r\n      return this.init_();\r\n    }\r\n\r\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\r\n      if (this.mediaIndex !== null) {\r\n        // we must reset/resync the segment loader when we switch renditions and\r\n        // the segment loader is already synced to the previous rendition\r\n        // on playlist changes we want it to be possible to fetch\r\n        // at the buffer for vod but not for live. So we use resetLoader\r\n        // for live and resyncLoader for vod. We want this because\r\n        // if a playlist uses independent and non-independent segments/parts the\r\n        // buffer may not accurately reflect the next segment that we should try\r\n        // downloading.\r\n        if (!newPlaylist.endList) {\r\n          this.resetLoader();\r\n        } else {\r\n          this.resyncLoader();\r\n        }\r\n      }\r\n\r\n      this.currentMediaInfo_ = void 0;\r\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\r\n\r\n      return;\r\n    } // we reloaded the same playlist so we are in a live scenario\r\n    // and we will likely need to adjust the mediaIndex\r\n\r\n\r\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\r\n    this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\r\n    // this is important because we can abort a request and this value must be\r\n    // equal to the last appended mediaIndex\r\n\r\n    if (this.mediaIndex !== null) {\r\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\r\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\r\n      // new playlist was incremented by 1.\r\n\r\n      if (this.mediaIndex < 0) {\r\n        this.mediaIndex = null;\r\n        this.partIndex = null;\r\n      } else {\r\n        var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\r\n        // unless parts fell off of the playlist for this segment.\r\n        // In that case we need to reset partIndex and resync\r\n\r\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\r\n          var mediaIndex = this.mediaIndex;\r\n          this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\r\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\r\n          // as the part was dropped from our current playlists segment.\r\n          // The mediaIndex will still be valid so keep that around.\r\n\r\n          this.mediaIndex = mediaIndex;\r\n        }\r\n      }\r\n    } // update the mediaIndex on the SegmentInfo object\r\n    // this is important because we will update this.mediaIndex with this value\r\n    // in `handleAppendsDone_` after the segment has been successfully appended\r\n\r\n\r\n    if (segmentInfo) {\r\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\r\n\r\n      if (segmentInfo.mediaIndex < 0) {\r\n        segmentInfo.mediaIndex = null;\r\n        segmentInfo.partIndex = null;\r\n      } else {\r\n        // we need to update the referenced segment so that timing information is\r\n        // saved for the new playlist's segment, however, if the segment fell off the\r\n        // playlist, we can leave the old reference and just lose the timing info\r\n        if (segmentInfo.mediaIndex >= 0) {\r\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\r\n        }\r\n\r\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\r\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\r\n        }\r\n      }\r\n    }\r\n\r\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\r\n  }\r\n  /**\r\n   * Prevent the loader from fetching additional segments. If there\r\n   * is a segment request outstanding, it will finish processing\r\n   * before the loader halts. A segment loader can be unpaused by\r\n   * calling load().\r\n   */\r\n  ;\r\n\r\n  _proto.pause = function pause() {\r\n    if (this.checkBufferTimeout_) {\r\n      window$1.clearTimeout(this.checkBufferTimeout_);\r\n      this.checkBufferTimeout_ = null;\r\n    }\r\n  }\r\n  /**\r\n   * Returns whether the segment loader is fetching additional\r\n   * segments when given the opportunity. This property can be\r\n   * modified through calls to pause() and load().\r\n   */\r\n  ;\r\n\r\n  _proto.paused = function paused() {\r\n    return this.checkBufferTimeout_ === null;\r\n  }\r\n  /**\r\n   * Delete all the buffered data and reset the SegmentLoader\r\n   *\r\n   * @param {Function} [done] an optional callback to be executed when the remove\r\n   * operation is complete\r\n   */\r\n  ;\r\n\r\n  _proto.resetEverything = function resetEverything(done) {\r\n    this.ended_ = false;\r\n    this.activeInitSegmentId_ = null;\r\n    this.appendInitSegment_ = {\r\n      audio: true,\r\n      video: true\r\n    };\r\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\r\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\r\n    // we then clamp the value to duration if necessary.\r\n\r\n    this.remove(0, Infinity, done); // clears fmp4 captions\r\n\r\n    if (this.transmuxer_) {\r\n      this.transmuxer_.postMessage({\r\n        action: 'clearAllMp4Captions'\r\n      }); // reset the cache in the transmuxer\r\n\r\n      this.transmuxer_.postMessage({\r\n        action: 'reset'\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\r\n   * of starting at the end of the buffer\r\n   *\r\n   * Useful for fast quality changes\r\n   */\r\n  ;\r\n\r\n  _proto.resetLoader = function resetLoader() {\r\n    this.fetchAtBuffer_ = false;\r\n    this.resyncLoader();\r\n  }\r\n  /**\r\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\r\n   * before returning to the simple walk-forward method\r\n   */\r\n  ;\r\n\r\n  _proto.resyncLoader = function resyncLoader() {\r\n    if (this.transmuxer_) {\r\n      // need to clear out any cached data to prepare for the new segment\r\n      segmentTransmuxer.reset(this.transmuxer_);\r\n    }\r\n\r\n    this.mediaIndex = null;\r\n    this.partIndex = null;\r\n    this.syncPoint_ = null;\r\n    this.isPendingTimestampOffset_ = false;\r\n    this.callQueue_ = [];\r\n    this.loadQueue_ = [];\r\n    this.metadataQueue_.id3 = [];\r\n    this.metadataQueue_.caption = [];\r\n    this.abort();\r\n\r\n    if (this.transmuxer_) {\r\n      this.transmuxer_.postMessage({\r\n        action: 'clearParsedMp4Captions'\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Remove any data in the source buffer between start and end times\r\n   *\r\n   * @param {number} start - the start time of the region to remove from the buffer\r\n   * @param {number} end - the end time of the region to remove from the buffer\r\n   * @param {Function} [done] - an optional callback to be executed when the remove\r\n   * @param {boolean} force - force all remove operations to happen\r\n   * operation is complete\r\n   */\r\n  ;\r\n\r\n  _proto.remove = function remove(start, end, done, force) {\r\n    if (done === void 0) {\r\n      done = function done() {};\r\n    }\r\n\r\n    if (force === void 0) {\r\n      force = false;\r\n    } // clamp end to duration if we need to remove everything.\r\n    // This is due to a browser bug that causes issues if we remove to Infinity.\r\n    // videojs/videojs-contrib-hls#1225\r\n\r\n\r\n    if (end === Infinity) {\r\n      end = this.duration_();\r\n    } // skip removes that would throw an error\r\n    // commonly happens during a rendition switch at the start of a video\r\n    // from start 0 to end 0\r\n\r\n\r\n    if (end <= start) {\r\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\r\n      return;\r\n    }\r\n\r\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\r\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\r\n\r\n      return;\r\n    } // set it to one to complete this function's removes\r\n\r\n\r\n    var removesRemaining = 1;\r\n\r\n    var removeFinished = function removeFinished() {\r\n      removesRemaining--;\r\n\r\n      if (removesRemaining === 0) {\r\n        done();\r\n      }\r\n    };\r\n\r\n    if (force || !this.audioDisabled_) {\r\n      removesRemaining++;\r\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\r\n    } // While it would be better to only remove video if the main loader has video, this\r\n    // should be safe with audio only as removeVideo will call back even if there's no\r\n    // video buffer.\r\n    //\r\n    // In theory we can check to see if there's video before calling the remove, but in\r\n    // the event that we're switching between renditions and from video to audio only\r\n    // (when we add support for that), we may need to clear the video contents despite\r\n    // what the new media will contain.\r\n\r\n\r\n    if (force || this.loaderType_ === 'main') {\r\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\r\n      removesRemaining++;\r\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\r\n    } // remove any captions and ID3 tags\r\n\r\n\r\n    for (var track in this.inbandTextTracks_) {\r\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\r\n    }\r\n\r\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\r\n\r\n    removeFinished();\r\n  }\r\n  /**\r\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.monitorBuffer_ = function monitorBuffer_() {\r\n    if (this.checkBufferTimeout_) {\r\n      window$1.clearTimeout(this.checkBufferTimeout_);\r\n    }\r\n\r\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\r\n  }\r\n  /**\r\n   * As long as the SegmentLoader is in the READY state, periodically\r\n   * invoke fillBuffer_().\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.monitorBufferTick_ = function monitorBufferTick_() {\r\n    if (this.state === 'READY') {\r\n      this.fillBuffer_();\r\n    }\r\n\r\n    if (this.checkBufferTimeout_) {\r\n      window$1.clearTimeout(this.checkBufferTimeout_);\r\n    }\r\n\r\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\r\n  }\r\n  /**\r\n   * fill the buffer with segements unless the sourceBuffers are\r\n   * currently updating\r\n   *\r\n   * Note: this function should only ever be called by monitorBuffer_\r\n   * and never directly\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.fillBuffer_ = function fillBuffer_() {\r\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\r\n    // except when we're ready for the next segment, this check can most likely be removed\r\n    if (this.sourceUpdater_.updating()) {\r\n      return;\r\n    } // see if we need to begin loading immediately\r\n\r\n\r\n    var segmentInfo = this.chooseNextRequest_();\r\n\r\n    if (!segmentInfo) {\r\n      return;\r\n    }\r\n\r\n    if (typeof segmentInfo.timestampOffset === 'number') {\r\n      this.isPendingTimestampOffset_ = false;\r\n      this.timelineChangeController_.pendingTimelineChange({\r\n        type: this.loaderType_,\r\n        from: this.currentTimeline_,\r\n        to: segmentInfo.timeline\r\n      });\r\n    }\r\n\r\n    this.loadSegment_(segmentInfo);\r\n  }\r\n  /**\r\n   * Determines if we should call endOfStream on the media source based\r\n   * on the state of the buffer or if appened segment was the final\r\n   * segment in the playlist.\r\n   *\r\n   * @param {number} [mediaIndex] the media index of segment we last appended\r\n   * @param {Object} [playlist] a media playlist object\r\n   * @return {boolean} do we need to call endOfStream on the MediaSource\r\n   */\r\n  ;\r\n\r\n  _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\r\n    if (mediaIndex === void 0) {\r\n      mediaIndex = this.mediaIndex;\r\n    }\r\n\r\n    if (playlist === void 0) {\r\n      playlist = this.playlist_;\r\n    }\r\n\r\n    if (partIndex === void 0) {\r\n      partIndex = this.partIndex;\r\n    }\r\n\r\n    if (!playlist || !this.mediaSource_) {\r\n      return false;\r\n    }\r\n\r\n    var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\r\n\r\n    var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\r\n\r\n    var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\r\n    // so that MediaSources can trigger the `ended` event when it runs out of\r\n    // buffered data instead of waiting for me\r\n\r\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\r\n  }\r\n  /**\r\n   * Determines what request should be made given current segment loader state.\r\n   *\r\n   * @return {Object} a request object that describes the segment/part to load\r\n   */\r\n  ;\r\n\r\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\r\n    var buffered = this.buffered_();\r\n    var bufferedEnd = lastBufferedEnd(buffered) || 0;\r\n    var bufferedTime = timeAheadOf(buffered, this.currentTime_());\r\n    var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\r\n    var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\r\n    var segments = this.playlist_.segments; // return no segment if:\r\n    // 1. we don't have segments\r\n    // 2. The video has not yet played and we already downloaded a segment\r\n    // 3. we already have enough buffered time\r\n\r\n    if (!segments.length || preloaded || haveEnoughBuffer) {\r\n      return null;\r\n    }\r\n\r\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\r\n    var next = {\r\n      partIndex: null,\r\n      mediaIndex: null,\r\n      startOfSegment: null,\r\n      playlist: this.playlist_,\r\n      isSyncRequest: Boolean(!this.syncPoint_)\r\n    };\r\n\r\n    if (next.isSyncRequest) {\r\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\r\n    } else if (this.mediaIndex !== null) {\r\n      var segment = segments[this.mediaIndex];\r\n      var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\r\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\r\n\r\n      if (segment.parts && segment.parts[partIndex + 1]) {\r\n        next.mediaIndex = this.mediaIndex;\r\n        next.partIndex = partIndex + 1;\r\n      } else {\r\n        next.mediaIndex = this.mediaIndex + 1;\r\n      }\r\n    } else {\r\n      // Find the segment containing the end of the buffer or current time.\r\n      var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\r\n        experimentalExactManifestTimings: this.experimentalExactManifestTimings,\r\n        playlist: this.playlist_,\r\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\r\n        startingPartIndex: this.syncPoint_.partIndex,\r\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\r\n        startTime: this.syncPoint_.time\r\n      }),\r\n          segmentIndex = _Playlist$getMediaInf.segmentIndex,\r\n          startTime = _Playlist$getMediaInf.startTime,\r\n          _partIndex = _Playlist$getMediaInf.partIndex;\r\n\r\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\r\n      next.mediaIndex = segmentIndex;\r\n      next.startOfSegment = startTime;\r\n      next.partIndex = _partIndex;\r\n    }\r\n\r\n    var nextSegment = segments[next.mediaIndex];\r\n    var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\r\n    // the next partIndex is invalid do not choose a next segment.\r\n\r\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\r\n      return null;\r\n    } // if the next segment has parts, and we don't have a partIndex.\r\n    // Set partIndex to 0\r\n\r\n\r\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\r\n      next.partIndex = 0;\r\n      nextPart = nextSegment.parts[0];\r\n    } // if we have no buffered data then we need to make sure\r\n    // that the next part we append is \"independent\" if possible.\r\n    // So we check if the previous part is independent, and request\r\n    // it if it is.\r\n\r\n\r\n    if (!bufferedTime && nextPart && !nextPart.independent) {\r\n      if (next.partIndex === 0) {\r\n        var lastSegment = segments[next.mediaIndex - 1];\r\n        var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\r\n\r\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\r\n          next.mediaIndex -= 1;\r\n          next.partIndex = lastSegment.parts.length - 1;\r\n          next.independent = 'previous segment';\r\n        }\r\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\r\n        next.partIndex -= 1;\r\n        next.independent = 'previous part';\r\n      }\r\n    }\r\n\r\n    var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\r\n    // 1. this is the last segment in the playlist\r\n    // 2. end of stream has been called on the media source already\r\n    // 3. the player is not seeking\r\n\r\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\r\n      return null;\r\n    }\r\n\r\n    return this.generateSegmentInfo_(next);\r\n  };\r\n\r\n  _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\r\n    var independent = options.independent,\r\n        playlist = options.playlist,\r\n        mediaIndex = options.mediaIndex,\r\n        startOfSegment = options.startOfSegment,\r\n        isSyncRequest = options.isSyncRequest,\r\n        partIndex = options.partIndex,\r\n        forceTimestampOffset = options.forceTimestampOffset,\r\n        getMediaInfoForTime = options.getMediaInfoForTime;\r\n    var segment = playlist.segments[mediaIndex];\r\n    var part = typeof partIndex === 'number' && segment.parts[partIndex];\r\n    var segmentInfo = {\r\n      requestId: 'segment-loader-' + Math.random(),\r\n      // resolve the segment URL relative to the playlist\r\n      uri: part && part.resolvedUri || segment.resolvedUri,\r\n      // the segment's mediaIndex at the time it was requested\r\n      mediaIndex: mediaIndex,\r\n      partIndex: part ? partIndex : null,\r\n      // whether or not to update the SegmentLoader's state with this\r\n      // segment's mediaIndex\r\n      isSyncRequest: isSyncRequest,\r\n      startOfSegment: startOfSegment,\r\n      // the segment's playlist\r\n      playlist: playlist,\r\n      // unencrypted bytes of the segment\r\n      bytes: null,\r\n      // when a key is defined for this segment, the encrypted bytes\r\n      encryptedBytes: null,\r\n      // The target timestampOffset for this segment when we append it\r\n      // to the source buffer\r\n      timestampOffset: null,\r\n      // The timeline that the segment is in\r\n      timeline: segment.timeline,\r\n      // The expected duration of the segment in seconds\r\n      duration: part && part.duration || segment.duration,\r\n      // retain the segment in case the playlist updates while doing an async process\r\n      segment: segment,\r\n      part: part,\r\n      byteLength: 0,\r\n      transmuxer: this.transmuxer_,\r\n      // type of getMediaInfoForTime that was used to get this segment\r\n      getMediaInfoForTime: getMediaInfoForTime,\r\n      independent: independent\r\n    };\r\n    var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\r\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\r\n      segmentTimeline: segment.timeline,\r\n      currentTimeline: this.currentTimeline_,\r\n      startOfSegment: startOfSegment,\r\n      buffered: this.buffered_(),\r\n      overrideCheck: overrideCheck\r\n    });\r\n    var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\r\n\r\n    if (typeof audioBufferedEnd === 'number') {\r\n      // since the transmuxer is using the actual timing values, but the buffer is\r\n      // adjusted by the timestamp offset, we must adjust the value here\r\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\r\n    }\r\n\r\n    if (this.sourceUpdater_.videoBuffered().length) {\r\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\r\n      // adjusted by the timestmap offset, we must adjust the value here\r\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\r\n    }\r\n\r\n    return segmentInfo;\r\n  } // get the timestampoffset for a segment,\r\n  // added so that vtt segment loader can override and prevent\r\n  // adding timestamp offsets.\r\n  ;\r\n\r\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\r\n    return timestampOffsetForSegment(options);\r\n  }\r\n  /**\r\n   * Determines if the network has enough bandwidth to complete the current segment\r\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\r\n   * updated to trigger a playlist switch.\r\n   *\r\n   * @param {Object} stats\r\n   *        Object containing stats about the request timing and size\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\r\n    if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\r\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\r\n    //       the lowestEnabledRendition.\r\n    !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\r\n    !this.playlist_.attributes.BANDWIDTH) {\r\n      return;\r\n    } // Wait at least 1 second since the first byte of data has been received before\r\n    // using the calculated bandwidth from the progress event to allow the bitrate\r\n    // to stabilize\r\n\r\n\r\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\r\n      return;\r\n    }\r\n\r\n    var currentTime = this.currentTime_();\r\n    var measuredBandwidth = stats.bandwidth;\r\n    var segmentDuration = this.pendingSegment_.duration;\r\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\r\n    // if we are only left with less than 1 second when the request completes.\r\n    // A negative timeUntilRebuffering indicates we are already rebuffering\r\n\r\n    var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\r\n    // is larger than the estimated time until the player runs out of forward buffer\r\n\r\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\r\n      return;\r\n    }\r\n\r\n    var switchCandidate = minRebufferMaxBandwidthSelector({\r\n      master: this.vhs_.playlists.master,\r\n      currentTime: currentTime,\r\n      bandwidth: measuredBandwidth,\r\n      duration: this.duration_(),\r\n      segmentDuration: segmentDuration,\r\n      timeUntilRebuffer: timeUntilRebuffer$1,\r\n      currentTimeline: this.currentTimeline_,\r\n      syncController: this.syncController_\r\n    });\r\n\r\n    if (!switchCandidate) {\r\n      return;\r\n    }\r\n\r\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\r\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\r\n    var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\r\n    // potential round trip time of the new request so that we are not too aggressive\r\n    // with switching to a playlist that might save us a fraction of a second.\r\n\r\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\r\n      minimumTimeSaving = 1;\r\n    }\r\n\r\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\r\n      return;\r\n    } // set the bandwidth to that of the desired playlist being sure to scale by\r\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\r\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\r\n\r\n\r\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\r\n    this.trigger('earlyabort');\r\n  };\r\n\r\n  _proto.handleAbort_ = function handleAbort_(segmentInfo) {\r\n    this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\r\n    this.mediaRequestsAborted += 1;\r\n  }\r\n  /**\r\n   * XHR `progress` event handler\r\n   *\r\n   * @param {Event}\r\n   *        The XHR `progress` event\r\n   * @param {Object} simpleSegment\r\n   *        A simplified segment object copy\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\r\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    }\r\n\r\n    this.trigger('progress');\r\n  };\r\n\r\n  _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\r\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    }\r\n\r\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\r\n      return;\r\n    }\r\n\r\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\r\n    // Guard against cases where we're not getting track info at all until we are\r\n    // certain that all streams will provide it.\r\n\r\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\r\n      this.appendInitSegment_ = {\r\n        audio: true,\r\n        video: true\r\n      };\r\n      this.startingMediaInfo_ = trackInfo;\r\n      this.currentMediaInfo_ = trackInfo;\r\n      this.logger_('trackinfo update', trackInfo);\r\n      this.trigger('trackinfo');\r\n    } // trackinfo may cause an abort if the trackinfo\r\n    // causes a codec change to an unsupported codec.\r\n\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    } // set trackinfo on the pending segment so that\r\n    // it can append.\r\n\r\n\r\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\r\n\r\n    if (this.hasEnoughInfoToAppend_()) {\r\n      this.processCallQueue_();\r\n    }\r\n  };\r\n\r\n  _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\r\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_;\r\n    var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\r\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\r\n    segmentInfo[timingInfoProperty][timeType] = time;\r\n    this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\r\n\r\n    if (this.hasEnoughInfoToAppend_()) {\r\n      this.processCallQueue_();\r\n    }\r\n  };\r\n\r\n  _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\r\n    var _this2 = this;\r\n\r\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    } // This could only happen with fmp4 segments, but\r\n    // should still not happen in general\r\n\r\n\r\n    if (captionData.length === 0) {\r\n      this.logger_('SegmentLoader received no captions from a caption event');\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\r\n    // can be adjusted by the timestamp offset\r\n\r\n    if (!segmentInfo.hasAppendedData_) {\r\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\r\n      return;\r\n    }\r\n\r\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\r\n    var captionTracks = {}; // get total start/end and captions for each track/stream\r\n\r\n    captionData.forEach(function (caption) {\r\n      // caption.stream is actually a track name...\r\n      // set to the existing values in tracks or default values\r\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\r\n        // Infinity, as any other value will be less than this\r\n        startTime: Infinity,\r\n        captions: [],\r\n        // 0 as an other value will be more than this\r\n        endTime: 0\r\n      };\r\n      var captionTrack = captionTracks[caption.stream];\r\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\r\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\r\n      captionTrack.captions.push(caption);\r\n    });\r\n    Object.keys(captionTracks).forEach(function (trackName) {\r\n      var _captionTracks$trackN = captionTracks[trackName],\r\n          startTime = _captionTracks$trackN.startTime,\r\n          endTime = _captionTracks$trackN.endTime,\r\n          captions = _captionTracks$trackN.captions;\r\n      var inbandTextTracks = _this2.inbandTextTracks_;\r\n\r\n      _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\r\n\r\n      createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\r\n      // We do this because a rendition change that also changes the timescale for captions\r\n      // will result in captions being re-parsed for certain segments. If we add them again\r\n      // without clearing we will have two of the same captions visible.\r\n\r\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\r\n      addCaptionData({\r\n        captionArray: captions,\r\n        inbandTextTracks: inbandTextTracks,\r\n        timestampOffset: timestampOffset\r\n      });\r\n    }); // Reset stored captions since we added parsed\r\n    // captions to a text track at this point\r\n\r\n    if (this.transmuxer_) {\r\n      this.transmuxer_.postMessage({\r\n        action: 'clearParsedMp4Captions'\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\r\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\r\n\r\n    if (!segmentInfo.hasAppendedData_) {\r\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\r\n      return;\r\n    }\r\n\r\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\r\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\r\n    // However, this probably won't happen, and if it does it can be handled then.\r\n\r\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\r\n    addMetadata({\r\n      inbandTextTracks: this.inbandTextTracks_,\r\n      metadataArray: id3Frames,\r\n      timestampOffset: timestampOffset,\r\n      videoDuration: this.duration_()\r\n    });\r\n  };\r\n\r\n  _proto.processMetadataQueue_ = function processMetadataQueue_() {\r\n    this.metadataQueue_.id3.forEach(function (fn) {\r\n      return fn();\r\n    });\r\n    this.metadataQueue_.caption.forEach(function (fn) {\r\n      return fn();\r\n    });\r\n    this.metadataQueue_.id3 = [];\r\n    this.metadataQueue_.caption = [];\r\n  };\r\n\r\n  _proto.processCallQueue_ = function processCallQueue_() {\r\n    var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\r\n    // functions may check the length of the load queue and default to pushing themselves\r\n    // back onto the queue.\r\n\r\n    this.callQueue_ = [];\r\n    callQueue.forEach(function (fun) {\r\n      return fun();\r\n    });\r\n  };\r\n\r\n  _proto.processLoadQueue_ = function processLoadQueue_() {\r\n    var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\r\n    // functions may check the length of the load queue and default to pushing themselves\r\n    // back onto the queue.\r\n\r\n    this.loadQueue_ = [];\r\n    loadQueue.forEach(function (fun) {\r\n      return fun();\r\n    });\r\n  }\r\n  /**\r\n   * Determines whether the loader has enough info to load the next segment.\r\n   *\r\n   * @return {boolean}\r\n   *         Whether or not the loader has enough info to load the next segment\r\n   */\r\n  ;\r\n\r\n  _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\r\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\r\n    // to load.\r\n    if (this.loaderType_ !== 'audio') {\r\n      return true;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\r\n    // enough info to load.\r\n\r\n    if (!segmentInfo) {\r\n      return false;\r\n    } // The first segment can and should be loaded immediately so that source buffers are\r\n    // created together (before appending). Source buffer creation uses the presence of\r\n    // audio and video data to determine whether to create audio/video source buffers, and\r\n    // uses processed (transmuxed or parsed) media to determine the types required.\r\n\r\n\r\n    if (!this.getCurrentMediaInfo_()) {\r\n      return true;\r\n    }\r\n\r\n    if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\r\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\r\n    // But in practice, there are a few reasons why it is better to wait until a loader\r\n    // is ready to append that segment before requesting and downloading:\r\n    //\r\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\r\n    //    is waiting for the other to catch up, then instead of requesting another\r\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\r\n    //    allotted to the loader currently behind.\r\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\r\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\r\n    // 3. The audio loader bases some of its segment properties on timing information\r\n    //    provided by the main loader, meaning that, if the logic for waiting on\r\n    //    processing was in media-segment-request, then it would also need to know how\r\n    //    to re-generate the segment information after the main loader caught up.\r\n    shouldWaitForTimelineChange({\r\n      timelineChangeController: this.timelineChangeController_,\r\n      currentTimeline: this.currentTimeline_,\r\n      segmentTimeline: segmentInfo.timeline,\r\n      loaderType: this.loaderType_,\r\n      audioDisabled: this.audioDisabled_\r\n    })) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\r\n    if (segmentInfo === void 0) {\r\n      segmentInfo = this.pendingSegment_;\r\n    }\r\n\r\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\r\n  };\r\n\r\n  _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\r\n    if (segmentInfo === void 0) {\r\n      segmentInfo = this.pendingSegment_;\r\n    }\r\n\r\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\r\n  };\r\n\r\n  _proto.getPendingSegmentPlaylist = function getPendingSegmentPlaylist() {\r\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\r\n  };\r\n\r\n  _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\r\n    if (!this.sourceUpdater_.ready()) {\r\n      return false;\r\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\r\n    // then no additional content should be appended until the prior append is resolved.\r\n\r\n\r\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\r\n      return false;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_;\r\n    var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\r\n    // we do not have information on this specific\r\n    // segment yet\r\n\r\n    if (!segmentInfo || !trackInfo) {\r\n      return false;\r\n    }\r\n\r\n    var hasAudio = trackInfo.hasAudio,\r\n        hasVideo = trackInfo.hasVideo,\r\n        isMuxed = trackInfo.isMuxed;\r\n\r\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\r\n      return false;\r\n    } // muxed content only relies on video timing information for now.\r\n\r\n\r\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\r\n      return false;\r\n    }\r\n\r\n    if (shouldWaitForTimelineChange({\r\n      timelineChangeController: this.timelineChangeController_,\r\n      currentTimeline: this.currentTimeline_,\r\n      segmentTimeline: segmentInfo.timeline,\r\n      loaderType: this.loaderType_,\r\n      audioDisabled: this.audioDisabled_\r\n    })) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  _proto.handleData_ = function handleData_(simpleSegment, result) {\r\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\r\n\r\n    if (this.checkForAbort_(simpleSegment.requestId)) {\r\n      return;\r\n    } // If there's anything in the call queue, then this data came later and should be\r\n    // executed after the calls currently queued.\r\n\r\n\r\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\r\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\r\n\r\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\r\n\r\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\r\n    // logic may change behavior depending on the state, and changing state too early may\r\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\r\n    // note more granular states.\r\n    // don't process and append data if the mediaSource is closed\r\n\r\n    if (this.mediaSource_.readyState === 'closed') {\r\n      return;\r\n    } // if this request included an initialization segment, save that data\r\n    // to the initSegment cache\r\n\r\n\r\n    if (simpleSegment.map) {\r\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\r\n\r\n      segmentInfo.segment.map = simpleSegment.map;\r\n    } // if this request included a segment key, save that data in the cache\r\n\r\n\r\n    if (simpleSegment.key) {\r\n      this.segmentKey(simpleSegment.key, true);\r\n    }\r\n\r\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\r\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\r\n\r\n    if (segmentInfo.isFmp4) {\r\n      this.trigger('fmp4');\r\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\r\n    } else {\r\n      var trackInfo = this.getCurrentMediaInfo_();\r\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\r\n      var firstVideoFrameTimeForData;\r\n\r\n      if (useVideoTimingInfo) {\r\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\r\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\r\n      // aspects), so make any changes required for a more accurate start time.\r\n      // Don't set the end time yet, as the segment may not be finished processing.\r\n\r\n\r\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\r\n        currentStart: segmentInfo.timingInfo.start,\r\n        playlist: segmentInfo.playlist,\r\n        mediaIndex: segmentInfo.mediaIndex,\r\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\r\n        useVideoTimingInfo: useVideoTimingInfo,\r\n        firstVideoFrameTimeForData: firstVideoFrameTimeForData,\r\n        videoTimingInfo: segmentInfo.videoTimingInfo,\r\n        audioTimingInfo: segmentInfo.audioTimingInfo\r\n      });\r\n    } // Init segments for audio and video only need to be appended in certain cases. Now\r\n    // that data is about to be appended, we can check the final cases to determine\r\n    // whether we should append an init segment.\r\n\r\n\r\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\r\n    // as we use the start of the segment to offset the best guess (playlist provided)\r\n    // timestamp offset.\r\n\r\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\r\n    // be appended or not.\r\n\r\n    if (segmentInfo.isSyncRequest) {\r\n      // first save/update our timing info for this segment.\r\n      // this is what allows us to choose an accurate segment\r\n      // and the main reason we make a sync request.\r\n      this.updateTimingInfoEnd_(segmentInfo);\r\n      this.syncController_.saveSegmentTimingInfo({\r\n        segmentInfo: segmentInfo,\r\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\r\n      });\r\n      var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\r\n      // after taking into account its timing info, do not append it.\r\n\r\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\r\n        this.logger_('sync segment was incorrect, not appending');\r\n        return;\r\n      } // otherwise append it like any other segment as our guess was correct.\r\n\r\n\r\n      this.logger_('sync segment was correct, appending');\r\n    } // Save some state so that in the future anything waiting on first append (and/or\r\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\r\n    // we need some notion of whether the timestamp offset or other relevant information\r\n    // has had a chance to be set.\r\n\r\n\r\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\r\n\r\n    this.processMetadataQueue_();\r\n    this.appendData_(segmentInfo, result);\r\n  };\r\n\r\n  _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\r\n    // alt audio doesn't manage timestamp offset\r\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\r\n    // segment for each chunk\r\n    !segmentInfo.changedTimestampOffset) {\r\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\r\n      // append init segments\r\n      this.appendInitSegment_ = {\r\n        audio: true,\r\n        video: true\r\n      };\r\n    }\r\n\r\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\r\n      // make sure we append init segment on playlist changes, in case the media config\r\n      // changed\r\n      this.appendInitSegment_[type] = true;\r\n    }\r\n  };\r\n\r\n  _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\r\n    var type = _ref4.type,\r\n        initSegment = _ref4.initSegment,\r\n        map = _ref4.map,\r\n        playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\r\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\r\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\r\n    // or until the end of the playlist.\"\r\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\r\n\r\n    if (map) {\r\n      var id = initSegmentId(map);\r\n\r\n      if (this.activeInitSegmentId_ === id) {\r\n        // don't need to re-append the init segment if the ID matches\r\n        return null;\r\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\r\n      // obtained) init segment\r\n      //\r\n      // this also caches the init segment for later use\r\n\r\n\r\n      initSegment = this.initSegmentForMap(map, true).bytes;\r\n      this.activeInitSegmentId_ = id;\r\n    } // We used to always prepend init segments for video, however, that shouldn't be\r\n    // necessary. Instead, we should only append on changes, similar to what we've always\r\n    // done for audio. This is more important (though may not be that important) for\r\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\r\n    // appends.\r\n\r\n\r\n    if (initSegment && this.appendInitSegment_[type]) {\r\n      // Make sure we track the playlist that we last used for the init segment, so that\r\n      // we can re-append the init segment in the event that we get data from a new\r\n      // playlist. Discontinuities and track changes are handled in other sections.\r\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\r\n\r\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\r\n      // we are appending the muxer init segment\r\n\r\n      this.activeInitSegmentId_ = null;\r\n      return initSegment;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\r\n    var _this3 = this;\r\n\r\n    var segmentInfo = _ref5.segmentInfo,\r\n        type = _ref5.type,\r\n        bytes = _ref5.bytes;\r\n    var audioBuffered = this.sourceUpdater_.audioBuffered();\r\n    var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\r\n    // should be cleared out during the buffer removals. However, log in case it helps\r\n    // debug.\r\n\r\n    if (audioBuffered.length > 1) {\r\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\r\n    }\r\n\r\n    if (videoBuffered.length > 1) {\r\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\r\n    }\r\n\r\n    var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\r\n    var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\r\n    var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\r\n    var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\r\n\r\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\r\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\r\n      // allow for appends of segments this size). In the future, it may be possible to\r\n      // split up the segment and append in pieces, but for now, error out this playlist\r\n      // in an attempt to switch to a more manageable rendition.\r\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\r\n      this.error({\r\n        message: 'Quota exceeded error with append of a single segment of content',\r\n        excludeUntil: Infinity\r\n      });\r\n      this.trigger('error');\r\n      return;\r\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\r\n    // that the segment-loader should block on future events until this one is handled, so\r\n    // that it doesn't keep moving onto further segments. Adding the call to the call\r\n    // queue will prevent further appends until waitingOnRemove_ and\r\n    // quotaExceededErrorRetryTimeout_ are cleared.\r\n    //\r\n    // Note that this will only block the current loader. In the case of demuxed content,\r\n    // the other load may keep filling as fast as possible. In practice, this should be\r\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\r\n    // source buffer, or video fills without enough room for audio to append (and without\r\n    // the availability of clearing out seconds of back buffer to make room for audio).\r\n    // But it might still be good to handle this case in the future as a TODO.\r\n\r\n\r\n    this.waitingOnRemove_ = true;\r\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\r\n      segmentInfo: segmentInfo,\r\n      type: type,\r\n      bytes: bytes\r\n    }));\r\n    var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\r\n    // before retrying.\r\n\r\n    var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\r\n    this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\r\n    this.remove(0, timeToRemoveUntil, function () {\r\n      _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\r\n\r\n      _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\r\n      // attempts (since we can't clear less than the minimum)\r\n\r\n      _this3.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(function () {\r\n        _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\r\n\r\n        _this3.quotaExceededErrorRetryTimeout_ = null;\r\n\r\n        _this3.processCallQueue_();\r\n      }, MIN_BACK_BUFFER * 1000);\r\n    }, true);\r\n  };\r\n\r\n  _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\r\n    var segmentInfo = _ref6.segmentInfo,\r\n        type = _ref6.type,\r\n        bytes = _ref6.bytes; // if there's no error, nothing to do\r\n\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    if (error.code === QUOTA_EXCEEDED_ERR) {\r\n      this.handleQuotaExceededError_({\r\n        segmentInfo: segmentInfo,\r\n        type: type,\r\n        bytes: bytes\r\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\r\n      // to trigger an append error.\r\n\r\n      return;\r\n    }\r\n\r\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\r\n    this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\r\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\r\n    //\r\n    // Trigger a special error so that it can be handled separately from normal,\r\n    // recoverable errors.\r\n\r\n    this.trigger('appenderror');\r\n  };\r\n\r\n  _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\r\n    var segmentInfo = _ref7.segmentInfo,\r\n        type = _ref7.type,\r\n        initSegment = _ref7.initSegment,\r\n        data = _ref7.data,\r\n        bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\r\n\r\n    if (!bytes) {\r\n      var segments = [data];\r\n      var byteLength = data.byteLength;\r\n\r\n      if (initSegment) {\r\n        // if the media initialization segment is changing, append it before the content\r\n        // segment\r\n        segments.unshift(initSegment);\r\n        byteLength += initSegment.byteLength;\r\n      } // Technically we should be OK appending the init segment separately, however, we\r\n      // haven't yet tested that, and prepending is how we have always done things.\r\n\r\n\r\n      bytes = concatSegments({\r\n        bytes: byteLength,\r\n        segments: segments\r\n      });\r\n    }\r\n\r\n    this.sourceUpdater_.appendBuffer({\r\n      segmentInfo: segmentInfo,\r\n      type: type,\r\n      bytes: bytes\r\n    }, this.handleAppendError_.bind(this, {\r\n      segmentInfo: segmentInfo,\r\n      type: type,\r\n      bytes: bytes\r\n    }));\r\n  };\r\n\r\n  _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\r\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\r\n      return;\r\n    }\r\n\r\n    var segment = this.pendingSegment_.segment;\r\n    var timingInfoProperty = type + \"TimingInfo\";\r\n\r\n    if (!segment[timingInfoProperty]) {\r\n      segment[timingInfoProperty] = {};\r\n    }\r\n\r\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\r\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\r\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\r\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\r\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\r\n\r\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\r\n  };\r\n\r\n  _proto.appendData_ = function appendData_(segmentInfo, result) {\r\n    var type = result.type,\r\n        data = result.data;\r\n\r\n    if (!data || !data.byteLength) {\r\n      return;\r\n    }\r\n\r\n    if (type === 'audio' && this.audioDisabled_) {\r\n      return;\r\n    }\r\n\r\n    var initSegment = this.getInitSegmentAndUpdateState_({\r\n      type: type,\r\n      initSegment: result.initSegment,\r\n      playlist: segmentInfo.playlist,\r\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\r\n    });\r\n    this.appendToSourceBuffer_({\r\n      segmentInfo: segmentInfo,\r\n      type: type,\r\n      initSegment: initSegment,\r\n      data: data\r\n    });\r\n  }\r\n  /**\r\n   * load a specific segment from a request into the buffer\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.loadSegment_ = function loadSegment_(segmentInfo) {\r\n    var _this4 = this;\r\n\r\n    this.state = 'WAITING';\r\n    this.pendingSegment_ = segmentInfo;\r\n    this.trimBackBuffer_(segmentInfo);\r\n\r\n    if (typeof segmentInfo.timestampOffset === 'number') {\r\n      if (this.transmuxer_) {\r\n        this.transmuxer_.postMessage({\r\n          action: 'clearAllMp4Captions'\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!this.hasEnoughInfoToLoad_()) {\r\n      this.loadQueue_.push(function () {\r\n        // regenerate the audioAppendStart, timestampOffset, etc as they\r\n        // may have changed since this function was added to the queue.\r\n        var options = _extends({}, segmentInfo, {\r\n          forceTimestampOffset: true\r\n        });\r\n\r\n        _extends(segmentInfo, _this4.generateSegmentInfo_(options));\r\n\r\n        _this4.isPendingTimestampOffset_ = false;\r\n\r\n        _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\r\n  };\r\n\r\n  _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\r\n    var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\r\n    // the transmuxer still needs to be updated before then.\r\n    //\r\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\r\n    // offset must be passed to the transmuxer for stream correcting adjustments.\r\n\r\n\r\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\r\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\r\n\r\n      segmentInfo.gopsToAlignWith = [];\r\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\r\n\r\n      this.transmuxer_.postMessage({\r\n        action: 'reset'\r\n      });\r\n      this.transmuxer_.postMessage({\r\n        action: 'setTimestampOffset',\r\n        timestampOffset: segmentInfo.timestampOffset\r\n      });\r\n    }\r\n\r\n    var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\r\n    var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\r\n    var isWalkingForward = this.mediaIndex !== null;\r\n    var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\r\n    // the first timeline\r\n    segmentInfo.timeline > 0;\r\n    var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\r\n    this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\r\n    // then this init segment has never been seen before and should be appended.\r\n    //\r\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\r\n    // both to true and leave the decision of whether to append the init segment to append time.\r\n\r\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\r\n      this.logger_('going to request init segment.');\r\n      this.appendInitSegment_ = {\r\n        video: true,\r\n        audio: true\r\n      };\r\n    }\r\n\r\n    segmentInfo.abortRequests = mediaSegmentRequest({\r\n      xhr: this.vhs_.xhr,\r\n      xhrOptions: this.xhrOptions_,\r\n      decryptionWorker: this.decrypter_,\r\n      segment: simpleSegment,\r\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\r\n      progressFn: this.handleProgress_.bind(this),\r\n      trackInfoFn: this.handleTrackInfo_.bind(this),\r\n      timingInfoFn: this.handleTimingInfo_.bind(this),\r\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\r\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\r\n      captionsFn: this.handleCaptions_.bind(this),\r\n      isEndOfTimeline: isEndOfTimeline,\r\n      endedTimelineFn: function endedTimelineFn() {\r\n        _this5.logger_('received endedtimeline callback');\r\n      },\r\n      id3Fn: this.handleId3_.bind(this),\r\n      dataFn: this.handleData_.bind(this),\r\n      doneFn: this.segmentRequestFinished_.bind(this),\r\n      onTransmuxerLog: function onTransmuxerLog(_ref8) {\r\n        var message = _ref8.message,\r\n            level = _ref8.level,\r\n            stream = _ref8.stream;\r\n\r\n        _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * trim the back buffer so that we don't have too much data\r\n   * in the source buffer\r\n   *\r\n   * @private\r\n   *\r\n   * @param {Object} segmentInfo - the current segment\r\n   */\r\n  ;\r\n\r\n  _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\r\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\r\n    // buffer and a very conservative \"garbage collector\"\r\n    // We manually clear out the old buffer to ensure\r\n    // we don't trigger the QuotaExceeded error\r\n    // on the source buffer during subsequent appends\r\n\r\n    if (removeToTime > 0) {\r\n      this.remove(0, removeToTime);\r\n    }\r\n  }\r\n  /**\r\n   * created a simplified copy of the segment object with just the\r\n   * information necessary to perform the XHR and decryption\r\n   *\r\n   * @private\r\n   *\r\n   * @param {Object} segmentInfo - the current segment\r\n   * @return {Object} a simplified segment object copy\r\n   */\r\n  ;\r\n\r\n  _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\r\n    var segment = segmentInfo.segment;\r\n    var part = segmentInfo.part;\r\n    var simpleSegment = {\r\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\r\n      byterange: part ? part.byterange : segment.byterange,\r\n      requestId: segmentInfo.requestId,\r\n      transmuxer: segmentInfo.transmuxer,\r\n      audioAppendStart: segmentInfo.audioAppendStart,\r\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\r\n      part: segmentInfo.part\r\n    };\r\n    var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\r\n\r\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\r\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\r\n      // segment to retrieve timing information. Since the probe only looks at the media's\r\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\r\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\r\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\r\n      // seconds of media time, so should be used here. The previous segment is used since\r\n      // the end of the previous segment should represent the beginning of the current\r\n      // segment, so long as they are on the same timeline.\r\n      if (previousSegment.videoTimingInfo) {\r\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\r\n      } else if (previousSegment.audioTimingInfo) {\r\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\r\n      }\r\n    }\r\n\r\n    if (segment.key) {\r\n      // if the media sequence is greater than 2^32, the IV will be incorrect\r\n      // assuming 10s segments, that would be about 1300 years\r\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\r\n      simpleSegment.key = this.segmentKey(segment.key);\r\n      simpleSegment.key.iv = iv;\r\n    }\r\n\r\n    if (segment.map) {\r\n      simpleSegment.map = this.initSegmentForMap(segment.map);\r\n    }\r\n\r\n    return simpleSegment;\r\n  };\r\n\r\n  _proto.saveTransferStats_ = function saveTransferStats_(stats) {\r\n    // every request counts as a media request even if it has been aborted\r\n    // or canceled due to a timeout\r\n    this.mediaRequests += 1;\r\n\r\n    if (stats) {\r\n      this.mediaBytesTransferred += stats.bytesReceived;\r\n      this.mediaTransferDuration += stats.roundTripTime;\r\n    }\r\n  };\r\n\r\n  _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\r\n    // byteLength will be used for throughput, and should be based on bytes receieved,\r\n    // which we only know at the end of the request and should reflect total bytes\r\n    // downloaded rather than just bytes processed from components of the segment\r\n    this.pendingSegment_.byteLength = stats.bytesReceived;\r\n\r\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\r\n      this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\r\n      return;\r\n    }\r\n\r\n    this.bandwidth = stats.bandwidth;\r\n    this.roundTrip = stats.roundTripTime;\r\n  };\r\n\r\n  _proto.handleTimeout_ = function handleTimeout_() {\r\n    // although the VTT segment loader bandwidth isn't really used, it's good to\r\n    // maintain functinality between segment loaders\r\n    this.mediaRequestsTimedout += 1;\r\n    this.bandwidth = 1;\r\n    this.roundTrip = NaN;\r\n    this.trigger('bandwidthupdate');\r\n    this.trigger('timeout');\r\n  }\r\n  /**\r\n   * Handle the callback from the segmentRequest function and set the\r\n   * associated SegmentLoader state and errors if necessary\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\r\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\r\n    // check the call queue directly since this function doesn't need to deal with any\r\n    // data, and can continue even if the source buffers are not set up and we didn't get\r\n    // any data from the segment\r\n    if (this.callQueue_.length) {\r\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\r\n      return;\r\n    }\r\n\r\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\r\n\r\n    if (!this.pendingSegment_) {\r\n      return;\r\n    } // the request was aborted and the SegmentLoader has already started\r\n    // another request. this can happen when the timeout for an aborted\r\n    // request triggers due to a limitation in the XHR library\r\n    // do not count this as any sort of request or we risk double-counting\r\n\r\n\r\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\r\n      return;\r\n    } // an error occurred from the active pendingSegment_ so reset everything\r\n\r\n\r\n    if (error) {\r\n      this.pendingSegment_ = null;\r\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\r\n\r\n      if (error.code === REQUEST_ERRORS.ABORTED) {\r\n        return;\r\n      }\r\n\r\n      this.pause(); // the error is really just that at least one of the requests timed-out\r\n      // set the bandwidth to a very low value and trigger an ABR switch to\r\n      // take emergency action\r\n\r\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\r\n        this.handleTimeout_();\r\n        return;\r\n      } // if control-flow has arrived here, then the error is real\r\n      // emit an error event to blacklist the current playlist\r\n\r\n\r\n      this.mediaRequestsErrored += 1;\r\n      this.error(error);\r\n      this.trigger('error');\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\r\n    // generated for ABR purposes\r\n\r\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\r\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\r\n\r\n    if (result.gopInfo) {\r\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\r\n    } // Although we may have already started appending on progress, we shouldn't switch the\r\n    // state away from loading until we are officially done loading the segment data.\r\n\r\n\r\n    this.state = 'APPENDING'; // used for testing\r\n\r\n    this.trigger('appending');\r\n    this.waitForAppendsToComplete_(segmentInfo);\r\n  };\r\n\r\n  _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\r\n    var timelineMapping = this.syncController_.mappingForTimeline(timeline);\r\n\r\n    if (timelineMapping !== null) {\r\n      this.timeMapping_ = timelineMapping;\r\n    }\r\n  };\r\n\r\n  _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\r\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\r\n      this.mediaSecondsLoaded += segment.end - segment.start;\r\n    } else {\r\n      this.mediaSecondsLoaded += segment.duration;\r\n    }\r\n  };\r\n\r\n  _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\r\n    if (timestampOffset === null) {\r\n      return false;\r\n    } // note that we're potentially using the same timestamp offset for both video and\r\n    // audio\r\n\r\n\r\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\r\n      return true;\r\n    }\r\n\r\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\r\n    var currentStart = _ref9.currentStart,\r\n        playlist = _ref9.playlist,\r\n        mediaIndex = _ref9.mediaIndex,\r\n        firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\r\n        currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\r\n        useVideoTimingInfo = _ref9.useVideoTimingInfo,\r\n        videoTimingInfo = _ref9.videoTimingInfo,\r\n        audioTimingInfo = _ref9.audioTimingInfo;\r\n\r\n    if (typeof currentStart !== 'undefined') {\r\n      // if start was set once, keep using it\r\n      return currentStart;\r\n    }\r\n\r\n    if (!useVideoTimingInfo) {\r\n      return audioTimingInfo.start;\r\n    }\r\n\r\n    var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\r\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\r\n    // from and/or the last frame seen, the start time may reflect a frame that starts\r\n    // in the previous segment. Check for that case and ensure the start time is\r\n    // accurate for the segment.\r\n\r\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\r\n      return firstVideoFrameTimeForData;\r\n    }\r\n\r\n    return videoTimingInfo.start;\r\n  };\r\n\r\n  _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\r\n    var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\r\n\r\n    if (!trackInfo) {\r\n      this.error({\r\n        message: 'No starting media returned, likely due to an unsupported media format.',\r\n        blacklistDuration: Infinity\r\n      });\r\n      this.trigger('error');\r\n      return;\r\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\r\n    // on each queue this loader is responsible for to ensure that the appends are\r\n    // complete.\r\n\r\n\r\n    var hasAudio = trackInfo.hasAudio,\r\n        hasVideo = trackInfo.hasVideo,\r\n        isMuxed = trackInfo.isMuxed;\r\n    var waitForVideo = this.loaderType_ === 'main' && hasVideo;\r\n    var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\r\n    segmentInfo.waitingOnAppends = 0; // segments with no data\r\n\r\n    if (!segmentInfo.hasAppendedData_) {\r\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\r\n        // When there's no audio or video data in the segment, there's no audio or video\r\n        // timing information.\r\n        //\r\n        // If there's no audio or video timing information, then the timestamp offset\r\n        // can't be adjusted to the appropriate value for the transmuxer and source\r\n        // buffers.\r\n        //\r\n        // Therefore, the next segment should be used to set the timestamp offset.\r\n        this.isPendingTimestampOffset_ = true;\r\n      } // override settings for metadata only segments\r\n\r\n\r\n      segmentInfo.timingInfo = {\r\n        start: 0\r\n      };\r\n      segmentInfo.waitingOnAppends++;\r\n\r\n      if (!this.isPendingTimestampOffset_) {\r\n        // update the timestampoffset\r\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\r\n        // no video/audio data.\r\n\r\n        this.processMetadataQueue_();\r\n      } // append is \"done\" instantly with no data.\r\n\r\n\r\n      this.checkAppendsDone_(segmentInfo);\r\n      return;\r\n    } // Since source updater could call back synchronously, do the increments first.\r\n\r\n\r\n    if (waitForVideo) {\r\n      segmentInfo.waitingOnAppends++;\r\n    }\r\n\r\n    if (waitForAudio) {\r\n      segmentInfo.waitingOnAppends++;\r\n    }\r\n\r\n    if (waitForVideo) {\r\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\r\n    }\r\n\r\n    if (waitForAudio) {\r\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\r\n    }\r\n  };\r\n\r\n  _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\r\n    if (this.checkForAbort_(segmentInfo.requestId)) {\r\n      return;\r\n    }\r\n\r\n    segmentInfo.waitingOnAppends--;\r\n\r\n    if (segmentInfo.waitingOnAppends === 0) {\r\n      this.handleAppendsDone_();\r\n    }\r\n  };\r\n\r\n  _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\r\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\r\n\r\n    if (illegalMediaSwitchError) {\r\n      this.error({\r\n        message: illegalMediaSwitchError,\r\n        blacklistDuration: Infinity\r\n      });\r\n      this.trigger('error');\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\r\n    if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\r\n    // priority, timing-wise, so we must wait\r\n    typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\r\n    segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\r\n    this.loaderType_ !== 'main') {\r\n      return;\r\n    }\r\n\r\n    var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\r\n    // the timing info here comes from video. In the event that the audio is longer than\r\n    // the video, this will trim the start of the audio.\r\n    // This also trims any offset from 0 at the beginning of the media\r\n\r\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\r\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\r\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\r\n      timingInfo: segmentInfo.timingInfo\r\n    }); // In the event that there are part segment downloads, each will try to update the\r\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\r\n    // future (within the same segment), however, there may be a better way to handle it.\r\n\r\n    segmentInfo.changedTimestampOffset = true;\r\n\r\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\r\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\r\n      didChange = true;\r\n    }\r\n\r\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\r\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\r\n      didChange = true;\r\n    }\r\n\r\n    if (didChange) {\r\n      this.trigger('timestampoffset');\r\n    }\r\n  };\r\n\r\n  _proto.getSegmentStartTimeForTimestampOffsetCalculation_ = function getSegmentStartTimeForTimestampOffsetCalculation_(_ref10) {\r\n    var videoTimingInfo = _ref10.videoTimingInfo,\r\n        audioTimingInfo = _ref10.audioTimingInfo,\r\n        timingInfo = _ref10.timingInfo;\r\n\r\n    if (!this.useDtsForTimestampOffset_) {\r\n      return timingInfo.start;\r\n    }\r\n\r\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\r\n      return videoTimingInfo.transmuxedDecodeStart;\r\n    } // handle audio only\r\n\r\n\r\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\r\n      return audioTimingInfo.transmuxedDecodeStart;\r\n    } // handle content not transmuxed (e.g., MP4)\r\n\r\n\r\n    return timingInfo.start;\r\n  };\r\n\r\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\r\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\r\n    var trackInfo = this.getMediaInfo_();\r\n    var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\r\n    var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\r\n\r\n    if (!prioritizedTimingInfo) {\r\n      return;\r\n    }\r\n\r\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\r\n    // current example is the case of fmp4), so use the rough duration to calculate an\r\n    // end time.\r\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\r\n  }\r\n  /**\r\n   * callback to run when appendBuffer is finished. detects if we are\r\n   * in a good state to do things with the data we got, or if we need\r\n   * to wait for more\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleAppendsDone_ = function handleAppendsDone_() {\r\n    // appendsdone can cause an abort\r\n    if (this.pendingSegment_) {\r\n      this.trigger('appendsdone');\r\n    }\r\n\r\n    if (!this.pendingSegment_) {\r\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\r\n      // all appending cases?\r\n\r\n      if (!this.paused()) {\r\n        this.monitorBuffer_();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\r\n    // best to wait until all appends are done so we're sure that the primary media is\r\n    // finished (and we have its end time).\r\n\r\n    this.updateTimingInfoEnd_(segmentInfo);\r\n\r\n    if (this.shouldSaveSegmentTimingInfo_) {\r\n      // Timeline mappings should only be saved for the main loader. This is for multiple\r\n      // reasons:\r\n      //\r\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\r\n      //    and the main loader try to save the timeline mapping, whichever comes later\r\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\r\n      //    same, however, it breaks for (2)\r\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\r\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\r\n      //    the mapping will be off for one of the streams, dependent on which one was\r\n      //    first saved (see (1)).\r\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\r\n      //\r\n      // Since the audio loader will wait for the main loader to load the first segment,\r\n      // the main loader will save the first timeline mapping, and ensure that there won't\r\n      // be a case where audio loads two segments without saving a mapping (thus leading\r\n      // to missing segment timing info).\r\n      this.syncController_.saveSegmentTimingInfo({\r\n        segmentInfo: segmentInfo,\r\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\r\n      });\r\n    }\r\n\r\n    var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\r\n\r\n    if (segmentDurationMessage) {\r\n      if (segmentDurationMessage.severity === 'warn') {\r\n        videojs.log.warn(segmentDurationMessage.message);\r\n      } else {\r\n        this.logger_(segmentDurationMessage.message);\r\n      }\r\n    }\r\n\r\n    this.recordThroughput_(segmentInfo);\r\n    this.pendingSegment_ = null;\r\n    this.state = 'READY';\r\n\r\n    if (segmentInfo.isSyncRequest) {\r\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\r\n      // then it was not the correct segment.\r\n      // throw it away and use the data it gave us\r\n      // to get the correct one.\r\n\r\n      if (!segmentInfo.hasAppendedData_) {\r\n        this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\r\n    this.addSegmentMetadataCue_(segmentInfo);\r\n    this.fetchAtBuffer_ = true;\r\n\r\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\r\n      this.timelineChangeController_.lastTimelineChange({\r\n        type: this.loaderType_,\r\n        from: this.currentTimeline_,\r\n        to: segmentInfo.timeline\r\n      }); // If audio is not disabled, the main segment loader is responsible for updating\r\n      // the audio timeline as well. If the content is video only, this won't have any\r\n      // impact.\r\n\r\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\r\n        this.timelineChangeController_.lastTimelineChange({\r\n          type: 'audio',\r\n          from: this.currentTimeline_,\r\n          to: segmentInfo.timeline\r\n        });\r\n      }\r\n    }\r\n\r\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\r\n    // the following conditional otherwise it may consider this a bad \"guess\"\r\n    // and attempt to resync when the post-update seekable window and live\r\n    // point would mean that this was the perfect segment to fetch\r\n\r\n    this.trigger('syncinfoupdate');\r\n    var segment = segmentInfo.segment;\r\n    var part = segmentInfo.part;\r\n    var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\r\n    var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\r\n    // the currentTime_ that means that our conservative guess was too conservative.\r\n    // In that case, reset the loader state so that we try to use any information gained\r\n    // from the previous request to create a new, more accurate, sync-point.\r\n\r\n    if (badSegmentGuess || badPartGuess) {\r\n      this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\r\n      this.resetEverything();\r\n      return;\r\n    }\r\n\r\n    var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\r\n    // and conservatively guess\r\n\r\n    if (isWalkingForward) {\r\n      this.trigger('bandwidthupdate');\r\n    }\r\n\r\n    this.trigger('progress');\r\n    this.mediaIndex = segmentInfo.mediaIndex;\r\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\r\n    // buffer, end the stream. this ensures the \"ended\" event will\r\n    // fire if playback reaches that point.\r\n\r\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\r\n      this.endOfStream();\r\n    } // used for testing\r\n\r\n\r\n    this.trigger('appended');\r\n\r\n    if (segmentInfo.hasAppendedData_) {\r\n      this.mediaAppends++;\r\n    }\r\n\r\n    if (!this.paused()) {\r\n      this.monitorBuffer_();\r\n    }\r\n  }\r\n  /**\r\n   * Records the current throughput of the decrypt, transmux, and append\r\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\r\n   * moving average of the throughput. `throughput.count` is the number of\r\n   * data points in the average.\r\n   *\r\n   * @private\r\n   * @param {Object} segmentInfo the object returned by loadSegment\r\n   */\r\n  ;\r\n\r\n  _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\r\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\r\n      this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\r\n      return;\r\n    }\r\n\r\n    var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\r\n    // by zero in the case where the throughput is ridiculously high\r\n\r\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\r\n\r\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\r\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\r\n\r\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\r\n  }\r\n  /**\r\n   * Adds a cue to the segment-metadata track with some metadata information about the\r\n   * segment\r\n   *\r\n   * @private\r\n   * @param {Object} segmentInfo\r\n   *        the object returned by loadSegment\r\n   * @method addSegmentMetadataCue_\r\n   */\r\n  ;\r\n\r\n  _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\r\n    if (!this.segmentMetadataTrack_) {\r\n      return;\r\n    }\r\n\r\n    var segment = segmentInfo.segment;\r\n    var start = segment.start;\r\n    var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\r\n\r\n    if (!finite(start) || !finite(end)) {\r\n      return;\r\n    }\r\n\r\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\r\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\r\n    var value = {\r\n      custom: segment.custom,\r\n      dateTimeObject: segment.dateTimeObject,\r\n      dateTimeString: segment.dateTimeString,\r\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\r\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\r\n      codecs: segmentInfo.playlist.attributes.CODECS,\r\n      byteLength: segmentInfo.byteLength,\r\n      uri: segmentInfo.uri,\r\n      timeline: segmentInfo.timeline,\r\n      playlist: segmentInfo.playlist.id,\r\n      start: start,\r\n      end: end\r\n    };\r\n    var data = JSON.stringify(value);\r\n    var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\r\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\r\n\r\n    cue.value = value;\r\n    this.segmentMetadataTrack_.addCue(cue);\r\n  };\r\n\r\n  return SegmentLoader;\r\n}(videojs.EventTarget);\r\n\r\nfunction noop() {}\r\n\r\nvar toTitleCase = function toTitleCase(string) {\r\n  if (typeof string !== 'string') {\r\n    return string;\r\n  }\r\n\r\n  return string.replace(/./, function (w) {\r\n    return w.toUpperCase();\r\n  });\r\n};\r\n\r\nvar bufferTypes = ['video', 'audio'];\r\n\r\nvar _updating = function updating(type, sourceUpdater) {\r\n  var sourceBuffer = sourceUpdater[type + \"Buffer\"];\r\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\r\n};\r\n\r\nvar nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\r\n  for (var i = 0; i < queue.length; i++) {\r\n    var queueEntry = queue[i];\r\n\r\n    if (queueEntry.type === 'mediaSource') {\r\n      // If the next entry is a media source entry (uses multiple source buffers), block\r\n      // processing to allow it to go through first.\r\n      return null;\r\n    }\r\n\r\n    if (queueEntry.type === type) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nvar shiftQueue = function shiftQueue(type, sourceUpdater) {\r\n  if (sourceUpdater.queue.length === 0) {\r\n    return;\r\n  }\r\n\r\n  var queueIndex = 0;\r\n  var queueEntry = sourceUpdater.queue[queueIndex];\r\n\r\n  if (queueEntry.type === 'mediaSource') {\r\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\r\n      sourceUpdater.queue.shift();\r\n      queueEntry.action(sourceUpdater);\r\n\r\n      if (queueEntry.doneFn) {\r\n        queueEntry.doneFn();\r\n      } // Only specific source buffer actions must wait for async updateend events. Media\r\n      // Source actions process synchronously. Therefore, both audio and video source\r\n      // buffers are now clear to process the next queue entries.\r\n\r\n\r\n      shiftQueue('audio', sourceUpdater);\r\n      shiftQueue('video', sourceUpdater);\r\n    } // Media Source actions require both source buffers, so if the media source action\r\n    // couldn't process yet (because one or both source buffers are busy), block other\r\n    // queue actions until both are available and the media source action can process.\r\n\r\n\r\n    return;\r\n  }\r\n\r\n  if (type === 'mediaSource') {\r\n    // If the queue was shifted by a media source action (this happens when pushing a\r\n    // media source action onto the queue), then it wasn't from an updateend event from an\r\n    // audio or video source buffer, so there's no change from previous state, and no\r\n    // processing should be done.\r\n    return;\r\n  } // Media source queue entries don't need to consider whether the source updater is\r\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\r\n  // source buffer queue entries do.\r\n\r\n\r\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\r\n    return;\r\n  }\r\n\r\n  if (queueEntry.type !== type) {\r\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\r\n\r\n    if (queueIndex === null) {\r\n      // Either there's no queue entry that uses this source buffer type in the queue, or\r\n      // there's a media source queue entry before the next entry of this type, in which\r\n      // case wait for that action to process first.\r\n      return;\r\n    }\r\n\r\n    queueEntry = sourceUpdater.queue[queueIndex];\r\n  }\r\n\r\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\r\n  //\r\n  // The queue pending operation must be set before the action is performed in the event\r\n  // that the action results in a synchronous event that is acted upon. For instance, if\r\n  // an exception is thrown that can be handled, it's possible that new actions will be\r\n  // appended to an empty queue and immediately executed, but would not have the correct\r\n  // pending information if this property was set after the action was performed.\r\n\r\n  sourceUpdater.queuePending[type] = queueEntry;\r\n  queueEntry.action(type, sourceUpdater);\r\n\r\n  if (!queueEntry.doneFn) {\r\n    // synchronous operation, process next entry\r\n    sourceUpdater.queuePending[type] = null;\r\n    shiftQueue(type, sourceUpdater);\r\n    return;\r\n  }\r\n};\r\n\r\nvar cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\r\n  var buffer = sourceUpdater[type + \"Buffer\"];\r\n  var titleType = toTitleCase(type);\r\n\r\n  if (!buffer) {\r\n    return;\r\n  }\r\n\r\n  buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\r\n  buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\r\n  sourceUpdater.codecs[type] = null;\r\n  sourceUpdater[type + \"Buffer\"] = null;\r\n};\r\n\r\nvar inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\r\n  return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\r\n};\r\n\r\nvar actions = {\r\n  appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\r\n    return function (type, sourceUpdater) {\r\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\r\n      // or the media source does not contain this source buffer.\r\n\r\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\r\n\r\n      try {\r\n        sourceBuffer.appendBuffer(bytes);\r\n      } catch (e) {\r\n        sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\r\n        sourceUpdater.queuePending[type] = null;\r\n        onError(e);\r\n      }\r\n    };\r\n  },\r\n  remove: function remove(start, end) {\r\n    return function (type, sourceUpdater) {\r\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\r\n      // or the media source does not contain this source buffer.\r\n\r\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\r\n\r\n      try {\r\n        sourceBuffer.remove(start, end);\r\n      } catch (e) {\r\n        sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\r\n      }\r\n    };\r\n  },\r\n  timestampOffset: function timestampOffset(offset) {\r\n    return function (type, sourceUpdater) {\r\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\r\n      // or the media source does not contain this source buffer.\r\n\r\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\r\n      sourceBuffer.timestampOffset = offset;\r\n    };\r\n  },\r\n  callback: function callback(_callback) {\r\n    return function (type, sourceUpdater) {\r\n      _callback();\r\n    };\r\n  },\r\n  endOfStream: function endOfStream(error) {\r\n    return function (sourceUpdater) {\r\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\r\n\r\n      try {\r\n        sourceUpdater.mediaSource.endOfStream(error);\r\n      } catch (e) {\r\n        videojs.log.warn('Failed to call media source endOfStream', e);\r\n      }\r\n    };\r\n  },\r\n  duration: function duration(_duration) {\r\n    return function (sourceUpdater) {\r\n      sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\r\n\r\n      try {\r\n        sourceUpdater.mediaSource.duration = _duration;\r\n      } catch (e) {\r\n        videojs.log.warn('Failed to set media source duration', e);\r\n      }\r\n    };\r\n  },\r\n  abort: function abort() {\r\n    return function (type, sourceUpdater) {\r\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\r\n        return;\r\n      }\r\n\r\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\r\n      // or the media source does not contain this source buffer.\r\n\r\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\r\n\r\n      try {\r\n        sourceBuffer.abort();\r\n      } catch (e) {\r\n        videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\r\n      }\r\n    };\r\n  },\r\n  addSourceBuffer: function addSourceBuffer(type, codec) {\r\n    return function (sourceUpdater) {\r\n      var titleType = toTitleCase(type);\r\n      var mime = getMimeForCodec(codec);\r\n      sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\r\n      var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\r\n      sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\r\n      sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\r\n      sourceUpdater.codecs[type] = codec;\r\n      sourceUpdater[type + \"Buffer\"] = sourceBuffer;\r\n    };\r\n  },\r\n  removeSourceBuffer: function removeSourceBuffer(type) {\r\n    return function (sourceUpdater) {\r\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\r\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\r\n      // or the media source does not contain this source buffer.\r\n\r\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\r\n\r\n      try {\r\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\r\n      } catch (e) {\r\n        videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\r\n      }\r\n    };\r\n  },\r\n  changeType: function changeType(codec) {\r\n    return function (type, sourceUpdater) {\r\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\r\n      var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\r\n      // or the media source does not contain this source buffer.\r\n\r\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\r\n        return;\r\n      } // do not update codec if we don't need to.\r\n\r\n\r\n      if (sourceUpdater.codecs[type] === codec) {\r\n        return;\r\n      }\r\n\r\n      sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\r\n      sourceBuffer.changeType(mime);\r\n      sourceUpdater.codecs[type] = codec;\r\n    };\r\n  }\r\n};\r\n\r\nvar pushQueue = function pushQueue(_ref) {\r\n  var type = _ref.type,\r\n      sourceUpdater = _ref.sourceUpdater,\r\n      action = _ref.action,\r\n      doneFn = _ref.doneFn,\r\n      name = _ref.name;\r\n  sourceUpdater.queue.push({\r\n    type: type,\r\n    action: action,\r\n    doneFn: doneFn,\r\n    name: name\r\n  });\r\n  shiftQueue(type, sourceUpdater);\r\n};\r\n\r\nvar onUpdateend = function onUpdateend(type, sourceUpdater) {\r\n  return function (e) {\r\n    // Although there should, in theory, be a pending action for any updateend receieved,\r\n    // there are some actions that may trigger updateend events without set definitions in\r\n    // the w3c spec. For instance, setting the duration on the media source may trigger\r\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\r\n    // if we encounter an updateend without a corresponding pending action from our queue\r\n    // for that source buffer type, process the next action.\r\n    if (sourceUpdater.queuePending[type]) {\r\n      var doneFn = sourceUpdater.queuePending[type].doneFn;\r\n      sourceUpdater.queuePending[type] = null;\r\n\r\n      if (doneFn) {\r\n        // if there's an error, report it\r\n        doneFn(sourceUpdater[type + \"Error_\"]);\r\n      }\r\n    }\r\n\r\n    shiftQueue(type, sourceUpdater);\r\n  };\r\n};\r\n/**\r\n * A queue of callbacks to be serialized and applied when a\r\n * MediaSource and its associated SourceBuffers are not in the\r\n * updating state. It is used by the segment loader to update the\r\n * underlying SourceBuffers when new data is loaded, for instance.\r\n *\r\n * @class SourceUpdater\r\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\r\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\r\n */\r\n\r\n\r\nvar SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\r\n  _inheritsLoose(SourceUpdater, _videojs$EventTarget);\r\n\r\n  function SourceUpdater(mediaSource) {\r\n    var _this;\r\n\r\n    _this = _videojs$EventTarget.call(this) || this;\r\n    _this.mediaSource = mediaSource;\r\n\r\n    _this.sourceopenListener_ = function () {\r\n      return shiftQueue('mediaSource', _assertThisInitialized(_this));\r\n    };\r\n\r\n    _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\r\n\r\n    _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\r\n\r\n    _this.audioTimestampOffset_ = 0;\r\n    _this.videoTimestampOffset_ = 0;\r\n    _this.queue = [];\r\n    _this.queuePending = {\r\n      audio: null,\r\n      video: null\r\n    };\r\n    _this.delayedAudioAppendQueue_ = [];\r\n    _this.videoAppendQueued_ = false;\r\n    _this.codecs = {};\r\n    _this.onVideoUpdateEnd_ = onUpdateend('video', _assertThisInitialized(_this));\r\n    _this.onAudioUpdateEnd_ = onUpdateend('audio', _assertThisInitialized(_this));\r\n\r\n    _this.onVideoError_ = function (e) {\r\n      // used for debugging\r\n      _this.videoError_ = e;\r\n    };\r\n\r\n    _this.onAudioError_ = function (e) {\r\n      // used for debugging\r\n      _this.audioError_ = e;\r\n    };\r\n\r\n    _this.createdSourceBuffers_ = false;\r\n    _this.initializedEme_ = false;\r\n    _this.triggeredReady_ = false;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = SourceUpdater.prototype;\r\n\r\n  _proto.initializedEme = function initializedEme() {\r\n    this.initializedEme_ = true;\r\n    this.triggerReady();\r\n  };\r\n\r\n  _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\r\n    // if false, likely waiting on one of the segment loaders to get enough data to create\r\n    // source buffers\r\n    return this.createdSourceBuffers_;\r\n  };\r\n\r\n  _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\r\n    return this.initializedEme_;\r\n  };\r\n\r\n  _proto.ready = function ready() {\r\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\r\n  };\r\n\r\n  _proto.createSourceBuffers = function createSourceBuffers(codecs) {\r\n    if (this.hasCreatedSourceBuffers()) {\r\n      // already created them before\r\n      return;\r\n    } // the intial addOrChangeSourceBuffers will always be\r\n    // two add buffers.\r\n\r\n\r\n    this.addOrChangeSourceBuffers(codecs);\r\n    this.createdSourceBuffers_ = true;\r\n    this.trigger('createdsourcebuffers');\r\n    this.triggerReady();\r\n  };\r\n\r\n  _proto.triggerReady = function triggerReady() {\r\n    // only allow ready to be triggered once, this prevents the case\r\n    // where:\r\n    // 1. we trigger createdsourcebuffers\r\n    // 2. ie 11 synchronously initializates eme\r\n    // 3. the synchronous initialization causes us to trigger ready\r\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\r\n    if (this.ready() && !this.triggeredReady_) {\r\n      this.triggeredReady_ = true;\r\n      this.trigger('ready');\r\n    }\r\n  }\r\n  /**\r\n   * Add a type of source buffer to the media source.\r\n   *\r\n   * @param {string} type\r\n   *        The type of source buffer to add.\r\n   *\r\n   * @param {string} codec\r\n   *        The codec to add the source buffer with.\r\n   */\r\n  ;\r\n\r\n  _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\r\n    pushQueue({\r\n      type: 'mediaSource',\r\n      sourceUpdater: this,\r\n      action: actions.addSourceBuffer(type, codec),\r\n      name: 'addSourceBuffer'\r\n    });\r\n  }\r\n  /**\r\n   * call abort on a source buffer.\r\n   *\r\n   * @param {string} type\r\n   *        The type of source buffer to call abort on.\r\n   */\r\n  ;\r\n\r\n  _proto.abort = function abort(type) {\r\n    pushQueue({\r\n      type: type,\r\n      sourceUpdater: this,\r\n      action: actions.abort(type),\r\n      name: 'abort'\r\n    });\r\n  }\r\n  /**\r\n   * Call removeSourceBuffer and remove a specific type\r\n   * of source buffer on the mediaSource.\r\n   *\r\n   * @param {string} type\r\n   *        The type of source buffer to remove.\r\n   */\r\n  ;\r\n\r\n  _proto.removeSourceBuffer = function removeSourceBuffer(type) {\r\n    if (!this.canRemoveSourceBuffer()) {\r\n      videojs.log.error('removeSourceBuffer is not supported!');\r\n      return;\r\n    }\r\n\r\n    pushQueue({\r\n      type: 'mediaSource',\r\n      sourceUpdater: this,\r\n      action: actions.removeSourceBuffer(type),\r\n      name: 'removeSourceBuffer'\r\n    });\r\n  }\r\n  /**\r\n   * Whether or not the removeSourceBuffer function is supported\r\n   * on the mediaSource.\r\n   *\r\n   * @return {boolean}\r\n   *          if removeSourceBuffer can be called.\r\n   */\r\n  ;\r\n\r\n  _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\r\n    // IE reports that it supports removeSourceBuffer, but often throws\r\n    // errors when attempting to use the function. So we report that it\r\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\r\n    // throws errors, so we report that it does not support this as well.\r\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\r\n  }\r\n  /**\r\n   * Whether or not the changeType function is supported\r\n   * on our SourceBuffers.\r\n   *\r\n   * @return {boolean}\r\n   *         if changeType can be called.\r\n   */\r\n  ;\r\n\r\n  SourceUpdater.canChangeType = function canChangeType() {\r\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\r\n  }\r\n  /**\r\n   * Whether or not the changeType function is supported\r\n   * on our SourceBuffers.\r\n   *\r\n   * @return {boolean}\r\n   *         if changeType can be called.\r\n   */\r\n  ;\r\n\r\n  _proto.canChangeType = function canChangeType() {\r\n    return this.constructor.canChangeType();\r\n  }\r\n  /**\r\n   * Call the changeType function on a source buffer, given the code and type.\r\n   *\r\n   * @param {string} type\r\n   *        The type of source buffer to call changeType on.\r\n   *\r\n   * @param {string} codec\r\n   *        The codec string to change type with on the source buffer.\r\n   */\r\n  ;\r\n\r\n  _proto.changeType = function changeType(type, codec) {\r\n    if (!this.canChangeType()) {\r\n      videojs.log.error('changeType is not supported!');\r\n      return;\r\n    }\r\n\r\n    pushQueue({\r\n      type: type,\r\n      sourceUpdater: this,\r\n      action: actions.changeType(codec),\r\n      name: 'changeType'\r\n    });\r\n  }\r\n  /**\r\n   * Add source buffers with a codec or, if they are already created,\r\n   * call changeType on source buffers using changeType.\r\n   *\r\n   * @param {Object} codecs\r\n   *        Codecs to switch to\r\n   */\r\n  ;\r\n\r\n  _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\r\n    var _this2 = this;\r\n\r\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\r\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\r\n    }\r\n\r\n    Object.keys(codecs).forEach(function (type) {\r\n      var codec = codecs[type];\r\n\r\n      if (!_this2.hasCreatedSourceBuffers()) {\r\n        return _this2.addSourceBuffer(type, codec);\r\n      }\r\n\r\n      if (_this2.canChangeType()) {\r\n        _this2.changeType(type, codec);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Queue an update to append an ArrayBuffer.\r\n   *\r\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\r\n   * @param {Function} done the function to call when done\r\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\r\n   */\r\n  ;\r\n\r\n  _proto.appendBuffer = function appendBuffer(options, doneFn) {\r\n    var _this3 = this;\r\n\r\n    var segmentInfo = options.segmentInfo,\r\n        type = options.type,\r\n        bytes = options.bytes;\r\n    this.processedAppend_ = true;\r\n\r\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\r\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\r\n      this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\r\n      return;\r\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\r\n    // not be fired. This means that the queue will be blocked until the next action\r\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\r\n    // these errors by calling the doneFn with the specific error.\r\n\r\n\r\n    var onError = doneFn;\r\n    pushQueue({\r\n      type: type,\r\n      sourceUpdater: this,\r\n      action: actions.appendBuffer(bytes, segmentInfo || {\r\n        mediaIndex: -1\r\n      }, onError),\r\n      doneFn: doneFn,\r\n      name: 'appendBuffer'\r\n    });\r\n\r\n    if (type === 'video') {\r\n      this.videoAppendQueued_ = true;\r\n\r\n      if (!this.delayedAudioAppendQueue_.length) {\r\n        return;\r\n      }\r\n\r\n      var queue = this.delayedAudioAppendQueue_.slice();\r\n      this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\r\n      this.delayedAudioAppendQueue_.length = 0;\r\n      queue.forEach(function (que) {\r\n        _this3.appendBuffer.apply(_this3, que);\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Get the audio buffer's buffered timerange.\r\n   *\r\n   * @return {TimeRange}\r\n   *         The audio buffer's buffered time range\r\n   */\r\n  ;\r\n\r\n  _proto.audioBuffered = function audioBuffered() {\r\n    // no media source/source buffer or it isn't in the media sources\r\n    // source buffer list\r\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\r\n      return videojs.createTimeRange();\r\n    }\r\n\r\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\r\n  }\r\n  /**\r\n   * Get the video buffer's buffered timerange.\r\n   *\r\n   * @return {TimeRange}\r\n   *         The video buffer's buffered time range\r\n   */\r\n  ;\r\n\r\n  _proto.videoBuffered = function videoBuffered() {\r\n    // no media source/source buffer or it isn't in the media sources\r\n    // source buffer list\r\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\r\n      return videojs.createTimeRange();\r\n    }\r\n\r\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\r\n  }\r\n  /**\r\n   * Get a combined video/audio buffer's buffered timerange.\r\n   *\r\n   * @return {TimeRange}\r\n   *         the combined time range\r\n   */\r\n  ;\r\n\r\n  _proto.buffered = function buffered() {\r\n    var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\r\n    var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\r\n\r\n    if (audio && !video) {\r\n      return this.audioBuffered();\r\n    }\r\n\r\n    if (video && !audio) {\r\n      return this.videoBuffered();\r\n    }\r\n\r\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\r\n  }\r\n  /**\r\n   * Add a callback to the queue that will set duration on the mediaSource.\r\n   *\r\n   * @param {number} duration\r\n   *        The duration to set\r\n   *\r\n   * @param {Function} [doneFn]\r\n   *        function to run after duration has been set.\r\n   */\r\n  ;\r\n\r\n  _proto.setDuration = function setDuration(duration, doneFn) {\r\n    if (doneFn === void 0) {\r\n      doneFn = noop;\r\n    } // In order to set the duration on the media source, it's necessary to wait for all\r\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\r\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\r\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\r\n\r\n\r\n    pushQueue({\r\n      type: 'mediaSource',\r\n      sourceUpdater: this,\r\n      action: actions.duration(duration),\r\n      name: 'duration',\r\n      doneFn: doneFn\r\n    });\r\n  }\r\n  /**\r\n   * Add a mediaSource endOfStream call to the queue\r\n   *\r\n   * @param {Error} [error]\r\n   *        Call endOfStream with an error\r\n   *\r\n   * @param {Function} [doneFn]\r\n   *        A function that should be called when the\r\n   *        endOfStream call has finished.\r\n   */\r\n  ;\r\n\r\n  _proto.endOfStream = function endOfStream(error, doneFn) {\r\n    if (error === void 0) {\r\n      error = null;\r\n    }\r\n\r\n    if (doneFn === void 0) {\r\n      doneFn = noop;\r\n    }\r\n\r\n    if (typeof error !== 'string') {\r\n      error = undefined;\r\n    } // In order to set the duration on the media source, it's necessary to wait for all\r\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\r\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\r\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\r\n\r\n\r\n    pushQueue({\r\n      type: 'mediaSource',\r\n      sourceUpdater: this,\r\n      action: actions.endOfStream(error),\r\n      name: 'endOfStream',\r\n      doneFn: doneFn\r\n    });\r\n  }\r\n  /**\r\n   * Queue an update to remove a time range from the buffer.\r\n   *\r\n   * @param {number} start where to start the removal\r\n   * @param {number} end where to end the removal\r\n   * @param {Function} [done=noop] optional callback to be executed when the remove\r\n   * operation is complete\r\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\r\n   */\r\n  ;\r\n\r\n  _proto.removeAudio = function removeAudio(start, end, done) {\r\n    if (done === void 0) {\r\n      done = noop;\r\n    }\r\n\r\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\r\n      done();\r\n      return;\r\n    }\r\n\r\n    pushQueue({\r\n      type: 'audio',\r\n      sourceUpdater: this,\r\n      action: actions.remove(start, end),\r\n      doneFn: done,\r\n      name: 'remove'\r\n    });\r\n  }\r\n  /**\r\n   * Queue an update to remove a time range from the buffer.\r\n   *\r\n   * @param {number} start where to start the removal\r\n   * @param {number} end where to end the removal\r\n   * @param {Function} [done=noop] optional callback to be executed when the remove\r\n   * operation is complete\r\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\r\n   */\r\n  ;\r\n\r\n  _proto.removeVideo = function removeVideo(start, end, done) {\r\n    if (done === void 0) {\r\n      done = noop;\r\n    }\r\n\r\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\r\n      done();\r\n      return;\r\n    }\r\n\r\n    pushQueue({\r\n      type: 'video',\r\n      sourceUpdater: this,\r\n      action: actions.remove(start, end),\r\n      doneFn: done,\r\n      name: 'remove'\r\n    });\r\n  }\r\n  /**\r\n   * Whether the underlying sourceBuffer is updating or not\r\n   *\r\n   * @return {boolean} the updating status of the SourceBuffer\r\n   */\r\n  ;\r\n\r\n  _proto.updating = function updating() {\r\n    // the audio/video source buffer is updating\r\n    if (_updating('audio', this) || _updating('video', this)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Set/get the timestampoffset on the audio SourceBuffer\r\n   *\r\n   * @return {number} the timestamp offset\r\n   */\r\n  ;\r\n\r\n  _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\r\n    if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\r\n    this.audioTimestampOffset_ !== offset) {\r\n      pushQueue({\r\n        type: 'audio',\r\n        sourceUpdater: this,\r\n        action: actions.timestampOffset(offset),\r\n        name: 'timestampOffset'\r\n      });\r\n      this.audioTimestampOffset_ = offset;\r\n    }\r\n\r\n    return this.audioTimestampOffset_;\r\n  }\r\n  /**\r\n   * Set/get the timestampoffset on the video SourceBuffer\r\n   *\r\n   * @return {number} the timestamp offset\r\n   */\r\n  ;\r\n\r\n  _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\r\n    if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\r\n    this.videoTimestampOffset !== offset) {\r\n      pushQueue({\r\n        type: 'video',\r\n        sourceUpdater: this,\r\n        action: actions.timestampOffset(offset),\r\n        name: 'timestampOffset'\r\n      });\r\n      this.videoTimestampOffset_ = offset;\r\n    }\r\n\r\n    return this.videoTimestampOffset_;\r\n  }\r\n  /**\r\n   * Add a function to the queue that will be called\r\n   * when it is its turn to run in the audio queue.\r\n   *\r\n   * @param {Function} callback\r\n   *        The callback to queue.\r\n   */\r\n  ;\r\n\r\n  _proto.audioQueueCallback = function audioQueueCallback(callback) {\r\n    if (!this.audioBuffer) {\r\n      return;\r\n    }\r\n\r\n    pushQueue({\r\n      type: 'audio',\r\n      sourceUpdater: this,\r\n      action: actions.callback(callback),\r\n      name: 'callback'\r\n    });\r\n  }\r\n  /**\r\n   * Add a function to the queue that will be called\r\n   * when it is its turn to run in the video queue.\r\n   *\r\n   * @param {Function} callback\r\n   *        The callback to queue.\r\n   */\r\n  ;\r\n\r\n  _proto.videoQueueCallback = function videoQueueCallback(callback) {\r\n    if (!this.videoBuffer) {\r\n      return;\r\n    }\r\n\r\n    pushQueue({\r\n      type: 'video',\r\n      sourceUpdater: this,\r\n      action: actions.callback(callback),\r\n      name: 'callback'\r\n    });\r\n  }\r\n  /**\r\n   * dispose of the source updater and the underlying sourceBuffer\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    var _this4 = this;\r\n\r\n    this.trigger('dispose');\r\n    bufferTypes.forEach(function (type) {\r\n      _this4.abort(type);\r\n\r\n      if (_this4.canRemoveSourceBuffer()) {\r\n        _this4.removeSourceBuffer(type);\r\n      } else {\r\n        _this4[type + \"QueueCallback\"](function () {\r\n          return cleanupBuffer(type, _this4);\r\n        });\r\n      }\r\n    });\r\n    this.videoAppendQueued_ = false;\r\n    this.delayedAudioAppendQueue_.length = 0;\r\n\r\n    if (this.sourceopenListener_) {\r\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\r\n    }\r\n\r\n    this.off();\r\n  };\r\n\r\n  return SourceUpdater;\r\n}(videojs.EventTarget);\r\n\r\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\r\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\r\n};\r\n\r\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\r\n  return _char3.charCodeAt(0);\r\n}));\r\n\r\nvar NoVttJsError = /*#__PURE__*/function (_Error) {\r\n  _inheritsLoose(NoVttJsError, _Error);\r\n\r\n  function NoVttJsError() {\r\n    return _Error.call(this, 'Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.') || this;\r\n  }\r\n\r\n  return NoVttJsError;\r\n}( /*#__PURE__*/_wrapNativeSuper(Error));\r\n/**\r\n * An object that manages segment loading and appending.\r\n *\r\n * @class VTTSegmentLoader\r\n * @param {Object} options required and optional options\r\n * @extends videojs.EventTarget\r\n */\r\n\r\n\r\nvar VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\r\n  _inheritsLoose(VTTSegmentLoader, _SegmentLoader);\r\n\r\n  function VTTSegmentLoader(settings, options) {\r\n    var _this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\r\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\r\n\r\n    _this.mediaSource_ = null;\r\n    _this.subtitlesTrack_ = null;\r\n    _this.loaderType_ = 'subtitle';\r\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\r\n    _this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\r\n    // the sync controller leads to improper behavior.\r\n\r\n    _this.shouldSaveSegmentTimingInfo_ = false;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = VTTSegmentLoader.prototype;\r\n\r\n  _proto.createTransmuxer_ = function createTransmuxer_() {\r\n    // don't need to transmux any subtitles\r\n    return null;\r\n  }\r\n  /**\r\n   * Indicates which time ranges are buffered\r\n   *\r\n   * @return {TimeRange}\r\n   *         TimeRange object representing the current buffered ranges\r\n   */\r\n  ;\r\n\r\n  _proto.buffered_ = function buffered_() {\r\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\r\n      return videojs.createTimeRanges();\r\n    }\r\n\r\n    var cues = this.subtitlesTrack_.cues;\r\n    var start = cues[0].startTime;\r\n    var end = cues[cues.length - 1].startTime;\r\n    return videojs.createTimeRanges([[start, end]]);\r\n  }\r\n  /**\r\n   * Gets and sets init segment for the provided map\r\n   *\r\n   * @param {Object} map\r\n   *        The map object representing the init segment to get or set\r\n   * @param {boolean=} set\r\n   *        If true, the init segment for the provided map should be saved\r\n   * @return {Object}\r\n   *         map object for desired init segment\r\n   */\r\n  ;\r\n\r\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\r\n    if (set === void 0) {\r\n      set = false;\r\n    }\r\n\r\n    if (!map) {\r\n      return null;\r\n    }\r\n\r\n    var id = initSegmentId(map);\r\n    var storedMap = this.initSegments_[id];\r\n\r\n    if (set && !storedMap && map.bytes) {\r\n      // append WebVTT line terminators to the media initialization segment if it exists\r\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\r\n      // requires two or more WebVTT line terminators between the WebVTT header and the\r\n      // rest of the file\r\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\r\n      var combinedSegment = new Uint8Array(combinedByteLength);\r\n      combinedSegment.set(map.bytes);\r\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\r\n      this.initSegments_[id] = storedMap = {\r\n        resolvedUri: map.resolvedUri,\r\n        byterange: map.byterange,\r\n        bytes: combinedSegment\r\n      };\r\n    }\r\n\r\n    return storedMap || map;\r\n  }\r\n  /**\r\n   * Returns true if all configuration required for loading is present, otherwise false.\r\n   *\r\n   * @return {boolean} True if the all configuration is ready for loading\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\r\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\r\n  }\r\n  /**\r\n   * Once all the starting parameters have been specified, begin\r\n   * operation. This method should only be invoked from the INIT\r\n   * state.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.init_ = function init_() {\r\n    this.state = 'READY';\r\n    this.resetEverything();\r\n    return this.monitorBuffer_();\r\n  }\r\n  /**\r\n   * Set a subtitle track on the segment loader to add subtitles to\r\n   *\r\n   * @param {TextTrack=} track\r\n   *        The text track to add loaded subtitles to\r\n   * @return {TextTrack}\r\n   *        Returns the subtitles track\r\n   */\r\n  ;\r\n\r\n  _proto.track = function track(_track) {\r\n    if (typeof _track === 'undefined') {\r\n      return this.subtitlesTrack_;\r\n    }\r\n\r\n    this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\r\n    // buffering now\r\n\r\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\r\n      this.init_();\r\n    }\r\n\r\n    return this.subtitlesTrack_;\r\n  }\r\n  /**\r\n   * Remove any data in the source buffer between start and end times\r\n   *\r\n   * @param {number} start - the start time of the region to remove from the buffer\r\n   * @param {number} end - the end time of the region to remove from the buffer\r\n   */\r\n  ;\r\n\r\n  _proto.remove = function remove(start, end) {\r\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\r\n  }\r\n  /**\r\n   * fill the buffer with segements unless the sourceBuffers are\r\n   * currently updating\r\n   *\r\n   * Note: this function should only ever be called by monitorBuffer_\r\n   * and never directly\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.fillBuffer_ = function fillBuffer_() {\r\n    var _this2 = this; // see if we need to begin loading immediately\r\n\r\n\r\n    var segmentInfo = this.chooseNextRequest_();\r\n\r\n    if (!segmentInfo) {\r\n      return;\r\n    }\r\n\r\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\r\n      // We don't have the timestamp offset that we need to sync subtitles.\r\n      // Rerun on a timestamp offset or user interaction.\r\n      var checkTimestampOffset = function checkTimestampOffset() {\r\n        _this2.state = 'READY';\r\n\r\n        if (!_this2.paused()) {\r\n          // if not paused, queue a buffer check as soon as possible\r\n          _this2.monitorBuffer_();\r\n        }\r\n      };\r\n\r\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\r\n      this.state = 'WAITING_ON_TIMELINE';\r\n      return;\r\n    }\r\n\r\n    this.loadSegment_(segmentInfo);\r\n  } // never set a timestamp offset for vtt segments.\r\n  ;\r\n\r\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\r\n    return null;\r\n  };\r\n\r\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\r\n    return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\r\n  }\r\n  /**\r\n   * Prevents the segment loader from requesting segments we know contain no subtitles\r\n   * by walking forward until we find the next segment that we don't know whether it is\r\n   * empty or not.\r\n   *\r\n   * @param {Object} segmentInfo\r\n   *        a segment info object that describes the current segment\r\n   * @return {Object}\r\n   *         a segment info object that describes the current segment\r\n   */\r\n  ;\r\n\r\n  _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\r\n    while (segmentInfo && segmentInfo.segment.empty) {\r\n      // stop at the last possible segmentInfo\r\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\r\n        segmentInfo = null;\r\n        break;\r\n      }\r\n\r\n      segmentInfo = this.generateSegmentInfo_({\r\n        playlist: segmentInfo.playlist,\r\n        mediaIndex: segmentInfo.mediaIndex + 1,\r\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\r\n        isSyncRequest: segmentInfo.isSyncRequest\r\n      });\r\n    }\r\n\r\n    return segmentInfo;\r\n  };\r\n\r\n  _proto.stopForError = function stopForError(error) {\r\n    this.error(error);\r\n    this.state = 'READY';\r\n    this.pause();\r\n    this.trigger('error');\r\n  }\r\n  /**\r\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\r\n    var _this3 = this;\r\n\r\n    if (!this.subtitlesTrack_) {\r\n      this.state = 'READY';\r\n      return;\r\n    }\r\n\r\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\r\n\r\n    if (!this.pendingSegment_) {\r\n      this.state = 'READY';\r\n      this.mediaRequestsAborted += 1;\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\r\n        this.handleTimeout_();\r\n      }\r\n\r\n      if (error.code === REQUEST_ERRORS.ABORTED) {\r\n        this.mediaRequestsAborted += 1;\r\n      } else {\r\n        this.mediaRequestsErrored += 1;\r\n      }\r\n\r\n      this.stopForError(error);\r\n      return;\r\n    }\r\n\r\n    var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\r\n    // maintain functionality between segment loaders\r\n\r\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\r\n\r\n    if (simpleSegment.key) {\r\n      this.segmentKey(simpleSegment.key, true);\r\n    }\r\n\r\n    this.state = 'APPENDING'; // used for tests\r\n\r\n    this.trigger('appending');\r\n    var segment = segmentInfo.segment;\r\n\r\n    if (segment.map) {\r\n      segment.map.bytes = simpleSegment.map.bytes;\r\n    }\r\n\r\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\r\n\r\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\r\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\r\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\r\n\r\n      this.loadVttJs().then(function () {\r\n        return _this3.segmentRequestFinished_(error, simpleSegment, result);\r\n      }, function () {\r\n        return _this3.stopForError({\r\n          message: 'Error loading vtt.js'\r\n        });\r\n      });\r\n      return;\r\n    }\r\n\r\n    segment.requested = true;\r\n\r\n    try {\r\n      this.parseVTTCues_(segmentInfo);\r\n    } catch (e) {\r\n      this.stopForError({\r\n        message: e.message\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\r\n\r\n    if (segmentInfo.cues.length) {\r\n      segmentInfo.timingInfo = {\r\n        start: segmentInfo.cues[0].startTime,\r\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\r\n      };\r\n    } else {\r\n      segmentInfo.timingInfo = {\r\n        start: segmentInfo.startOfSegment,\r\n        end: segmentInfo.startOfSegment + segmentInfo.duration\r\n      };\r\n    }\r\n\r\n    if (segmentInfo.isSyncRequest) {\r\n      this.trigger('syncinfoupdate');\r\n      this.pendingSegment_ = null;\r\n      this.state = 'READY';\r\n      return;\r\n    }\r\n\r\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\r\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\r\n    // the subtitle track\r\n\r\n    segmentInfo.cues.forEach(function (cue) {\r\n      _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\r\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\r\n    // cues to have identical time-intervals, but if the text is also identical\r\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\r\n    // \"overlaps\" VTT segments)\r\n\r\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\r\n    this.handleAppendsDone_();\r\n  };\r\n\r\n  _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\r\n    // that we do not support here.\r\n  };\r\n\r\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\r\n  }\r\n  /**\r\n   * Uses the WebVTT parser to parse the segment response\r\n   *\r\n   * @throws NoVttJsError\r\n   *\r\n   * @param {Object} segmentInfo\r\n   *        a segment info object that describes the current segment\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\r\n    var decoder;\r\n    var decodeBytesToString = false;\r\n\r\n    if (typeof window$1.WebVTT !== 'function') {\r\n      // caller is responsible for exception handling.\r\n      throw new NoVttJsError();\r\n    }\r\n\r\n    if (typeof window$1.TextDecoder === 'function') {\r\n      decoder = new window$1.TextDecoder('utf8');\r\n    } else {\r\n      decoder = window$1.WebVTT.StringDecoder();\r\n      decodeBytesToString = true;\r\n    }\r\n\r\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\r\n    segmentInfo.cues = [];\r\n    segmentInfo.timestampmap = {\r\n      MPEGTS: 0,\r\n      LOCAL: 0\r\n    };\r\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\r\n\r\n    parser.ontimestampmap = function (map) {\r\n      segmentInfo.timestampmap = map;\r\n    };\r\n\r\n    parser.onparsingerror = function (error) {\r\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\r\n    };\r\n\r\n    if (segmentInfo.segment.map) {\r\n      var mapData = segmentInfo.segment.map.bytes;\r\n\r\n      if (decodeBytesToString) {\r\n        mapData = uint8ToUtf8(mapData);\r\n      }\r\n\r\n      parser.parse(mapData);\r\n    }\r\n\r\n    var segmentData = segmentInfo.bytes;\r\n\r\n    if (decodeBytesToString) {\r\n      segmentData = uint8ToUtf8(segmentData);\r\n    }\r\n\r\n    parser.parse(segmentData);\r\n    parser.flush();\r\n  }\r\n  /**\r\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\r\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\r\n   * from the SyncController\r\n   *\r\n   * @param {Object} segmentInfo\r\n   *        a segment info object that describes the current segment\r\n   * @param {Object} mappingObj\r\n   *        object containing a mapping from TS to media time\r\n   * @param {Object} playlist\r\n   *        the playlist object containing the segment\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\r\n    var segment = segmentInfo.segment;\r\n\r\n    if (!mappingObj) {\r\n      // If the sync controller does not have a mapping of TS to Media Time for the\r\n      // timeline, then we don't have enough information to update the cue\r\n      // start/end times\r\n      return;\r\n    }\r\n\r\n    if (!segmentInfo.cues.length) {\r\n      // If there are no cues, we also do not have enough information to figure out\r\n      // segment timing. Mark that the segment contains no cues so we don't re-request\r\n      // an empty segment.\r\n      segment.empty = true;\r\n      return;\r\n    }\r\n\r\n    var timestampmap = segmentInfo.timestampmap;\r\n    var diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\r\n    segmentInfo.cues.forEach(function (cue) {\r\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\r\n      cue.startTime += diff;\r\n      cue.endTime += diff;\r\n    });\r\n\r\n    if (!playlist.syncInfo) {\r\n      var firstStart = segmentInfo.cues[0].startTime;\r\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\r\n      playlist.syncInfo = {\r\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\r\n        time: Math.min(firstStart, lastStart - segment.duration)\r\n      };\r\n    }\r\n  };\r\n\r\n  return VTTSegmentLoader;\r\n}(SegmentLoader);\r\n/**\r\n * @file ad-cue-tags.js\r\n */\r\n\r\n/**\r\n * Searches for an ad cue that overlaps with the given mediaTime\r\n *\r\n * @param {Object} track\r\n *        the track to find the cue for\r\n *\r\n * @param {number} mediaTime\r\n *        the time to find the cue at\r\n *\r\n * @return {Object|null}\r\n *         the found cue or null\r\n */\r\n\r\n\r\nvar findAdCue = function findAdCue(track, mediaTime) {\r\n  var cues = track.cues;\r\n\r\n  for (var i = 0; i < cues.length; i++) {\r\n    var cue = cues[i];\r\n\r\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\r\n      return cue;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nvar updateAdCues = function updateAdCues(media, track, offset) {\r\n  if (offset === void 0) {\r\n    offset = 0;\r\n  }\r\n\r\n  if (!media.segments) {\r\n    return;\r\n  }\r\n\r\n  var mediaTime = offset;\r\n  var cue;\r\n\r\n  for (var i = 0; i < media.segments.length; i++) {\r\n    var segment = media.segments[i];\r\n\r\n    if (!cue) {\r\n      // Since the cues will span for at least the segment duration, adding a fudge\r\n      // factor of half segment duration will prevent duplicate cues from being\r\n      // created when timing info is not exact (e.g. cue start time initialized\r\n      // at 10.006677, but next call mediaTime is 10.003332 )\r\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\r\n    }\r\n\r\n    if (cue) {\r\n      if ('cueIn' in segment) {\r\n        // Found a CUE-IN so end the cue\r\n        cue.endTime = mediaTime;\r\n        cue.adEndTime = mediaTime;\r\n        mediaTime += segment.duration;\r\n        cue = null;\r\n        continue;\r\n      }\r\n\r\n      if (mediaTime < cue.endTime) {\r\n        // Already processed this mediaTime for this cue\r\n        mediaTime += segment.duration;\r\n        continue;\r\n      } // otherwise extend cue until a CUE-IN is found\r\n\r\n\r\n      cue.endTime += segment.duration;\r\n    } else {\r\n      if ('cueOut' in segment) {\r\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\r\n        cue.adStartTime = mediaTime; // Assumes tag format to be\r\n        // #EXT-X-CUE-OUT:30\r\n\r\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\r\n        track.addCue(cue);\r\n      }\r\n\r\n      if ('cueOutCont' in segment) {\r\n        // Entered into the middle of an ad cue\r\n        // Assumes tag formate to be\r\n        // #EXT-X-CUE-OUT-CONT:10/30\r\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\r\n            adOffset = _segment$cueOutCont$s[0],\r\n            adTotal = _segment$cueOutCont$s[1];\r\n\r\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\r\n        cue.adStartTime = mediaTime - adOffset;\r\n        cue.adEndTime = cue.adStartTime + adTotal;\r\n        track.addCue(cue);\r\n      }\r\n    }\r\n\r\n    mediaTime += segment.duration;\r\n  }\r\n}; // synchronize expired playlist segments.\r\n// the max media sequence diff is 48 hours of live stream\r\n// content with two second segments. Anything larger than that\r\n// will likely be invalid.\r\n\r\n\r\nvar MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\r\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\r\n//                the equivalence display-time 0 === segment-index 0\r\n{\r\n  name: 'VOD',\r\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\r\n    if (duration !== Infinity) {\r\n      var syncPoint = {\r\n        time: 0,\r\n        segmentIndex: 0,\r\n        partIndex: null\r\n      };\r\n      return syncPoint;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\r\n{\r\n  name: 'ProgramDateTime',\r\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\r\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\r\n      return null;\r\n    }\r\n\r\n    var syncPoint = null;\r\n    var lastDistance = null;\r\n    var partsAndSegments = getPartsAndSegments(playlist);\r\n    currentTime = currentTime || 0;\r\n\r\n    for (var i = 0; i < partsAndSegments.length; i++) {\r\n      // start from the end and loop backwards for live\r\n      // or start from the front and loop forwards for non-live\r\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\r\n      var partAndSegment = partsAndSegments[index];\r\n      var segment = partAndSegment.segment;\r\n      var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\r\n\r\n      if (!datetimeMapping || !segment.dateTimeObject) {\r\n        continue;\r\n      }\r\n\r\n      var segmentTime = segment.dateTimeObject.getTime() / 1000;\r\n      var start = segmentTime + datetimeMapping; // take part duration into account.\r\n\r\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\r\n        for (var z = 0; z < partAndSegment.partIndex; z++) {\r\n          start += segment.parts[z].duration;\r\n        }\r\n      }\r\n\r\n      var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\r\n      // currentTime and can stop looking for better candidates\r\n\r\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\r\n        break;\r\n      }\r\n\r\n      lastDistance = distance;\r\n      syncPoint = {\r\n        time: start,\r\n        segmentIndex: partAndSegment.segmentIndex,\r\n        partIndex: partAndSegment.partIndex\r\n      };\r\n    }\r\n\r\n    return syncPoint;\r\n  }\r\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\r\n//                    segment in the current timeline with timing data\r\n{\r\n  name: 'Segment',\r\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\r\n    var syncPoint = null;\r\n    var lastDistance = null;\r\n    currentTime = currentTime || 0;\r\n    var partsAndSegments = getPartsAndSegments(playlist);\r\n\r\n    for (var i = 0; i < partsAndSegments.length; i++) {\r\n      // start from the end and loop backwards for live\r\n      // or start from the front and loop forwards for non-live\r\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\r\n      var partAndSegment = partsAndSegments[index];\r\n      var segment = partAndSegment.segment;\r\n      var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\r\n\r\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\r\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\r\n        // currentTime and can stop looking for better candidates\r\n\r\n        if (lastDistance !== null && lastDistance < distance) {\r\n          break;\r\n        }\r\n\r\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\r\n          lastDistance = distance;\r\n          syncPoint = {\r\n            time: start,\r\n            segmentIndex: partAndSegment.segmentIndex,\r\n            partIndex: partAndSegment.partIndex\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return syncPoint;\r\n  }\r\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\r\n//                          display-time\r\n{\r\n  name: 'Discontinuity',\r\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\r\n    var syncPoint = null;\r\n    currentTime = currentTime || 0;\r\n\r\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\r\n      var lastDistance = null;\r\n\r\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\r\n        var segmentIndex = playlist.discontinuityStarts[i];\r\n        var discontinuity = playlist.discontinuitySequence + i + 1;\r\n        var discontinuitySync = syncController.discontinuities[discontinuity];\r\n\r\n        if (discontinuitySync) {\r\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\r\n          // currentTime and can stop looking for better candidates\r\n\r\n          if (lastDistance !== null && lastDistance < distance) {\r\n            break;\r\n          }\r\n\r\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\r\n            lastDistance = distance;\r\n            syncPoint = {\r\n              time: discontinuitySync.time,\r\n              segmentIndex: segmentIndex,\r\n              partIndex: null\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return syncPoint;\r\n  }\r\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\r\n//                     segment index to display time\r\n{\r\n  name: 'Playlist',\r\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\r\n    if (playlist.syncInfo) {\r\n      var syncPoint = {\r\n        time: playlist.syncInfo.time,\r\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\r\n        partIndex: null\r\n      };\r\n      return syncPoint;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}];\r\n\r\nvar SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\r\n  _inheritsLoose(SyncController, _videojs$EventTarget);\r\n\r\n  function SyncController(options) {\r\n    var _this;\r\n\r\n    _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\r\n\r\n    _this.timelines = [];\r\n    _this.discontinuities = [];\r\n    _this.timelineToDatetimeMappings = {};\r\n    _this.logger_ = logger('SyncController');\r\n    return _this;\r\n  }\r\n  /**\r\n   * Find a sync-point for the playlist specified\r\n   *\r\n   * A sync-point is defined as a known mapping from display-time to\r\n   * a segment-index in the current playlist.\r\n   *\r\n   * @param {Playlist} playlist\r\n   *        The playlist that needs a sync-point\r\n   * @param {number} duration\r\n   *        Duration of the MediaSource (Infinite if playing a live source)\r\n   * @param {number} currentTimeline\r\n   *        The last timeline from which a segment was loaded\r\n   * @return {Object}\r\n   *          A sync-point object\r\n   */\r\n\r\n\r\n  var _proto = SyncController.prototype;\r\n\r\n  _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\r\n    var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\r\n\r\n    if (!syncPoints.length) {\r\n      // Signal that we need to attempt to get a sync-point manually\r\n      // by fetching a segment in the playlist and constructing\r\n      // a sync-point from that information\r\n      return null;\r\n    } // Now find the sync-point that is closest to the currentTime because\r\n    // that should result in the most accurate guess about which segment\r\n    // to fetch\r\n\r\n\r\n    return this.selectSyncPoint_(syncPoints, {\r\n      key: 'time',\r\n      value: currentTime\r\n    });\r\n  }\r\n  /**\r\n   * Calculate the amount of time that has expired off the playlist during playback\r\n   *\r\n   * @param {Playlist} playlist\r\n   *        Playlist object to calculate expired from\r\n   * @param {number} duration\r\n   *        Duration of the MediaSource (Infinity if playling a live source)\r\n   * @return {number|null}\r\n   *          The amount of time that has expired off the playlist during playback. Null\r\n   *          if no sync-points for the playlist can be found.\r\n   */\r\n  ;\r\n\r\n  _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\r\n    if (!playlist || !playlist.segments) {\r\n      return null;\r\n    }\r\n\r\n    var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\r\n\r\n    if (!syncPoints.length) {\r\n      return null;\r\n    }\r\n\r\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\r\n      key: 'segmentIndex',\r\n      value: 0\r\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\r\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\r\n\r\n    if (syncPoint.segmentIndex > 0) {\r\n      syncPoint.time *= -1;\r\n    }\r\n\r\n    return Math.abs(syncPoint.time + sumDurations({\r\n      defaultDuration: playlist.targetDuration,\r\n      durationList: playlist.segments,\r\n      startIndex: syncPoint.segmentIndex,\r\n      endIndex: 0\r\n    }));\r\n  }\r\n  /**\r\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\r\n   * strategies\r\n   *\r\n   * @private\r\n   * @param {Playlist} playlist\r\n   *        The playlist that needs a sync-point\r\n   * @param {number} duration\r\n   *        Duration of the MediaSource (Infinity if playing a live source)\r\n   * @param {number} currentTimeline\r\n   *        The last timeline from which a segment was loaded\r\n   * @return {Array}\r\n   *          A list of sync-point objects\r\n   */\r\n  ;\r\n\r\n  _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\r\n    var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\r\n\r\n    for (var i = 0; i < syncPointStrategies.length; i++) {\r\n      var strategy = syncPointStrategies[i];\r\n      var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\r\n\r\n      if (syncPoint) {\r\n        syncPoint.strategy = strategy.name;\r\n        syncPoints.push({\r\n          strategy: strategy.name,\r\n          syncPoint: syncPoint\r\n        });\r\n      }\r\n    }\r\n\r\n    return syncPoints;\r\n  }\r\n  /**\r\n   * Selects the sync-point nearest the specified target\r\n   *\r\n   * @private\r\n   * @param {Array} syncPoints\r\n   *        List of sync-points to select from\r\n   * @param {Object} target\r\n   *        Object specifying the property and value we are targeting\r\n   * @param {string} target.key\r\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\r\n   * @param {number} target.value\r\n   *        The value to target for the specified key.\r\n   * @return {Object}\r\n   *          The sync-point nearest the target\r\n   */\r\n  ;\r\n\r\n  _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\r\n    var bestSyncPoint = syncPoints[0].syncPoint;\r\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\r\n    var bestStrategy = syncPoints[0].strategy;\r\n\r\n    for (var i = 1; i < syncPoints.length; i++) {\r\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\r\n\r\n      if (newDistance < bestDistance) {\r\n        bestDistance = newDistance;\r\n        bestSyncPoint = syncPoints[i].syncPoint;\r\n        bestStrategy = syncPoints[i].strategy;\r\n      }\r\n    }\r\n\r\n    this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\r\n    return bestSyncPoint;\r\n  }\r\n  /**\r\n   * Save any meta-data present on the segments when segments leave\r\n   * the live window to the playlist to allow for synchronization at the\r\n   * playlist level later.\r\n   *\r\n   * @param {Playlist} oldPlaylist - The previous active playlist\r\n   * @param {Playlist} newPlaylist - The updated and most current playlist\r\n   */\r\n  ;\r\n\r\n  _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\r\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\r\n\r\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\r\n      videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\r\n      return;\r\n    } // When a segment expires from the playlist and it has a start time\r\n    // save that information as a possible sync-point reference in future\r\n\r\n\r\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\r\n      var lastRemovedSegment = oldPlaylist.segments[i];\r\n\r\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\r\n        newPlaylist.syncInfo = {\r\n          mediaSequence: oldPlaylist.mediaSequence + i,\r\n          time: lastRemovedSegment.start\r\n        };\r\n        this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\r\n        this.trigger('syncinfoupdate');\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\r\n   * before segments start to load.\r\n   *\r\n   * @param {Playlist} playlist - The currently active playlist\r\n   */\r\n  ;\r\n\r\n  _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\r\n    // It's possible for the playlist to be updated before playback starts, meaning time\r\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\r\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\r\n    // unless the mappings are cleared.\r\n    this.timelineToDatetimeMappings = {};\r\n\r\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\r\n      var firstSegment = playlist.segments[0];\r\n      var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\r\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\r\n    }\r\n  }\r\n  /**\r\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\r\n   * based on the latest timing information.\r\n   *\r\n   * @param {Object} options\r\n   *        Options object\r\n   * @param {SegmentInfo} options.segmentInfo\r\n   *        The current active request information\r\n   * @param {boolean} options.shouldSaveTimelineMapping\r\n   *        If there's a timeline change, determines if the timeline mapping should be\r\n   *        saved for timeline mapping and program date time mappings.\r\n   */\r\n  ;\r\n\r\n  _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\r\n    var segmentInfo = _ref.segmentInfo,\r\n        shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\r\n    var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\r\n    var segment = segmentInfo.segment;\r\n\r\n    if (didCalculateSegmentTimeMapping) {\r\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\r\n      // now with segment timing information\r\n\r\n      if (!segmentInfo.playlist.syncInfo) {\r\n        segmentInfo.playlist.syncInfo = {\r\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\r\n          time: segment.start\r\n        };\r\n      }\r\n    }\r\n\r\n    var dateTime = segment.dateTimeObject;\r\n\r\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\r\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\r\n    }\r\n  };\r\n\r\n  _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\r\n    if (typeof this.timelines[timeline] === 'undefined') {\r\n      return null;\r\n    }\r\n\r\n    return this.timelines[timeline].time;\r\n  };\r\n\r\n  _proto.mappingForTimeline = function mappingForTimeline(timeline) {\r\n    if (typeof this.timelines[timeline] === 'undefined') {\r\n      return null;\r\n    }\r\n\r\n    return this.timelines[timeline].mapping;\r\n  }\r\n  /**\r\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\r\n   * save that display time to the segment.\r\n   *\r\n   * @private\r\n   * @param {SegmentInfo} segmentInfo\r\n   *        The current active request information\r\n   * @param {Object} timingInfo\r\n   *        The start and end time of the current segment in \"media time\"\r\n   * @param {boolean} shouldSaveTimelineMapping\r\n   *        If there's a timeline change, determines if the timeline mapping should be\r\n   *        saved in timelines.\r\n   * @return {boolean}\r\n   *          Returns false if segment time mapping could not be calculated\r\n   */\r\n  ;\r\n\r\n  _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\r\n    // TODO: remove side effects\r\n    var segment = segmentInfo.segment;\r\n    var part = segmentInfo.part;\r\n    var mappingObj = this.timelines[segmentInfo.timeline];\r\n    var start;\r\n    var end;\r\n\r\n    if (typeof segmentInfo.timestampOffset === 'number') {\r\n      mappingObj = {\r\n        time: segmentInfo.startOfSegment,\r\n        mapping: segmentInfo.startOfSegment - timingInfo.start\r\n      };\r\n\r\n      if (shouldSaveTimelineMapping) {\r\n        this.timelines[segmentInfo.timeline] = mappingObj;\r\n        this.trigger('timestampoffset');\r\n        this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\r\n      }\r\n\r\n      start = segmentInfo.startOfSegment;\r\n      end = timingInfo.end + mappingObj.mapping;\r\n    } else if (mappingObj) {\r\n      start = timingInfo.start + mappingObj.mapping;\r\n      end = timingInfo.end + mappingObj.mapping;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    if (part) {\r\n      part.start = start;\r\n      part.end = end;\r\n    } // If we don't have a segment start yet or the start value we got\r\n    // is less than our current segment.start value, save a new start value.\r\n    // We have to do this because parts will have segment timing info saved\r\n    // multiple times and we want segment start to be the earliest part start\r\n    // value for that segment.\r\n\r\n\r\n    if (!segment.start || start < segment.start) {\r\n      segment.start = start;\r\n    }\r\n\r\n    segment.end = end;\r\n    return true;\r\n  }\r\n  /**\r\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\r\n   * in display of the start of the discontinuity and save that. We also save an accuracy\r\n   * value so that we save values with the most accuracy (closest to 0.)\r\n   *\r\n   * @private\r\n   * @param {SegmentInfo} segmentInfo - The current active request information\r\n   */\r\n  ;\r\n\r\n  _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\r\n    var playlist = segmentInfo.playlist;\r\n    var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\r\n    // the start of the range and it's accuracy is 0 (greater accuracy values\r\n    // mean more approximation)\r\n\r\n    if (segment.discontinuity) {\r\n      this.discontinuities[segment.timeline] = {\r\n        time: segment.start,\r\n        accuracy: 0\r\n      };\r\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\r\n      // Search for future discontinuities that we can provide better timing\r\n      // information for and save that information for sync purposes\r\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\r\n        var segmentIndex = playlist.discontinuityStarts[i];\r\n        var discontinuity = playlist.discontinuitySequence + i + 1;\r\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\r\n        var accuracy = Math.abs(mediaIndexDiff);\r\n\r\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\r\n          var time = void 0;\r\n\r\n          if (mediaIndexDiff < 0) {\r\n            time = segment.start - sumDurations({\r\n              defaultDuration: playlist.targetDuration,\r\n              durationList: playlist.segments,\r\n              startIndex: segmentInfo.mediaIndex,\r\n              endIndex: segmentIndex\r\n            });\r\n          } else {\r\n            time = segment.end + sumDurations({\r\n              defaultDuration: playlist.targetDuration,\r\n              durationList: playlist.segments,\r\n              startIndex: segmentInfo.mediaIndex + 1,\r\n              endIndex: segmentIndex\r\n            });\r\n          }\r\n\r\n          this.discontinuities[discontinuity] = {\r\n            time: time,\r\n            accuracy: accuracy\r\n          };\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.trigger('dispose');\r\n    this.off();\r\n  };\r\n\r\n  return SyncController;\r\n}(videojs.EventTarget);\r\n/**\r\n * The TimelineChangeController acts as a source for segment loaders to listen for and\r\n * keep track of latest and pending timeline changes. This is useful to ensure proper\r\n * sync, as each loader may need to make a consideration for what timeline the other\r\n * loader is on before making changes which could impact the other loader's media.\r\n *\r\n * @class TimelineChangeController\r\n * @extends videojs.EventTarget\r\n */\r\n\r\n\r\nvar TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\r\n  _inheritsLoose(TimelineChangeController, _videojs$EventTarget);\r\n\r\n  function TimelineChangeController() {\r\n    var _this;\r\n\r\n    _this = _videojs$EventTarget.call(this) || this;\r\n    _this.pendingTimelineChanges_ = {};\r\n    _this.lastTimelineChanges_ = {};\r\n    return _this;\r\n  }\r\n\r\n  var _proto = TimelineChangeController.prototype;\r\n\r\n  _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\r\n    this.pendingTimelineChanges_[type] = null;\r\n    this.trigger('pendingtimelinechange');\r\n  };\r\n\r\n  _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\r\n    var type = _ref.type,\r\n        from = _ref.from,\r\n        to = _ref.to;\r\n\r\n    if (typeof from === 'number' && typeof to === 'number') {\r\n      this.pendingTimelineChanges_[type] = {\r\n        type: type,\r\n        from: from,\r\n        to: to\r\n      };\r\n      this.trigger('pendingtimelinechange');\r\n    }\r\n\r\n    return this.pendingTimelineChanges_[type];\r\n  };\r\n\r\n  _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\r\n    var type = _ref2.type,\r\n        from = _ref2.from,\r\n        to = _ref2.to;\r\n\r\n    if (typeof from === 'number' && typeof to === 'number') {\r\n      this.lastTimelineChanges_[type] = {\r\n        type: type,\r\n        from: from,\r\n        to: to\r\n      };\r\n      delete this.pendingTimelineChanges_[type];\r\n      this.trigger('timelinechange');\r\n    }\r\n\r\n    return this.lastTimelineChanges_[type];\r\n  };\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.trigger('dispose');\r\n    this.pendingTimelineChanges_ = {};\r\n    this.lastTimelineChanges_ = {};\r\n    this.off();\r\n  };\r\n\r\n  return TimelineChangeController;\r\n}(videojs.EventTarget);\r\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\r\n\r\n\r\nvar workerCode = transform(getWorkerString(function () {\r\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\r\n\r\n  function createCommonjsModule(fn, basedir, module) {\r\n    return module = {\r\n      path: basedir,\r\n      exports: {},\r\n      require: function require(path, base) {\r\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\r\n      }\r\n    }, fn(module, module.exports), module.exports;\r\n  }\r\n\r\n  function commonjsRequire() {\r\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\r\n  }\r\n\r\n  var createClass = createCommonjsModule(function (module) {\r\n    function _defineProperties(target, props) {\r\n      for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) descriptor.writable = true;\r\n        Object.defineProperty(target, descriptor.key, descriptor);\r\n      }\r\n    }\r\n\r\n    function _createClass(Constructor, protoProps, staticProps) {\r\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n      if (staticProps) _defineProperties(Constructor, staticProps);\r\n      return Constructor;\r\n    }\r\n\r\n    module.exports = _createClass;\r\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\r\n  });\r\n  var setPrototypeOf = createCommonjsModule(function (module) {\r\n    function _setPrototypeOf(o, p) {\r\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\r\n        o.__proto__ = p;\r\n        return o;\r\n      };\r\n\r\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\r\n      return _setPrototypeOf(o, p);\r\n    }\r\n\r\n    module.exports = _setPrototypeOf;\r\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\r\n  });\r\n  var inheritsLoose = createCommonjsModule(function (module) {\r\n    function _inheritsLoose(subClass, superClass) {\r\n      subClass.prototype = Object.create(superClass.prototype);\r\n      subClass.prototype.constructor = subClass;\r\n      setPrototypeOf(subClass, superClass);\r\n    }\r\n\r\n    module.exports = _inheritsLoose;\r\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\r\n  });\r\n  /**\r\n   * @file stream.js\r\n   */\r\n\r\n  /**\r\n   * A lightweight readable stream implemention that handles event dispatching.\r\n   *\r\n   * @class Stream\r\n   */\r\n\r\n  var Stream = /*#__PURE__*/function () {\r\n    function Stream() {\r\n      this.listeners = {};\r\n    }\r\n    /**\r\n     * Add a listener for a specified event type.\r\n     *\r\n     * @param {string} type the event name\r\n     * @param {Function} listener the callback to be invoked when an event of\r\n     * the specified type occurs\r\n     */\r\n\r\n\r\n    var _proto = Stream.prototype;\r\n\r\n    _proto.on = function on(type, listener) {\r\n      if (!this.listeners[type]) {\r\n        this.listeners[type] = [];\r\n      }\r\n\r\n      this.listeners[type].push(listener);\r\n    }\r\n    /**\r\n     * Remove a listener for a specified event type.\r\n     *\r\n     * @param {string} type the event name\r\n     * @param {Function} listener  a function previously registered for this\r\n     * type of event through `on`\r\n     * @return {boolean} if we could turn it off or not\r\n     */\r\n    ;\r\n\r\n    _proto.off = function off(type, listener) {\r\n      if (!this.listeners[type]) {\r\n        return false;\r\n      }\r\n\r\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\r\n      // In Video.js we slice listener functions\r\n      // on trigger so that it does not mess up the order\r\n      // while we loop through.\r\n      //\r\n      // Here we slice on off so that the loop in trigger\r\n      // can continue using it's old reference to loop without\r\n      // messing up the order.\r\n\r\n      this.listeners[type] = this.listeners[type].slice(0);\r\n      this.listeners[type].splice(index, 1);\r\n      return index > -1;\r\n    }\r\n    /**\r\n     * Trigger an event of the specified type on this stream. Any additional\r\n     * arguments to this function are passed as parameters to event listeners.\r\n     *\r\n     * @param {string} type the event name\r\n     */\r\n    ;\r\n\r\n    _proto.trigger = function trigger(type) {\r\n      var callbacks = this.listeners[type];\r\n\r\n      if (!callbacks) {\r\n        return;\r\n      } // Slicing the arguments on every invocation of this method\r\n      // can add a significant amount of overhead. Avoid the\r\n      // intermediate object creation for the common case of a\r\n      // single callback argument\r\n\r\n\r\n      if (arguments.length === 2) {\r\n        var length = callbacks.length;\r\n\r\n        for (var i = 0; i < length; ++i) {\r\n          callbacks[i].call(this, arguments[1]);\r\n        }\r\n      } else {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var _length = callbacks.length;\r\n\r\n        for (var _i = 0; _i < _length; ++_i) {\r\n          callbacks[_i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Destroys the stream and cleans up.\r\n     */\r\n    ;\r\n\r\n    _proto.dispose = function dispose() {\r\n      this.listeners = {};\r\n    }\r\n    /**\r\n     * Forwards all `data` events on this stream to the destination stream. The\r\n     * destination stream should provide a method `push` to receive the data\r\n     * events as they arrive.\r\n     *\r\n     * @param {Stream} destination the stream that will receive all `data` events\r\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\r\n     */\r\n    ;\r\n\r\n    _proto.pipe = function pipe(destination) {\r\n      this.on('data', function (data) {\r\n        destination.push(data);\r\n      });\r\n    };\r\n\r\n    return Stream;\r\n  }();\r\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\r\n\r\n  /**\r\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\r\n   *\r\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\r\n   * @return {Uint8Array} the unpadded bytes\r\n   * @see http://tools.ietf.org/html/rfc5652\r\n   */\r\n\r\n\r\n  function unpad(padded) {\r\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\r\n  }\r\n  /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */\r\n\r\n  /**\r\n   * @file aes.js\r\n   *\r\n   * This file contains an adaptation of the AES decryption algorithm\r\n   * from the Standford Javascript Cryptography Library. That work is\r\n   * covered by the following copyright and permissions notice:\r\n   *\r\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\r\n   * All rights reserved.\r\n   *\r\n   * Redistribution and use in source and binary forms, with or without\r\n   * modification, are permitted provided that the following conditions are\r\n   * met:\r\n   *\r\n   * 1. Redistributions of source code must retain the above copyright\r\n   *    notice, this list of conditions and the following disclaimer.\r\n   *\r\n   * 2. Redistributions in binary form must reproduce the above\r\n   *    copyright notice, this list of conditions and the following\r\n   *    disclaimer in the documentation and/or other materials provided\r\n   *    with the distribution.\r\n   *\r\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\r\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\r\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\r\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\r\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n   *\r\n   * The views and conclusions contained in the software and documentation\r\n   * are those of the authors and should not be interpreted as representing\r\n   * official policies, either expressed or implied, of the authors.\r\n   */\r\n\r\n  /**\r\n   * Expand the S-box tables.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var precompute = function precompute() {\r\n    var tables = [[[], [], [], [], []], [[], [], [], [], []]];\r\n    var encTable = tables[0];\r\n    var decTable = tables[1];\r\n    var sbox = encTable[4];\r\n    var sboxInv = decTable[4];\r\n    var i;\r\n    var x;\r\n    var xInv;\r\n    var d = [];\r\n    var th = [];\r\n    var x2;\r\n    var x4;\r\n    var x8;\r\n    var s;\r\n    var tEnc;\r\n    var tDec; // Compute double and third tables\r\n\r\n    for (i = 0; i < 256; i++) {\r\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\r\n    }\r\n\r\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\r\n      // Compute sbox\r\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\r\n      s = s >> 8 ^ s & 255 ^ 99;\r\n      sbox[x] = s;\r\n      sboxInv[s] = x; // Compute MixColumns\r\n\r\n      x8 = d[x4 = d[x2 = d[x]]];\r\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\r\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\r\n\r\n      for (i = 0; i < 4; i++) {\r\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\r\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\r\n      }\r\n    } // Compactify. Considerable speedup on Firefox.\r\n\r\n\r\n    for (i = 0; i < 5; i++) {\r\n      encTable[i] = encTable[i].slice(0);\r\n      decTable[i] = decTable[i].slice(0);\r\n    }\r\n\r\n    return tables;\r\n  };\r\n\r\n  var aesTables = null;\r\n  /**\r\n   * Schedule out an AES key for both encryption and decryption. This\r\n   * is a low-level class. Use a cipher mode to do bulk encryption.\r\n   *\r\n   * @class AES\r\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\r\n   */\r\n\r\n  var AES = /*#__PURE__*/function () {\r\n    function AES(key) {\r\n      /**\r\n      * The expanded S-box and inverse S-box tables. These will be computed\r\n      * on the client so that we don't have to send them down the wire.\r\n      *\r\n      * There are two tables, _tables[0] is for encryption and\r\n      * _tables[1] is for decryption.\r\n      *\r\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\r\n      * last (_tables[01][4]) is the S-box itself.\r\n      *\r\n      * @private\r\n      */\r\n      // if we have yet to precompute the S-box tables\r\n      // do so now\r\n      if (!aesTables) {\r\n        aesTables = precompute();\r\n      } // then make a copy of that object for use\r\n\r\n\r\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\r\n      var i;\r\n      var j;\r\n      var tmp;\r\n      var sbox = this._tables[0][4];\r\n      var decTable = this._tables[1];\r\n      var keyLen = key.length;\r\n      var rcon = 1;\r\n\r\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\r\n        throw new Error('Invalid aes key size');\r\n      }\r\n\r\n      var encKey = key.slice(0);\r\n      var decKey = [];\r\n      this._key = [encKey, decKey]; // schedule encryption keys\r\n\r\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\r\n        tmp = encKey[i - 1]; // apply sbox\r\n\r\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\r\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\r\n\r\n          if (i % keyLen === 0) {\r\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\r\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\r\n          }\r\n        }\r\n\r\n        encKey[i] = encKey[i - keyLen] ^ tmp;\r\n      } // schedule decryption keys\r\n\r\n\r\n      for (j = 0; i; j++, i--) {\r\n        tmp = encKey[j & 3 ? i : i - 4];\r\n\r\n        if (i <= 4 || j < 4) {\r\n          decKey[j] = tmp;\r\n        } else {\r\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Decrypt 16 bytes, specified as four 32-bit words.\r\n     *\r\n     * @param {number} encrypted0 the first word to decrypt\r\n     * @param {number} encrypted1 the second word to decrypt\r\n     * @param {number} encrypted2 the third word to decrypt\r\n     * @param {number} encrypted3 the fourth word to decrypt\r\n     * @param {Int32Array} out the array to write the decrypted words\r\n     * into\r\n     * @param {number} offset the offset into the output array to start\r\n     * writing results\r\n     * @return {Array} The plaintext.\r\n     */\r\n\r\n\r\n    var _proto = AES.prototype;\r\n\r\n    _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\r\n      var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\r\n\r\n      var a = encrypted0 ^ key[0];\r\n      var b = encrypted3 ^ key[1];\r\n      var c = encrypted2 ^ key[2];\r\n      var d = encrypted1 ^ key[3];\r\n      var a2;\r\n      var b2;\r\n      var c2; // key.length === 2 ?\r\n\r\n      var nInnerRounds = key.length / 4 - 2;\r\n      var i;\r\n      var kIndex = 4;\r\n      var table = this._tables[1]; // load up the tables\r\n\r\n      var table0 = table[0];\r\n      var table1 = table[1];\r\n      var table2 = table[2];\r\n      var table3 = table[3];\r\n      var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\r\n\r\n      for (i = 0; i < nInnerRounds; i++) {\r\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\r\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\r\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\r\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\r\n        kIndex += 4;\r\n        a = a2;\r\n        b = b2;\r\n        c = c2;\r\n      } // Last round.\r\n\r\n\r\n      for (i = 0; i < 4; i++) {\r\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\r\n        a2 = a;\r\n        a = b;\r\n        b = c;\r\n        c = d;\r\n        d = a2;\r\n      }\r\n    };\r\n\r\n    return AES;\r\n  }();\r\n  /**\r\n   * A wrapper around the Stream class to use setTimeout\r\n   * and run stream \"jobs\" Asynchronously\r\n   *\r\n   * @class AsyncStream\r\n   * @extends Stream\r\n   */\r\n\r\n\r\n  var AsyncStream = /*#__PURE__*/function (_Stream) {\r\n    inheritsLoose(AsyncStream, _Stream);\r\n\r\n    function AsyncStream() {\r\n      var _this;\r\n\r\n      _this = _Stream.call(this, Stream) || this;\r\n      _this.jobs = [];\r\n      _this.delay = 1;\r\n      _this.timeout_ = null;\r\n      return _this;\r\n    }\r\n    /**\r\n     * process an async job\r\n     *\r\n     * @private\r\n     */\r\n\r\n\r\n    var _proto = AsyncStream.prototype;\r\n\r\n    _proto.processJob_ = function processJob_() {\r\n      this.jobs.shift()();\r\n\r\n      if (this.jobs.length) {\r\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\r\n      } else {\r\n        this.timeout_ = null;\r\n      }\r\n    }\r\n    /**\r\n     * push a job into the stream\r\n     *\r\n     * @param {Function} job the job to push into the stream\r\n     */\r\n    ;\r\n\r\n    _proto.push = function push(job) {\r\n      this.jobs.push(job);\r\n\r\n      if (!this.timeout_) {\r\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\r\n      }\r\n    };\r\n\r\n    return AsyncStream;\r\n  }(Stream);\r\n  /**\r\n   * Convert network-order (big-endian) bytes into their little-endian\r\n   * representation.\r\n   */\r\n\r\n\r\n  var ntoh = function ntoh(word) {\r\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\r\n  };\r\n  /**\r\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\r\n   *\r\n   * @param {Uint8Array} encrypted the encrypted bytes\r\n   * @param {Uint32Array} key the bytes of the decryption key\r\n   * @param {Uint32Array} initVector the initialization vector (IV) to\r\n   * use for the first round of CBC.\r\n   * @return {Uint8Array} the decrypted bytes\r\n   *\r\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\r\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\r\n   * @see https://tools.ietf.org/html/rfc2315\r\n   */\r\n\r\n\r\n  var decrypt = function decrypt(encrypted, key, initVector) {\r\n    // word-level access to the encrypted bytes\r\n    var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\r\n    var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\r\n\r\n    var decrypted = new Uint8Array(encrypted.byteLength);\r\n    var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\r\n    // decrypted data\r\n\r\n    var init0;\r\n    var init1;\r\n    var init2;\r\n    var init3;\r\n    var encrypted0;\r\n    var encrypted1;\r\n    var encrypted2;\r\n    var encrypted3; // iteration variable\r\n\r\n    var wordIx; // pull out the words of the IV to ensure we don't modify the\r\n    // passed-in reference and easier access\r\n\r\n    init0 = initVector[0];\r\n    init1 = initVector[1];\r\n    init2 = initVector[2];\r\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\r\n    // to each decrypted block\r\n\r\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\r\n      // convert big-endian (network order) words into little-endian\r\n      // (javascript order)\r\n      encrypted0 = ntoh(encrypted32[wordIx]);\r\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\r\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\r\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\r\n\r\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\r\n      // plaintext\r\n\r\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\r\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\r\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\r\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\r\n\r\n      init0 = encrypted0;\r\n      init1 = encrypted1;\r\n      init2 = encrypted2;\r\n      init3 = encrypted3;\r\n    }\r\n\r\n    return decrypted;\r\n  };\r\n  /**\r\n   * The `Decrypter` class that manages decryption of AES\r\n   * data through `AsyncStream` objects and the `decrypt`\r\n   * function\r\n   *\r\n   * @param {Uint8Array} encrypted the encrypted bytes\r\n   * @param {Uint32Array} key the bytes of the decryption key\r\n   * @param {Uint32Array} initVector the initialization vector (IV) to\r\n   * @param {Function} done the function to run when done\r\n   * @class Decrypter\r\n   */\r\n\r\n\r\n  var Decrypter = /*#__PURE__*/function () {\r\n    function Decrypter(encrypted, key, initVector, done) {\r\n      var step = Decrypter.STEP;\r\n      var encrypted32 = new Int32Array(encrypted.buffer);\r\n      var decrypted = new Uint8Array(encrypted.byteLength);\r\n      var i = 0;\r\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\r\n\r\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\r\n\r\n      for (i = step; i < encrypted32.length; i += step) {\r\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\r\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\r\n      } // invoke the done() callback when everything is finished\r\n\r\n\r\n      this.asyncStream_.push(function () {\r\n        // remove pkcs#7 padding from the decrypted bytes\r\n        done(null, unpad(decrypted));\r\n      });\r\n    }\r\n    /**\r\n     * a getter for step the maximum number of bytes to process at one time\r\n     *\r\n     * @return {number} the value of step 32000\r\n     */\r\n\r\n\r\n    var _proto = Decrypter.prototype;\r\n    /**\r\n     * @private\r\n     */\r\n\r\n    _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\r\n      return function () {\r\n        var bytes = decrypt(encrypted, key, initVector);\r\n        decrypted.set(bytes, encrypted.byteOffset);\r\n      };\r\n    };\r\n\r\n    createClass(Decrypter, null, [{\r\n      key: \"STEP\",\r\n      get: function get() {\r\n        // 4 * 8000;\r\n        return 32000;\r\n      }\r\n    }]);\r\n    return Decrypter;\r\n  }();\r\n\r\n  var win;\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    win = window;\r\n  } else if (typeof commonjsGlobal !== \"undefined\") {\r\n    win = commonjsGlobal;\r\n  } else if (typeof self !== \"undefined\") {\r\n    win = self;\r\n  } else {\r\n    win = {};\r\n  }\r\n\r\n  var window_1 = win;\r\n\r\n  var isArrayBufferView = function isArrayBufferView(obj) {\r\n    if (ArrayBuffer.isView === 'function') {\r\n      return ArrayBuffer.isView(obj);\r\n    }\r\n\r\n    return obj && obj.buffer instanceof ArrayBuffer;\r\n  };\r\n\r\n  var BigInt = window_1.BigInt || Number;\r\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\r\n  /**\r\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\r\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\r\n   *\r\n   * @param {Object} message\r\n   *        Object of properties and values to send to the web worker\r\n   * @return {Object}\r\n   *         Modified message with TypedArray values expanded\r\n   * @function createTransferableMessage\r\n   */\r\n\r\n\r\n  var createTransferableMessage = function createTransferableMessage(message) {\r\n    var transferable = {};\r\n    Object.keys(message).forEach(function (key) {\r\n      var value = message[key];\r\n\r\n      if (isArrayBufferView(value)) {\r\n        transferable[key] = {\r\n          bytes: value.buffer,\r\n          byteOffset: value.byteOffset,\r\n          byteLength: value.byteLength\r\n        };\r\n      } else {\r\n        transferable[key] = value;\r\n      }\r\n    });\r\n    return transferable;\r\n  };\r\n  /* global self */\r\n\r\n  /**\r\n   * Our web worker interface so that things can talk to aes-decrypter\r\n   * that will be running in a web worker. the scope is passed to this by\r\n   * webworkify.\r\n   */\r\n\r\n\r\n  self.onmessage = function (event) {\r\n    var data = event.data;\r\n    var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\r\n    var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\r\n    var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\r\n    /* eslint-disable no-new, handle-callback-err */\r\n\r\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\r\n      self.postMessage(createTransferableMessage({\r\n        source: data.source,\r\n        decrypted: bytes\r\n      }), [bytes.buffer]);\r\n    });\r\n    /* eslint-enable */\r\n  };\r\n}));\r\nvar Decrypter = factory(workerCode);\r\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\r\n\r\n/**\r\n * Convert the properties of an HLS track into an audioTrackKind.\r\n *\r\n * @private\r\n */\r\n\r\nvar audioTrackKind_ = function audioTrackKind_(properties) {\r\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\r\n\r\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\r\n    kind = 'main-desc';\r\n  }\r\n\r\n  return kind;\r\n};\r\n/**\r\n * Pause provided segment loader and playlist loader if active\r\n *\r\n * @param {SegmentLoader} segmentLoader\r\n *        SegmentLoader to pause\r\n * @param {Object} mediaType\r\n *        Active media type\r\n * @function stopLoaders\r\n */\r\n\r\n\r\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\r\n  segmentLoader.abort();\r\n  segmentLoader.pause();\r\n\r\n  if (mediaType && mediaType.activePlaylistLoader) {\r\n    mediaType.activePlaylistLoader.pause();\r\n    mediaType.activePlaylistLoader = null;\r\n  }\r\n};\r\n/**\r\n * Start loading provided segment loader and playlist loader\r\n *\r\n * @param {PlaylistLoader} playlistLoader\r\n *        PlaylistLoader to start loading\r\n * @param {Object} mediaType\r\n *        Active media type\r\n * @function startLoaders\r\n */\r\n\r\n\r\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\r\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\r\n  // playlist loader\r\n  mediaType.activePlaylistLoader = playlistLoader;\r\n  playlistLoader.load();\r\n};\r\n/**\r\n * Returns a function to be called when the media group changes. It performs a\r\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\r\n * change of group is merely a rendition switch of the same content at another encoding,\r\n * rather than a change of content, such as switching audio from English to Spanish.\r\n *\r\n * @param {string} type\r\n *        MediaGroup type\r\n * @param {Object} settings\r\n *        Object containing required information for media groups\r\n * @return {Function}\r\n *         Handler for a non-destructive resync of SegmentLoader when the active media\r\n *         group changes.\r\n * @function onGroupChanged\r\n */\r\n\r\n\r\nvar onGroupChanged = function onGroupChanged(type, settings) {\r\n  return function () {\r\n    var _settings$segmentLoad = settings.segmentLoaders,\r\n        segmentLoader = _settings$segmentLoad[type],\r\n        mainSegmentLoader = _settings$segmentLoad.main,\r\n        mediaType = settings.mediaTypes[type];\r\n    var activeTrack = mediaType.activeTrack();\r\n    var activeGroup = mediaType.getActiveGroup();\r\n    var previousActiveLoader = mediaType.activePlaylistLoader;\r\n    var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\r\n\r\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\r\n      return;\r\n    }\r\n\r\n    mediaType.lastGroup_ = activeGroup;\r\n    mediaType.lastTrack_ = activeTrack;\r\n    stopLoaders(segmentLoader, mediaType);\r\n\r\n    if (!activeGroup || activeGroup.isMasterPlaylist) {\r\n      // there is no group active or active group is a main playlist and won't change\r\n      return;\r\n    }\r\n\r\n    if (!activeGroup.playlistLoader) {\r\n      if (previousActiveLoader) {\r\n        // The previous group had a playlist loader but the new active group does not\r\n        // this means we are switching from demuxed to muxed audio. In this case we want to\r\n        // do a destructive reset of the main segment loader and not restart the audio\r\n        // loaders.\r\n        mainSegmentLoader.resetEverything();\r\n      }\r\n\r\n      return;\r\n    } // Non-destructive resync\r\n\r\n\r\n    segmentLoader.resyncLoader();\r\n    startLoaders(activeGroup.playlistLoader, mediaType);\r\n  };\r\n};\r\n\r\nvar onGroupChanging = function onGroupChanging(type, settings) {\r\n  return function () {\r\n    var segmentLoader = settings.segmentLoaders[type],\r\n        mediaType = settings.mediaTypes[type];\r\n    mediaType.lastGroup_ = null;\r\n    segmentLoader.abort();\r\n    segmentLoader.pause();\r\n  };\r\n};\r\n/**\r\n * Returns a function to be called when the media track changes. It performs a\r\n * destructive reset of the SegmentLoader to ensure we start loading as close to\r\n * currentTime as possible.\r\n *\r\n * @param {string} type\r\n *        MediaGroup type\r\n * @param {Object} settings\r\n *        Object containing required information for media groups\r\n * @return {Function}\r\n *         Handler for a destructive reset of SegmentLoader when the active media\r\n *         track changes.\r\n * @function onTrackChanged\r\n */\r\n\r\n\r\nvar onTrackChanged = function onTrackChanged(type, settings) {\r\n  return function () {\r\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\r\n        _settings$segmentLoad2 = settings.segmentLoaders,\r\n        segmentLoader = _settings$segmentLoad2[type],\r\n        mainSegmentLoader = _settings$segmentLoad2.main,\r\n        mediaType = settings.mediaTypes[type];\r\n    var activeTrack = mediaType.activeTrack();\r\n    var activeGroup = mediaType.getActiveGroup();\r\n    var previousActiveLoader = mediaType.activePlaylistLoader;\r\n    var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\r\n\r\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\r\n      return;\r\n    }\r\n\r\n    mediaType.lastGroup_ = activeGroup;\r\n    mediaType.lastTrack_ = activeTrack;\r\n    stopLoaders(segmentLoader, mediaType);\r\n\r\n    if (!activeGroup) {\r\n      // there is no group active so we do not want to restart loaders\r\n      return;\r\n    }\r\n\r\n    if (activeGroup.isMasterPlaylist) {\r\n      // track did not change, do nothing\r\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\r\n        return;\r\n      }\r\n\r\n      var mpc = settings.vhs.masterPlaylistController_;\r\n      var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\r\n\r\n      if (mpc.media() === newPlaylist) {\r\n        return;\r\n      }\r\n\r\n      mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\r\n      masterPlaylistLoader.pause();\r\n      mainSegmentLoader.resetEverything();\r\n      mpc.fastQualityChange_(newPlaylist);\r\n      return;\r\n    }\r\n\r\n    if (type === 'AUDIO') {\r\n      if (!activeGroup.playlistLoader) {\r\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\r\n        // playlist loader for the audio group), we want to do a destructive reset of the\r\n        // main segment loader and not restart the audio loaders\r\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\r\n        // it should be stopped\r\n\r\n        mainSegmentLoader.resetEverything();\r\n        return;\r\n      } // although the segment loader is an audio segment loader, call the setAudio\r\n      // function to ensure it is prepared to re-append the init segment (or handle other\r\n      // config changes)\r\n\r\n\r\n      segmentLoader.setAudio(true);\r\n      mainSegmentLoader.setAudio(false);\r\n    }\r\n\r\n    if (previousActiveLoader === activeGroup.playlistLoader) {\r\n      // Nothing has actually changed. This can happen because track change events can fire\r\n      // multiple times for a \"single\" change. One for enabling the new active track, and\r\n      // one for disabling the track that was active\r\n      startLoaders(activeGroup.playlistLoader, mediaType);\r\n      return;\r\n    }\r\n\r\n    if (segmentLoader.track) {\r\n      // For WebVTT, set the new text track in the segmentloader\r\n      segmentLoader.track(activeTrack);\r\n    } // destructive reset\r\n\r\n\r\n    segmentLoader.resetEverything();\r\n    startLoaders(activeGroup.playlistLoader, mediaType);\r\n  };\r\n};\r\n\r\nvar onError = {\r\n  /**\r\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\r\n   * an error.\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @return {Function}\r\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\r\n   *         console and switches back to default audio track.\r\n   * @function onError.AUDIO\r\n   */\r\n  AUDIO: function AUDIO(type, settings) {\r\n    return function () {\r\n      var segmentLoader = settings.segmentLoaders[type],\r\n          mediaType = settings.mediaTypes[type],\r\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\r\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\r\n\r\n      var activeTrack = mediaType.activeTrack();\r\n      var activeGroup = mediaType.activeGroup();\r\n      var id = (activeGroup.filter(function (group) {\r\n        return group[\"default\"];\r\n      })[0] || activeGroup[0]).id;\r\n      var defaultTrack = mediaType.tracks[id];\r\n\r\n      if (activeTrack === defaultTrack) {\r\n        // Default track encountered an error. All we can do now is blacklist the current\r\n        // rendition and hope another will switch audio groups\r\n        blacklistCurrentPlaylist({\r\n          message: 'Problem encountered loading the default audio track.'\r\n        });\r\n        return;\r\n      }\r\n\r\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\r\n\r\n      for (var trackId in mediaType.tracks) {\r\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\r\n      }\r\n\r\n      mediaType.onTrackChanged();\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\r\n   * an error.\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @return {Function}\r\n   *         Error handler. Logs warning to console and disables the active subtitle track\r\n   * @function onError.SUBTITLES\r\n   */\r\n  SUBTITLES: function SUBTITLES(type, settings) {\r\n    return function () {\r\n      var segmentLoader = settings.segmentLoaders[type],\r\n          mediaType = settings.mediaTypes[type];\r\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\r\n      stopLoaders(segmentLoader, mediaType);\r\n      var track = mediaType.activeTrack();\r\n\r\n      if (track) {\r\n        track.mode = 'disabled';\r\n      }\r\n\r\n      mediaType.onTrackChanged();\r\n    };\r\n  }\r\n};\r\nvar setupListeners = {\r\n  /**\r\n   * Setup event listeners for audio playlist loader\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {PlaylistLoader|null} playlistLoader\r\n   *        PlaylistLoader to register listeners on\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @function setupListeners.AUDIO\r\n   */\r\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\r\n    if (!playlistLoader) {\r\n      // no playlist loader means audio will be muxed with the video\r\n      return;\r\n    }\r\n\r\n    var tech = settings.tech,\r\n        requestOptions = settings.requestOptions,\r\n        segmentLoader = settings.segmentLoaders[type];\r\n    playlistLoader.on('loadedmetadata', function () {\r\n      var media = playlistLoader.media();\r\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\r\n      // permits, start downloading segments\r\n\r\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\r\n        segmentLoader.load();\r\n      }\r\n    });\r\n    playlistLoader.on('loadedplaylist', function () {\r\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\r\n\r\n      if (!tech.paused()) {\r\n        segmentLoader.load();\r\n      }\r\n    });\r\n    playlistLoader.on('error', onError[type](type, settings));\r\n  },\r\n\r\n  /**\r\n   * Setup event listeners for subtitle playlist loader\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {PlaylistLoader|null} playlistLoader\r\n   *        PlaylistLoader to register listeners on\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @function setupListeners.SUBTITLES\r\n   */\r\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\r\n    var tech = settings.tech,\r\n        requestOptions = settings.requestOptions,\r\n        segmentLoader = settings.segmentLoaders[type],\r\n        mediaType = settings.mediaTypes[type];\r\n    playlistLoader.on('loadedmetadata', function () {\r\n      var media = playlistLoader.media();\r\n      segmentLoader.playlist(media, requestOptions);\r\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\r\n      // permits, start downloading segments\r\n\r\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\r\n        segmentLoader.load();\r\n      }\r\n    });\r\n    playlistLoader.on('loadedplaylist', function () {\r\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\r\n\r\n      if (!tech.paused()) {\r\n        segmentLoader.load();\r\n      }\r\n    });\r\n    playlistLoader.on('error', onError[type](type, settings));\r\n  }\r\n};\r\nvar initialize = {\r\n  /**\r\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @function initialize.AUDIO\r\n   */\r\n  'AUDIO': function AUDIO(type, settings) {\r\n    var vhs = settings.vhs,\r\n        sourceType = settings.sourceType,\r\n        segmentLoader = settings.segmentLoaders[type],\r\n        requestOptions = settings.requestOptions,\r\n        mediaGroups = settings.master.mediaGroups,\r\n        _settings$mediaTypes$ = settings.mediaTypes[type],\r\n        groups = _settings$mediaTypes$.groups,\r\n        tracks = _settings$mediaTypes$.tracks,\r\n        logger_ = _settings$mediaTypes$.logger_,\r\n        masterPlaylistLoader = settings.masterPlaylistLoader;\r\n    var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\r\n\r\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\r\n      mediaGroups[type] = {\r\n        main: {\r\n          \"default\": {\r\n            \"default\": true\r\n          }\r\n        }\r\n      };\r\n\r\n      if (audioOnlyMaster) {\r\n        mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\r\n      }\r\n    }\r\n\r\n    for (var groupId in mediaGroups[type]) {\r\n      if (!groups[groupId]) {\r\n        groups[groupId] = [];\r\n      }\r\n\r\n      for (var variantLabel in mediaGroups[type][groupId]) {\r\n        var properties = mediaGroups[type][groupId][variantLabel];\r\n        var playlistLoader = void 0;\r\n\r\n        if (audioOnlyMaster) {\r\n          logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\r\n          properties.isMasterPlaylist = true;\r\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\r\n          // use the resolved media playlist object\r\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\r\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\r\n        } else if (properties.resolvedUri) {\r\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\r\n          // should we even have properties.playlists in this check.\r\n        } else if (properties.playlists && sourceType === 'dash') {\r\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\r\n        } else {\r\n          // no resolvedUri means the audio is muxed with the video when using this\r\n          // audio track\r\n          playlistLoader = null;\r\n        }\r\n\r\n        properties = videojs.mergeOptions({\r\n          id: variantLabel,\r\n          playlistLoader: playlistLoader\r\n        }, properties);\r\n        setupListeners[type](type, properties.playlistLoader, settings);\r\n        groups[groupId].push(properties);\r\n\r\n        if (typeof tracks[variantLabel] === 'undefined') {\r\n          var track = new videojs.AudioTrack({\r\n            id: variantLabel,\r\n            kind: audioTrackKind_(properties),\r\n            enabled: false,\r\n            language: properties.language,\r\n            \"default\": properties[\"default\"],\r\n            label: variantLabel\r\n          });\r\n          tracks[variantLabel] = track;\r\n        }\r\n      }\r\n    } // setup single error event handler for the segment loader\r\n\r\n\r\n    segmentLoader.on('error', onError[type](type, settings));\r\n  },\r\n\r\n  /**\r\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @function initialize.SUBTITLES\r\n   */\r\n  'SUBTITLES': function SUBTITLES(type, settings) {\r\n    var tech = settings.tech,\r\n        vhs = settings.vhs,\r\n        sourceType = settings.sourceType,\r\n        segmentLoader = settings.segmentLoaders[type],\r\n        requestOptions = settings.requestOptions,\r\n        mediaGroups = settings.master.mediaGroups,\r\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\r\n        groups = _settings$mediaTypes$2.groups,\r\n        tracks = _settings$mediaTypes$2.tracks,\r\n        masterPlaylistLoader = settings.masterPlaylistLoader;\r\n\r\n    for (var groupId in mediaGroups[type]) {\r\n      if (!groups[groupId]) {\r\n        groups[groupId] = [];\r\n      }\r\n\r\n      for (var variantLabel in mediaGroups[type][groupId]) {\r\n        if (mediaGroups[type][groupId][variantLabel].forced) {\r\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\r\n          // According to Apple's HLS Authoring Specification:\r\n          //   If content has forced subtitles and regular subtitles in a given language,\r\n          //   the regular subtitles track in that language MUST contain both the forced\r\n          //   subtitles and the regular subtitles for that language.\r\n          // Because of this requirement and that Safari does not add forced subtitles,\r\n          // forced subtitles are skipped here to maintain consistent experience across\r\n          // all platforms\r\n          continue;\r\n        }\r\n\r\n        var properties = mediaGroups[type][groupId][variantLabel];\r\n        var playlistLoader = void 0;\r\n\r\n        if (sourceType === 'hls') {\r\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\r\n        } else if (sourceType === 'dash') {\r\n          var playlists = properties.playlists.filter(function (p) {\r\n            return p.excludeUntil !== Infinity;\r\n          });\r\n\r\n          if (!playlists.length) {\r\n            return;\r\n          }\r\n\r\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\r\n        } else if (sourceType === 'vhs-json') {\r\n          playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\r\n          // as provided, otherwise use the resolved URI to load the playlist\r\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\r\n        }\r\n\r\n        properties = videojs.mergeOptions({\r\n          id: variantLabel,\r\n          playlistLoader: playlistLoader\r\n        }, properties);\r\n        setupListeners[type](type, properties.playlistLoader, settings);\r\n        groups[groupId].push(properties);\r\n\r\n        if (typeof tracks[variantLabel] === 'undefined') {\r\n          var track = tech.addRemoteTextTrack({\r\n            id: variantLabel,\r\n            kind: 'subtitles',\r\n            \"default\": properties[\"default\"] && properties.autoselect,\r\n            language: properties.language,\r\n            label: variantLabel\r\n          }, false).track;\r\n          tracks[variantLabel] = track;\r\n        }\r\n      }\r\n    } // setup single error event handler for the segment loader\r\n\r\n\r\n    segmentLoader.on('error', onError[type](type, settings));\r\n  },\r\n\r\n  /**\r\n   * Setup TextTracks for the closed-caption groups\r\n   *\r\n   * @param {String} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @function initialize['CLOSED-CAPTIONS']\r\n   */\r\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\r\n    var tech = settings.tech,\r\n        mediaGroups = settings.master.mediaGroups,\r\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\r\n        groups = _settings$mediaTypes$3.groups,\r\n        tracks = _settings$mediaTypes$3.tracks;\r\n\r\n    for (var groupId in mediaGroups[type]) {\r\n      if (!groups[groupId]) {\r\n        groups[groupId] = [];\r\n      }\r\n\r\n      for (var variantLabel in mediaGroups[type][groupId]) {\r\n        var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\r\n\r\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\r\n          continue;\r\n        }\r\n\r\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\r\n        var newProps = {\r\n          label: variantLabel,\r\n          language: properties.language,\r\n          instreamId: properties.instreamId,\r\n          \"default\": properties[\"default\"] && properties.autoselect\r\n        };\r\n\r\n        if (captionServices[newProps.instreamId]) {\r\n          newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\r\n        }\r\n\r\n        if (newProps[\"default\"] === undefined) {\r\n          delete newProps[\"default\"];\r\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\r\n        // embedded within the video stream\r\n\r\n\r\n        groups[groupId].push(videojs.mergeOptions({\r\n          id: variantLabel\r\n        }, properties));\r\n\r\n        if (typeof tracks[variantLabel] === 'undefined') {\r\n          var track = tech.addRemoteTextTrack({\r\n            id: newProps.instreamId,\r\n            kind: 'captions',\r\n            \"default\": newProps[\"default\"],\r\n            language: newProps.language,\r\n            label: newProps.label\r\n          }, false).track;\r\n          tracks[variantLabel] = track;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar groupMatch = function groupMatch(list, media) {\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (playlistMatch(media, list[i])) {\r\n      return true;\r\n    }\r\n\r\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n/**\r\n * Returns a function used to get the active group of the provided type\r\n *\r\n * @param {string} type\r\n *        MediaGroup type\r\n * @param {Object} settings\r\n *        Object containing required information for media groups\r\n * @return {Function}\r\n *         Function that returns the active media group for the provided type. Takes an\r\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\r\n *         variants in the group, otherwise the variant corresponding to the provided\r\n *         track is returned.\r\n * @function activeGroup\r\n */\r\n\r\n\r\nvar activeGroup = function activeGroup(type, settings) {\r\n  return function (track) {\r\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\r\n        groups = settings.mediaTypes[type].groups;\r\n    var media = masterPlaylistLoader.media();\r\n\r\n    if (!media) {\r\n      return null;\r\n    }\r\n\r\n    var variants = null; // set to variants to main media active group\r\n\r\n    if (media.attributes[type]) {\r\n      variants = groups[media.attributes[type]];\r\n    }\r\n\r\n    var groupKeys = Object.keys(groups);\r\n\r\n    if (!variants) {\r\n      // find the masterPlaylistLoader media\r\n      // that is in a media group if we are dealing\r\n      // with audio only\r\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\r\n        for (var i = 0; i < groupKeys.length; i++) {\r\n          var groupPropertyList = groups[groupKeys[i]];\r\n\r\n          if (groupMatch(groupPropertyList, media)) {\r\n            variants = groupPropertyList;\r\n            break;\r\n          }\r\n        } // use the main group if it exists\r\n\r\n      } else if (groups.main) {\r\n        variants = groups.main; // only one group, use that one\r\n      } else if (groupKeys.length === 1) {\r\n        variants = groups[groupKeys[0]];\r\n      }\r\n    }\r\n\r\n    if (typeof track === 'undefined') {\r\n      return variants;\r\n    }\r\n\r\n    if (track === null || !variants) {\r\n      // An active track was specified so a corresponding group is expected. track === null\r\n      // means no track is currently active so there is no corresponding group\r\n      return null;\r\n    }\r\n\r\n    return variants.filter(function (props) {\r\n      return props.id === track.id;\r\n    })[0] || null;\r\n  };\r\n};\r\n\r\nvar activeTrack = {\r\n  /**\r\n   * Returns a function used to get the active track of type provided\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @return {Function}\r\n   *         Function that returns the active media track for the provided type. Returns\r\n   *         null if no track is active\r\n   * @function activeTrack.AUDIO\r\n   */\r\n  AUDIO: function AUDIO(type, settings) {\r\n    return function () {\r\n      var tracks = settings.mediaTypes[type].tracks;\r\n\r\n      for (var id in tracks) {\r\n        if (tracks[id].enabled) {\r\n          return tracks[id];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns a function used to get the active track of type provided\r\n   *\r\n   * @param {string} type\r\n   *        MediaGroup type\r\n   * @param {Object} settings\r\n   *        Object containing required information for media groups\r\n   * @return {Function}\r\n   *         Function that returns the active media track for the provided type. Returns\r\n   *         null if no track is active\r\n   * @function activeTrack.SUBTITLES\r\n   */\r\n  SUBTITLES: function SUBTITLES(type, settings) {\r\n    return function () {\r\n      var tracks = settings.mediaTypes[type].tracks;\r\n\r\n      for (var id in tracks) {\r\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\r\n          return tracks[id];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n};\r\n\r\nvar getActiveGroup = function getActiveGroup(type, _ref) {\r\n  var mediaTypes = _ref.mediaTypes;\r\n  return function () {\r\n    var activeTrack_ = mediaTypes[type].activeTrack();\r\n\r\n    if (!activeTrack_) {\r\n      return null;\r\n    }\r\n\r\n    return mediaTypes[type].activeGroup(activeTrack_);\r\n  };\r\n};\r\n/**\r\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\r\n * Closed-Captions) specified in the master manifest.\r\n *\r\n * @param {Object} settings\r\n *        Object containing required information for setting up the media groups\r\n * @param {Tech} settings.tech\r\n *        The tech of the player\r\n * @param {Object} settings.requestOptions\r\n *        XHR request options used by the segment loaders\r\n * @param {PlaylistLoader} settings.masterPlaylistLoader\r\n *        PlaylistLoader for the master source\r\n * @param {VhsHandler} settings.vhs\r\n *        VHS SourceHandler\r\n * @param {Object} settings.master\r\n *        The parsed master manifest\r\n * @param {Object} settings.mediaTypes\r\n *        Object to store the loaders, tracks, and utility methods for each media type\r\n * @param {Function} settings.blacklistCurrentPlaylist\r\n *        Blacklists the current rendition and forces a rendition switch.\r\n * @function setupMediaGroups\r\n */\r\n\r\n\r\nvar setupMediaGroups = function setupMediaGroups(settings) {\r\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\r\n    initialize[type](type, settings);\r\n  });\r\n  var mediaTypes = settings.mediaTypes,\r\n      masterPlaylistLoader = settings.masterPlaylistLoader,\r\n      tech = settings.tech,\r\n      vhs = settings.vhs,\r\n      _settings$segmentLoad3 = settings.segmentLoaders,\r\n      audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\r\n      mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\r\n\r\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\r\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\r\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\r\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\r\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\r\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\r\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\r\n  }); // DO NOT enable the default subtitle or caption track.\r\n  // DO enable the default audio track\r\n\r\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\r\n\r\n  if (audioGroup) {\r\n    var groupId = (audioGroup.filter(function (group) {\r\n      return group[\"default\"];\r\n    })[0] || audioGroup[0]).id;\r\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\r\n    mediaTypes.AUDIO.onGroupChanged();\r\n    mediaTypes.AUDIO.onTrackChanged();\r\n    var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\r\n    // track is changed, but needs to be handled here since the track may not be considered\r\n    // changed on the first call to onTrackChanged\r\n\r\n    if (!activeAudioGroup.playlistLoader) {\r\n      // either audio is muxed with video or the stream is audio only\r\n      mainSegmentLoader.setAudio(true);\r\n    } else {\r\n      // audio is demuxed\r\n      mainSegmentLoader.setAudio(false);\r\n      audioSegmentLoader.setAudio(true);\r\n    }\r\n  }\r\n\r\n  masterPlaylistLoader.on('mediachange', function () {\r\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\r\n      return mediaTypes[type].onGroupChanged();\r\n    });\r\n  });\r\n  masterPlaylistLoader.on('mediachanging', function () {\r\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\r\n      return mediaTypes[type].onGroupChanging();\r\n    });\r\n  }); // custom audio track change event handler for usage event\r\n\r\n  var onAudioTrackChanged = function onAudioTrackChanged() {\r\n    mediaTypes.AUDIO.onTrackChanged();\r\n    tech.trigger({\r\n      type: 'usage',\r\n      name: 'vhs-audio-change'\r\n    });\r\n    tech.trigger({\r\n      type: 'usage',\r\n      name: 'hls-audio-change'\r\n    });\r\n  };\r\n\r\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\r\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\r\n  vhs.on('dispose', function () {\r\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\r\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\r\n  }); // clear existing audio tracks and add the ones we just created\r\n\r\n  tech.clearTracks('audio');\r\n\r\n  for (var id in mediaTypes.AUDIO.tracks) {\r\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\r\n  }\r\n};\r\n/**\r\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\r\n * media type\r\n *\r\n * @return {Object}\r\n *         Object to store the loaders, tracks, and utility methods for each media type\r\n * @function createMediaTypes\r\n */\r\n\r\n\r\nvar createMediaTypes = function createMediaTypes() {\r\n  var mediaTypes = {};\r\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\r\n    mediaTypes[type] = {\r\n      groups: {},\r\n      tracks: {},\r\n      activePlaylistLoader: null,\r\n      activeGroup: noop,\r\n      activeTrack: noop,\r\n      getActiveGroup: noop,\r\n      onGroupChanged: noop,\r\n      onTrackChanged: noop,\r\n      lastTrack_: null,\r\n      logger_: logger(\"MediaGroups[\" + type + \"]\")\r\n    };\r\n  });\r\n  return mediaTypes;\r\n};\r\n\r\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\r\nvar Vhs$1; // SegmentLoader stats that need to have each loader's\r\n// values summed to calculate the final value\r\n\r\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\r\n\r\nvar sumLoaderStat = function sumLoaderStat(stat) {\r\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\r\n};\r\n\r\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\r\n  var currentPlaylist = _ref.currentPlaylist,\r\n      buffered = _ref.buffered,\r\n      currentTime = _ref.currentTime,\r\n      nextPlaylist = _ref.nextPlaylist,\r\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\r\n      bufferHighWaterLine = _ref.bufferHighWaterLine,\r\n      duration = _ref.duration,\r\n      experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\r\n      log = _ref.log; // we have no other playlist to switch to\r\n\r\n  if (!nextPlaylist) {\r\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\r\n    return false;\r\n  }\r\n\r\n  var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\r\n\r\n  if (!currentPlaylist) {\r\n    log(sharedLogLine + \" as current playlist is not set\");\r\n    return true;\r\n  } // no need to switch if playlist is the same\r\n\r\n\r\n  if (nextPlaylist.id === currentPlaylist.id) {\r\n    return false;\r\n  } // determine if current time is in a buffered range.\r\n\r\n\r\n  var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\r\n  // This is because in LIVE, the player plays 3 segments from the end of the\r\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\r\n  // in those segments, a viewer will never experience a rendition upswitch.\r\n\r\n  if (!currentPlaylist.endList) {\r\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\r\n    // doubles the time to first playback.\r\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\r\n      log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\r\n      return false;\r\n    }\r\n\r\n    log(sharedLogLine + \" as current playlist is live\");\r\n    return true;\r\n  }\r\n\r\n  var forwardBuffer = timeAheadOf(buffered, currentTime);\r\n  var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\r\n  // duration is below the max potential low water line\r\n\r\n  if (duration < maxBufferLowWaterLine) {\r\n    log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\r\n    return true;\r\n  }\r\n\r\n  var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\r\n  var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\r\n  // we can switch down\r\n\r\n  if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\r\n    var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\r\n\r\n    if (experimentalBufferBasedABR) {\r\n      logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\r\n    }\r\n\r\n    log(logLine);\r\n    return true;\r\n  } // and if our buffer is higher than the low water line,\r\n  // we can switch up\r\n\r\n\r\n  if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\r\n    var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\r\n\r\n    if (experimentalBufferBasedABR) {\r\n      _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\r\n    }\r\n\r\n    log(_logLine);\r\n    return true;\r\n  }\r\n\r\n  log(\"not \" + sharedLogLine + \" as no switching criteria met\");\r\n  return false;\r\n};\r\n/**\r\n * the master playlist controller controller all interactons\r\n * between playlists and segmentloaders. At this time this mainly\r\n * involves a master playlist and a series of audio playlists\r\n * if they are available\r\n *\r\n * @class MasterPlaylistController\r\n * @extends videojs.EventTarget\r\n */\r\n\r\n\r\nvar MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\r\n  _inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\r\n\r\n  function MasterPlaylistController(options) {\r\n    var _this;\r\n\r\n    _this = _videojs$EventTarget.call(this) || this;\r\n    var src = options.src,\r\n        handleManifestRedirects = options.handleManifestRedirects,\r\n        withCredentials = options.withCredentials,\r\n        tech = options.tech,\r\n        bandwidth = options.bandwidth,\r\n        externVhs = options.externVhs,\r\n        useCueTags = options.useCueTags,\r\n        blacklistDuration = options.blacklistDuration,\r\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\r\n        sourceType = options.sourceType,\r\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\r\n        experimentalBufferBasedABR = options.experimentalBufferBasedABR,\r\n        experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\r\n        captionServices = options.captionServices;\r\n\r\n    if (!src) {\r\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\r\n    }\r\n\r\n    var maxPlaylistRetries = options.maxPlaylistRetries;\r\n\r\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\r\n      maxPlaylistRetries = Infinity;\r\n    }\r\n\r\n    Vhs$1 = externVhs;\r\n    _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\r\n    _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\r\n    _this.withCredentials = withCredentials;\r\n    _this.tech_ = tech;\r\n    _this.vhs_ = tech.vhs;\r\n    _this.sourceType_ = sourceType;\r\n    _this.useCueTags_ = useCueTags;\r\n    _this.blacklistDuration = blacklistDuration;\r\n    _this.maxPlaylistRetries = maxPlaylistRetries;\r\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\r\n\r\n    if (_this.useCueTags_) {\r\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\r\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\r\n    }\r\n\r\n    _this.requestOptions_ = {\r\n      withCredentials: withCredentials,\r\n      handleManifestRedirects: handleManifestRedirects,\r\n      maxPlaylistRetries: maxPlaylistRetries,\r\n      timeout: null\r\n    };\r\n\r\n    _this.on('error', _this.pauseLoading);\r\n\r\n    _this.mediaTypes_ = createMediaTypes();\r\n    _this.mediaSource = new window$1.MediaSource();\r\n    _this.handleDurationChange_ = _this.handleDurationChange_.bind(_assertThisInitialized(_this));\r\n    _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(_assertThisInitialized(_this));\r\n    _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(_assertThisInitialized(_this));\r\n\r\n    _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\r\n\r\n\r\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\r\n\r\n    _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\r\n    // everything, and the MediaSource should not be detached without a proper disposal\r\n\r\n\r\n    _this.seekable_ = videojs.createTimeRanges();\r\n    _this.hasPlayed_ = false;\r\n    _this.syncController_ = new SyncController(options);\r\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\r\n      kind: 'metadata',\r\n      label: 'segment-metadata'\r\n    }, false).track;\r\n    _this.decrypter_ = new Decrypter();\r\n    _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\r\n    _this.inbandTextTracks_ = {};\r\n    _this.timelineChangeController_ = new TimelineChangeController();\r\n    var segmentLoaderSettings = {\r\n      vhs: _this.vhs_,\r\n      parse708captions: options.parse708captions,\r\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\r\n      captionServices: captionServices,\r\n      mediaSource: _this.mediaSource,\r\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\r\n      seekable: function seekable() {\r\n        return _this.seekable();\r\n      },\r\n      seeking: function seeking() {\r\n        return _this.tech_.seeking();\r\n      },\r\n      duration: function duration() {\r\n        return _this.duration();\r\n      },\r\n      hasPlayed: function hasPlayed() {\r\n        return _this.hasPlayed_;\r\n      },\r\n      goalBufferLength: function goalBufferLength() {\r\n        return _this.goalBufferLength();\r\n      },\r\n      bandwidth: bandwidth,\r\n      syncController: _this.syncController_,\r\n      decrypter: _this.decrypter_,\r\n      sourceType: _this.sourceType_,\r\n      inbandTextTracks: _this.inbandTextTracks_,\r\n      cacheEncryptionKeys: cacheEncryptionKeys,\r\n      sourceUpdater: _this.sourceUpdater_,\r\n      timelineChangeController: _this.timelineChangeController_,\r\n      experimentalExactManifestTimings: options.experimentalExactManifestTimings\r\n    }; // The source type check not only determines whether a special DASH playlist loader\r\n    // should be used, but also covers the case where the provided src is a vhs-json\r\n    // manifest object (instead of a URL). In the case of vhs-json, the default\r\n    // PlaylistLoader should be used.\r\n\r\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\r\n\r\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\r\n    // combined audio/video or just video when alternate audio track is selected\r\n\r\n\r\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\r\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\r\n      loaderType: 'main'\r\n    }), options); // alternate audio track\r\n\r\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\r\n      loaderType: 'audio'\r\n    }), options);\r\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\r\n      loaderType: 'vtt',\r\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks,\r\n      loadVttJs: function loadVttJs() {\r\n        return new Promise(function (resolve, reject) {\r\n          function onLoad() {\r\n            tech.off('vttjserror', onError);\r\n            resolve();\r\n          }\r\n\r\n          function onError() {\r\n            tech.off('vttjsloaded', onLoad);\r\n            reject();\r\n          }\r\n\r\n          tech.one('vttjsloaded', onLoad);\r\n          tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\r\n\r\n          tech.addWebVttScript_();\r\n        });\r\n      }\r\n    }), options);\r\n\r\n    _this.setupSegmentLoaderListeners_();\r\n\r\n    if (_this.experimentalBufferBasedABR) {\r\n      _this.masterPlaylistLoader_.one('loadedplaylist', function () {\r\n        return _this.startABRTimer_();\r\n      });\r\n\r\n      _this.tech_.on('pause', function () {\r\n        return _this.stopABRTimer_();\r\n      });\r\n\r\n      _this.tech_.on('play', function () {\r\n        return _this.startABRTimer_();\r\n      });\r\n    } // Create SegmentLoader stat-getters\r\n    // mediaRequests_\r\n    // mediaRequestsAborted_\r\n    // mediaRequestsTimedout_\r\n    // mediaRequestsErrored_\r\n    // mediaTransferDuration_\r\n    // mediaBytesTransferred_\r\n    // mediaAppends_\r\n\r\n\r\n    loaderStats.forEach(function (stat) {\r\n      _this[stat + '_'] = sumLoaderStat.bind(_assertThisInitialized(_this), stat);\r\n    });\r\n    _this.logger_ = logger('MPC');\r\n    _this.triggeredFmp4Usage = false;\r\n\r\n    if (_this.tech_.preload() === 'none') {\r\n      _this.loadOnPlay_ = function () {\r\n        _this.loadOnPlay_ = null;\r\n\r\n        _this.masterPlaylistLoader_.load();\r\n      };\r\n\r\n      _this.tech_.one('play', _this.loadOnPlay_);\r\n    } else {\r\n      _this.masterPlaylistLoader_.load();\r\n    }\r\n\r\n    _this.timeToLoadedData__ = -1;\r\n    _this.mainAppendsToLoadedData__ = -1;\r\n    _this.audioAppendsToLoadedData__ = -1;\r\n    var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\r\n\r\n    _this.tech_.one(event, function () {\r\n      var timeToLoadedDataStart = Date.now();\r\n\r\n      _this.tech_.one('loadeddata', function () {\r\n        _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\r\n        _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\r\n        _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\r\n      });\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = MasterPlaylistController.prototype;\r\n\r\n  _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\r\n    return this.mainAppendsToLoadedData__;\r\n  };\r\n\r\n  _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\r\n    return this.audioAppendsToLoadedData__;\r\n  };\r\n\r\n  _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\r\n    var main = this.mainAppendsToLoadedData_();\r\n    var audio = this.audioAppendsToLoadedData_();\r\n\r\n    if (main === -1 || audio === -1) {\r\n      return -1;\r\n    }\r\n\r\n    return main + audio;\r\n  };\r\n\r\n  _proto.timeToLoadedData_ = function timeToLoadedData_() {\r\n    return this.timeToLoadedData__;\r\n  }\r\n  /**\r\n   * Run selectPlaylist and switch to the new playlist if we should\r\n   *\r\n   * @param {string} [reason=abr] a reason for why the ABR check is made\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.checkABR_ = function checkABR_(reason) {\r\n    if (reason === void 0) {\r\n      reason = 'abr';\r\n    }\r\n\r\n    var nextPlaylist = this.selectPlaylist();\r\n\r\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\r\n      this.switchMedia_(nextPlaylist, reason);\r\n    }\r\n  };\r\n\r\n  _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\r\n    var oldMedia = this.media();\r\n    var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\r\n    var newId = playlist.id || playlist.uri;\r\n\r\n    if (oldId && oldId !== newId) {\r\n      this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: \"vhs-rendition-change-\" + cause\r\n      });\r\n    }\r\n\r\n    this.masterPlaylistLoader_.media(playlist, delay);\r\n  }\r\n  /**\r\n   * Start a timer that periodically calls checkABR_\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.startABRTimer_ = function startABRTimer_() {\r\n    var _this2 = this;\r\n\r\n    this.stopABRTimer_();\r\n    this.abrTimer_ = window$1.setInterval(function () {\r\n      return _this2.checkABR_();\r\n    }, 250);\r\n  }\r\n  /**\r\n   * Stop the timer that periodically calls checkABR_\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.stopABRTimer_ = function stopABRTimer_() {\r\n    // if we're scrubbing, we don't need to pause.\r\n    // This getter will be added to Video.js in version 7.11.\r\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\r\n      return;\r\n    }\r\n\r\n    window$1.clearInterval(this.abrTimer_);\r\n    this.abrTimer_ = null;\r\n  }\r\n  /**\r\n   * Get a list of playlists for the currently selected audio playlist\r\n   *\r\n   * @return {Array} the array of audio playlists\r\n   */\r\n  ;\r\n\r\n  _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\r\n    var master = this.master();\r\n    var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\r\n    // assume that the audio tracks are contained in masters\r\n    // playlist array, use that or an empty array.\r\n\r\n    if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\r\n      return defaultPlaylists;\r\n    }\r\n\r\n    var AUDIO = master.mediaGroups.AUDIO;\r\n    var groupKeys = Object.keys(AUDIO);\r\n    var track; // get the current active track\r\n\r\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\r\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\r\n    } else {\r\n      // default group is `main` or just the first group.\r\n      var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\r\n\r\n      for (var label in defaultGroup) {\r\n        if (defaultGroup[label][\"default\"]) {\r\n          track = {\r\n            label: label\r\n          };\r\n          break;\r\n        }\r\n      }\r\n    } // no active track no playlists.\r\n\r\n\r\n    if (!track) {\r\n      return defaultPlaylists;\r\n    }\r\n\r\n    var playlists = []; // get all of the playlists that are possible for the\r\n    // active track.\r\n\r\n    for (var group in AUDIO) {\r\n      if (AUDIO[group][track.label]) {\r\n        var properties = AUDIO[group][track.label];\r\n\r\n        if (properties.playlists && properties.playlists.length) {\r\n          playlists.push.apply(playlists, properties.playlists);\r\n        } else if (properties.uri) {\r\n          playlists.push(properties);\r\n        } else if (master.playlists.length) {\r\n          // if an audio group does not have a uri\r\n          // see if we have main playlists that use it as a group.\r\n          // if we do then add those to the playlists list.\r\n          for (var i = 0; i < master.playlists.length; i++) {\r\n            var playlist = master.playlists[i];\r\n\r\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\r\n              playlists.push(playlist);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!playlists.length) {\r\n      return defaultPlaylists;\r\n    }\r\n\r\n    return playlists;\r\n  }\r\n  /**\r\n   * Register event handlers on the master playlist loader. A helper\r\n   * function for construction time.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\r\n    var _this3 = this;\r\n\r\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\r\n      var media = _this3.masterPlaylistLoader_.media();\r\n\r\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\r\n      // timeout the request.\r\n\r\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\r\n        _this3.requestOptions_.timeout = 0;\r\n      } else {\r\n        _this3.requestOptions_.timeout = requestTimeout;\r\n      } // if this isn't a live video and preload permits, start\r\n      // downloading segments\r\n\r\n\r\n      if (media.endList && _this3.tech_.preload() !== 'none') {\r\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\r\n\r\n        _this3.mainSegmentLoader_.load();\r\n      }\r\n\r\n      setupMediaGroups({\r\n        sourceType: _this3.sourceType_,\r\n        segmentLoaders: {\r\n          AUDIO: _this3.audioSegmentLoader_,\r\n          SUBTITLES: _this3.subtitleSegmentLoader_,\r\n          main: _this3.mainSegmentLoader_\r\n        },\r\n        tech: _this3.tech_,\r\n        requestOptions: _this3.requestOptions_,\r\n        masterPlaylistLoader: _this3.masterPlaylistLoader_,\r\n        vhs: _this3.vhs_,\r\n        master: _this3.master(),\r\n        mediaTypes: _this3.mediaTypes_,\r\n        blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\r\n      });\r\n\r\n      _this3.triggerPresenceUsage_(_this3.master(), media);\r\n\r\n      _this3.setupFirstPlay();\r\n\r\n      if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\r\n        _this3.trigger('selectedinitialmedia');\r\n      } else {\r\n        // We must wait for the active audio playlist loader to\r\n        // finish setting up before triggering this event so the\r\n        // representations API and EME setup is correct\r\n        _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\r\n          _this3.trigger('selectedinitialmedia');\r\n        });\r\n      }\r\n    });\r\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\r\n      if (_this3.loadOnPlay_) {\r\n        _this3.tech_.off('play', _this3.loadOnPlay_);\r\n      }\r\n\r\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media();\r\n\r\n      if (!updatedPlaylist) {\r\n        // exclude any variants that are not supported by the browser before selecting\r\n        // an initial media as the playlist selectors do not consider browser support\r\n        _this3.excludeUnsupportedVariants_();\r\n\r\n        var selectedMedia;\r\n\r\n        if (_this3.enableLowInitialPlaylist) {\r\n          selectedMedia = _this3.selectInitialPlaylist();\r\n        }\r\n\r\n        if (!selectedMedia) {\r\n          selectedMedia = _this3.selectPlaylist();\r\n        }\r\n\r\n        if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\r\n          return;\r\n        }\r\n\r\n        _this3.initialMedia_ = selectedMedia;\r\n\r\n        _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\r\n        // fire again since the playlist will be requested. In the case of vhs-json\r\n        // (where the manifest object is provided as the source), when the media\r\n        // playlist's `segments` list is already available, a media playlist won't be\r\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\r\n        // called on its own here.\r\n\r\n\r\n        var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\r\n\r\n        if (!haveJsonSource) {\r\n          return;\r\n        }\r\n\r\n        updatedPlaylist = _this3.initialMedia_;\r\n      }\r\n\r\n      _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\r\n    });\r\n    this.masterPlaylistLoader_.on('error', function () {\r\n      _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\r\n    });\r\n    this.masterPlaylistLoader_.on('mediachanging', function () {\r\n      _this3.mainSegmentLoader_.abort();\r\n\r\n      _this3.mainSegmentLoader_.pause();\r\n    });\r\n    this.masterPlaylistLoader_.on('mediachange', function () {\r\n      var media = _this3.masterPlaylistLoader_.media();\r\n\r\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\r\n      // timeout the request.\r\n\r\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\r\n        _this3.requestOptions_.timeout = 0;\r\n      } else {\r\n        _this3.requestOptions_.timeout = requestTimeout;\r\n      }\r\n\r\n      _this3.masterPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\r\n      // that the segments have changed in some way and use that to\r\n      // update the SegmentLoader instead of doing it twice here and\r\n      // on `loadedplaylist`\r\n\r\n\r\n      _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\r\n\r\n      _this3.mainSegmentLoader_.load();\r\n\r\n      _this3.tech_.trigger({\r\n        type: 'mediachange',\r\n        bubbles: true\r\n      });\r\n    });\r\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\r\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\r\n      // excluded for not-changing. We likely just have a really slowly updating\r\n      // playlist.\r\n\r\n\r\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\r\n        return;\r\n      }\r\n\r\n      var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\r\n\r\n      if (playlistOutdated) {\r\n        // Playlist has stopped updating and we're stuck at its end. Try to\r\n        // blacklist it and switch to another playlist in the hope that that\r\n        // one is updating (and give the player a chance to re-adjust to the\r\n        // safe live point).\r\n        _this3.blacklistCurrentPlaylist({\r\n          message: 'Playlist no longer updating.',\r\n          reason: 'playlist-unchanged'\r\n        }); // useful for monitoring QoS\r\n\r\n\r\n        _this3.tech_.trigger('playliststuck');\r\n      }\r\n    });\r\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\r\n      _this3.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-rendition-disabled'\r\n      });\r\n\r\n      _this3.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-rendition-disabled'\r\n      });\r\n    });\r\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\r\n      _this3.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-rendition-enabled'\r\n      });\r\n\r\n      _this3.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-rendition-enabled'\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Given an updated media playlist (whether it was loaded for the first time, or\r\n   * refreshed for live playlists), update any relevant properties and state to reflect\r\n   * changes in the media that should be accounted for (e.g., cues and duration).\r\n   *\r\n   * @param {Object} updatedPlaylist the updated media playlist object\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\r\n    if (this.useCueTags_) {\r\n      this.updateAdCues_(updatedPlaylist);\r\n    } // TODO: Create a new event on the PlaylistLoader that signals\r\n    // that the segments have changed in some way and use that to\r\n    // update the SegmentLoader instead of doing it twice here and\r\n    // on `mediachange`\r\n\r\n\r\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\r\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\r\n    // as it is possible that it was temporarily stopped while waiting for\r\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\r\n\r\n    if (!this.tech_.paused()) {\r\n      this.mainSegmentLoader_.load();\r\n\r\n      if (this.audioSegmentLoader_) {\r\n        this.audioSegmentLoader_.load();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * A helper function for triggerring presence usage events once per source\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\r\n    var mediaGroups = master.mediaGroups || {};\r\n    var defaultDemuxed = true;\r\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\r\n\r\n    for (var mediaGroup in mediaGroups.AUDIO) {\r\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\r\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\r\n\r\n        if (!properties.uri) {\r\n          defaultDemuxed = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (defaultDemuxed) {\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-demuxed'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-demuxed'\r\n      });\r\n    }\r\n\r\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-webvtt'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-webvtt'\r\n      });\r\n    }\r\n\r\n    if (Vhs$1.Playlist.isAes(media)) {\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-aes'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-aes'\r\n      });\r\n    }\r\n\r\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-alternate-audio'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-alternate-audio'\r\n      });\r\n    }\r\n\r\n    if (this.useCueTags_) {\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-playlist-cue-tags'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-playlist-cue-tags'\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\r\n    var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\r\n    var currentTime = this.tech_.currentTime();\r\n    var bufferLowWaterLine = this.bufferLowWaterLine();\r\n    var bufferHighWaterLine = this.bufferHighWaterLine();\r\n    var buffered = this.tech_.buffered();\r\n    return shouldSwitchToMedia({\r\n      buffered: buffered,\r\n      currentTime: currentTime,\r\n      currentPlaylist: currentPlaylist,\r\n      nextPlaylist: nextPlaylist,\r\n      bufferLowWaterLine: bufferLowWaterLine,\r\n      bufferHighWaterLine: bufferHighWaterLine,\r\n      duration: this.duration(),\r\n      experimentalBufferBasedABR: this.experimentalBufferBasedABR,\r\n      log: this.logger_\r\n    });\r\n  }\r\n  /**\r\n   * Register event handlers on the segment loaders. A helper function\r\n   * for construction time.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\r\n    var _this4 = this;\r\n\r\n    this.mainSegmentLoader_.on('bandwidthupdate', function () {\r\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\r\n      // useful to check to see if a rendition switch should be made.\r\n      _this4.checkABR_('bandwidthupdate');\r\n\r\n      _this4.tech_.trigger('bandwidthupdate');\r\n    });\r\n    this.mainSegmentLoader_.on('timeout', function () {\r\n      if (_this4.experimentalBufferBasedABR) {\r\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\r\n        // Here the only consideration is that for buffer based ABR there's no guarantee\r\n        // of an immediate switch (since the bandwidth is averaged with a timeout\r\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\r\n        _this4.mainSegmentLoader_.load();\r\n      }\r\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\r\n    // based ABR.\r\n\r\n    if (!this.experimentalBufferBasedABR) {\r\n      this.mainSegmentLoader_.on('progress', function () {\r\n        _this4.trigger('progress');\r\n      });\r\n    }\r\n\r\n    this.mainSegmentLoader_.on('error', function () {\r\n      _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\r\n    });\r\n    this.mainSegmentLoader_.on('appenderror', function () {\r\n      _this4.error = _this4.mainSegmentLoader_.error_;\r\n\r\n      _this4.trigger('error');\r\n    });\r\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\r\n      _this4.onSyncInfoUpdate_();\r\n    });\r\n    this.mainSegmentLoader_.on('timestampoffset', function () {\r\n      _this4.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-timestamp-offset'\r\n      });\r\n\r\n      _this4.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-timestamp-offset'\r\n      });\r\n    });\r\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\r\n      _this4.onSyncInfoUpdate_();\r\n    });\r\n    this.audioSegmentLoader_.on('appenderror', function () {\r\n      _this4.error = _this4.audioSegmentLoader_.error_;\r\n\r\n      _this4.trigger('error');\r\n    });\r\n    this.mainSegmentLoader_.on('ended', function () {\r\n      _this4.logger_('main segment loader ended');\r\n\r\n      _this4.onEndOfStream();\r\n    });\r\n    this.mainSegmentLoader_.on('earlyabort', function (event) {\r\n      // never try to early abort with the new ABR algorithm\r\n      if (_this4.experimentalBufferBasedABR) {\r\n        return;\r\n      }\r\n\r\n      _this4.delegateLoaders_('all', ['abort']);\r\n\r\n      _this4.blacklistCurrentPlaylist({\r\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\r\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\r\n    });\r\n\r\n    var updateCodecs = function updateCodecs() {\r\n      if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\r\n        return _this4.tryToCreateSourceBuffers_();\r\n      }\r\n\r\n      var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\r\n\r\n\r\n      if (!codecs) {\r\n        return;\r\n      }\r\n\r\n      _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\r\n    };\r\n\r\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\r\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\r\n    this.mainSegmentLoader_.on('fmp4', function () {\r\n      if (!_this4.triggeredFmp4Usage) {\r\n        _this4.tech_.trigger({\r\n          type: 'usage',\r\n          name: 'vhs-fmp4'\r\n        });\r\n\r\n        _this4.tech_.trigger({\r\n          type: 'usage',\r\n          name: 'hls-fmp4'\r\n        });\r\n\r\n        _this4.triggeredFmp4Usage = true;\r\n      }\r\n    });\r\n    this.audioSegmentLoader_.on('fmp4', function () {\r\n      if (!_this4.triggeredFmp4Usage) {\r\n        _this4.tech_.trigger({\r\n          type: 'usage',\r\n          name: 'vhs-fmp4'\r\n        });\r\n\r\n        _this4.tech_.trigger({\r\n          type: 'usage',\r\n          name: 'hls-fmp4'\r\n        });\r\n\r\n        _this4.triggeredFmp4Usage = true;\r\n      }\r\n    });\r\n    this.audioSegmentLoader_.on('ended', function () {\r\n      _this4.logger_('audioSegmentLoader ended');\r\n\r\n      _this4.onEndOfStream();\r\n    });\r\n  };\r\n\r\n  _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\r\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\r\n  }\r\n  /**\r\n   * Call load on our SegmentLoaders\r\n   */\r\n  ;\r\n\r\n  _proto.load = function load() {\r\n    this.mainSegmentLoader_.load();\r\n\r\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\r\n      this.audioSegmentLoader_.load();\r\n    }\r\n\r\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\r\n      this.subtitleSegmentLoader_.load();\r\n    }\r\n  }\r\n  /**\r\n   * Re-tune playback quality level for the current player\r\n   * conditions without performing destructive actions, like\r\n   * removing already buffered content\r\n   *\r\n   * @private\r\n   * @deprecated\r\n   */\r\n  ;\r\n\r\n  _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\r\n    if (media === void 0) {\r\n      media = this.selectPlaylist();\r\n    }\r\n\r\n    this.fastQualityChange_(media);\r\n  }\r\n  /**\r\n   * Re-tune playback quality level for the current player\r\n   * conditions. This method will perform destructive actions like removing\r\n   * already buffered content in order to readjust the currently active\r\n   * playlist quickly. This is good for manual quality changes\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.fastQualityChange_ = function fastQualityChange_(media) {\r\n    var _this5 = this;\r\n\r\n    if (media === void 0) {\r\n      media = this.selectPlaylist();\r\n    }\r\n\r\n    if (media === this.masterPlaylistLoader_.media()) {\r\n      this.logger_('skipping fastQualityChange because new media is same as old');\r\n      return;\r\n    }\r\n\r\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\r\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\r\n    // ahead is roughly the minimum that will accomplish this across a variety of content\r\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\r\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\r\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\r\n\r\n    this.mainSegmentLoader_.resetEverything(function () {\r\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\r\n      // from the previously enabled rendition to load before the new playlist has finished loading\r\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\r\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\r\n      } else {\r\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\r\n      }\r\n    }); // don't need to reset audio as it is reset when media changes\r\n  }\r\n  /**\r\n   * Begin playback.\r\n   */\r\n  ;\r\n\r\n  _proto.play = function play() {\r\n    if (this.setupFirstPlay()) {\r\n      return;\r\n    }\r\n\r\n    if (this.tech_.ended()) {\r\n      this.tech_.setCurrentTime(0);\r\n    }\r\n\r\n    if (this.hasPlayed_) {\r\n      this.load();\r\n    }\r\n\r\n    var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\r\n    // seek forward to the live point\r\n\r\n    if (this.tech_.duration() === Infinity) {\r\n      if (this.tech_.currentTime() < seekable.start(0)) {\r\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Seek to the latest media position if this is a live video and the\r\n   * player and video are loaded and initialized.\r\n   */\r\n  ;\r\n\r\n  _proto.setupFirstPlay = function setupFirstPlay() {\r\n    var _this6 = this;\r\n\r\n    var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\r\n    //  If 1) there is no active media\r\n    //     2) the player is paused\r\n    //     3) the first play has already been setup\r\n    // then exit early\r\n\r\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\r\n      return false;\r\n    } // when the video is a live stream\r\n\r\n\r\n    if (!media.endList) {\r\n      var seekable = this.seekable();\r\n\r\n      if (!seekable.length) {\r\n        // without a seekable range, the player cannot seek to begin buffering at the live\r\n        // point\r\n        return false;\r\n      }\r\n\r\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\r\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\r\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\r\n        this.tech_.one('loadedmetadata', function () {\r\n          _this6.trigger('firstplay');\r\n\r\n          _this6.tech_.setCurrentTime(seekable.end(0));\r\n\r\n          _this6.hasPlayed_ = true;\r\n        });\r\n        return false;\r\n      } // trigger firstplay to inform the source handler to ignore the next seek event\r\n\r\n\r\n      this.trigger('firstplay'); // seek to the live point\r\n\r\n      this.tech_.setCurrentTime(seekable.end(0));\r\n    }\r\n\r\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\r\n\r\n    this.load();\r\n    return true;\r\n  }\r\n  /**\r\n   * handle the sourceopen event on the MediaSource\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleSourceOpen_ = function handleSourceOpen_() {\r\n    // Only attempt to create the source buffer if none already exist.\r\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\r\n    // after `endOfStream` has been called (in response to a seek for instance)\r\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\r\n    // code in video.js but is required because play() must be invoked\r\n    // *after* the media source has opened.\r\n\r\n    if (this.tech_.autoplay()) {\r\n      var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\r\n      // on browsers which return a promise\r\n\r\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\r\n        playPromise.then(null, function (e) {});\r\n      }\r\n    }\r\n\r\n    this.trigger('sourceopen');\r\n  }\r\n  /**\r\n   * handle the sourceended event on the MediaSource\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleSourceEnded_ = function handleSourceEnded_() {\r\n    if (!this.inbandTextTracks_.metadataTrack_) {\r\n      return;\r\n    }\r\n\r\n    var cues = this.inbandTextTracks_.metadataTrack_.cues;\r\n\r\n    if (!cues || !cues.length) {\r\n      return;\r\n    }\r\n\r\n    var duration = this.duration();\r\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\r\n  }\r\n  /**\r\n   * handle the durationchange event on the MediaSource\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.handleDurationChange_ = function handleDurationChange_() {\r\n    this.tech_.trigger('durationchange');\r\n  }\r\n  /**\r\n   * Calls endOfStream on the media source when all active stream types have called\r\n   * endOfStream\r\n   *\r\n   * @param {string} streamType\r\n   *        Stream type of the segment loader that called endOfStream\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.onEndOfStream = function onEndOfStream() {\r\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\r\n\r\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\r\n      var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\r\n\r\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\r\n        // if we do not know if the main segment loader contains video yet or if we\r\n        // definitively know the main segment loader contains video, then we need to wait\r\n        // for both main and audio segment loaders to call endOfStream\r\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\r\n      } else {\r\n        // otherwise just rely on the audio loader\r\n        isEndOfStream = this.audioSegmentLoader_.ended_;\r\n      }\r\n    }\r\n\r\n    if (!isEndOfStream) {\r\n      return;\r\n    }\r\n\r\n    this.stopABRTimer_();\r\n    this.sourceUpdater_.endOfStream();\r\n  }\r\n  /**\r\n   * Check if a playlist has stopped being updated\r\n   *\r\n   * @param {Object} playlist the media playlist object\r\n   * @return {boolean} whether the playlist has stopped being updated or not\r\n   */\r\n  ;\r\n\r\n  _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\r\n    var seekable = this.seekable();\r\n\r\n    if (!seekable.length) {\r\n      // playlist doesn't have enough information to determine whether we are stuck\r\n      return false;\r\n    }\r\n\r\n    var expired = this.syncController_.getExpiredTime(playlist, this.duration());\r\n\r\n    if (expired === null) {\r\n      return false;\r\n    } // does not use the safe live end to calculate playlist end, since we\r\n    // don't want to say we are stuck while there is still content\r\n\r\n\r\n    var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\r\n    var currentTime = this.tech_.currentTime();\r\n    var buffered = this.tech_.buffered();\r\n\r\n    if (!buffered.length) {\r\n      // return true if the playhead reached the absolute end of the playlist\r\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\r\n    }\r\n\r\n    var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\r\n    // end of playlist\r\n\r\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\r\n  }\r\n  /**\r\n   * Blacklists a playlist when an error occurs for a set amount of time\r\n   * making it unavailable for selection by the rendition selection algorithm\r\n   * and then forces a new playlist (rendition) selection.\r\n   *\r\n   * @param {Object=} error an optional error that may include the playlist\r\n   * to blacklist\r\n   * @param {number=} blacklistDuration an optional number of seconds to blacklist the\r\n   * playlist\r\n   */\r\n  ;\r\n\r\n  _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\r\n    if (error === void 0) {\r\n      error = {};\r\n    } // If the `error` was generated by the playlist loader, it will contain\r\n    // the playlist we were trying to load (but failed) and that should be\r\n    // blacklisted instead of the currently selected playlist which is likely\r\n    // out-of-date in this scenario\r\n\r\n\r\n    var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\r\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\r\n    // trying to load the master OR while we were disposing of the tech\r\n\r\n    if (!currentPlaylist) {\r\n      this.error = error;\r\n\r\n      if (this.mediaSource.readyState !== 'open') {\r\n        this.trigger('error');\r\n      } else {\r\n        this.sourceUpdater_.endOfStream('network');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    currentPlaylist.playlistErrors_++;\r\n    var playlists = this.masterPlaylistLoader_.master.playlists;\r\n    var enabledPlaylists = playlists.filter(isEnabled);\r\n    var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\r\n    // forever\r\n\r\n    if (playlists.length === 1 && blacklistDuration !== Infinity) {\r\n      videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\r\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\r\n\r\n      return this.masterPlaylistLoader_.load(isFinalRendition);\r\n    }\r\n\r\n    if (isFinalRendition) {\r\n      // Since we're on the final non-blacklisted playlist, and we're about to blacklist\r\n      // it, instead of erring the player or retrying this playlist, clear out the current\r\n      // blacklist. This allows other playlists to be attempted in case any have been\r\n      // fixed.\r\n      var reincluded = false;\r\n      playlists.forEach(function (playlist) {\r\n        // skip current playlist which is about to be blacklisted\r\n        if (playlist === currentPlaylist) {\r\n          return;\r\n        }\r\n\r\n        var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\r\n\r\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\r\n          reincluded = true;\r\n          delete playlist.excludeUntil;\r\n        }\r\n      });\r\n\r\n      if (reincluded) {\r\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\r\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\r\n        // case where the player might be stuck and looping through \"dead\" playlists.\r\n\r\n        this.tech_.trigger('retryplaylist');\r\n      }\r\n    } // Blacklist this playlist\r\n\r\n\r\n    var excludeUntil;\r\n\r\n    if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\r\n      excludeUntil = Infinity;\r\n    } else {\r\n      excludeUntil = Date.now() + blacklistDuration * 1000;\r\n    }\r\n\r\n    currentPlaylist.excludeUntil = excludeUntil;\r\n\r\n    if (error.reason) {\r\n      currentPlaylist.lastExcludeReason_ = error.reason;\r\n    }\r\n\r\n    this.tech_.trigger('blacklistplaylist');\r\n    this.tech_.trigger({\r\n      type: 'usage',\r\n      name: 'vhs-rendition-blacklisted'\r\n    });\r\n    this.tech_.trigger({\r\n      type: 'usage',\r\n      name: 'hls-rendition-blacklisted'\r\n    }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\r\n    // Would be something like media().id !=== currentPlaylist.id and we  would need something\r\n    // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\r\n    // from loading a new playlist on any blacklist.\r\n    // Select a new playlist\r\n\r\n    var nextPlaylist = this.selectPlaylist();\r\n\r\n    if (!nextPlaylist) {\r\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\r\n      this.trigger('error');\r\n      return;\r\n    }\r\n\r\n    var logFn = error.internal ? this.logger_ : videojs.log.warn;\r\n    var errorMessage = error.message ? ' ' + error.message : '';\r\n    logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\r\n\r\n    if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\r\n      this.delegateLoaders_('audio', ['abort', 'pause']);\r\n    } // if subtitle group changed reset subtitle loaders\r\n\r\n\r\n    if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\r\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\r\n    }\r\n\r\n    this.delegateLoaders_('main', ['abort', 'pause']);\r\n    var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\r\n    var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\r\n\r\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\r\n  }\r\n  /**\r\n   * Pause all segment/playlist loaders\r\n   */\r\n  ;\r\n\r\n  _proto.pauseLoading = function pauseLoading() {\r\n    this.delegateLoaders_('all', ['abort', 'pause']);\r\n    this.stopABRTimer_();\r\n  }\r\n  /**\r\n   * Call a set of functions in order on playlist loaders, segment loaders,\r\n   * or both types of loaders.\r\n   *\r\n   * @param {string} filter\r\n   *        Filter loaders that should call fnNames using a string. Can be:\r\n   *        * all - run on all loaders\r\n   *        * audio - run on all audio loaders\r\n   *        * subtitle - run on all subtitle loaders\r\n   *        * main - run on the main/master loaders\r\n   *\r\n   * @param {Array|string} fnNames\r\n   *        A string or array of function names to call.\r\n   */\r\n  ;\r\n\r\n  _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\r\n    var _this7 = this;\r\n\r\n    var loaders = [];\r\n    var dontFilterPlaylist = filter === 'all';\r\n\r\n    if (dontFilterPlaylist || filter === 'main') {\r\n      loaders.push(this.masterPlaylistLoader_);\r\n    }\r\n\r\n    var mediaTypes = [];\r\n\r\n    if (dontFilterPlaylist || filter === 'audio') {\r\n      mediaTypes.push('AUDIO');\r\n    }\r\n\r\n    if (dontFilterPlaylist || filter === 'subtitle') {\r\n      mediaTypes.push('CLOSED-CAPTIONS');\r\n      mediaTypes.push('SUBTITLES');\r\n    }\r\n\r\n    mediaTypes.forEach(function (mediaType) {\r\n      var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\r\n\r\n      if (loader) {\r\n        loaders.push(loader);\r\n      }\r\n    });\r\n    ['main', 'audio', 'subtitle'].forEach(function (name) {\r\n      var loader = _this7[name + \"SegmentLoader_\"];\r\n\r\n      if (loader && (filter === name || filter === 'all')) {\r\n        loaders.push(loader);\r\n      }\r\n    });\r\n    loaders.forEach(function (loader) {\r\n      return fnNames.forEach(function (fnName) {\r\n        if (typeof loader[fnName] === 'function') {\r\n          loader[fnName]();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * set the current time on all segment loaders\r\n   *\r\n   * @param {TimeRange} currentTime the current time to set\r\n   * @return {TimeRange} the current time\r\n   */\r\n  ;\r\n\r\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\r\n    var buffered = findRange(this.tech_.buffered(), currentTime);\r\n\r\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\r\n      // return immediately if the metadata is not ready yet\r\n      return 0;\r\n    } // it's clearly an edge-case but don't thrown an error if asked to\r\n    // seek within an empty playlist\r\n\r\n\r\n    if (!this.masterPlaylistLoader_.media().segments) {\r\n      return 0;\r\n    } // if the seek location is already buffered, continue buffering as usual\r\n\r\n\r\n    if (buffered && buffered.length) {\r\n      return currentTime;\r\n    } // cancel outstanding requests so we begin buffering at the new\r\n    // location\r\n\r\n\r\n    this.mainSegmentLoader_.resetEverything();\r\n    this.mainSegmentLoader_.abort();\r\n\r\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\r\n      this.audioSegmentLoader_.resetEverything();\r\n      this.audioSegmentLoader_.abort();\r\n    }\r\n\r\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\r\n      this.subtitleSegmentLoader_.resetEverything();\r\n      this.subtitleSegmentLoader_.abort();\r\n    } // start segment loader loading in case they are paused\r\n\r\n\r\n    this.load();\r\n  }\r\n  /**\r\n   * get the current duration\r\n   *\r\n   * @return {TimeRange} the duration\r\n   */\r\n  ;\r\n\r\n  _proto.duration = function duration() {\r\n    if (!this.masterPlaylistLoader_) {\r\n      return 0;\r\n    }\r\n\r\n    var media = this.masterPlaylistLoader_.media();\r\n\r\n    if (!media) {\r\n      // no playlists loaded yet, so can't determine a duration\r\n      return 0;\r\n    } // Don't rely on the media source for duration in the case of a live playlist since\r\n    // setting the native MediaSource's duration to infinity ends up with consequences to\r\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\r\n    //\r\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\r\n    // however, few browsers have support for setLiveSeekableRange()\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\r\n    //\r\n    // Until a time when the duration of the media source can be set to infinity, and a\r\n    // seekable range specified across browsers, just return Infinity.\r\n\r\n\r\n    if (!media.endList) {\r\n      return Infinity;\r\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\r\n    // available). If it's not available, fall back to a playlist-calculated estimate.\r\n\r\n\r\n    if (this.mediaSource) {\r\n      return this.mediaSource.duration;\r\n    }\r\n\r\n    return Vhs$1.Playlist.duration(media);\r\n  }\r\n  /**\r\n   * check the seekable range\r\n   *\r\n   * @return {TimeRange} the seekable range\r\n   */\r\n  ;\r\n\r\n  _proto.seekable = function seekable() {\r\n    return this.seekable_;\r\n  };\r\n\r\n  _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\r\n    var audioSeekable; // TODO check for creation of both source buffers before updating seekable\r\n    //\r\n    // A fix was made to this function where a check for\r\n    // this.sourceUpdater_.hasCreatedSourceBuffers\r\n    // was added to ensure that both source buffers were created before seekable was\r\n    // updated. However, it originally had a bug where it was checking for a true and\r\n    // returning early instead of checking for false. Setting it to check for false to\r\n    // return early though created other issues. A call to play() would check for seekable\r\n    // end without verifying that a seekable range was present. In addition, even checking\r\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\r\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\r\n    // thereby starting live streams at the beginning of the stream rather than at the end.\r\n    //\r\n    // This conditional should be fixed to wait for the creation of two source buffers at\r\n    // the same time as the other sections of code are fixed to properly seek to live and\r\n    // not throw an error due to checking for a seekable end when no seekable range exists.\r\n    //\r\n    // For now, fall back to the older behavior, with the understanding that the seekable\r\n    // range may not be completely correct, leading to a suboptimal initial live point.\r\n\r\n    if (!this.masterPlaylistLoader_) {\r\n      return;\r\n    }\r\n\r\n    var media = this.masterPlaylistLoader_.media();\r\n\r\n    if (!media) {\r\n      return;\r\n    }\r\n\r\n    var expired = this.syncController_.getExpiredTime(media, this.duration());\r\n\r\n    if (expired === null) {\r\n      // not enough information to update seekable\r\n      return;\r\n    }\r\n\r\n    var master = this.masterPlaylistLoader_.master;\r\n    var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\r\n\r\n    if (mainSeekable.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\r\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\r\n      expired = this.syncController_.getExpiredTime(media, this.duration());\r\n\r\n      if (expired === null) {\r\n        return;\r\n      }\r\n\r\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\r\n\r\n      if (audioSeekable.length === 0) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var oldEnd;\r\n    var oldStart;\r\n\r\n    if (this.seekable_ && this.seekable_.length) {\r\n      oldEnd = this.seekable_.end(0);\r\n      oldStart = this.seekable_.start(0);\r\n    }\r\n\r\n    if (!audioSeekable) {\r\n      // seekable has been calculated based on buffering video data so it\r\n      // can be returned directly\r\n      this.seekable_ = mainSeekable;\r\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\r\n      // seekables are pretty far off, rely on main\r\n      this.seekable_ = mainSeekable;\r\n    } else {\r\n      this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\r\n    } // seekable is the same as last time\r\n\r\n\r\n    if (this.seekable_ && this.seekable_.length) {\r\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\r\n    this.tech_.trigger('seekablechanged');\r\n  }\r\n  /**\r\n   * Update the player duration\r\n   */\r\n  ;\r\n\r\n  _proto.updateDuration = function updateDuration(isLive) {\r\n    if (this.updateDuration_) {\r\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\r\n      this.updateDuration_ = null;\r\n    }\r\n\r\n    if (this.mediaSource.readyState !== 'open') {\r\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\r\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\r\n      return;\r\n    }\r\n\r\n    if (isLive) {\r\n      var seekable = this.seekable();\r\n\r\n      if (!seekable.length) {\r\n        return;\r\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\r\n      // be set to Infinity (even though this would be expected for a live playlist), since\r\n      // setting the native MediaSource's duration to infinity ends up with consequences to\r\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\r\n      //\r\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\r\n      // however, few browsers have support for setLiveSeekableRange()\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\r\n      //\r\n      // Until a time when the duration of the media source can be set to infinity, and a\r\n      // seekable range specified across browsers, the duration should be greater than or\r\n      // equal to the last possible seekable value.\r\n      // MediaSource duration starts as NaN\r\n      // It is possible (and probable) that this case will never be reached for many\r\n      // sources, since the MediaSource reports duration as the highest value without\r\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\r\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\r\n      // time will be between 0 and 100, the native media source may report the duration\r\n      // as 200. However, since we report duration separate from the media source (as\r\n      // Infinity), and as long as the native media source duration value is greater than\r\n      // our reported seekable range, seeks will work as expected. The large number as\r\n      // duration for live is actually a strategy used by some players to work around the\r\n      // issue of live seekable ranges cited above.\r\n\r\n\r\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\r\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var buffered = this.tech_.buffered();\r\n    var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\r\n\r\n    if (buffered.length > 0) {\r\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\r\n    }\r\n\r\n    if (this.mediaSource.duration !== duration) {\r\n      this.sourceUpdater_.setDuration(duration);\r\n    }\r\n  }\r\n  /**\r\n   * dispose of the MasterPlaylistController and everything\r\n   * that it controls\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    var _this8 = this;\r\n\r\n    this.trigger('dispose');\r\n    this.decrypter_.terminate();\r\n    this.masterPlaylistLoader_.dispose();\r\n    this.mainSegmentLoader_.dispose();\r\n\r\n    if (this.loadOnPlay_) {\r\n      this.tech_.off('play', this.loadOnPlay_);\r\n    }\r\n\r\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\r\n      var groups = _this8.mediaTypes_[type].groups;\r\n\r\n      for (var id in groups) {\r\n        groups[id].forEach(function (group) {\r\n          if (group.playlistLoader) {\r\n            group.playlistLoader.dispose();\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.audioSegmentLoader_.dispose();\r\n    this.subtitleSegmentLoader_.dispose();\r\n    this.sourceUpdater_.dispose();\r\n    this.timelineChangeController_.dispose();\r\n    this.stopABRTimer_();\r\n\r\n    if (this.updateDuration_) {\r\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\r\n    }\r\n\r\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\r\n\r\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\r\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\r\n    this.off();\r\n  }\r\n  /**\r\n   * return the master playlist object if we have one\r\n   *\r\n   * @return {Object} the master playlist object that we parsed\r\n   */\r\n  ;\r\n\r\n  _proto.master = function master() {\r\n    return this.masterPlaylistLoader_.master;\r\n  }\r\n  /**\r\n   * return the currently selected playlist\r\n   *\r\n   * @return {Object} the currently selected playlist object that we parsed\r\n   */\r\n  ;\r\n\r\n  _proto.media = function media() {\r\n    // playlist loader will not return media if it has not been fully loaded\r\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\r\n  };\r\n\r\n  _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\r\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\r\n    var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\r\n    // otherwise check on the segment loader.\r\n\r\n    var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\r\n\r\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\r\n    var _this9 = this;\r\n\r\n    var media = {\r\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\r\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\r\n    };\r\n    var playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\r\n\r\n    media.video = media.main;\r\n    var playlistCodecs = codecsForPlaylist(this.master(), playlist);\r\n    var codecs = {};\r\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\r\n\r\n    if (media.main.hasVideo) {\r\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\r\n    }\r\n\r\n    if (media.main.isMuxed) {\r\n      codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\r\n    }\r\n\r\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\r\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\r\n\r\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\r\n    } // no codecs, no playback.\r\n\r\n\r\n    if (!codecs.audio && !codecs.video) {\r\n      this.blacklistCurrentPlaylist({\r\n        playlist: playlist,\r\n        message: 'Could not determine codecs for playlist.',\r\n        blacklistDuration: Infinity\r\n      });\r\n      return;\r\n    } // fmp4 relies on browser support, while ts relies on muxer support\r\n\r\n\r\n    var supportFunction = function supportFunction(isFmp4, codec) {\r\n      return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\r\n    };\r\n\r\n    var unsupportedCodecs = {};\r\n    var unsupportedAudio;\r\n    ['video', 'audio'].forEach(function (type) {\r\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\r\n        var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\r\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\r\n        unsupportedCodecs[supporter].push(codecs[type]);\r\n\r\n        if (type === 'audio') {\r\n          unsupportedAudio = supporter;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\r\n      var audioGroup = playlist.attributes.AUDIO;\r\n      this.master().playlists.forEach(function (variant) {\r\n        var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\r\n\r\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\r\n          variant.excludeUntil = Infinity;\r\n        }\r\n      });\r\n      this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\r\n    } // if we have any unsupported codecs blacklist this playlist.\r\n\r\n\r\n    if (Object.keys(unsupportedCodecs).length) {\r\n      var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\r\n        if (acc) {\r\n          acc += ', ';\r\n        }\r\n\r\n        acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\r\n        return acc;\r\n      }, '') + '.';\r\n      this.blacklistCurrentPlaylist({\r\n        playlist: playlist,\r\n        internal: true,\r\n        message: message,\r\n        blacklistDuration: Infinity\r\n      });\r\n      return;\r\n    } // check if codec switching is happening\r\n\r\n\r\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\r\n      var switchMessages = [];\r\n      ['video', 'audio'].forEach(function (type) {\r\n        var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\r\n        var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\r\n\r\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\r\n          switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\r\n        }\r\n      });\r\n\r\n      if (switchMessages.length) {\r\n        this.blacklistCurrentPlaylist({\r\n          playlist: playlist,\r\n          message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\r\n          blacklistDuration: Infinity,\r\n          internal: true\r\n        });\r\n        return;\r\n      }\r\n    } // TODO: when using the muxer shouldn't we just return\r\n    // the codecs that the muxer outputs?\r\n\r\n\r\n    return codecs;\r\n  }\r\n  /**\r\n   * Create source buffers and exlude any incompatible renditions.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\r\n    // media source is not ready yet or sourceBuffers are already\r\n    // created.\r\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\r\n      return;\r\n    }\r\n\r\n    if (!this.areMediaTypesKnown_()) {\r\n      return;\r\n    }\r\n\r\n    var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\r\n\r\n    if (!codecs) {\r\n      return;\r\n    }\r\n\r\n    this.sourceUpdater_.createSourceBuffers(codecs);\r\n    var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\r\n    this.excludeIncompatibleVariants_(codecString);\r\n  }\r\n  /**\r\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\r\n   */\r\n  ;\r\n\r\n  _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\r\n    var _this10 = this;\r\n\r\n    var playlists = this.master().playlists;\r\n    var ids = []; // TODO: why don't we have a property to loop through all\r\n    // playlist? Why did we ever mix indexes and keys?\r\n\r\n    Object.keys(playlists).forEach(function (key) {\r\n      var variant = playlists[key]; // check if we already processed this playlist.\r\n\r\n      if (ids.indexOf(variant.id) !== -1) {\r\n        return;\r\n      }\r\n\r\n      ids.push(variant.id);\r\n      var codecs = codecsForPlaylist(_this10.master, variant);\r\n      var unsupported = [];\r\n\r\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\r\n        unsupported.push(\"audio codec \" + codecs.audio);\r\n      }\r\n\r\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\r\n        unsupported.push(\"video codec \" + codecs.video);\r\n      }\r\n\r\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\r\n        unsupported.push(\"text codec \" + codecs.text);\r\n      }\r\n\r\n      if (unsupported.length) {\r\n        variant.excludeUntil = Infinity;\r\n\r\n        _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Blacklist playlists that are known to be codec or\r\n   * stream-incompatible with the SourceBuffer configuration. For\r\n   * instance, Media Source Extensions would cause the video element to\r\n   * stall waiting for video data if you switched from a variant with\r\n   * video and audio to an audio-only one.\r\n   *\r\n   * @param {Object} media a media playlist compatible with the current\r\n   * set of SourceBuffers. Variants in the current master playlist that\r\n   * do not appear to have compatible codec or stream configurations\r\n   * will be excluded from the default playlist selection algorithm\r\n   * indefinitely.\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\r\n    var _this11 = this;\r\n\r\n    var ids = [];\r\n    var playlists = this.master().playlists;\r\n    var codecs = unwrapCodecList(parseCodecs(codecString));\r\n    var codecCount_ = codecCount(codecs);\r\n    var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\r\n    var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\r\n    Object.keys(playlists).forEach(function (key) {\r\n      var variant = playlists[key]; // check if we already processed this playlist.\r\n      // or it if it is already excluded forever.\r\n\r\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\r\n        return;\r\n      }\r\n\r\n      ids.push(variant.id);\r\n      var blacklistReasons = []; // get codecs from the playlist for this variant\r\n\r\n      var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\r\n      var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\r\n      // variant is incompatible. Wait for mux.js to probe\r\n\r\n      if (!variantCodecs.audio && !variantCodecs.video) {\r\n        return;\r\n      } // TODO: we can support this by removing the\r\n      // old media source and creating a new one, but it will take some work.\r\n      // The number of streams cannot change\r\n\r\n\r\n      if (variantCodecCount !== codecCount_) {\r\n        blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\r\n      } // only exclude playlists by codec change, if codecs cannot switch\r\n      // during playback.\r\n\r\n\r\n      if (!_this11.sourceUpdater_.canChangeType()) {\r\n        var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\r\n        var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\r\n\r\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\r\n          blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\r\n        } // the audio codec cannot change\r\n\r\n\r\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\r\n          blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\r\n        }\r\n      }\r\n\r\n      if (blacklistReasons.length) {\r\n        variant.excludeUntil = Infinity;\r\n\r\n        _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.updateAdCues_ = function updateAdCues_(media) {\r\n    var offset = 0;\r\n    var seekable = this.seekable();\r\n\r\n    if (seekable.length) {\r\n      offset = seekable.start(0);\r\n    }\r\n\r\n    updateAdCues(media, this.cueTagsTrack_, offset);\r\n  }\r\n  /**\r\n   * Calculates the desired forward buffer length based on current time\r\n   *\r\n   * @return {number} Desired forward buffer length in seconds\r\n   */\r\n  ;\r\n\r\n  _proto.goalBufferLength = function goalBufferLength() {\r\n    var currentTime = this.tech_.currentTime();\r\n    var initial = Config.GOAL_BUFFER_LENGTH;\r\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\r\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\r\n    return Math.min(initial + currentTime * rate, max);\r\n  }\r\n  /**\r\n   * Calculates the desired buffer low water line based on current time\r\n   *\r\n   * @return {number} Desired buffer low water line in seconds\r\n   */\r\n  ;\r\n\r\n  _proto.bufferLowWaterLine = function bufferLowWaterLine() {\r\n    var currentTime = this.tech_.currentTime();\r\n    var initial = Config.BUFFER_LOW_WATER_LINE;\r\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\r\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\r\n    var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\r\n    return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\r\n  };\r\n\r\n  _proto.bufferHighWaterLine = function bufferHighWaterLine() {\r\n    return Config.BUFFER_HIGH_WATER_LINE;\r\n  };\r\n\r\n  return MasterPlaylistController;\r\n}(videojs.EventTarget);\r\n/**\r\n * Returns a function that acts as the Enable/disable playlist function.\r\n *\r\n * @param {PlaylistLoader} loader - The master playlist loader\r\n * @param {string} playlistID - id of the playlist\r\n * @param {Function} changePlaylistFn - A function to be called after a\r\n * playlist's enabled-state has been changed. Will NOT be called if a\r\n * playlist's enabled-state is unchanged\r\n * @param {boolean=} enable - Value to set the playlist enabled-state to\r\n * or if undefined returns the current enabled-state for the playlist\r\n * @return {Function} Function for setting/getting enabled\r\n */\r\n\r\n\r\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\r\n  return function (enable) {\r\n    var playlist = loader.master.playlists[playlistID];\r\n    var incompatible = isIncompatible(playlist);\r\n    var currentlyEnabled = isEnabled(playlist);\r\n\r\n    if (typeof enable === 'undefined') {\r\n      return currentlyEnabled;\r\n    }\r\n\r\n    if (enable) {\r\n      delete playlist.disabled;\r\n    } else {\r\n      playlist.disabled = true;\r\n    }\r\n\r\n    if (enable !== currentlyEnabled && !incompatible) {\r\n      // Ensure the outside world knows about our changes\r\n      changePlaylistFn();\r\n\r\n      if (enable) {\r\n        loader.trigger('renditionenabled');\r\n      } else {\r\n        loader.trigger('renditiondisabled');\r\n      }\r\n    }\r\n\r\n    return enable;\r\n  };\r\n};\r\n/**\r\n * The representation object encapsulates the publicly visible information\r\n * in a media playlist along with a setter/getter-type function (enabled)\r\n * for changing the enabled-state of a particular playlist entry\r\n *\r\n * @class Representation\r\n */\r\n\r\n\r\nvar Representation = function Representation(vhsHandler, playlist, id) {\r\n  var mpc = vhsHandler.masterPlaylistController_,\r\n      smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\r\n\r\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\r\n  var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\r\n\r\n  if (playlist.attributes) {\r\n    var resolution = playlist.attributes.RESOLUTION;\r\n    this.width = resolution && resolution.width;\r\n    this.height = resolution && resolution.height;\r\n    this.bandwidth = playlist.attributes.BANDWIDTH;\r\n    this.frameRate = playlist.attributes['FRAME-RATE'];\r\n  }\r\n\r\n  this.codecs = codecsForPlaylist(mpc.master(), playlist);\r\n  this.playlist = playlist; // The id is simply the ordinality of the media playlist\r\n  // within the master playlist\r\n\r\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\r\n  // specific variant\r\n\r\n  this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\r\n};\r\n/**\r\n * A mixin function that adds the `representations` api to an instance\r\n * of the VhsHandler class\r\n *\r\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\r\n * representation API into\r\n */\r\n\r\n\r\nvar renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\r\n  // Add a single API-specific function to the VhsHandler instance\r\n  vhsHandler.representations = function () {\r\n    var master = vhsHandler.masterPlaylistController_.master();\r\n    var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\r\n\r\n    if (!playlists) {\r\n      return [];\r\n    }\r\n\r\n    return playlists.filter(function (media) {\r\n      return !isIncompatible(media);\r\n    }).map(function (e, i) {\r\n      return new Representation(vhsHandler, e, e.id);\r\n    });\r\n  };\r\n};\r\n/**\r\n * @file playback-watcher.js\r\n *\r\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\r\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\r\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\r\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\r\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\r\n */\r\n\r\n\r\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\r\n/**\r\n * @class PlaybackWatcher\r\n */\r\n\r\nvar PlaybackWatcher = /*#__PURE__*/function () {\r\n  /**\r\n   * Represents an PlaybackWatcher object.\r\n   *\r\n   * @class\r\n   * @param {Object} options an object that includes the tech and settings\r\n   */\r\n  function PlaybackWatcher(options) {\r\n    var _this = this;\r\n\r\n    this.masterPlaylistController_ = options.masterPlaylistController;\r\n    this.tech_ = options.tech;\r\n    this.seekable = options.seekable;\r\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\r\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\r\n    this.media = options.media;\r\n    this.consecutiveUpdates = 0;\r\n    this.lastRecordedTime = null;\r\n    this.timer_ = null;\r\n    this.checkCurrentTimeTimeout_ = null;\r\n    this.logger_ = logger('PlaybackWatcher');\r\n    this.logger_('initialize');\r\n\r\n    var playHandler = function playHandler() {\r\n      return _this.monitorCurrentTime_();\r\n    };\r\n\r\n    var canPlayHandler = function canPlayHandler() {\r\n      return _this.monitorCurrentTime_();\r\n    };\r\n\r\n    var waitingHandler = function waitingHandler() {\r\n      return _this.techWaiting_();\r\n    };\r\n\r\n    var cancelTimerHandler = function cancelTimerHandler() {\r\n      return _this.cancelTimer_();\r\n    };\r\n\r\n    var mpc = this.masterPlaylistController_;\r\n    var loaderTypes = ['main', 'subtitle', 'audio'];\r\n    var loaderChecks = {};\r\n    loaderTypes.forEach(function (type) {\r\n      loaderChecks[type] = {\r\n        reset: function reset() {\r\n          return _this.resetSegmentDownloads_(type);\r\n        },\r\n        updateend: function updateend() {\r\n          return _this.checkSegmentDownloads_(type);\r\n        }\r\n      };\r\n      mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\r\n      // isn't changing we want to reset. We cannot assume that the new rendition\r\n      // will also be stalled, until after new appends.\r\n\r\n      mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\r\n      // This prevents one segment playlists (single vtt or single segment content)\r\n      // from being detected as stalling. As the buffer will not change in those cases, since\r\n      // the buffer is the entire video duration.\r\n\r\n      _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\r\n    });\r\n    /**\r\n     * We check if a seek was into a gap through the following steps:\r\n     * 1. We get a seeking event and we do not get a seeked event. This means that\r\n     *    a seek was attempted but not completed.\r\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\r\n     *    removed everything from our buffer and appended a segment, and should be ready\r\n     *    to check for gaps.\r\n     */\r\n\r\n    var setSeekingHandlers = function setSeekingHandlers(fn) {\r\n      ['main', 'audio'].forEach(function (type) {\r\n        mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\r\n      });\r\n    };\r\n\r\n    this.seekingAppendCheck_ = function () {\r\n      if (_this.fixesBadSeeks_()) {\r\n        _this.consecutiveUpdates = 0;\r\n        _this.lastRecordedTime = _this.tech_.currentTime();\r\n        setSeekingHandlers('off');\r\n      }\r\n    };\r\n\r\n    this.clearSeekingAppendCheck_ = function () {\r\n      return setSeekingHandlers('off');\r\n    };\r\n\r\n    this.watchForBadSeeking_ = function () {\r\n      _this.clearSeekingAppendCheck_();\r\n\r\n      setSeekingHandlers('on');\r\n    };\r\n\r\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\r\n    this.tech_.on('seeking', this.watchForBadSeeking_);\r\n    this.tech_.on('waiting', waitingHandler);\r\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\r\n    this.tech_.on('canplay', canPlayHandler);\r\n    /*\r\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\r\n      is surfaced in one of two ways:\r\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\r\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\r\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\r\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\r\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\r\n          even if the player is in a playing state\r\n    */\r\n\r\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\r\n\r\n    this.dispose = function () {\r\n      _this.clearSeekingAppendCheck_();\r\n\r\n      _this.logger_('dispose');\r\n\r\n      _this.tech_.off('waiting', waitingHandler);\r\n\r\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\r\n\r\n      _this.tech_.off('canplay', canPlayHandler);\r\n\r\n      _this.tech_.off('play', playHandler);\r\n\r\n      _this.tech_.off('seeking', _this.watchForBadSeeking_);\r\n\r\n      _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\r\n\r\n      loaderTypes.forEach(function (type) {\r\n        mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\r\n        mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\r\n\r\n        _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\r\n      });\r\n\r\n      if (_this.checkCurrentTimeTimeout_) {\r\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\r\n      }\r\n\r\n      _this.cancelTimer_();\r\n    };\r\n  }\r\n  /**\r\n   * Periodically check current time to see if playback stopped\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var _proto = PlaybackWatcher.prototype;\r\n\r\n  _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\r\n    this.checkCurrentTime_();\r\n\r\n    if (this.checkCurrentTimeTimeout_) {\r\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\r\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\r\n\r\n\r\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\r\n  }\r\n  /**\r\n   * Reset stalled download stats for a specific type of loader\r\n   *\r\n   * @param {string} type\r\n   *        The segment loader type to check.\r\n   *\r\n   * @listens SegmentLoader#playlistupdate\r\n   * @listens Tech#seeking\r\n   * @listens Tech#seeked\r\n   */\r\n  ;\r\n\r\n  _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\r\n    var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\r\n\r\n    if (this[type + \"StalledDownloads_\"] > 0) {\r\n      this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\r\n    }\r\n\r\n    this[type + \"StalledDownloads_\"] = 0;\r\n    this[type + \"Buffered_\"] = loader.buffered_();\r\n  }\r\n  /**\r\n   * Checks on every segment `appendsdone` to see\r\n   * if segment appends are making progress. If they are not\r\n   * and we are still downloading bytes. We blacklist the playlist.\r\n   *\r\n   * @param {string} type\r\n   *        The segment loader type to check.\r\n   *\r\n   * @listens SegmentLoader#appendsdone\r\n   */\r\n  ;\r\n\r\n  _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\r\n    var mpc = this.masterPlaylistController_;\r\n    var loader = mpc[type + \"SegmentLoader_\"];\r\n    var buffered = loader.buffered_();\r\n    var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\r\n    this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\r\n    // the buffered value for this loader changed\r\n    // appends are working\r\n\r\n    if (isBufferedDifferent) {\r\n      this.resetSegmentDownloads_(type);\r\n      return;\r\n    }\r\n\r\n    this[type + \"StalledDownloads_\"]++;\r\n    this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\r\n      playlistId: loader.playlist_ && loader.playlist_.id,\r\n      buffered: timeRangesToArray(buffered)\r\n    }); // after 10 possibly stalled appends with no reset, exclude\r\n\r\n    if (this[type + \"StalledDownloads_\"] < 10) {\r\n      return;\r\n    }\r\n\r\n    this.logger_(type + \" loader stalled download exclusion\");\r\n    this.resetSegmentDownloads_(type);\r\n    this.tech_.trigger({\r\n      type: 'usage',\r\n      name: \"vhs-\" + type + \"-download-exclusion\"\r\n    });\r\n\r\n    if (type === 'subtitle') {\r\n      return;\r\n    } // TODO: should we exclude audio tracks rather than main tracks\r\n    // when type is audio?\r\n\r\n\r\n    mpc.blacklistCurrentPlaylist({\r\n      message: \"Excessive \" + type + \" segment downloading detected.\"\r\n    }, Infinity);\r\n  }\r\n  /**\r\n   * The purpose of this function is to emulate the \"waiting\" event on\r\n   * browsers that do not emit it when they are waiting for more\r\n   * data to continue playback\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.checkCurrentTime_ = function checkCurrentTime_() {\r\n    if (this.tech_.paused() || this.tech_.seeking()) {\r\n      return;\r\n    }\r\n\r\n    var currentTime = this.tech_.currentTime();\r\n    var buffered = this.tech_.buffered();\r\n\r\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\r\n      // If current time is at the end of the final buffered region, then any playback\r\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\r\n      // should fire a `waiting` event in this scenario, but due to browser and tech\r\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\r\n      // responding to a native `waiting` event when the tech fails to emit one.\r\n      return this.techWaiting_();\r\n    }\r\n\r\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\r\n      this.consecutiveUpdates++;\r\n      this.waiting_();\r\n    } else if (currentTime === this.lastRecordedTime) {\r\n      this.consecutiveUpdates++;\r\n    } else {\r\n      this.consecutiveUpdates = 0;\r\n      this.lastRecordedTime = currentTime;\r\n    }\r\n  }\r\n  /**\r\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\r\n   * designed to detect that we are stalled\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.cancelTimer_ = function cancelTimer_() {\r\n    this.consecutiveUpdates = 0;\r\n\r\n    if (this.timer_) {\r\n      this.logger_('cancelTimer_');\r\n      clearTimeout(this.timer_);\r\n    }\r\n\r\n    this.timer_ = null;\r\n  }\r\n  /**\r\n   * Fixes situations where there's a bad seek\r\n   *\r\n   * @return {boolean} whether an action was taken to fix the seek\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\r\n    var seeking = this.tech_.seeking();\r\n\r\n    if (!seeking) {\r\n      return false;\r\n    } // TODO: It's possible that these seekable checks should be moved out of this function\r\n    // and into a function that runs on seekablechange. It's also possible that we only need\r\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\r\n    // seekable range.\r\n\r\n\r\n    var seekable = this.seekable();\r\n    var currentTime = this.tech_.currentTime();\r\n    var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\r\n    var seekTo;\r\n\r\n    if (isAfterSeekableRange) {\r\n      var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\r\n\r\n      seekTo = seekableEnd;\r\n    }\r\n\r\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\r\n      var seekableStart = seekable.start(0); // sync to the beginning of the live window\r\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\r\n\r\n      seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\r\n      // happen in live with a 3 segment playlist), then don't use a time delta\r\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\r\n    }\r\n\r\n    if (typeof seekTo !== 'undefined') {\r\n      this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\r\n      this.tech_.setCurrentTime(seekTo);\r\n      return true;\r\n    }\r\n\r\n    var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\r\n    var buffered = this.tech_.buffered();\r\n    var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\r\n    var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\r\n    var media = this.media(); // verify that at least two segment durations or one part duration have been\r\n    // appended before checking for a gap.\r\n\r\n    var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\r\n    // appended before checking for a gap.\r\n\r\n    var bufferedToCheck = [audioBuffered, videoBuffered];\r\n\r\n    for (var i = 0; i < bufferedToCheck.length; i++) {\r\n      // skip null buffered\r\n      if (!bufferedToCheck[i]) {\r\n        continue;\r\n      }\r\n\r\n      var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\r\n      // duration behind we haven't appended enough to call this a bad seek.\r\n\r\n      if (timeAhead < minAppendedDuration) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\r\n    // to seek over the gap\r\n\r\n    if (nextRange.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\r\n    this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\r\n    this.tech_.setCurrentTime(seekTo);\r\n    return true;\r\n  }\r\n  /**\r\n   * Handler for situations when we determine the player is waiting.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.waiting_ = function waiting_() {\r\n    if (this.techWaiting_()) {\r\n      return;\r\n    } // All tech waiting checks failed. Use last resort correction\r\n\r\n\r\n    var currentTime = this.tech_.currentTime();\r\n    var buffered = this.tech_.buffered();\r\n    var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\r\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\r\n    // currentTime is usually enough to kickstart the player. This checks that the player\r\n    // is currently within a buffered region before attempting a corrective seek.\r\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\r\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\r\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\r\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\r\n\r\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\r\n      this.cancelTimer_();\r\n      this.tech_.setCurrentTime(currentTime);\r\n      this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\r\n\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-unknown-waiting'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-unknown-waiting'\r\n      });\r\n      return;\r\n    }\r\n  }\r\n  /**\r\n   * Handler for situations when the tech fires a `waiting` event\r\n   *\r\n   * @return {boolean}\r\n   *         True if an action (or none) was needed to correct the waiting. False if no\r\n   *         checks passed\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.techWaiting_ = function techWaiting_() {\r\n    var seekable = this.seekable();\r\n    var currentTime = this.tech_.currentTime();\r\n\r\n    if (this.tech_.seeking() || this.timer_ !== null) {\r\n      // Tech is seeking or already waiting on another action, no action needed\r\n      return true;\r\n    }\r\n\r\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\r\n      var livePoint = seekable.end(seekable.length - 1);\r\n      this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\r\n      this.cancelTimer_();\r\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\r\n\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-live-resync'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-live-resync'\r\n      });\r\n      return true;\r\n    }\r\n\r\n    var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\r\n    var buffered = this.tech_.buffered();\r\n    var videoUnderflow = this.videoUnderflow_({\r\n      audioBuffered: sourceUpdater.audioBuffered(),\r\n      videoBuffered: sourceUpdater.videoBuffered(),\r\n      currentTime: currentTime\r\n    });\r\n\r\n    if (videoUnderflow) {\r\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\r\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\r\n      // allows the video to catch up to the audio position without losing any audio\r\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\r\n      this.cancelTimer_();\r\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\r\n\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-video-underflow'\r\n      });\r\n      this.tech_.trigger({\r\n        type: 'usage',\r\n        name: 'hls-video-underflow'\r\n      });\r\n      return true;\r\n    }\r\n\r\n    var nextRange = findNextRange(buffered, currentTime); // check for gap\r\n\r\n    if (nextRange.length > 0) {\r\n      var difference = nextRange.start(0) - currentTime;\r\n      this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\r\n      this.cancelTimer_();\r\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\r\n      return true;\r\n    } // All checks failed. Returning false to indicate failure to correct waiting\r\n\r\n\r\n    return false;\r\n  };\r\n\r\n  _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\r\n    if (allowSeeksWithinUnsafeLiveWindow === void 0) {\r\n      allowSeeksWithinUnsafeLiveWindow = false;\r\n    }\r\n\r\n    if (!seekable.length) {\r\n      // we can't make a solid case if there's no seekable, default to false\r\n      return false;\r\n    }\r\n\r\n    var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\r\n    var isLive = !playlist.endList;\r\n\r\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\r\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\r\n    }\r\n\r\n    if (currentTime > allowedEnd) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\r\n    if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\r\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\r\n    var videoBuffered = _ref.videoBuffered,\r\n        audioBuffered = _ref.audioBuffered,\r\n        currentTime = _ref.currentTime; // audio only content will not have video underflow :)\r\n\r\n    if (!videoBuffered) {\r\n      return;\r\n    }\r\n\r\n    var gap; // find a gap in demuxed content.\r\n\r\n    if (videoBuffered.length && audioBuffered.length) {\r\n      // in Chrome audio will continue to play for ~3s when we run out of video\r\n      // so we have to check that the video buffer did have some buffer in the\r\n      // past.\r\n      var lastVideoRange = findRange(videoBuffered, currentTime - 3);\r\n      var videoRange = findRange(videoBuffered, currentTime);\r\n      var audioRange = findRange(audioBuffered, currentTime);\r\n\r\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\r\n        gap = {\r\n          start: lastVideoRange.end(0),\r\n          end: audioRange.end(0)\r\n        };\r\n      } // find a gap in muxed content.\r\n\r\n    } else {\r\n      var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\r\n      // stuck in a gap due to video underflow.\r\n\r\n      if (!nextRange.length) {\r\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\r\n      }\r\n    }\r\n\r\n    if (gap) {\r\n      this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Timer callback. If playback still has not proceeded, then we seek\r\n   * to the start of the next buffered region.\r\n   *\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\r\n    var buffered = this.tech_.buffered();\r\n    var currentTime = this.tech_.currentTime();\r\n    var nextRange = findNextRange(buffered, currentTime);\r\n    this.cancelTimer_();\r\n\r\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\r\n      return;\r\n    }\r\n\r\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\r\n\r\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\r\n    this.tech_.trigger({\r\n      type: 'usage',\r\n      name: 'vhs-gap-skip'\r\n    });\r\n    this.tech_.trigger({\r\n      type: 'usage',\r\n      name: 'hls-gap-skip'\r\n    });\r\n  };\r\n\r\n  _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\r\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\r\n    // playing for ~3 seconds after the video gap starts. This is done to account for\r\n    // video buffer underflow/underrun (note that this is not done when there is audio\r\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\r\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\r\n    // video stalls). The player's time will reflect the playthrough of audio, so the\r\n    // time will appear as if we are in a buffered region, even if we are stuck in a\r\n    // \"gap.\"\r\n    //\r\n    // Example:\r\n    // video buffer:   0 => 10.1, 10.2 => 20\r\n    // audio buffer:   0 => 20\r\n    // overall buffer: 0 => 10.1, 10.2 => 20\r\n    // current time: 13\r\n    //\r\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\r\n    // however, the audio continued playing until it reached ~3 seconds past the gap\r\n    // (13 seconds), at which point it stops as well. Since current time is past the\r\n    // gap, findNextRange will return no ranges.\r\n    //\r\n    // To check for this issue, we see if there is a gap that starts somewhere within\r\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\r\n    var gaps = findGaps(buffered);\r\n\r\n    for (var i = 0; i < gaps.length; i++) {\r\n      var start = gaps.start(i);\r\n      var end = gaps.end(i); // gap is starts no more than 4 seconds back\r\n\r\n      if (currentTime - start < 4 && currentTime - start > 2) {\r\n        return {\r\n          start: start,\r\n          end: end\r\n        };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return PlaybackWatcher;\r\n}();\r\n\r\nvar defaultOptions = {\r\n  errorInterval: 30,\r\n  getSource: function getSource(next) {\r\n    var tech = this.tech({\r\n      IWillNotUseThisInPlugins: true\r\n    });\r\n    var sourceObj = tech.currentSource_ || this.currentSource();\r\n    return next(sourceObj);\r\n  }\r\n};\r\n/**\r\n * Main entry point for the plugin\r\n *\r\n * @param {Player} player a reference to a videojs Player instance\r\n * @param {Object} [options] an object with plugin options\r\n * @private\r\n */\r\n\r\nvar initPlugin = function initPlugin(player, options) {\r\n  var lastCalled = 0;\r\n  var seekTo = 0;\r\n  var localOptions = videojs.mergeOptions(defaultOptions, options);\r\n  player.ready(function () {\r\n    player.trigger({\r\n      type: 'usage',\r\n      name: 'vhs-error-reload-initialized'\r\n    });\r\n    player.trigger({\r\n      type: 'usage',\r\n      name: 'hls-error-reload-initialized'\r\n    });\r\n  });\r\n  /**\r\n   * Player modifications to perform that must wait until `loadedmetadata`\r\n   * has been triggered\r\n   *\r\n   * @private\r\n   */\r\n\r\n  var loadedMetadataHandler = function loadedMetadataHandler() {\r\n    if (seekTo) {\r\n      player.currentTime(seekTo);\r\n    }\r\n  };\r\n  /**\r\n   * Set the source on the player element, play, and seek if necessary\r\n   *\r\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\r\n   * @private\r\n   */\r\n\r\n\r\n  var setSource = function setSource(sourceObj) {\r\n    if (sourceObj === null || sourceObj === undefined) {\r\n      return;\r\n    }\r\n\r\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\r\n    player.one('loadedmetadata', loadedMetadataHandler);\r\n    player.src(sourceObj);\r\n    player.trigger({\r\n      type: 'usage',\r\n      name: 'vhs-error-reload'\r\n    });\r\n    player.trigger({\r\n      type: 'usage',\r\n      name: 'hls-error-reload'\r\n    });\r\n    player.play();\r\n  };\r\n  /**\r\n   * Attempt to get a source from either the built-in getSource function\r\n   * or a custom function provided via the options\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var errorHandler = function errorHandler() {\r\n    // Do not attempt to reload the source if a source-reload occurred before\r\n    // 'errorInterval' time has elapsed since the last source-reload\r\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\r\n      player.trigger({\r\n        type: 'usage',\r\n        name: 'vhs-error-reload-canceled'\r\n      });\r\n      player.trigger({\r\n        type: 'usage',\r\n        name: 'hls-error-reload-canceled'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\r\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\r\n      return;\r\n    }\r\n\r\n    lastCalled = Date.now();\r\n    return localOptions.getSource.call(player, setSource);\r\n  };\r\n  /**\r\n   * Unbind any event handlers that were bound by the plugin\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  var cleanupEvents = function cleanupEvents() {\r\n    player.off('loadedmetadata', loadedMetadataHandler);\r\n    player.off('error', errorHandler);\r\n    player.off('dispose', cleanupEvents);\r\n  };\r\n  /**\r\n   * Cleanup before re-initializing the plugin\r\n   *\r\n   * @param {Object} [newOptions] an object with plugin options\r\n   * @private\r\n   */\r\n\r\n\r\n  var reinitPlugin = function reinitPlugin(newOptions) {\r\n    cleanupEvents();\r\n    initPlugin(player, newOptions);\r\n  };\r\n\r\n  player.on('error', errorHandler);\r\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\r\n  // initializing the plugin\r\n\r\n  player.reloadSourceOnError = reinitPlugin;\r\n};\r\n/**\r\n * Reload the source when an error is detected as long as there\r\n * wasn't an error previously within the last 30 seconds\r\n *\r\n * @param {Object} [options] an object with plugin options\r\n */\r\n\r\n\r\nvar reloadSourceOnError = function reloadSourceOnError(options) {\r\n  initPlugin(this, options);\r\n};\r\n\r\nvar version$4 = \"2.16.2\";\r\nvar version$3 = \"6.0.1\";\r\nvar version$2 = \"0.22.1\";\r\nvar version$1 = \"4.8.0\";\r\nvar version = \"3.1.3\";\r\nvar Vhs = {\r\n  PlaylistLoader: PlaylistLoader,\r\n  Playlist: Playlist,\r\n  utils: utils,\r\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\r\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\r\n  lastBandwidthSelector: lastBandwidthSelector,\r\n  movingAverageBandwidthSelector: movingAverageBandwidthSelector,\r\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\r\n  comparePlaylistResolution: comparePlaylistResolution,\r\n  xhr: xhrFactory()\r\n}; // Define getter/setters for config properties\r\n\r\nObject.keys(Config).forEach(function (prop) {\r\n  Object.defineProperty(Vhs, prop, {\r\n    get: function get() {\r\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\r\n      return Config[prop];\r\n    },\r\n    set: function set(value) {\r\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\r\n\r\n      if (typeof value !== 'number' || value < 0) {\r\n        videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\r\n        return;\r\n      }\r\n\r\n      Config[prop] = value;\r\n    }\r\n  });\r\n});\r\nvar LOCAL_STORAGE_KEY = 'videojs-vhs';\r\n/**\r\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\r\n *\r\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\r\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\r\n * @function handleVhsMediaChange\r\n */\r\n\r\nvar handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\r\n  var newPlaylist = playlistLoader.media();\r\n  var selectedIndex = -1;\r\n\r\n  for (var i = 0; i < qualityLevels.length; i++) {\r\n    if (qualityLevels[i].id === newPlaylist.id) {\r\n      selectedIndex = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  qualityLevels.selectedIndex_ = selectedIndex;\r\n  qualityLevels.trigger({\r\n    selectedIndex: selectedIndex,\r\n    type: 'change'\r\n  });\r\n};\r\n/**\r\n * Adds quality levels to list once playlist metadata is available\r\n *\r\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\r\n * @param {Object} vhs Vhs object to listen to for media events.\r\n * @function handleVhsLoadedMetadata\r\n */\r\n\r\n\r\nvar handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\r\n  vhs.representations().forEach(function (rep) {\r\n    qualityLevels.addQualityLevel(rep);\r\n  });\r\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\r\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\r\n// as one do not cause exceptions.\r\n\r\n\r\nVhs.canPlaySource = function () {\r\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\r\n};\r\n\r\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\r\n  if (!keySystemOptions) {\r\n    return keySystemOptions;\r\n  }\r\n\r\n  var codecs = {};\r\n\r\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\r\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\r\n  }\r\n\r\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\r\n    codecs.audio = audioPlaylist.attributes.CODECS;\r\n  }\r\n\r\n  var videoContentType = getMimeForCodec(codecs.video);\r\n  var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\r\n\r\n  var keySystemContentTypes = {};\r\n\r\n  for (var keySystem in keySystemOptions) {\r\n    keySystemContentTypes[keySystem] = {};\r\n\r\n    if (audioContentType) {\r\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\r\n    }\r\n\r\n    if (videoContentType) {\r\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\r\n    } // Default to using the video playlist's PSSH even though they may be different, as\r\n    // videojs-contrib-eme will only accept one in the options.\r\n    //\r\n    // This shouldn't be an issue for most cases as early intialization will handle all\r\n    // unique PSSH values, and if they aren't, then encrypted events should have the\r\n    // specific information needed for the unique license.\r\n\r\n\r\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\r\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\r\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\r\n    // so we need to prevent overwriting the URL entirely\r\n\r\n\r\n    if (typeof keySystemOptions[keySystem] === 'string') {\r\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\r\n    }\r\n  }\r\n\r\n  return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\r\n};\r\n/**\r\n * @typedef {Object} KeySystems\r\n *\r\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\r\n * Note: not all options are listed here.\r\n *\r\n * @property {Uint8Array} [pssh]\r\n *           Protection System Specific Header\r\n */\r\n\r\n/**\r\n * Goes through all the playlists and collects an array of KeySystems options objects\r\n * containing each playlist's keySystems and their pssh values, if available.\r\n *\r\n * @param {Object[]} playlists\r\n *        The playlists to look through\r\n * @param {string[]} keySystems\r\n *        The keySystems to collect pssh values for\r\n *\r\n * @return {KeySystems[]}\r\n *         An array of KeySystems objects containing available key systems and their\r\n *         pssh values\r\n */\r\n\r\n\r\nvar getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\r\n  return playlists.reduce(function (keySystemsArr, playlist) {\r\n    if (!playlist.contentProtection) {\r\n      return keySystemsArr;\r\n    }\r\n\r\n    var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\r\n      var keySystemOptions = playlist.contentProtection[keySystem];\r\n\r\n      if (keySystemOptions && keySystemOptions.pssh) {\r\n        keySystemsObj[keySystem] = {\r\n          pssh: keySystemOptions.pssh\r\n        };\r\n      }\r\n\r\n      return keySystemsObj;\r\n    }, {});\r\n\r\n    if (Object.keys(keySystemsOptions).length) {\r\n      keySystemsArr.push(keySystemsOptions);\r\n    }\r\n\r\n    return keySystemsArr;\r\n  }, []);\r\n};\r\n/**\r\n * Returns a promise that waits for the\r\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\r\n *\r\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\r\n * browsers.\r\n *\r\n * As per the above ticket, this is particularly important for Chrome, where, if\r\n * unencrypted content is appended before encrypted content and the key session has not\r\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\r\n * during playback.\r\n *\r\n * @param {Object} player\r\n *        The player instance\r\n * @param {Object[]} sourceKeySystems\r\n *        The key systems options from the player source\r\n * @param {Object} [audioMedia]\r\n *        The active audio media playlist (optional)\r\n * @param {Object[]} mainPlaylists\r\n *        The playlists found on the master playlist object\r\n *\r\n * @return {Object}\r\n *         Promise that resolves when the key session has been created\r\n */\r\n\r\n\r\nvar waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\r\n  var player = _ref.player,\r\n      sourceKeySystems = _ref.sourceKeySystems,\r\n      audioMedia = _ref.audioMedia,\r\n      mainPlaylists = _ref.mainPlaylists;\r\n\r\n  if (!player.eme.initializeMediaKeys) {\r\n    return Promise.resolve();\r\n  } // TODO should all audio PSSH values be initialized for DRM?\r\n  //\r\n  // All unique video rendition pssh values are initialized for DRM, but here only\r\n  // the initial audio playlist license is initialized. In theory, an encrypted\r\n  // event should be fired if the user switches to an alternative audio playlist\r\n  // where a license is required, but this case hasn't yet been tested. In addition, there\r\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\r\n  // languages).\r\n\r\n\r\n  var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\r\n  var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\r\n  var initializationFinishedPromises = [];\r\n  var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\r\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\r\n  // return for IE11 above, and the existence of modern EME APIs in addition to\r\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\r\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\r\n\r\n  keySystemsOptionsArr.forEach(function (keySystemsOptions) {\r\n    keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\r\n      player.tech_.one('keysessioncreated', resolve);\r\n    }));\r\n    initializationFinishedPromises.push(new Promise(function (resolve, reject) {\r\n      player.eme.initializeMediaKeys({\r\n        keySystems: keySystemsOptions\r\n      }, function (err) {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n\r\n        resolve();\r\n      });\r\n    }));\r\n  }); // The reasons Promise.race is chosen over Promise.any:\r\n  //\r\n  // * Promise.any is only available in Safari 14+.\r\n  // * None of these promises are expected to reject. If they do reject, it might be\r\n  //   better here for the race to surface the rejection, rather than mask it by using\r\n  //   Promise.any.\r\n\r\n  return Promise.race([// If a session was previously created, these will all finish resolving without\r\n  // creating a new session, otherwise it will take until the end of all license\r\n  // requests, which is why the key session check is used (to make setup much faster).\r\n  Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\r\n  Promise.race(keySessionCreatedPromises)]);\r\n};\r\n/**\r\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\r\n * there are keySystems on the source, sets up source options to prepare the source for\r\n * eme.\r\n *\r\n * @param {Object} player\r\n *        The player instance\r\n * @param {Object[]} sourceKeySystems\r\n *        The key systems options from the player source\r\n * @param {Object} media\r\n *        The active media playlist\r\n * @param {Object} [audioMedia]\r\n *        The active audio media playlist (optional)\r\n *\r\n * @return {boolean}\r\n *         Whether or not options were configured and EME is available\r\n */\r\n\r\n\r\nvar setupEmeOptions = function setupEmeOptions(_ref2) {\r\n  var player = _ref2.player,\r\n      sourceKeySystems = _ref2.sourceKeySystems,\r\n      media = _ref2.media,\r\n      audioMedia = _ref2.audioMedia;\r\n  var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\r\n\r\n  if (!sourceOptions) {\r\n    return false;\r\n  }\r\n\r\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\r\n  // do nothing.\r\n\r\n  if (sourceOptions && !player.eme) {\r\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nvar getVhsLocalStorage = function getVhsLocalStorage() {\r\n  if (!window$1.localStorage) {\r\n    return null;\r\n  }\r\n\r\n  var storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\r\n\r\n  if (!storedObject) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(storedObject);\r\n  } catch (e) {\r\n    // someone may have tampered with the value\r\n    return null;\r\n  }\r\n};\r\n\r\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\r\n  if (!window$1.localStorage) {\r\n    return false;\r\n  }\r\n\r\n  var objectToStore = getVhsLocalStorage();\r\n  objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\r\n\r\n  try {\r\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\r\n  } catch (e) {\r\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\r\n    // storage is set to 0).\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\r\n    // No need to perform any operation.\r\n    return false;\r\n  }\r\n\r\n  return objectToStore;\r\n};\r\n/**\r\n * Parses VHS-supported media types from data URIs. See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\r\n * for information on data URIs.\r\n *\r\n * @param {string} dataUri\r\n *        The data URI\r\n *\r\n * @return {string|Object}\r\n *         The parsed object/string, or the original string if no supported media type\r\n *         was found\r\n */\r\n\r\n\r\nvar expandDataUri = function expandDataUri(dataUri) {\r\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\r\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\r\n  } // no known case for this data URI, return the string as-is\r\n\r\n\r\n  return dataUri;\r\n};\r\n/**\r\n * Whether the browser has built-in HLS support.\r\n */\r\n\r\n\r\nVhs.supportsNativeHls = function () {\r\n  if (!document || !document.createElement) {\r\n    return false;\r\n  }\r\n\r\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\r\n\r\n  if (!videojs.getTech('Html5').isSupported()) {\r\n    return false;\r\n  } // HLS manifests can go by many mime-types\r\n\r\n\r\n  var canPlay = [// Apple santioned\r\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\r\n  'audio/mpegurl', // Very common\r\n  'audio/x-mpegurl', // Very common\r\n  'application/x-mpegurl', // Included for completeness\r\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\r\n  return canPlay.some(function (canItPlay) {\r\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\r\n  });\r\n}();\r\n\r\nVhs.supportsNativeDash = function () {\r\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\r\n    return false;\r\n  }\r\n\r\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\r\n}();\r\n\r\nVhs.supportsTypeNatively = function (type) {\r\n  if (type === 'hls') {\r\n    return Vhs.supportsNativeHls;\r\n  }\r\n\r\n  if (type === 'dash') {\r\n    return Vhs.supportsNativeDash;\r\n  }\r\n\r\n  return false;\r\n};\r\n/**\r\n * HLS is a source handler, not a tech. Make sure attempts to use it\r\n * as one do not cause exceptions.\r\n */\r\n\r\n\r\nVhs.isSupported = function () {\r\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\r\n};\r\n\r\nvar Component = videojs.getComponent('Component');\r\n/**\r\n * The Vhs Handler object, where we orchestrate all of the parts\r\n * of HLS to interact with video.js\r\n *\r\n * @class VhsHandler\r\n * @extends videojs.Component\r\n * @param {Object} source the soruce object\r\n * @param {Tech} tech the parent tech object\r\n * @param {Object} options optional and required options\r\n */\r\n\r\nvar VhsHandler = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(VhsHandler, _Component);\r\n\r\n  function VhsHandler(source, tech, options) {\r\n    var _this;\r\n\r\n    _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\r\n\r\n    if (options.hls && Object.keys(options.hls).length) {\r\n      videojs.log.warn('Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.');\r\n    } // if a tech level `initialBandwidth` option was passed\r\n    // use that over the VHS level `bandwidth` option\r\n\r\n\r\n    if (typeof options.initialBandwidth === 'number') {\r\n      _this.options_.bandwidth = options.initialBandwidth;\r\n    }\r\n\r\n    _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\r\n    // backwards-compatibility\r\n\r\n    if (tech.options_ && tech.options_.playerId) {\r\n      var _player = videojs(tech.options_.playerId);\r\n\r\n      if (!_player.hasOwnProperty('hls')) {\r\n        Object.defineProperty(_player, 'hls', {\r\n          get: function get() {\r\n            videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\r\n            tech.trigger({\r\n              type: 'usage',\r\n              name: 'hls-player-access'\r\n            });\r\n            return _assertThisInitialized(_this);\r\n          },\r\n          configurable: true\r\n        });\r\n      }\r\n\r\n      if (!_player.hasOwnProperty('vhs')) {\r\n        Object.defineProperty(_player, 'vhs', {\r\n          get: function get() {\r\n            videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\r\n            tech.trigger({\r\n              type: 'usage',\r\n              name: 'vhs-player-access'\r\n            });\r\n            return _assertThisInitialized(_this);\r\n          },\r\n          configurable: true\r\n        });\r\n      }\r\n\r\n      if (!_player.hasOwnProperty('dash')) {\r\n        Object.defineProperty(_player, 'dash', {\r\n          get: function get() {\r\n            videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\r\n            return _assertThisInitialized(_this);\r\n          },\r\n          configurable: true\r\n        });\r\n      }\r\n\r\n      _this.player_ = _player;\r\n    }\r\n\r\n    _this.tech_ = tech;\r\n    _this.source_ = source;\r\n    _this.stats = {};\r\n    _this.ignoreNextSeekingEvent_ = false;\r\n\r\n    _this.setOptions_();\r\n\r\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\r\n      tech.overrideNativeAudioTracks(true);\r\n      tech.overrideNativeVideoTracks(true);\r\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\r\n      // overriding native HLS only works if audio tracks have been emulated\r\n      // error early if we're misconfigured\r\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\r\n    } // listen for fullscreenchange events for this player so that we\r\n    // can adjust our quality selection quickly\r\n\r\n\r\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\r\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\r\n\r\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\r\n        _this.masterPlaylistController_.fastQualityChange_();\r\n      } else {\r\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\r\n        // than full screen, see if there should be a rendition switch down to preserve\r\n        // bandwidth.\r\n        _this.masterPlaylistController_.checkABR_();\r\n      }\r\n    });\r\n\r\n    _this.on(_this.tech_, 'seeking', function () {\r\n      if (this.ignoreNextSeekingEvent_) {\r\n        this.ignoreNextSeekingEvent_ = false;\r\n        return;\r\n      }\r\n\r\n      this.setCurrentTime(this.tech_.currentTime());\r\n    });\r\n\r\n    _this.on(_this.tech_, 'error', function () {\r\n      // verify that the error was real and we are loaded\r\n      // enough to have mpc loaded.\r\n      if (this.tech_.error() && this.masterPlaylistController_) {\r\n        this.masterPlaylistController_.pauseLoading();\r\n      }\r\n    });\r\n\r\n    _this.on(_this.tech_, 'play', _this.play);\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = VhsHandler.prototype;\r\n\r\n  _proto.setOptions_ = function setOptions_() {\r\n    var _this2 = this; // defaults\r\n\r\n\r\n    this.options_.withCredentials = this.options_.withCredentials || false;\r\n    this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\r\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\r\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\r\n    this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\r\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\r\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\r\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\r\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\r\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\r\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\r\n\r\n    if (typeof this.options_.blacklistDuration !== 'number') {\r\n      this.options_.blacklistDuration = 5 * 60;\r\n    }\r\n\r\n    if (typeof this.options_.bandwidth !== 'number') {\r\n      if (this.options_.useBandwidthFromLocalStorage) {\r\n        var storedObject = getVhsLocalStorage();\r\n\r\n        if (storedObject && storedObject.bandwidth) {\r\n          this.options_.bandwidth = storedObject.bandwidth;\r\n          this.tech_.trigger({\r\n            type: 'usage',\r\n            name: 'vhs-bandwidth-from-local-storage'\r\n          });\r\n          this.tech_.trigger({\r\n            type: 'usage',\r\n            name: 'hls-bandwidth-from-local-storage'\r\n          });\r\n        }\r\n\r\n        if (storedObject && storedObject.throughput) {\r\n          this.options_.throughput = storedObject.throughput;\r\n          this.tech_.trigger({\r\n            type: 'usage',\r\n            name: 'vhs-throughput-from-local-storage'\r\n          });\r\n          this.tech_.trigger({\r\n            type: 'usage',\r\n            name: 'hls-throughput-from-local-storage'\r\n          });\r\n        }\r\n      }\r\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\r\n    // selection at a reasonable bandwidth\r\n\r\n\r\n    if (typeof this.options_.bandwidth !== 'number') {\r\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\r\n    } // If the bandwidth number is unchanged from the initial setting\r\n    // then this takes precedence over the enableLowInitialPlaylist option\r\n\r\n\r\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\r\n\r\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\r\n      if (typeof _this2.source_[option] !== 'undefined') {\r\n        _this2.options_[option] = _this2.source_[option];\r\n      }\r\n    });\r\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\r\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\r\n  }\r\n  /**\r\n   * called when player.src gets called, handle a new source\r\n   *\r\n   * @param {Object} src the source object to handle\r\n   */\r\n  ;\r\n\r\n  _proto.src = function src(_src, type) {\r\n    var _this3 = this; // do nothing if the src is falsey\r\n\r\n\r\n    if (!_src) {\r\n      return;\r\n    }\r\n\r\n    this.setOptions_(); // add master playlist controller options\r\n\r\n    this.options_.src = expandDataUri(this.source_.src);\r\n    this.options_.tech = this.tech_;\r\n    this.options_.externVhs = Vhs;\r\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\r\n\r\n    this.options_.seekTo = function (time) {\r\n      _this3.tech_.setCurrentTime(time);\r\n    };\r\n\r\n    if (this.options_.smoothQualityChange) {\r\n      videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\r\n    }\r\n\r\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\r\n    var playbackWatcherOptions = videojs.mergeOptions({\r\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\r\n    }, this.options_, {\r\n      seekable: function seekable() {\r\n        return _this3.seekable();\r\n      },\r\n      media: function media() {\r\n        return _this3.masterPlaylistController_.media();\r\n      },\r\n      masterPlaylistController: this.masterPlaylistController_\r\n    });\r\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\r\n    this.masterPlaylistController_.on('error', function () {\r\n      var player = videojs.players[_this3.tech_.options_.playerId];\r\n      var error = _this3.masterPlaylistController_.error;\r\n\r\n      if (typeof error === 'object' && !error.code) {\r\n        error.code = 3;\r\n      } else if (typeof error === 'string') {\r\n        error = {\r\n          message: error,\r\n          code: 3\r\n        };\r\n      }\r\n\r\n      player.error(error);\r\n    });\r\n    var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\r\n    // compatibility with < v2\r\n\r\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\r\n    this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\r\n\r\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\r\n    this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\r\n    // controller. Using a custom property for backwards compatibility\r\n    // with < v2\r\n\r\n    Object.defineProperties(this, {\r\n      selectPlaylist: {\r\n        get: function get() {\r\n          return this.masterPlaylistController_.selectPlaylist;\r\n        },\r\n        set: function set(selectPlaylist) {\r\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\r\n        }\r\n      },\r\n      throughput: {\r\n        get: function get() {\r\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\r\n        },\r\n        set: function set(throughput) {\r\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\r\n          // for the cumulative average\r\n\r\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\r\n        }\r\n      },\r\n      bandwidth: {\r\n        get: function get() {\r\n          var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\r\n          var networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\r\n          var tenMbpsAsBitsPerSecond = 10e6;\r\n\r\n          if (this.options_.useNetworkInformationApi && networkInformation) {\r\n            // downlink returns Mbps\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\r\n            var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\r\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\r\n            // high quality streams are not filtered out.\r\n\r\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\r\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\r\n            } else {\r\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\r\n            }\r\n          }\r\n\r\n          return playerBandwidthEst;\r\n        },\r\n        set: function set(bandwidth) {\r\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\r\n          // `count` is set to zero that current value of `rate` isn't included\r\n          // in the cumulative average\r\n\r\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\r\n            rate: 0,\r\n            count: 0\r\n          };\r\n        }\r\n      },\r\n\r\n      /**\r\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\r\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\r\n       * the entire process after that - decryption, transmuxing, and appending - provided\r\n       * by `throughput`.\r\n       *\r\n       * Since the two process are serial, the overall system bandwidth is given by:\r\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\r\n       */\r\n      systemBandwidth: {\r\n        get: function get() {\r\n          var invBandwidth = 1 / (this.bandwidth || 1);\r\n          var invThroughput;\r\n\r\n          if (this.throughput > 0) {\r\n            invThroughput = 1 / this.throughput;\r\n          } else {\r\n            invThroughput = 0;\r\n          }\r\n\r\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\r\n          return systemBitrate;\r\n        },\r\n        set: function set() {\r\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.options_.bandwidth) {\r\n      this.bandwidth = this.options_.bandwidth;\r\n    }\r\n\r\n    if (this.options_.throughput) {\r\n      this.throughput = this.options_.throughput;\r\n    }\r\n\r\n    Object.defineProperties(this.stats, {\r\n      bandwidth: {\r\n        get: function get() {\r\n          return _this3.bandwidth || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaRequests: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaRequests_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaRequestsAborted: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaRequestsTimedout: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaRequestsErrored: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaTransferDuration: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaBytesTransferred: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaSecondsLoaded: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mediaAppends: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mediaAppends_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      mainAppendsToLoadedData: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      audioAppendsToLoadedData: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      appendsToLoadedData: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      timeToLoadedData: {\r\n        get: function get() {\r\n          return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\r\n        },\r\n        enumerable: true\r\n      },\r\n      buffered: {\r\n        get: function get() {\r\n          return timeRangesToArray(_this3.tech_.buffered());\r\n        },\r\n        enumerable: true\r\n      },\r\n      currentTime: {\r\n        get: function get() {\r\n          return _this3.tech_.currentTime();\r\n        },\r\n        enumerable: true\r\n      },\r\n      currentSource: {\r\n        get: function get() {\r\n          return _this3.tech_.currentSource_;\r\n        },\r\n        enumerable: true\r\n      },\r\n      currentTech: {\r\n        get: function get() {\r\n          return _this3.tech_.name_;\r\n        },\r\n        enumerable: true\r\n      },\r\n      duration: {\r\n        get: function get() {\r\n          return _this3.tech_.duration();\r\n        },\r\n        enumerable: true\r\n      },\r\n      master: {\r\n        get: function get() {\r\n          return _this3.playlists.master;\r\n        },\r\n        enumerable: true\r\n      },\r\n      playerDimensions: {\r\n        get: function get() {\r\n          return _this3.tech_.currentDimensions();\r\n        },\r\n        enumerable: true\r\n      },\r\n      seekable: {\r\n        get: function get() {\r\n          return timeRangesToArray(_this3.tech_.seekable());\r\n        },\r\n        enumerable: true\r\n      },\r\n      timestamp: {\r\n        get: function get() {\r\n          return Date.now();\r\n        },\r\n        enumerable: true\r\n      },\r\n      videoPlaybackQuality: {\r\n        get: function get() {\r\n          return _this3.tech_.getVideoPlaybackQuality();\r\n        },\r\n        enumerable: true\r\n      }\r\n    });\r\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\r\n    this.tech_.on('bandwidthupdate', function () {\r\n      if (_this3.options_.useBandwidthFromLocalStorage) {\r\n        updateVhsLocalStorage({\r\n          bandwidth: _this3.bandwidth,\r\n          throughput: Math.round(_this3.throughput)\r\n        });\r\n      }\r\n    });\r\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\r\n      // Add the manual rendition mix-in to VhsHandler\r\n      renditionSelectionMixin(_this3);\r\n    });\r\n    this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\r\n      _this3.setupEme_();\r\n    }); // the bandwidth of the primary segment loader is our best\r\n    // estimate of overall bandwidth\r\n\r\n    this.on(this.masterPlaylistController_, 'progress', function () {\r\n      this.tech_.trigger('progress');\r\n    }); // In the live case, we need to ignore the very first `seeking` event since\r\n    // that will be the result of the seek-to-live behavior\r\n\r\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\r\n      this.ignoreNextSeekingEvent_ = true;\r\n    });\r\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\r\n    // this can occur if someone sets the src in player.ready(), for instance\r\n\r\n    if (!this.tech_.el()) {\r\n      return;\r\n    }\r\n\r\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\r\n    this.tech_.src(this.mediaSourceUrl_);\r\n  };\r\n\r\n  _proto.createKeySessions_ = function createKeySessions_() {\r\n    var _this4 = this;\r\n\r\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\r\n    this.logger_('waiting for EME key session creation');\r\n    waitForKeySessionCreation({\r\n      player: this.player_,\r\n      sourceKeySystems: this.source_.keySystems,\r\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\r\n      mainPlaylists: this.playlists.master.playlists\r\n    }).then(function () {\r\n      _this4.logger_('created EME key session');\r\n\r\n      _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\r\n    })[\"catch\"](function (err) {\r\n      _this4.logger_('error while creating EME key session', err);\r\n\r\n      _this4.player_.error({\r\n        message: 'Failed to initialize media keys for EME',\r\n        code: 3\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.handleWaitingForKey_ = function handleWaitingForKey_() {\r\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\r\n    // the key is in the manifest. While this should've happened on initial source load, it\r\n    // may happen again in live streams where the keys change, and the manifest info\r\n    // reflects the update.\r\n    //\r\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\r\n    // already requested keys for, we don't have to worry about this generating extraneous\r\n    // requests.\r\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\r\n    this.createKeySessions_();\r\n  }\r\n  /**\r\n   * If necessary and EME is available, sets up EME options and waits for key session\r\n   * creation.\r\n   *\r\n   * This function also updates the source updater so taht it can be used, as for some\r\n   * browsers, EME must be configured before content is appended (if appending unencrypted\r\n   * content before encrypted content).\r\n   */\r\n  ;\r\n\r\n  _proto.setupEme_ = function setupEme_() {\r\n    var _this5 = this;\r\n\r\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\r\n    var didSetupEmeOptions = setupEmeOptions({\r\n      player: this.player_,\r\n      sourceKeySystems: this.source_.keySystems,\r\n      media: this.playlists.media(),\r\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\r\n    });\r\n    this.player_.tech_.on('keystatuschange', function (e) {\r\n      if (e.status !== 'output-restricted') {\r\n        return;\r\n      }\r\n\r\n      var masterPlaylist = _this5.masterPlaylistController_.master();\r\n\r\n      if (!masterPlaylist || !masterPlaylist.playlists) {\r\n        return;\r\n      }\r\n\r\n      var excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\r\n\r\n      masterPlaylist.playlists.forEach(function (playlist) {\r\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\r\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\r\n            playlist.excludeUntil = Infinity;\r\n            excludedHDPlaylists.push(playlist);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (excludedHDPlaylists.length) {\r\n        var _videojs$log;\r\n\r\n        (_videojs$log = videojs.log).warn.apply(_videojs$log, ['DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(excludedHDPlaylists)); // Clear the buffer before switching playlists, since it may already contain unplayable segments\r\n\r\n\r\n        _this5.masterPlaylistController_.fastQualityChange_();\r\n      }\r\n    });\r\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\r\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\r\n    // promises.\r\n\r\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\r\n      // If EME options were not set up, we've done all we could to initialize EME.\r\n      this.masterPlaylistController_.sourceUpdater_.initializedEme();\r\n      return;\r\n    }\r\n\r\n    this.createKeySessions_();\r\n  }\r\n  /**\r\n   * Initializes the quality levels and sets listeners to update them.\r\n   *\r\n   * @method setupQualityLevels_\r\n   * @private\r\n   */\r\n  ;\r\n\r\n  _proto.setupQualityLevels_ = function setupQualityLevels_() {\r\n    var _this6 = this;\r\n\r\n    var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\r\n    // or qualityLevels_ listeners have already been setup, do nothing.\r\n\r\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\r\n      return;\r\n    }\r\n\r\n    this.qualityLevels_ = player.qualityLevels();\r\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\r\n      handleVhsLoadedMetadata(_this6.qualityLevels_, _this6);\r\n    });\r\n    this.playlists.on('mediachange', function () {\r\n      handleVhsMediaChange(_this6.qualityLevels_, _this6.playlists);\r\n    });\r\n  }\r\n  /**\r\n   * return the version\r\n   */\r\n  ;\r\n\r\n  VhsHandler.version = function version$5() {\r\n    return {\r\n      '@videojs/http-streaming': version$4,\r\n      'mux.js': version$3,\r\n      'mpd-parser': version$2,\r\n      'm3u8-parser': version$1,\r\n      'aes-decrypter': version\r\n    };\r\n  }\r\n  /**\r\n   * return the version\r\n   */\r\n  ;\r\n\r\n  _proto.version = function version() {\r\n    return this.constructor.version();\r\n  };\r\n\r\n  _proto.canChangeType = function canChangeType() {\r\n    return SourceUpdater.canChangeType();\r\n  }\r\n  /**\r\n   * Begin playing the video.\r\n   */\r\n  ;\r\n\r\n  _proto.play = function play() {\r\n    this.masterPlaylistController_.play();\r\n  }\r\n  /**\r\n   * a wrapper around the function in MasterPlaylistController\r\n   */\r\n  ;\r\n\r\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\r\n    this.masterPlaylistController_.setCurrentTime(currentTime);\r\n  }\r\n  /**\r\n   * a wrapper around the function in MasterPlaylistController\r\n   */\r\n  ;\r\n\r\n  _proto.duration = function duration() {\r\n    return this.masterPlaylistController_.duration();\r\n  }\r\n  /**\r\n   * a wrapper around the function in MasterPlaylistController\r\n   */\r\n  ;\r\n\r\n  _proto.seekable = function seekable() {\r\n    return this.masterPlaylistController_.seekable();\r\n  }\r\n  /**\r\n   * Abort all outstanding work and cleanup.\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    if (this.playbackWatcher_) {\r\n      this.playbackWatcher_.dispose();\r\n    }\r\n\r\n    if (this.masterPlaylistController_) {\r\n      this.masterPlaylistController_.dispose();\r\n    }\r\n\r\n    if (this.qualityLevels_) {\r\n      this.qualityLevels_.dispose();\r\n    }\r\n\r\n    if (this.player_) {\r\n      delete this.player_.vhs;\r\n      delete this.player_.dash;\r\n      delete this.player_.hls;\r\n    }\r\n\r\n    if (this.tech_ && this.tech_.vhs) {\r\n      delete this.tech_.vhs;\r\n    } // don't check this.tech_.hls as it will log a deprecated warning\r\n\r\n\r\n    if (this.tech_) {\r\n      delete this.tech_.hls;\r\n    }\r\n\r\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\r\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\r\n      this.mediaSourceUrl_ = null;\r\n    }\r\n\r\n    if (this.tech_) {\r\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\r\n    }\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\r\n    return getProgramTime({\r\n      playlist: this.masterPlaylistController_.media(),\r\n      time: time,\r\n      callback: callback\r\n    });\r\n  } // the player must be playing before calling this\r\n  ;\r\n\r\n  _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\r\n    if (pauseAfterSeek === void 0) {\r\n      pauseAfterSeek = true;\r\n    }\r\n\r\n    if (retryCount === void 0) {\r\n      retryCount = 2;\r\n    }\r\n\r\n    return seekToProgramTime({\r\n      programTime: programTime,\r\n      playlist: this.masterPlaylistController_.media(),\r\n      retryCount: retryCount,\r\n      pauseAfterSeek: pauseAfterSeek,\r\n      seekTo: this.options_.seekTo,\r\n      tech: this.options_.tech,\r\n      callback: callback\r\n    });\r\n  };\r\n\r\n  return VhsHandler;\r\n}(Component);\r\n/**\r\n * The Source Handler object, which informs video.js what additional\r\n * MIME types are supported and sets up playback. It is registered\r\n * automatically to the appropriate tech based on the capabilities of\r\n * the browser it is running in. It is not necessary to use or modify\r\n * this object in normal usage.\r\n */\r\n\r\n\r\nvar VhsSourceHandler = {\r\n  name: 'videojs-http-streaming',\r\n  VERSION: version$4,\r\n  canHandleSource: function canHandleSource(srcObj, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var localOptions = videojs.mergeOptions(videojs.options, options);\r\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\r\n  },\r\n  handleSource: function handleSource(source, tech, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var localOptions = videojs.mergeOptions(videojs.options, options);\r\n    tech.vhs = new VhsHandler(source, tech, localOptions);\r\n\r\n    if (!videojs.hasOwnProperty('hls')) {\r\n      Object.defineProperty(tech, 'hls', {\r\n        get: function get() {\r\n          videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\r\n          return tech.vhs;\r\n        },\r\n        configurable: true\r\n      });\r\n    }\r\n\r\n    tech.vhs.xhr = xhrFactory();\r\n    tech.vhs.src(source.src, source.type);\r\n    return tech.vhs;\r\n  },\r\n  canPlayType: function canPlayType(type, options) {\r\n    var simpleType = simpleTypeFromSourceType(type);\r\n\r\n    if (!simpleType) {\r\n      return '';\r\n    }\r\n\r\n    var overrideNative = VhsSourceHandler.getOverrideNative(options);\r\n    var supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\r\n    var canUseMsePlayback = !supportsTypeNatively || overrideNative;\r\n    return canUseMsePlayback ? 'maybe' : '';\r\n  },\r\n  getOverrideNative: function getOverrideNative(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var _options = options,\r\n        _options$vhs = _options.vhs,\r\n        vhs = _options$vhs === void 0 ? {} : _options$vhs,\r\n        _options$hls = _options.hls,\r\n        hls = _options$hls === void 0 ? {} : _options$hls;\r\n    var defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\r\n    var _vhs$overrideNative = vhs.overrideNative,\r\n        overrideNative = _vhs$overrideNative === void 0 ? defaultOverrideNative : _vhs$overrideNative;\r\n    var _hls$overrideNative = hls.overrideNative,\r\n        legacyOverrideNative = _hls$overrideNative === void 0 ? false : _hls$overrideNative;\r\n    return legacyOverrideNative || overrideNative;\r\n  }\r\n};\r\n/**\r\n * Check to see if the native MediaSource object exists and supports\r\n * an MP4 container with both H.264 video and AAC-LC audio.\r\n *\r\n * @return {boolean} if  native media sources are supported\r\n */\r\n\r\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\r\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\r\n}; // register source handlers with the appropriate techs\r\n\r\n\r\nif (supportsNativeMediaSources()) {\r\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\r\n}\r\n\r\nvideojs.VhsHandler = VhsHandler;\r\nObject.defineProperty(videojs, 'HlsHandler', {\r\n  get: function get() {\r\n    videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\r\n    return VhsHandler;\r\n  },\r\n  configurable: true\r\n});\r\nvideojs.VhsSourceHandler = VhsSourceHandler;\r\nObject.defineProperty(videojs, 'HlsSourceHandler', {\r\n  get: function get() {\r\n    videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\r\n    return VhsSourceHandler;\r\n  },\r\n  configurable: true\r\n});\r\nvideojs.Vhs = Vhs;\r\nObject.defineProperty(videojs, 'Hls', {\r\n  get: function get() {\r\n    videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\r\n    return Vhs;\r\n  },\r\n  configurable: true\r\n});\r\n\r\nif (!videojs.use) {\r\n  videojs.registerComponent('Hls', Vhs);\r\n  videojs.registerComponent('Vhs', Vhs);\r\n}\r\n\r\nvideojs.options.vhs = videojs.options.vhs || {};\r\nvideojs.options.hls = videojs.options.hls || {};\r\n\r\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\r\n  var registerPlugin = videojs.registerPlugin || videojs.plugin;\r\n  registerPlugin('reloadSourceOnError', reloadSourceOnError);\r\n}\r\n\r\nexport default videojs;\r\n", "export default function _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}", "export default function _assertThisInitialized(self) {\r\n  if (self === void 0) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n  }\r\n  return self;\r\n}", "export default function _setPrototypeOf(o, p) {\r\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\r\n    o.__proto__ = p;\r\n    return o;\r\n  };\r\n  return _setPrototypeOf(o, p);\r\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\r\nexport default function _inheritsLoose(subClass, superClass) {\r\n  subClass.prototype = Object.create(superClass.prototype);\r\n  subClass.prototype.constructor = subClass;\r\n  setPrototypeOf(subClass, superClass);\r\n}", "export default function _isNativeReflectConstruct() {\r\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n  if (Reflect.construct.sham) return false;\r\n  if (typeof Proxy === \"function\") return true;\r\n  try {\r\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\r\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\r\nexport default function _construct(Parent, args, Class) {\r\n  if (isNativeReflectConstruct()) {\r\n    _construct = Reflect.construct.bind();\r\n  } else {\r\n    _construct = function _construct(Parent, args, Class) {\r\n      var a = [null];\r\n      a.push.apply(a, args);\r\n      var Constructor = Function.bind.apply(Parent, a);\r\n      var instance = new Constructor();\r\n      if (Class) setPrototypeOf(instance, Class.prototype);\r\n      return instance;\r\n    };\r\n  }\r\n  return _construct.apply(null, arguments);\r\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\r\nexport default function _inherits(subClass, superClass) {\r\n  if (typeof superClass !== \"function\" && superClass !== null) {\r\n    throw new TypeError(\"Super expression must either be null or a function\");\r\n  }\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n  Object.defineProperty(subClass, \"prototype\", {\r\n    writable: false\r\n  });\r\n  if (superClass) setPrototypeOf(subClass, superClass);\r\n}", "import URLToolkit from 'url-toolkit';\r\nimport window from 'global/window';\r\nvar DEFAULT_LOCATION = 'http://example.com';\r\n\r\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\r\n  // return early if we don't need to resolve\r\n  if (/^[a-z]+:/i.test(relativeUrl)) {\r\n    return relativeUrl;\r\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\r\n\r\n\r\n  if (/^data:/.test(baseUrl)) {\r\n    baseUrl = window.location && window.location.href || '';\r\n  } // IE11 supports URL but not the URL constructor\r\n  // feature detect the behavior we want\r\n\r\n\r\n  var nativeURL = typeof window.URL === 'function';\r\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\r\n  // and if baseUrl isn't an absolute url\r\n\r\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\r\n\r\n  if (nativeURL) {\r\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\r\n  } else if (!/\\/\\//i.test(baseUrl)) {\r\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\r\n  }\r\n\r\n  if (nativeURL) {\r\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\r\n    // and if we're location-less, remove the location\r\n    // otherwise, return the url unmodified\r\n\r\n    if (removeLocation) {\r\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\r\n    } else if (protocolLess) {\r\n      return newUrl.href.slice(newUrl.protocol.length);\r\n    }\r\n\r\n    return newUrl.href;\r\n  }\r\n\r\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\r\n};\r\n\r\nexport default resolveUrl;", "/**\r\n * @file stream.js\r\n */\r\n\r\n/**\r\n * A lightweight readable stream implemention that handles event dispatching.\r\n *\r\n * @class Stream\r\n */\r\nvar Stream = /*#__PURE__*/function () {\r\n  function Stream() {\r\n    this.listeners = {};\r\n  }\r\n  /**\r\n   * Add a listener for a specified event type.\r\n   *\r\n   * @param {string} type the event name\r\n   * @param {Function} listener the callback to be invoked when an event of\r\n   * the specified type occurs\r\n   */\r\n\r\n\r\n  var _proto = Stream.prototype;\r\n\r\n  _proto.on = function on(type, listener) {\r\n    if (!this.listeners[type]) {\r\n      this.listeners[type] = [];\r\n    }\r\n\r\n    this.listeners[type].push(listener);\r\n  }\r\n  /**\r\n   * Remove a listener for a specified event type.\r\n   *\r\n   * @param {string} type the event name\r\n   * @param {Function} listener  a function previously registered for this\r\n   * type of event through `on`\r\n   * @return {boolean} if we could turn it off or not\r\n   */\r\n  ;\r\n\r\n  _proto.off = function off(type, listener) {\r\n    if (!this.listeners[type]) {\r\n      return false;\r\n    }\r\n\r\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\r\n    // In Video.js we slice listener functions\r\n    // on trigger so that it does not mess up the order\r\n    // while we loop through.\r\n    //\r\n    // Here we slice on off so that the loop in trigger\r\n    // can continue using it's old reference to loop without\r\n    // messing up the order.\r\n\r\n    this.listeners[type] = this.listeners[type].slice(0);\r\n    this.listeners[type].splice(index, 1);\r\n    return index > -1;\r\n  }\r\n  /**\r\n   * Trigger an event of the specified type on this stream. Any additional\r\n   * arguments to this function are passed as parameters to event listeners.\r\n   *\r\n   * @param {string} type the event name\r\n   */\r\n  ;\r\n\r\n  _proto.trigger = function trigger(type) {\r\n    var callbacks = this.listeners[type];\r\n\r\n    if (!callbacks) {\r\n      return;\r\n    } // Slicing the arguments on every invocation of this method\r\n    // can add a significant amount of overhead. Avoid the\r\n    // intermediate object creation for the common case of a\r\n    // single callback argument\r\n\r\n\r\n    if (arguments.length === 2) {\r\n      var length = callbacks.length;\r\n\r\n      for (var i = 0; i < length; ++i) {\r\n        callbacks[i].call(this, arguments[1]);\r\n      }\r\n    } else {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n      var _length = callbacks.length;\r\n\r\n      for (var _i = 0; _i < _length; ++_i) {\r\n        callbacks[_i].apply(this, args);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Destroys the stream and cleans up.\r\n   */\r\n  ;\r\n\r\n  _proto.dispose = function dispose() {\r\n    this.listeners = {};\r\n  }\r\n  /**\r\n   * Forwards all `data` events on this stream to the destination stream. The\r\n   * destination stream should provide a method `push` to receive the data\r\n   * events as they arrive.\r\n   *\r\n   * @param {Stream} destination the stream that will receive all `data` events\r\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\r\n   */\r\n  ;\r\n\r\n  _proto.pipe = function pipe(destination) {\r\n    this.on('data', function (data) {\r\n      destination.push(data);\r\n    });\r\n  };\r\n\r\n  return Stream;\r\n}();\r\n\r\nexport { Stream as default };", "import window from 'global/window';\r\n\r\nvar atob = function atob(s) {\r\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\r\n};\r\n\r\nexport default function decodeB64ToUint8Array(b64Text) {\r\n  var decodedString = atob(b64Text);\r\n  var array = new Uint8Array(decodedString.length);\r\n\r\n  for (var i = 0; i < decodedString.length; i++) {\r\n    array[i] = decodedString.charCodeAt(i);\r\n  }\r\n\r\n  return array;\r\n}", "/*! @name m3u8-parser @version 4.8.0 @license Apache-2.0 */\r\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\r\nimport Stream from '@videojs/vhs-utils/es/stream.js';\r\nimport _extends from '@babel/runtime/helpers/extends';\r\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\r\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\r\n\r\n/**\r\n * A stream that buffers string input and generates a `data` event for each\r\n * line.\r\n *\r\n * @class LineStream\r\n * @extends Stream\r\n */\r\n\r\nvar LineStream = /*#__PURE__*/function (_Stream) {\r\n  _inheritsLoose(LineStream, _Stream);\r\n\r\n  function LineStream() {\r\n    var _this;\r\n\r\n    _this = _Stream.call(this) || this;\r\n    _this.buffer = '';\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add new data to be parsed.\r\n   *\r\n   * @param {string} data the text to process\r\n   */\r\n\r\n\r\n  var _proto = LineStream.prototype;\r\n\r\n  _proto.push = function push(data) {\r\n    var nextNewline;\r\n    this.buffer += data;\r\n    nextNewline = this.buffer.indexOf('\\n');\r\n\r\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\r\n      this.trigger('data', this.buffer.substring(0, nextNewline));\r\n      this.buffer = this.buffer.substring(nextNewline + 1);\r\n    }\r\n  };\r\n\r\n  return LineStream;\r\n}(Stream);\r\n\r\nvar TAB = String.fromCharCode(0x09);\r\n\r\nvar parseByterange = function parseByterange(byterangeString) {\r\n  // optionally match and capture 0+ digits before `@`\r\n  // optionally match and capture 0+ digits after `@`\r\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\r\n  var result = {};\r\n\r\n  if (match[1]) {\r\n    result.length = parseInt(match[1], 10);\r\n  }\r\n\r\n  if (match[2]) {\r\n    result.offset = parseInt(match[2], 10);\r\n  }\r\n\r\n  return result;\r\n};\r\n/**\r\n * \"forgiving\" attribute list psuedo-grammar:\r\n * attributes -> keyvalue (',' keyvalue)*\r\n * keyvalue   -> key '=' value\r\n * key        -> [^=]*\r\n * value      -> '\"' [^\"]* '\"' | [^,]*\r\n */\r\n\r\n\r\nvar attributeSeparator = function attributeSeparator() {\r\n  var key = '[^=]*';\r\n  var value = '\"[^\"]*\"|[^,]*';\r\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\r\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\r\n};\r\n/**\r\n * Parse attributes from a line given the separator\r\n *\r\n * @param {string} attributes the attribute line to parse\r\n */\r\n\r\n\r\nvar parseAttributes = function parseAttributes(attributes) {\r\n  // split the string using attributes as the separator\r\n  var attrs = attributes.split(attributeSeparator());\r\n  var result = {};\r\n  var i = attrs.length;\r\n  var attr;\r\n\r\n  while (i--) {\r\n    // filter out unmatched portions of the string\r\n    if (attrs[i] === '') {\r\n      continue;\r\n    } // split the key and value\r\n\r\n\r\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\r\n\r\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\r\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\r\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\r\n    result[attr[0]] = attr[1];\r\n  }\r\n\r\n  return result;\r\n};\r\n/**\r\n * A line-level M3U8 parser event stream. It expects to receive input one\r\n * line at a time and performs a context-free parse of its contents. A stream\r\n * interpretation of a manifest can be useful if the manifest is expected to\r\n * be too large to fit comfortably into memory or the entirety of the input\r\n * is not immediately available. Otherwise, it's probably much easier to work\r\n * with a regular `Parser` object.\r\n *\r\n * Produces `data` events with an object that captures the parser's\r\n * interpretation of the input. That object has a property `tag` that is one\r\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\r\n * property, `line`, which captures the entirety of the input without\r\n * interpretation. Comments similarly have a single additional property\r\n * `text` which is the input without the leading `#`.\r\n *\r\n * Tags always have a property `tagType` which is the lower-cased version of\r\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\r\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\r\n * tags are given the tag type `unknown` and a single additional property\r\n * `data` with the remainder of the input.\r\n *\r\n * @class ParseStream\r\n * @extends Stream\r\n */\r\n\r\n\r\nvar ParseStream = /*#__PURE__*/function (_Stream) {\r\n  _inheritsLoose(ParseStream, _Stream);\r\n\r\n  function ParseStream() {\r\n    var _this;\r\n\r\n    _this = _Stream.call(this) || this;\r\n    _this.customParsers = [];\r\n    _this.tagMappers = [];\r\n    return _this;\r\n  }\r\n  /**\r\n   * Parses an additional line of input.\r\n   *\r\n   * @param {string} line a single line of an M3U8 file to parse\r\n   */\r\n\r\n\r\n  var _proto = ParseStream.prototype;\r\n\r\n  _proto.push = function push(line) {\r\n    var _this2 = this;\r\n\r\n    var match;\r\n    var event; // strip whitespace\r\n\r\n    line = line.trim();\r\n\r\n    if (line.length === 0) {\r\n      // ignore empty lines\r\n      return;\r\n    } // URIs\r\n\r\n\r\n    if (line[0] !== '#') {\r\n      this.trigger('data', {\r\n        type: 'uri',\r\n        uri: line\r\n      });\r\n      return;\r\n    } // map tags\r\n\r\n\r\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\r\n      var mappedLine = mapper(line); // skip if unchanged\r\n\r\n      if (mappedLine === line) {\r\n        return acc;\r\n      }\r\n\r\n      return acc.concat([mappedLine]);\r\n    }, [line]);\r\n    newLines.forEach(function (newLine) {\r\n      for (var i = 0; i < _this2.customParsers.length; i++) {\r\n        if (_this2.customParsers[i].call(_this2, newLine)) {\r\n          return;\r\n        }\r\n      } // Comments\r\n\r\n\r\n      if (newLine.indexOf('#EXT') !== 0) {\r\n        _this2.trigger('data', {\r\n          type: 'comment',\r\n          text: newLine.slice(1)\r\n        });\r\n\r\n        return;\r\n      } // strip off any carriage returns here so the regex matching\r\n      // doesn't have to account for them.\r\n\r\n\r\n      newLine = newLine.replace('\\r', ''); // Tags\r\n\r\n      match = /^#EXTM3U/.exec(newLine);\r\n\r\n      if (match) {\r\n        _this2.trigger('data', {\r\n          type: 'tag',\r\n          tagType: 'm3u'\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'inf'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.duration = parseFloat(match[1]);\r\n        }\r\n\r\n        if (match[2]) {\r\n          event.title = match[2];\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'targetduration'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.duration = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'version'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.version = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'media-sequence'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.number = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'discontinuity-sequence'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.number = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'playlist-type'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.playlistType = match[1];\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = _extends(parseByterange(match[1]), {\r\n          type: 'tag',\r\n          tagType: 'byterange'\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'allow-cache'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.allowed = !/NO/.test(match[1]);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'map'\r\n        };\r\n\r\n        if (match[1]) {\r\n          var attributes = parseAttributes(match[1]);\r\n\r\n          if (attributes.URI) {\r\n            event.uri = attributes.URI;\r\n          }\r\n\r\n          if (attributes.BYTERANGE) {\r\n            event.byterange = parseByterange(attributes.BYTERANGE);\r\n          }\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'stream-inf'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]);\r\n\r\n          if (event.attributes.RESOLUTION) {\r\n            var split = event.attributes.RESOLUTION.split('x');\r\n            var resolution = {};\r\n\r\n            if (split[0]) {\r\n              resolution.width = parseInt(split[0], 10);\r\n            }\r\n\r\n            if (split[1]) {\r\n              resolution.height = parseInt(split[1], 10);\r\n            }\r\n\r\n            event.attributes.RESOLUTION = resolution;\r\n          }\r\n\r\n          if (event.attributes.BANDWIDTH) {\r\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\r\n          }\r\n\r\n          if (event.attributes['FRAME-RATE']) {\r\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\r\n          }\r\n\r\n          if (event.attributes['PROGRAM-ID']) {\r\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\r\n          }\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'media'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\r\n\r\n      if (match) {\r\n        _this2.trigger('data', {\r\n          type: 'tag',\r\n          tagType: 'endlist'\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\r\n\r\n      if (match) {\r\n        _this2.trigger('data', {\r\n          type: 'tag',\r\n          tagType: 'discontinuity'\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'program-date-time'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.dateTimeString = match[1];\r\n          event.dateTimeObject = new Date(match[1]);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'key'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\r\n\r\n          if (event.attributes.IV) {\r\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\r\n              event.attributes.IV = event.attributes.IV.substring(2);\r\n            }\r\n\r\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\r\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\r\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\r\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\r\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\r\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\r\n          }\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'start'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]);\r\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\r\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'cue-out-cont'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.data = match[1];\r\n        } else {\r\n          event.data = '';\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'cue-out'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.data = match[1];\r\n        } else {\r\n          event.data = '';\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'cue-in'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.data = match[1];\r\n        } else {\r\n          event.data = '';\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'skip'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n\r\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\r\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\r\n        }\r\n\r\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\r\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'part'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['DURATION'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseFloat(event.attributes[key]);\r\n          }\r\n        });\r\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = /YES/.test(event.attributes[key]);\r\n          }\r\n        });\r\n\r\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\r\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'server-control'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseFloat(event.attributes[key]);\r\n          }\r\n        });\r\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = /YES/.test(event.attributes[key]);\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'part-inf'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['PART-TARGET'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseFloat(event.attributes[key]);\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'preload-hint'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseInt(event.attributes[key], 10);\r\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\r\n            event.attributes.byterange = event.attributes.byterange || {};\r\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\r\n\r\n            delete event.attributes[key];\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'rendition-report'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseInt(event.attributes[key], 10);\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      } // unknown tag type\r\n\r\n\r\n      _this2.trigger('data', {\r\n        type: 'tag',\r\n        data: newLine.slice(4)\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Add a parser for custom headers\r\n   *\r\n   * @param {Object}   options              a map of options for the added parser\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {string}   options.customType   the custom type to register to the output\r\n   * @param {Function} [options.dataParser] function to parse the line into an object\r\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\r\n   */\r\n  ;\r\n\r\n  _proto.addParser = function addParser(_ref) {\r\n    var _this3 = this;\r\n\r\n    var expression = _ref.expression,\r\n        customType = _ref.customType,\r\n        dataParser = _ref.dataParser,\r\n        segment = _ref.segment;\r\n\r\n    if (typeof dataParser !== 'function') {\r\n      dataParser = function dataParser(line) {\r\n        return line;\r\n      };\r\n    }\r\n\r\n    this.customParsers.push(function (line) {\r\n      var match = expression.exec(line);\r\n\r\n      if (match) {\r\n        _this3.trigger('data', {\r\n          type: 'custom',\r\n          data: dataParser(line),\r\n          customType: customType,\r\n          segment: segment\r\n        });\r\n\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Add a custom header mapper\r\n   *\r\n   * @param {Object}   options\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {Function} options.map          function to translate tag into a different tag\r\n   */\r\n  ;\r\n\r\n  _proto.addTagMapper = function addTagMapper(_ref2) {\r\n    var expression = _ref2.expression,\r\n        map = _ref2.map;\r\n\r\n    var mapFn = function mapFn(line) {\r\n      if (expression.test(line)) {\r\n        return map(line);\r\n      }\r\n\r\n      return line;\r\n    };\r\n\r\n    this.tagMappers.push(mapFn);\r\n  };\r\n\r\n  return ParseStream;\r\n}(Stream);\r\n\r\nvar camelCase = function camelCase(str) {\r\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\r\n    return a[1].toUpperCase();\r\n  });\r\n};\r\n\r\nvar camelCaseKeys = function camelCaseKeys(attributes) {\r\n  var result = {};\r\n  Object.keys(attributes).forEach(function (key) {\r\n    result[camelCase(key)] = attributes[key];\r\n  });\r\n  return result;\r\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\r\n// we need this helper because defaults are based upon targetDuration and\r\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\r\n// target durations are set.\r\n\r\n\r\nvar setHoldBack = function setHoldBack(manifest) {\r\n  var serverControl = manifest.serverControl,\r\n      targetDuration = manifest.targetDuration,\r\n      partTargetDuration = manifest.partTargetDuration;\r\n\r\n  if (!serverControl) {\r\n    return;\r\n  }\r\n\r\n  var tag = '#EXT-X-SERVER-CONTROL';\r\n  var hb = 'holdBack';\r\n  var phb = 'partHoldBack';\r\n  var minTargetDuration = targetDuration && targetDuration * 3;\r\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\r\n\r\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\r\n    serverControl[hb] = minTargetDuration;\r\n    this.trigger('info', {\r\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\r\n    });\r\n  }\r\n\r\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\r\n    this.trigger('warn', {\r\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\r\n    });\r\n    serverControl[hb] = minTargetDuration;\r\n  } // default no part hold back to part target duration * 3\r\n\r\n\r\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\r\n    serverControl[phb] = partTargetDuration * 3;\r\n    this.trigger('info', {\r\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\r\n    });\r\n  } // if part hold back is too small default it to part target duration * 2\r\n\r\n\r\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\r\n    this.trigger('warn', {\r\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\r\n    });\r\n    serverControl[phb] = minPartDuration;\r\n  }\r\n};\r\n/**\r\n * A parser for M3U8 files. The current interpretation of the input is\r\n * exposed as a property `manifest` on parser objects. It's just two lines to\r\n * create and parse a manifest once you have the contents available as a string:\r\n *\r\n * ```js\r\n * var parser = new m3u8.Parser();\r\n * parser.push(xhr.responseText);\r\n * ```\r\n *\r\n * New input can later be applied to update the manifest object by calling\r\n * `push` again.\r\n *\r\n * The parser attempts to create a usable manifest object even if the\r\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\r\n * events during the parse if it encounters input that seems invalid or\r\n * requires some property of the manifest object to be defaulted.\r\n *\r\n * @class Parser\r\n * @extends Stream\r\n */\r\n\r\n\r\nvar Parser = /*#__PURE__*/function (_Stream) {\r\n  _inheritsLoose(Parser, _Stream);\r\n\r\n  function Parser() {\r\n    var _this;\r\n\r\n    _this = _Stream.call(this) || this;\r\n    _this.lineStream = new LineStream();\r\n    _this.parseStream = new ParseStream();\r\n\r\n    _this.lineStream.pipe(_this.parseStream);\r\n    /* eslint-disable consistent-this */\r\n\r\n\r\n    var self = _assertThisInitialized(_this);\r\n    /* eslint-enable consistent-this */\r\n\r\n\r\n    var uris = [];\r\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\r\n\r\n    var currentMap; // if specified, the active decryption key\r\n\r\n    var _key;\r\n\r\n    var hasParts = false;\r\n\r\n    var noop = function noop() {};\r\n\r\n    var defaultMediaGroups = {\r\n      'AUDIO': {},\r\n      'VIDEO': {},\r\n      'CLOSED-CAPTIONS': {},\r\n      'SUBTITLES': {}\r\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\r\n    // used in MPDs with Widevine encrypted streams.\r\n\r\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\r\n\r\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\r\n\r\n    _this.manifest = {\r\n      allowCache: true,\r\n      discontinuityStarts: [],\r\n      segments: []\r\n    }; // keep track of the last seen segment's byte range end, as segments are not required\r\n    // to provide the offset, in which case it defaults to the next byte after the\r\n    // previous segment\r\n\r\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\r\n\r\n    var lastPartByterangeEnd = 0;\r\n\r\n    _this.on('end', function () {\r\n      // only add preloadSegment if we don't yet have a uri for it.\r\n      // and we actually have parts/preloadHints\r\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\r\n        return;\r\n      }\r\n\r\n      if (!currentUri.map && currentMap) {\r\n        currentUri.map = currentMap;\r\n      }\r\n\r\n      if (!currentUri.key && _key) {\r\n        currentUri.key = _key;\r\n      }\r\n\r\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\r\n        currentUri.timeline = currentTimeline;\r\n      }\r\n\r\n      _this.manifest.preloadSegment = currentUri;\r\n    }); // update the manifest with the m3u8 entry from the parse stream\r\n\r\n\r\n    _this.parseStream.on('data', function (entry) {\r\n      var mediaGroup;\r\n      var rendition;\r\n      ({\r\n        tag: function tag() {\r\n          // switch based on the tag type\r\n          (({\r\n            version: function version() {\r\n              if (entry.version) {\r\n                this.manifest.version = entry.version;\r\n              }\r\n            },\r\n            'allow-cache': function allowCache() {\r\n              this.manifest.allowCache = entry.allowed;\r\n\r\n              if (!('allowed' in entry)) {\r\n                this.trigger('info', {\r\n                  message: 'defaulting allowCache to YES'\r\n                });\r\n                this.manifest.allowCache = true;\r\n              }\r\n            },\r\n            byterange: function byterange() {\r\n              var byterange = {};\r\n\r\n              if ('length' in entry) {\r\n                currentUri.byterange = byterange;\r\n                byterange.length = entry.length;\r\n\r\n                if (!('offset' in entry)) {\r\n                  /*\r\n                   * From the latest spec (as of this writing):\r\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\r\n                   *\r\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\r\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\r\n                   *\r\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\r\n                   * following the sub-range of the previous media segment.\"\r\n                   */\r\n                  entry.offset = lastByterangeEnd;\r\n                }\r\n              }\r\n\r\n              if ('offset' in entry) {\r\n                currentUri.byterange = byterange;\r\n                byterange.offset = entry.offset;\r\n              }\r\n\r\n              lastByterangeEnd = byterange.offset + byterange.length;\r\n            },\r\n            endlist: function endlist() {\r\n              this.manifest.endList = true;\r\n            },\r\n            inf: function inf() {\r\n              if (!('mediaSequence' in this.manifest)) {\r\n                this.manifest.mediaSequence = 0;\r\n                this.trigger('info', {\r\n                  message: 'defaulting media sequence to zero'\r\n                });\r\n              }\r\n\r\n              if (!('discontinuitySequence' in this.manifest)) {\r\n                this.manifest.discontinuitySequence = 0;\r\n                this.trigger('info', {\r\n                  message: 'defaulting discontinuity sequence to zero'\r\n                });\r\n              }\r\n\r\n              if (entry.duration > 0) {\r\n                currentUri.duration = entry.duration;\r\n              }\r\n\r\n              if (entry.duration === 0) {\r\n                currentUri.duration = 0.01;\r\n                this.trigger('info', {\r\n                  message: 'updating zero segment duration to a small value'\r\n                });\r\n              }\r\n\r\n              this.manifest.segments = uris;\r\n            },\r\n            key: function key() {\r\n              if (!entry.attributes) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring key declaration without attribute list'\r\n                });\r\n                return;\r\n              } // clear the active encryption key\r\n\r\n\r\n              if (entry.attributes.METHOD === 'NONE') {\r\n                _key = null;\r\n                return;\r\n              }\r\n\r\n              if (!entry.attributes.URI) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring key declaration without URI'\r\n                });\r\n                return;\r\n              }\r\n\r\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\r\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\r\n\r\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\r\n                  attributes: entry.attributes\r\n                };\r\n                return;\r\n              }\r\n\r\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\r\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\r\n\r\n                this.manifest.contentProtection['com.microsoft.playready'] = {\r\n                  uri: entry.attributes.URI\r\n                };\r\n                return;\r\n              } // check if the content is encrypted for Widevine\r\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\r\n\r\n\r\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\r\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\r\n\r\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\r\n                  this.trigger('warn', {\r\n                    message: 'invalid key method provided for Widevine'\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\r\n                  this.trigger('warn', {\r\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\r\n                  });\r\n                }\r\n\r\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\r\n                  this.trigger('warn', {\r\n                    message: 'invalid key URI provided for Widevine'\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\r\n                  this.trigger('warn', {\r\n                    message: 'invalid key ID provided for Widevine'\r\n                  });\r\n                  return;\r\n                } // if Widevine key attributes are valid, store them as `contentProtection`\r\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\r\n\r\n\r\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\r\n                this.manifest.contentProtection['com.widevine.alpha'] = {\r\n                  attributes: {\r\n                    schemeIdUri: entry.attributes.KEYFORMAT,\r\n                    // remove '0x' from the key id string\r\n                    keyId: entry.attributes.KEYID.substring(2)\r\n                  },\r\n                  // decode the base64-encoded PSSH box\r\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\r\n                };\r\n                return;\r\n              }\r\n\r\n              if (!entry.attributes.METHOD) {\r\n                this.trigger('warn', {\r\n                  message: 'defaulting key method to AES-128'\r\n                });\r\n              } // setup an encryption key for upcoming segments\r\n\r\n\r\n              _key = {\r\n                method: entry.attributes.METHOD || 'AES-128',\r\n                uri: entry.attributes.URI\r\n              };\r\n\r\n              if (typeof entry.attributes.IV !== 'undefined') {\r\n                _key.iv = entry.attributes.IV;\r\n              }\r\n            },\r\n            'media-sequence': function mediaSequence() {\r\n              if (!isFinite(entry.number)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring invalid media sequence: ' + entry.number\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.mediaSequence = entry.number;\r\n            },\r\n            'discontinuity-sequence': function discontinuitySequence() {\r\n              if (!isFinite(entry.number)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.discontinuitySequence = entry.number;\r\n              currentTimeline = entry.number;\r\n            },\r\n            'playlist-type': function playlistType() {\r\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.playlistType = entry.playlistType;\r\n            },\r\n            map: function map() {\r\n              currentMap = {};\r\n\r\n              if (entry.uri) {\r\n                currentMap.uri = entry.uri;\r\n              }\r\n\r\n              if (entry.byterange) {\r\n                currentMap.byterange = entry.byterange;\r\n              }\r\n\r\n              if (_key) {\r\n                currentMap.key = _key;\r\n              }\r\n            },\r\n            'stream-inf': function streamInf() {\r\n              this.manifest.playlists = uris;\r\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\r\n\r\n              if (!entry.attributes) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring empty stream-inf attributes'\r\n                });\r\n                return;\r\n              }\r\n\r\n              if (!currentUri.attributes) {\r\n                currentUri.attributes = {};\r\n              }\r\n\r\n              _extends(currentUri.attributes, entry.attributes);\r\n            },\r\n            media: function media() {\r\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\r\n\r\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring incomplete or missing media group'\r\n                });\r\n                return;\r\n              } // find the media group, creating defaults as necessary\r\n\r\n\r\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\r\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\r\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\r\n\r\n              rendition = {\r\n                default: /yes/i.test(entry.attributes.DEFAULT)\r\n              };\r\n\r\n              if (rendition.default) {\r\n                rendition.autoselect = true;\r\n              } else {\r\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\r\n              }\r\n\r\n              if (entry.attributes.LANGUAGE) {\r\n                rendition.language = entry.attributes.LANGUAGE;\r\n              }\r\n\r\n              if (entry.attributes.URI) {\r\n                rendition.uri = entry.attributes.URI;\r\n              }\r\n\r\n              if (entry.attributes['INSTREAM-ID']) {\r\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\r\n              }\r\n\r\n              if (entry.attributes.CHARACTERISTICS) {\r\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\r\n              }\r\n\r\n              if (entry.attributes.FORCED) {\r\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\r\n              } // insert the new rendition\r\n\r\n\r\n              mediaGroup[entry.attributes.NAME] = rendition;\r\n            },\r\n            discontinuity: function discontinuity() {\r\n              currentTimeline += 1;\r\n              currentUri.discontinuity = true;\r\n              this.manifest.discontinuityStarts.push(uris.length);\r\n            },\r\n            'program-date-time': function programDateTime() {\r\n              if (typeof this.manifest.dateTimeString === 'undefined') {\r\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\r\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\r\n                // to the manifest object\r\n                // TODO: Consider removing this in future major version\r\n                this.manifest.dateTimeString = entry.dateTimeString;\r\n                this.manifest.dateTimeObject = entry.dateTimeObject;\r\n              }\r\n\r\n              currentUri.dateTimeString = entry.dateTimeString;\r\n              currentUri.dateTimeObject = entry.dateTimeObject;\r\n            },\r\n            targetduration: function targetduration() {\r\n              if (!isFinite(entry.duration) || entry.duration < 0) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring invalid target duration: ' + entry.duration\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.targetDuration = entry.duration;\r\n              setHoldBack.call(this, this.manifest);\r\n            },\r\n            start: function start() {\r\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring start declaration without appropriate attribute list'\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.start = {\r\n                timeOffset: entry.attributes['TIME-OFFSET'],\r\n                precise: entry.attributes.PRECISE\r\n              };\r\n            },\r\n            'cue-out': function cueOut() {\r\n              currentUri.cueOut = entry.data;\r\n            },\r\n            'cue-out-cont': function cueOutCont() {\r\n              currentUri.cueOutCont = entry.data;\r\n            },\r\n            'cue-in': function cueIn() {\r\n              currentUri.cueIn = entry.data;\r\n            },\r\n            'skip': function skip() {\r\n              this.manifest.skip = camelCaseKeys(entry.attributes);\r\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\r\n            },\r\n            'part': function part() {\r\n              var _this2 = this;\r\n\r\n              hasParts = true; // parts are always specifed before a segment\r\n\r\n              var segmentIndex = this.manifest.segments.length;\r\n              var part = camelCaseKeys(entry.attributes);\r\n              currentUri.parts = currentUri.parts || [];\r\n              currentUri.parts.push(part);\r\n\r\n              if (part.byterange) {\r\n                if (!part.byterange.hasOwnProperty('offset')) {\r\n                  part.byterange.offset = lastPartByterangeEnd;\r\n                }\r\n\r\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\r\n              }\r\n\r\n              var partIndex = currentUri.parts.length - 1;\r\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\r\n\r\n              if (this.manifest.renditionReports) {\r\n                this.manifest.renditionReports.forEach(function (r, i) {\r\n                  if (!r.hasOwnProperty('lastPart')) {\r\n                    _this2.trigger('warn', {\r\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            },\r\n            'server-control': function serverControl() {\r\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\r\n\r\n              if (!attrs.hasOwnProperty('canBlockReload')) {\r\n                attrs.canBlockReload = false;\r\n                this.trigger('info', {\r\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\r\n                });\r\n              }\r\n\r\n              setHoldBack.call(this, this.manifest);\r\n\r\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\r\n                this.trigger('warn', {\r\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\r\n                });\r\n              }\r\n            },\r\n            'preload-hint': function preloadHint() {\r\n              // parts are always specifed before a segment\r\n              var segmentIndex = this.manifest.segments.length;\r\n              var hint = camelCaseKeys(entry.attributes);\r\n              var isPart = hint.type && hint.type === 'PART';\r\n              currentUri.preloadHints = currentUri.preloadHints || [];\r\n              currentUri.preloadHints.push(hint);\r\n\r\n              if (hint.byterange) {\r\n                if (!hint.byterange.hasOwnProperty('offset')) {\r\n                  // use last part byterange end or zero if not a part.\r\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\r\n\r\n                  if (isPart) {\r\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\r\n                  }\r\n                }\r\n              }\r\n\r\n              var index = currentUri.preloadHints.length - 1;\r\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\r\n\r\n              if (!hint.type) {\r\n                return;\r\n              } // search through all preload hints except for the current one for\r\n              // a duplicate type.\r\n\r\n\r\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\r\n                var otherHint = currentUri.preloadHints[i];\r\n\r\n                if (!otherHint.type) {\r\n                  continue;\r\n                }\r\n\r\n                if (otherHint.type === hint.type) {\r\n                  this.trigger('warn', {\r\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\r\n                  });\r\n                }\r\n              }\r\n            },\r\n            'rendition-report': function renditionReport() {\r\n              var report = camelCaseKeys(entry.attributes);\r\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\r\n              this.manifest.renditionReports.push(report);\r\n              var index = this.manifest.renditionReports.length - 1;\r\n              var required = ['LAST-MSN', 'URI'];\r\n\r\n              if (hasParts) {\r\n                required.push('LAST-PART');\r\n              }\r\n\r\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\r\n            },\r\n            'part-inf': function partInf() {\r\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\r\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\r\n\r\n              if (this.manifest.partInf.partTarget) {\r\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\r\n              }\r\n\r\n              setHoldBack.call(this, this.manifest);\r\n            }\r\n          })[entry.tagType] || noop).call(self);\r\n        },\r\n        uri: function uri() {\r\n          currentUri.uri = entry.uri;\r\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\r\n\r\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\r\n            this.trigger('warn', {\r\n              message: 'defaulting segment duration to the target duration'\r\n            });\r\n            currentUri.duration = this.manifest.targetDuration;\r\n          } // annotate with encryption information, if necessary\r\n\r\n\r\n          if (_key) {\r\n            currentUri.key = _key;\r\n          }\r\n\r\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\r\n\r\n          if (currentMap) {\r\n            currentUri.map = currentMap;\r\n          } // reset the last byterange end as it needs to be 0 between parts\r\n\r\n\r\n          lastPartByterangeEnd = 0; // prepare for the next URI\r\n\r\n          currentUri = {};\r\n        },\r\n        comment: function comment() {// comments are not important for playback\r\n        },\r\n        custom: function custom() {\r\n          // if this is segment-level data attach the output to the segment\r\n          if (entry.segment) {\r\n            currentUri.custom = currentUri.custom || {};\r\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\r\n          } else {\r\n            this.manifest.custom = this.manifest.custom || {};\r\n            this.manifest.custom[entry.customType] = entry.data;\r\n          }\r\n        }\r\n      })[entry.type].call(self);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Parser.prototype;\r\n\r\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\r\n    var missing = [];\r\n    required.forEach(function (key) {\r\n      if (!attributes.hasOwnProperty(key)) {\r\n        missing.push(key);\r\n      }\r\n    });\r\n\r\n    if (missing.length) {\r\n      this.trigger('warn', {\r\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Parse the input string and update the manifest object.\r\n   *\r\n   * @param {string} chunk a potentially incomplete portion of the manifest\r\n   */\r\n  ;\r\n\r\n  _proto.push = function push(chunk) {\r\n    this.lineStream.push(chunk);\r\n  }\r\n  /**\r\n   * Flush any remaining input. This can be handy if the last line of an M3U8\r\n   * manifest did not contain a trailing newline but the file has been\r\n   * completely received.\r\n   */\r\n  ;\r\n\r\n  _proto.end = function end() {\r\n    // flush any buffered input\r\n    this.lineStream.push('\\n');\r\n    this.trigger('end');\r\n  }\r\n  /**\r\n   * Add an additional parser for non-standard tags\r\n   *\r\n   * @param {Object}   options              a map of options for the added parser\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {string}   options.type         the type to register to the output\r\n   * @param {Function} [options.dataParser] function to parse the line into an object\r\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\r\n   */\r\n  ;\r\n\r\n  _proto.addParser = function addParser(options) {\r\n    this.parseStream.addParser(options);\r\n  }\r\n  /**\r\n   * Add a custom header mapper\r\n   *\r\n   * @param {Object}   options\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {Function} options.map          function to translate tag into a different tag\r\n   */\r\n  ;\r\n\r\n  _proto.addTagMapper = function addTagMapper(options) {\r\n    this.parseStream.addTagMapper(options);\r\n  };\r\n\r\n  return Parser;\r\n}(Stream);\r\n\r\nexport { LineStream, ParseStream, Parser };\r\n", "import window from 'global/window';\r\nvar regexs = {\r\n  // to determine mime types\r\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\r\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\r\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\r\n  // to determine if a codec is audio or video\r\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\r\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\r\n  text: /^(stpp.ttml.im1t)/,\r\n  // mux.js support regex\r\n  muxerVideo: /^(avc0?1)/,\r\n  muxerAudio: /^(mp4a)/,\r\n  // match nothing as muxer does not support text right now.\r\n  // there cannot never be a character before the start of a string\r\n  // so this matches nothing.\r\n  muxerText: /a^/\r\n};\r\nvar mediaTypes = ['video', 'audio', 'text'];\r\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\r\n/**\r\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\r\n * `avc1.<hhhhhh>`\r\n *\r\n * @param {string} codec\r\n *        Codec string to translate\r\n * @return {string}\r\n *         The translated codec string\r\n */\r\n\r\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\r\n  if (!codec) {\r\n    return codec;\r\n  }\r\n\r\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\r\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\r\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\r\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\r\n  });\r\n};\r\n/**\r\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\r\n * `avc1.<hhhhhh>`\r\n *\r\n * @param {string[]} codecs\r\n *        An array of codec strings to translate\r\n * @return {string[]}\r\n *         The translated array of codec strings\r\n */\r\n\r\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\r\n  return codecs.map(translateLegacyCodec);\r\n};\r\n/**\r\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\r\n * standard `avc1.<hhhhhh>`.\r\n *\r\n * @param {string} codecString\r\n *        The codec string\r\n * @return {string}\r\n *         The codec string with old apple-style codecs replaced\r\n *\r\n * @private\r\n */\r\n\r\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\r\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\r\n    return translateLegacyCodecs([match])[0];\r\n  });\r\n};\r\n/**\r\n * @typedef {Object} ParsedCodecInfo\r\n * @property {number} codecCount\r\n *           Number of codecs parsed\r\n * @property {string} [videoCodec]\r\n *           Parsed video codec (if found)\r\n * @property {string} [videoObjectTypeIndicator]\r\n *           Video object type indicator (if found)\r\n * @property {string|null} audioProfile\r\n *           Audio profile\r\n */\r\n\r\n/**\r\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\r\n * object type indicator, and the audio profile.\r\n *\r\n * @param {string} [codecString]\r\n *        The codec string to parse\r\n * @return {ParsedCodecInfo}\r\n *         Parsed codec info\r\n */\r\n\r\nexport var parseCodecs = function parseCodecs(codecString) {\r\n  if (codecString === void 0) {\r\n    codecString = '';\r\n  }\r\n\r\n  var codecs = codecString.split(',');\r\n  var result = [];\r\n  codecs.forEach(function (codec) {\r\n    codec = codec.trim();\r\n    var codecType;\r\n    mediaTypes.forEach(function (name) {\r\n      var match = regexs[name].exec(codec.toLowerCase());\r\n\r\n      if (!match || match.length <= 1) {\r\n        return;\r\n      }\r\n\r\n      codecType = name; // maintain codec case\r\n\r\n      var type = codec.substring(0, match[1].length);\r\n      var details = codec.replace(type, '');\r\n      result.push({\r\n        type: type,\r\n        details: details,\r\n        mediaType: name\r\n      });\r\n    });\r\n\r\n    if (!codecType) {\r\n      result.push({\r\n        type: codec,\r\n        details: '',\r\n        mediaType: 'unknown'\r\n      });\r\n    }\r\n  });\r\n  return result;\r\n};\r\n/**\r\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\r\n * a default alternate audio playlist for the provided audio group.\r\n *\r\n * @param {Object} master\r\n *        The master playlist\r\n * @param {string} audioGroupId\r\n *        ID of the audio group for which to find the default codec info\r\n * @return {ParsedCodecInfo}\r\n *         Parsed codec info\r\n */\r\n\r\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\r\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\r\n    return null;\r\n  }\r\n\r\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\r\n\r\n  if (!audioGroup) {\r\n    return null;\r\n  }\r\n\r\n  for (var name in audioGroup) {\r\n    var audioType = audioGroup[name];\r\n\r\n    if (audioType.default && audioType.playlists) {\r\n      // codec should be the same for all playlists within the audio type\r\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\nexport var isVideoCodec = function isVideoCodec(codec) {\r\n  if (codec === void 0) {\r\n    codec = '';\r\n  }\r\n\r\n  return regexs.video.test(codec.trim().toLowerCase());\r\n};\r\nexport var isAudioCodec = function isAudioCodec(codec) {\r\n  if (codec === void 0) {\r\n    codec = '';\r\n  }\r\n\r\n  return regexs.audio.test(codec.trim().toLowerCase());\r\n};\r\nexport var isTextCodec = function isTextCodec(codec) {\r\n  if (codec === void 0) {\r\n    codec = '';\r\n  }\r\n\r\n  return regexs.text.test(codec.trim().toLowerCase());\r\n};\r\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\r\n  if (!codecString || typeof codecString !== 'string') {\r\n    return;\r\n  }\r\n\r\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\r\n    return translateLegacyCodec(c.trim());\r\n  }); // default to video type\r\n\r\n  var type = 'video'; // only change to audio type if the only codec we have is\r\n  // audio\r\n\r\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\r\n    type = 'audio';\r\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\r\n    // text uses application/<container> for now\r\n    type = 'application';\r\n  } // default the container to mp4\r\n\r\n\r\n  var container = 'mp4'; // every codec must be able to go into the container\r\n  // for that container to be the correct one\r\n\r\n  if (codecs.every(function (c) {\r\n    return regexs.mp4.test(c);\r\n  })) {\r\n    container = 'mp4';\r\n  } else if (codecs.every(function (c) {\r\n    return regexs.webm.test(c);\r\n  })) {\r\n    container = 'webm';\r\n  } else if (codecs.every(function (c) {\r\n    return regexs.ogg.test(c);\r\n  })) {\r\n    container = 'ogg';\r\n  }\r\n\r\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\r\n};\r\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\r\n  if (codecString === void 0) {\r\n    codecString = '';\r\n  }\r\n\r\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\r\n};\r\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\r\n  if (codecString === void 0) {\r\n    codecString = '';\r\n  }\r\n\r\n  return codecString.toLowerCase().split(',').every(function (codec) {\r\n    codec = codec.trim(); // any match is supported.\r\n\r\n    for (var i = 0; i < upperMediaTypes.length; i++) {\r\n      var type = upperMediaTypes[i];\r\n\r\n      if (regexs[\"muxer\" + type].test(codec)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n};\r\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\r\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';", "var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\r\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\r\n/**\r\n * Returns a string that describes the type of source based on a video source object's\r\n * media type.\r\n *\r\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\r\n *\r\n * @param {string} type\r\n *        Video source object media type\r\n * @return {('hls'|'dash'|'vhs-json'|null)}\r\n *         VHS source type string\r\n */\r\n\r\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\r\n  if (MPEGURL_REGEX.test(type)) {\r\n    return 'hls';\r\n  }\r\n\r\n  if (DASH_REGEX.test(type)) {\r\n    return 'dash';\r\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\r\n  // source URL.\r\n  //\r\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\r\n  //\r\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\r\n  // project, and the +json suffix identifies the structure of the media type.\r\n\r\n\r\n  if (type === 'application/vnd.videojs.vhs+json') {\r\n    return 'vhs-json';\r\n  }\r\n\r\n  return null;\r\n};", "import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\r\n\r\nvar repeat = function repeat(str, len) {\r\n  var acc = '';\r\n\r\n  while (len--) {\r\n    acc += str;\r\n  }\r\n\r\n  return acc;\r\n}; // count the number of bits it would take to represent a number\r\n// we used to do this with log2 but BigInt does not support builtin math\r\n// Math.ceil(log2(x));\r\n\r\n\r\nexport var countBits = function countBits(x) {\r\n  return x.toString(2).length;\r\n}; // count the number of whole bytes it would take to represent a number\r\n\r\nexport var countBytes = function countBytes(x) {\r\n  return Math.ceil(countBits(x) / 8);\r\n};\r\nexport var padStart = function padStart(b, len, str) {\r\n  if (str === void 0) {\r\n    str = ' ';\r\n  }\r\n\r\n  return (repeat(str, len) + b.toString()).slice(-len);\r\n};\r\nexport var isArrayBufferView = function isArrayBufferView(obj) {\r\n  if (ArrayBuffer.isView === 'function') {\r\n    return ArrayBuffer.isView(obj);\r\n  }\r\n\r\n  return obj && obj.buffer instanceof ArrayBuffer;\r\n};\r\nexport var isTypedArray = function isTypedArray(obj) {\r\n  return isArrayBufferView(obj);\r\n};\r\nexport var toUint8 = function toUint8(bytes) {\r\n  if (bytes instanceof Uint8Array) {\r\n    return bytes;\r\n  }\r\n\r\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\r\n    // any non-number or NaN leads to empty uint8array\r\n    // eslint-disable-next-line\r\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\r\n      bytes = 0;\r\n    } else {\r\n      bytes = [bytes];\r\n    }\r\n  }\r\n\r\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\r\n};\r\nexport var toHexString = function toHexString(bytes) {\r\n  bytes = toUint8(bytes);\r\n  var str = '';\r\n\r\n  for (var i = 0; i < bytes.length; i++) {\r\n    str += padStart(bytes[i].toString(16), 2, '0');\r\n  }\r\n\r\n  return str;\r\n};\r\nexport var toBinaryString = function toBinaryString(bytes) {\r\n  bytes = toUint8(bytes);\r\n  var str = '';\r\n\r\n  for (var i = 0; i < bytes.length; i++) {\r\n    str += padStart(bytes[i].toString(2), 8, '0');\r\n  }\r\n\r\n  return str;\r\n};\r\nvar BigInt = window.BigInt || Number;\r\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\r\nexport var ENDIANNESS = function () {\r\n  var a = new Uint16Array([0xFFCC]);\r\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\r\n\r\n  if (b[0] === 0xFF) {\r\n    return 'big';\r\n  }\r\n\r\n  if (b[0] === 0xCC) {\r\n    return 'little';\r\n  }\r\n\r\n  return 'unknown';\r\n}();\r\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\r\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\r\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\r\n  var _ref = _temp === void 0 ? {} : _temp,\r\n      _ref$signed = _ref.signed,\r\n      signed = _ref$signed === void 0 ? false : _ref$signed,\r\n      _ref$le = _ref.le,\r\n      le = _ref$le === void 0 ? false : _ref$le;\r\n\r\n  bytes = toUint8(bytes);\r\n  var fn = le ? 'reduce' : 'reduceRight';\r\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\r\n  var number = obj.call(bytes, function (total, byte, i) {\r\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\r\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\r\n  }, BigInt(0));\r\n\r\n  if (signed) {\r\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\r\n    number = BigInt(number);\r\n\r\n    if (number > max) {\r\n      number -= max;\r\n      number -= max;\r\n      number -= BigInt(2);\r\n    }\r\n  }\r\n\r\n  return Number(number);\r\n};\r\nexport var numberToBytes = function numberToBytes(number, _temp2) {\r\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\r\n      _ref2$le = _ref2.le,\r\n      le = _ref2$le === void 0 ? false : _ref2$le;\r\n\r\n  // eslint-disable-next-line\r\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\r\n    number = 0;\r\n  }\r\n\r\n  number = BigInt(number);\r\n  var byteCount = countBytes(number);\r\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\r\n\r\n  for (var i = 0; i < byteCount; i++) {\r\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\r\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\r\n\r\n    if (number < 0) {\r\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\r\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\r\n    }\r\n  }\r\n\r\n  return bytes;\r\n};\r\nexport var bytesToString = function bytesToString(bytes) {\r\n  if (!bytes) {\r\n    return '';\r\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\r\n  // but report more since this is a Uint16+ Array?\r\n\r\n\r\n  bytes = Array.prototype.slice.call(bytes);\r\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\r\n\r\n  try {\r\n    return decodeURIComponent(escape(string));\r\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\r\n    // or full non string data. Just return the potentially garbled string.\r\n  }\r\n\r\n  return string;\r\n};\r\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\r\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\r\n    string = string.toString();\r\n  }\r\n\r\n  if (typeof string !== 'string') {\r\n    return new Uint8Array();\r\n  } // If the string already is bytes, we don't have to do this\r\n  // otherwise we do this so that we split multi length characters\r\n  // into individual bytes\r\n\r\n\r\n  if (!stringIsBytes) {\r\n    string = unescape(encodeURIComponent(string));\r\n  }\r\n\r\n  var view = new Uint8Array(string.length);\r\n\r\n  for (var i = 0; i < string.length; i++) {\r\n    view[i] = string.charCodeAt(i);\r\n  }\r\n\r\n  return view;\r\n};\r\nexport var concatTypedArrays = function concatTypedArrays() {\r\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    buffers[_key] = arguments[_key];\r\n  }\r\n\r\n  buffers = buffers.filter(function (b) {\r\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\r\n  });\r\n\r\n  if (buffers.length <= 1) {\r\n    // for 0 length we will return empty uint8\r\n    // for 1 length we return the first uint8\r\n    return toUint8(buffers[0]);\r\n  }\r\n\r\n  var totalLen = buffers.reduce(function (total, buf, i) {\r\n    return total + (buf.byteLength || buf.length);\r\n  }, 0);\r\n  var tempBuffer = new Uint8Array(totalLen);\r\n  var offset = 0;\r\n  buffers.forEach(function (buf) {\r\n    buf = toUint8(buf);\r\n    tempBuffer.set(buf, offset);\r\n    offset += buf.byteLength;\r\n  });\r\n  return tempBuffer;\r\n};\r\n/**\r\n * Check if the bytes \"b\" are contained within bytes \"a\".\r\n *\r\n * @param {Uint8Array|Array} a\r\n *        Bytes to check in\r\n *\r\n * @param {Uint8Array|Array} b\r\n *        Bytes to check for\r\n *\r\n * @param {Object} options\r\n *        options\r\n *\r\n * @param {Array|Uint8Array} [offset=0]\r\n *        offset to use when looking at bytes in a\r\n *\r\n * @param {Array|Uint8Array} [mask=[]]\r\n *        mask to use on bytes before comparison.\r\n *\r\n * @return {boolean}\r\n *         If all bytes in b are inside of a, taking into account\r\n *         bit masks.\r\n */\r\n\r\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\r\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\r\n      _ref3$offset = _ref3.offset,\r\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\r\n      _ref3$mask = _ref3.mask,\r\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\r\n\r\n  a = toUint8(a);\r\n  b = toUint8(b); // ie 11 does not support uint8 every\r\n\r\n  var fn = b.every ? b.every : Array.prototype.every;\r\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\r\n  fn.call(b, function (bByte, i) {\r\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\r\n    return bByte === aByte;\r\n  });\r\n};\r\nexport var sliceBytes = function sliceBytes(src, start, end) {\r\n  if (Uint8Array.prototype.slice) {\r\n    return Uint8Array.prototype.slice.call(src, start, end);\r\n  }\r\n\r\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\r\n};\r\nexport var reverseBytes = function reverseBytes(src) {\r\n  if (src.reverse) {\r\n    return src.reverse();\r\n  }\r\n\r\n  return Array.prototype.reverse.call(src);\r\n};", "/*! @name mpd-parser @version 0.22.1 @license Apache-2.0 */\r\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\r\nimport window from 'global/window';\r\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\r\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\r\nimport { DOMParser } from '@xmldom/xmldom';\r\n\r\nvar version = \"0.22.1\";\r\n\r\nvar isObject = function isObject(obj) {\r\n  return !!obj && typeof obj === 'object';\r\n};\r\n\r\nvar merge = function merge() {\r\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    objects[_key] = arguments[_key];\r\n  }\r\n\r\n  return objects.reduce(function (result, source) {\r\n    if (typeof source !== 'object') {\r\n      return result;\r\n    }\r\n\r\n    Object.keys(source).forEach(function (key) {\r\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\r\n        result[key] = result[key].concat(source[key]);\r\n      } else if (isObject(result[key]) && isObject(source[key])) {\r\n        result[key] = merge(result[key], source[key]);\r\n      } else {\r\n        result[key] = source[key];\r\n      }\r\n    });\r\n    return result;\r\n  }, {});\r\n};\r\nvar values = function values(o) {\r\n  return Object.keys(o).map(function (k) {\r\n    return o[k];\r\n  });\r\n};\r\n\r\nvar range = function range(start, end) {\r\n  var result = [];\r\n\r\n  for (var i = start; i < end; i++) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\nvar flatten = function flatten(lists) {\r\n  return lists.reduce(function (x, y) {\r\n    return x.concat(y);\r\n  }, []);\r\n};\r\nvar from = function from(list) {\r\n  if (!list.length) {\r\n    return [];\r\n  }\r\n\r\n  var result = [];\r\n\r\n  for (var i = 0; i < list.length; i++) {\r\n    result.push(list[i]);\r\n  }\r\n\r\n  return result;\r\n};\r\nvar findIndexes = function findIndexes(l, key) {\r\n  return l.reduce(function (a, e, i) {\r\n    if (e[key]) {\r\n      a.push(i);\r\n    }\r\n\r\n    return a;\r\n  }, []);\r\n};\r\n/**\r\n * Returns the first index that satisfies the matching function, or -1 if not found.\r\n *\r\n * Only necessary because of IE11 support.\r\n *\r\n * @param {Array} list - the list to search through\r\n * @param {Function} matchingFunction - the matching function\r\n *\r\n * @return {number} the matching index or -1 if not found\r\n */\r\n\r\nvar findIndex = function findIndex(list, matchingFunction) {\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (matchingFunction(list[i])) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n/**\r\n * Returns a union of the included lists provided each element can be identified by a key.\r\n *\r\n * @param {Array} list - list of lists to get the union of\r\n * @param {Function} keyFunction - the function to use as a key for each element\r\n *\r\n * @return {Array} the union of the arrays\r\n */\r\n\r\nvar union = function union(lists, keyFunction) {\r\n  return values(lists.reduce(function (acc, list) {\r\n    list.forEach(function (el) {\r\n      acc[keyFunction(el)] = el;\r\n    });\r\n    return acc;\r\n  }, {}));\r\n};\r\n\r\nvar errors = {\r\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\r\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\r\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\r\n  NO_BASE_URL: 'NO_BASE_URL',\r\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\r\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\r\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\r\n};\r\n\r\n/**\r\n * @typedef {Object} SingleUri\r\n * @property {string} uri - relative location of segment\r\n * @property {string} resolvedUri - resolved location of segment\r\n * @property {Object} byterange - Object containing information on how to make byte range\r\n *   requests following byte-range-spec per RFC2616.\r\n * @property {String} byterange.length - length of range request\r\n * @property {String} byterange.offset - byte offset of range request\r\n *\r\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\r\n */\r\n\r\n/**\r\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\r\n * that conforms to how m3u8-parser is structured\r\n *\r\n * @see https://github.com/videojs/m3u8-parser\r\n *\r\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\r\n * @param {string} source - source url for segment\r\n * @param {string} range - optional range used for range calls,\r\n *   follows  RFC 2616, Clause 14.35.1\r\n * @return {SingleUri} full segment information transformed into a format similar\r\n *   to m3u8-parser\r\n */\r\n\r\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\r\n  var _ref$baseUrl = _ref.baseUrl,\r\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\r\n      _ref$source = _ref.source,\r\n      source = _ref$source === void 0 ? '' : _ref$source,\r\n      _ref$range = _ref.range,\r\n      range = _ref$range === void 0 ? '' : _ref$range,\r\n      _ref$indexRange = _ref.indexRange,\r\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\r\n  var segment = {\r\n    uri: source,\r\n    resolvedUri: resolveUrl(baseUrl || '', source)\r\n  };\r\n\r\n  if (range || indexRange) {\r\n    var rangeStr = range ? range : indexRange;\r\n    var ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\r\n\r\n    var startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\r\n    var endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\r\n\r\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\r\n      startRange = Number(startRange);\r\n    }\r\n\r\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\r\n      endRange = Number(endRange);\r\n    }\r\n\r\n    var length;\r\n\r\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\r\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\r\n    } else {\r\n      length = endRange - startRange + 1;\r\n    }\r\n\r\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\r\n      length = Number(length);\r\n    } // byterange should be inclusive according to\r\n    // RFC 2616, Clause 14.35.1\r\n\r\n\r\n    segment.byterange = {\r\n      length: length,\r\n      offset: startRange\r\n    };\r\n  }\r\n\r\n  return segment;\r\n};\r\nvar byteRangeToString = function byteRangeToString(byterange) {\r\n  // `endRange` is one less than `offset + length` because the HTTP range\r\n  // header uses inclusive ranges\r\n  var endRange;\r\n\r\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\r\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\r\n  } else {\r\n    endRange = byterange.offset + byterange.length - 1;\r\n  }\r\n\r\n  return byterange.offset + \"-\" + endRange;\r\n};\r\n\r\n/**\r\n * parse the end number attribue that can be a string\r\n * number, or undefined.\r\n *\r\n * @param {string|number|undefined} endNumber\r\n *        The end number attribute.\r\n *\r\n * @return {number|null}\r\n *          The result of parsing the end number.\r\n */\r\n\r\nvar parseEndNumber = function parseEndNumber(endNumber) {\r\n  if (endNumber && typeof endNumber !== 'number') {\r\n    endNumber = parseInt(endNumber, 10);\r\n  }\r\n\r\n  if (isNaN(endNumber)) {\r\n    return null;\r\n  }\r\n\r\n  return endNumber;\r\n};\r\n/**\r\n * Functions for calculating the range of available segments in static and dynamic\r\n * manifests.\r\n */\r\n\r\n\r\nvar segmentRange = {\r\n  /**\r\n   * Returns the entire range of available segments for a static MPD\r\n   *\r\n   * @param {Object} attributes\r\n   *        Inheritied MPD attributes\r\n   * @return {{ start: number, end: number }}\r\n   *         The start and end numbers for available segments\r\n   */\r\n  static: function _static(attributes) {\r\n    var duration = attributes.duration,\r\n        _attributes$timescale = attributes.timescale,\r\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\r\n        sourceDuration = attributes.sourceDuration,\r\n        periodDuration = attributes.periodDuration;\r\n    var endNumber = parseEndNumber(attributes.endNumber);\r\n    var segmentDuration = duration / timescale;\r\n\r\n    if (typeof endNumber === 'number') {\r\n      return {\r\n        start: 0,\r\n        end: endNumber\r\n      };\r\n    }\r\n\r\n    if (typeof periodDuration === 'number') {\r\n      return {\r\n        start: 0,\r\n        end: periodDuration / segmentDuration\r\n      };\r\n    }\r\n\r\n    return {\r\n      start: 0,\r\n      end: sourceDuration / segmentDuration\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns the current live window range of available segments for a dynamic MPD\r\n   *\r\n   * @param {Object} attributes\r\n   *        Inheritied MPD attributes\r\n   * @return {{ start: number, end: number }}\r\n   *         The start and end numbers for available segments\r\n   */\r\n  dynamic: function dynamic(attributes) {\r\n    var NOW = attributes.NOW,\r\n        clientOffset = attributes.clientOffset,\r\n        availabilityStartTime = attributes.availabilityStartTime,\r\n        _attributes$timescale2 = attributes.timescale,\r\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\r\n        duration = attributes.duration,\r\n        _attributes$periodSta = attributes.periodStart,\r\n        periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\r\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\r\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\r\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\r\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\r\n    var endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\r\n    // after retrieving UTC server time.\r\n\r\n    var now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\r\n    // Convert the period start time to EPOCH.\r\n\r\n    var periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\r\n\r\n    var periodEndWC = now + minimumUpdatePeriod;\r\n    var periodDuration = periodEndWC - periodStartWC;\r\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\r\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\r\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\r\n    return {\r\n      start: Math.max(0, availableStart),\r\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\r\n    };\r\n  }\r\n};\r\n/**\r\n * Maps a range of numbers to objects with information needed to build the corresponding\r\n * segment list\r\n *\r\n * @name toSegmentsCallback\r\n * @function\r\n * @param {number} number\r\n *        Number of the segment\r\n * @param {number} index\r\n *        Index of the number in the range list\r\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\r\n *         Object with segment timing and duration info\r\n */\r\n\r\n/**\r\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\r\n * information needed to build the segment list.\r\n *\r\n * @param {Object} attributes\r\n *        Inherited MPD attributes\r\n * @return {toSegmentsCallback}\r\n *         Callback map function\r\n */\r\n\r\nvar toSegments = function toSegments(attributes) {\r\n  return function (number) {\r\n    var duration = attributes.duration,\r\n        _attributes$timescale3 = attributes.timescale,\r\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\r\n        periodStart = attributes.periodStart,\r\n        _attributes$startNumb = attributes.startNumber,\r\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\r\n    return {\r\n      number: startNumber + number,\r\n      duration: duration / timescale,\r\n      timeline: periodStart,\r\n      time: number * duration\r\n    };\r\n  };\r\n};\r\n/**\r\n * Returns a list of objects containing segment timing and duration info used for\r\n * building the list of segments. This uses the @duration attribute specified\r\n * in the MPD manifest to derive the range of segments.\r\n *\r\n * @param {Object} attributes\r\n *        Inherited MPD attributes\r\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\r\n *         List of Objects with segment timing and duration info\r\n */\r\n\r\nvar parseByDuration = function parseByDuration(attributes) {\r\n  var type = attributes.type,\r\n      duration = attributes.duration,\r\n      _attributes$timescale4 = attributes.timescale,\r\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\r\n      periodDuration = attributes.periodDuration,\r\n      sourceDuration = attributes.sourceDuration;\r\n\r\n  var _segmentRange$type = segmentRange[type](attributes),\r\n      start = _segmentRange$type.start,\r\n      end = _segmentRange$type.end;\r\n\r\n  var segments = range(start, end).map(toSegments(attributes));\r\n\r\n  if (type === 'static') {\r\n    var index = segments.length - 1; // section is either a period or the full source\r\n\r\n    var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\r\n\r\n    segments[index].duration = sectionDuration - duration / timescale * index;\r\n  }\r\n\r\n  return segments;\r\n};\r\n\r\n/**\r\n * Translates SegmentBase into a set of segments.\r\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\r\n * node should be translated into segment.\r\n *\r\n * @param {Object} attributes\r\n *   Object containing all inherited attributes from parent elements with attribute\r\n *   names as keys\r\n * @return {Object.<Array>} list of segments\r\n */\r\n\r\nvar segmentsFromBase = function segmentsFromBase(attributes) {\r\n  var baseUrl = attributes.baseUrl,\r\n      _attributes$initializ = attributes.initialization,\r\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\r\n      sourceDuration = attributes.sourceDuration,\r\n      _attributes$indexRang = attributes.indexRange,\r\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\r\n      periodStart = attributes.periodStart,\r\n      presentationTime = attributes.presentationTime,\r\n      _attributes$number = attributes.number,\r\n      number = _attributes$number === void 0 ? 0 : _attributes$number,\r\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\r\n\r\n  if (!baseUrl) {\r\n    throw new Error(errors.NO_BASE_URL);\r\n  }\r\n\r\n  var initSegment = urlTypeToSegment({\r\n    baseUrl: baseUrl,\r\n    source: initialization.sourceURL,\r\n    range: initialization.range\r\n  });\r\n  var segment = urlTypeToSegment({\r\n    baseUrl: baseUrl,\r\n    source: baseUrl,\r\n    indexRange: indexRange\r\n  });\r\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\r\n  // (since SegmentBase is only for one total segment)\r\n\r\n  if (duration) {\r\n    var segmentTimeInfo = parseByDuration(attributes);\r\n\r\n    if (segmentTimeInfo.length) {\r\n      segment.duration = segmentTimeInfo[0].duration;\r\n      segment.timeline = segmentTimeInfo[0].timeline;\r\n    }\r\n  } else if (sourceDuration) {\r\n    segment.duration = sourceDuration;\r\n    segment.timeline = periodStart;\r\n  } // If presentation time is provided, these segments are being generated by SIDX\r\n  // references, and should use the time provided. For the general case of SegmentBase,\r\n  // there should only be one segment in the period, so its presentation time is the same\r\n  // as its period start.\r\n\r\n\r\n  segment.presentationTime = presentationTime || periodStart;\r\n  segment.number = number;\r\n  return [segment];\r\n};\r\n/**\r\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\r\n * according to the sidx information given.\r\n *\r\n * playlist.sidx has metadadata about the sidx where-as the sidx param\r\n * is the parsed sidx box itself.\r\n *\r\n * @param {Object} playlist the playlist to update the sidx information for\r\n * @param {Object} sidx the parsed sidx box\r\n * @return {Object} the playlist object with the updated sidx information\r\n */\r\n\r\nvar addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\r\n  // Retain init segment information\r\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\r\n\r\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\r\n\r\n  var timeline = playlist.timeline || 0;\r\n  var sidxByteRange = playlist.sidx.byterange;\r\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\r\n\r\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\r\n\r\n  var mediaReferences = sidx.references.filter(function (r) {\r\n    return r.referenceType !== 1;\r\n  });\r\n  var segments = [];\r\n  var type = playlist.endList ? 'static' : 'dynamic';\r\n  var periodStart = playlist.sidx.timeline;\r\n  var presentationTime = periodStart;\r\n  var number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\r\n\r\n  var startIndex; // eslint-disable-next-line\r\n\r\n  if (typeof sidx.firstOffset === 'bigint') {\r\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\r\n  } else {\r\n    startIndex = sidxEnd + sidx.firstOffset;\r\n  }\r\n\r\n  for (var i = 0; i < mediaReferences.length; i++) {\r\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\r\n\r\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\r\n    // this will be converted to seconds when generating segments\r\n\r\n    var duration = reference.subsegmentDuration; // should be an inclusive range\r\n\r\n    var endIndex = void 0; // eslint-disable-next-line\r\n\r\n    if (typeof startIndex === 'bigint') {\r\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\r\n    } else {\r\n      endIndex = startIndex + size - 1;\r\n    }\r\n\r\n    var indexRange = startIndex + \"-\" + endIndex;\r\n    var attributes = {\r\n      baseUrl: baseUrl,\r\n      timescale: timescale,\r\n      timeline: timeline,\r\n      periodStart: periodStart,\r\n      presentationTime: presentationTime,\r\n      number: number,\r\n      duration: duration,\r\n      sourceDuration: sourceDuration,\r\n      indexRange: indexRange,\r\n      type: type\r\n    };\r\n    var segment = segmentsFromBase(attributes)[0];\r\n\r\n    if (initSegment) {\r\n      segment.map = initSegment;\r\n    }\r\n\r\n    segments.push(segment);\r\n\r\n    if (typeof startIndex === 'bigint') {\r\n      startIndex += window.BigInt(size);\r\n    } else {\r\n      startIndex += size;\r\n    }\r\n\r\n    presentationTime += duration / timescale;\r\n    number++;\r\n  }\r\n\r\n  playlist.segments = segments;\r\n  return playlist;\r\n};\r\n\r\nvar SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\r\n\r\nvar TIME_FUDGE = 1 / 60;\r\n/**\r\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\r\n *\r\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\r\n *\r\n * @return {TimelineStart[]} the combined and deduped timeline starts\r\n */\r\n\r\nvar getUniqueTimelineStarts = function getUniqueTimelineStarts(timelineStarts) {\r\n  return union(timelineStarts, function (_ref) {\r\n    var timeline = _ref.timeline;\r\n    return timeline;\r\n  }).sort(function (a, b) {\r\n    return a.timeline > b.timeline ? 1 : -1;\r\n  });\r\n};\r\n/**\r\n * Finds the playlist with the matching NAME attribute.\r\n *\r\n * @param {Array} playlists - playlists to search through\r\n * @param {string} name - the NAME attribute to search for\r\n *\r\n * @return {Object|null} the matching playlist object, or null\r\n */\r\n\r\nvar findPlaylistWithName = function findPlaylistWithName(playlists, name) {\r\n  for (var i = 0; i < playlists.length; i++) {\r\n    if (playlists[i].attributes.NAME === name) {\r\n      return playlists[i];\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n/**\r\n * Gets a flattened array of media group playlists.\r\n *\r\n * @param {Object} manifest - the main manifest object\r\n *\r\n * @return {Array} the media group playlists\r\n */\r\n\r\nvar getMediaGroupPlaylists = function getMediaGroupPlaylists(manifest) {\r\n  var mediaGroupPlaylists = [];\r\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, function (properties, type, group, label) {\r\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\r\n  });\r\n  return mediaGroupPlaylists;\r\n};\r\n/**\r\n * Updates the playlist's media sequence numbers.\r\n *\r\n * @param {Object} config - options object\r\n * @param {Object} config.playlist - the playlist to update\r\n * @param {number} config.mediaSequence - the mediaSequence number to start with\r\n */\r\n\r\nvar updateMediaSequenceForPlaylist = function updateMediaSequenceForPlaylist(_ref2) {\r\n  var playlist = _ref2.playlist,\r\n      mediaSequence = _ref2.mediaSequence;\r\n  playlist.mediaSequence = mediaSequence;\r\n  playlist.segments.forEach(function (segment, index) {\r\n    segment.number = playlist.mediaSequence + index;\r\n  });\r\n};\r\n/**\r\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\r\n * and a complete list of timeline starts.\r\n *\r\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\r\n * will be updated.\r\n *\r\n * Since early available timelines are not supported, at least one segment must be present.\r\n *\r\n * @param {Object} config - options object\r\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\r\n * @param {Object[]} newPlaylists - the new playlists to update\r\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\r\n */\r\n\r\nvar updateSequenceNumbers = function updateSequenceNumbers(_ref3) {\r\n  var oldPlaylists = _ref3.oldPlaylists,\r\n      newPlaylists = _ref3.newPlaylists,\r\n      timelineStarts = _ref3.timelineStarts;\r\n  newPlaylists.forEach(function (playlist) {\r\n    playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref4) {\r\n      var timeline = _ref4.timeline;\r\n      return timeline === playlist.timeline;\r\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\r\n    // (see ISO_23009-1-2012 5.3.5.2).\r\n    //\r\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\r\n\r\n    var oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\r\n\r\n    if (!oldPlaylist) {\r\n      // Since this is a new playlist, the media sequence values can start from 0 without\r\n      // consequence.\r\n      return;\r\n    } // TODO better support for live SIDX\r\n    //\r\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\r\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\r\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\r\n    // not supported when the SIDX properties change on refreshes.\r\n    //\r\n    // In the future, if support needs to be added, the merging logic here can be called\r\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\r\n    // thrown due to undefined references.\r\n\r\n\r\n    if (playlist.sidx) {\r\n      return;\r\n    } // Since we don't yet support early available timelines, we don't need to support\r\n    // playlists with no segments.\r\n\r\n\r\n    var firstNewSegment = playlist.segments[0];\r\n    var oldMatchingSegmentIndex = findIndex(oldPlaylist.segments, function (oldSegment) {\r\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\r\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\r\n    // In this case the media sequence should account for this update, and the new segments\r\n    // should be marked as discontinuous from the prior content, since the last prior\r\n    // timeline was removed.\r\n\r\n    if (oldMatchingSegmentIndex === -1) {\r\n      updateMediaSequenceForPlaylist({\r\n        playlist: playlist,\r\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\r\n      });\r\n      playlist.segments[0].discontinuity = true;\r\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\r\n      //\r\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\r\n      // then a discontinuity can be added to identify that there's potentially missing\r\n      // content. If there's no missing content, the discontinuity should still be rather\r\n      // harmless. It's possible that if segment durations are accurate enough, that the\r\n      // existence of a gap can be determined using the presentation times and durations,\r\n      // but if the segment timing info is off, it may introduce more problems than simply\r\n      // adding the discontinuity.\r\n      //\r\n      // If the new playlist's timeline is different from the last seen segment's timeline,\r\n      // then a discontinuity can be added to identify that this is the first seen segment\r\n      // of a new timeline. However, the logic at the start of this function that\r\n      // determined the disconinuity sequence by timeline index is now off by one (the\r\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\r\n      // we added it), so the disconinuity sequence must be decremented.\r\n      //\r\n      // A period may also have a duration of zero, so the case of no segments is handled\r\n      // here even though we don't yet support early available periods.\r\n\r\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\r\n        playlist.discontinuitySequence--;\r\n      }\r\n\r\n      return;\r\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\r\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\r\n    // timeline's matching one, but instead should be the one prior, and the first segment\r\n    // of the new manifest should be marked with a discontinuity.\r\n    //\r\n    // The reason for this special case is that discontinuity sequence shows how many\r\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\r\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\r\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\r\n    // sequence, and that first segment is an indicator, but can be removed before that\r\n    // timeline is gone.\r\n\r\n\r\n    var oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\r\n\r\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\r\n      firstNewSegment.discontinuity = true;\r\n      playlist.discontinuityStarts.unshift(0);\r\n      playlist.discontinuitySequence--;\r\n    }\r\n\r\n    updateMediaSequenceForPlaylist({\r\n      playlist: playlist,\r\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\r\n    });\r\n  });\r\n};\r\n/**\r\n * Given an old parsed manifest object and a new parsed manifest object, updates the\r\n * sequence and timing values within the new manifest to ensure that it lines up with the\r\n * old.\r\n *\r\n * @param {Array} oldManifest - the old main manifest object\r\n * @param {Array} newManifest - the new main manifest object\r\n *\r\n * @return {Object} the updated new manifest object\r\n */\r\n\r\nvar positionManifestOnTimeline = function positionManifestOnTimeline(_ref5) {\r\n  var oldManifest = _ref5.oldManifest,\r\n      newManifest = _ref5.newManifest;\r\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\r\n  //\r\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\r\n  //\r\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\r\n  //\r\n  // Because of this change, and the difficulty of supporting periods with changing start\r\n  // times, periods with changing start times are not supported. This makes the logic much\r\n  // simpler, since periods with the same start time can be considerred the same period\r\n  // across refreshes.\r\n  //\r\n  // To give an example as to the difficulty of handling periods where the start time may\r\n  // change, if a single period manifest is refreshed with another manifest with a single\r\n  // period, and both the start and end times are increased, then the only way to determine\r\n  // if it's a new period or an old one that has changed is to look through the segments of\r\n  // each playlist and determine the presentation time bounds to find a match. In addition,\r\n  // if the period start changed to exceed the old period end, then there would be no\r\n  // match, and it would not be possible to determine whether the refreshed period is a new\r\n  // one or the old one.\r\n  var oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\r\n  var newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\r\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\r\n  // of properties are saved for each seen Period. Even long running live streams won't\r\n  // generate too many Periods, unless the stream is watched for decades. In the future,\r\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\r\n  // but it may not become an issue, and the additional info can be useful for debugging.\r\n\r\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\r\n  updateSequenceNumbers({\r\n    oldPlaylists: oldPlaylists,\r\n    newPlaylists: newPlaylists,\r\n    timelineStarts: newManifest.timelineStarts\r\n  });\r\n  return newManifest;\r\n};\r\n\r\nvar generateSidxKey = function generateSidxKey(sidx) {\r\n  return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\r\n};\r\n\r\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\r\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\r\n    // assuming playlist IDs are the same across periods\r\n    // TODO: handle multiperiod where representation sets are not the same\r\n    // across periods\r\n    var name = playlist.attributes.id + (playlist.attributes.lang || '');\r\n\r\n    if (!acc[name]) {\r\n      // First Period\r\n      acc[name] = playlist;\r\n      acc[name].attributes.timelineStarts = [];\r\n    } else {\r\n      // Subsequent Periods\r\n      if (playlist.segments) {\r\n        var _acc$name$segments;\r\n\r\n        // first segment of subsequent periods signal a discontinuity\r\n        if (playlist.segments[0]) {\r\n          playlist.segments[0].discontinuity = true;\r\n        }\r\n\r\n        (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments);\r\n      } // bubble up contentProtection, this assumes all DRM content\r\n      // has the same contentProtection\r\n\r\n\r\n      if (playlist.attributes.contentProtection) {\r\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\r\n      }\r\n    }\r\n\r\n    acc[name].attributes.timelineStarts.push({\r\n      // Although they represent the same number, it's important to have both to make it\r\n      // compatible with HLS potentially having a similar attribute.\r\n      start: playlist.attributes.periodStart,\r\n      timeline: playlist.attributes.periodStart\r\n    });\r\n    return acc;\r\n  }, {}));\r\n  return mergedPlaylists.map(function (playlist) {\r\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\r\n    return playlist;\r\n  });\r\n};\r\n\r\nvar addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidxMapping) {\r\n  var sidxKey = generateSidxKey(playlist.sidx);\r\n  var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\r\n\r\n  if (sidxMatch) {\r\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\r\n  }\r\n\r\n  return playlist;\r\n};\r\nvar addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\r\n  if (sidxMapping === void 0) {\r\n    sidxMapping = {};\r\n  }\r\n\r\n  if (!Object.keys(sidxMapping).length) {\r\n    return playlists;\r\n  }\r\n\r\n  for (var i in playlists) {\r\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\r\n  }\r\n\r\n  return playlists;\r\n};\r\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\r\n  var _attributes;\r\n\r\n  var attributes = _ref.attributes,\r\n      segments = _ref.segments,\r\n      sidx = _ref.sidx,\r\n      mediaSequence = _ref.mediaSequence,\r\n      discontinuitySequence = _ref.discontinuitySequence,\r\n      discontinuityStarts = _ref.discontinuityStarts;\r\n  var playlist = {\r\n    attributes: (_attributes = {\r\n      NAME: attributes.id,\r\n      BANDWIDTH: attributes.bandwidth,\r\n      CODECS: attributes.codecs\r\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\r\n    uri: '',\r\n    endList: attributes.type === 'static',\r\n    timeline: attributes.periodStart,\r\n    resolvedUri: '',\r\n    targetDuration: attributes.duration,\r\n    discontinuitySequence: discontinuitySequence,\r\n    discontinuityStarts: discontinuityStarts,\r\n    timelineStarts: attributes.timelineStarts,\r\n    mediaSequence: mediaSequence,\r\n    segments: segments\r\n  };\r\n\r\n  if (attributes.contentProtection) {\r\n    playlist.contentProtection = attributes.contentProtection;\r\n  }\r\n\r\n  if (sidx) {\r\n    playlist.sidx = sidx;\r\n  }\r\n\r\n  if (isAudioOnly) {\r\n    playlist.attributes.AUDIO = 'audio';\r\n    playlist.attributes.SUBTITLES = 'subs';\r\n  }\r\n\r\n  return playlist;\r\n};\r\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\r\n  var _m3u8Attributes;\r\n\r\n  var attributes = _ref2.attributes,\r\n      segments = _ref2.segments,\r\n      mediaSequence = _ref2.mediaSequence,\r\n      discontinuityStarts = _ref2.discontinuityStarts,\r\n      discontinuitySequence = _ref2.discontinuitySequence;\r\n\r\n  if (typeof segments === 'undefined') {\r\n    // vtt tracks may use single file in BaseURL\r\n    segments = [{\r\n      uri: attributes.baseUrl,\r\n      timeline: attributes.periodStart,\r\n      resolvedUri: attributes.baseUrl || '',\r\n      duration: attributes.sourceDuration,\r\n      number: 0\r\n    }]; // targetDuration should be the same duration as the only segment\r\n\r\n    attributes.duration = attributes.sourceDuration;\r\n  }\r\n\r\n  var m3u8Attributes = (_m3u8Attributes = {\r\n    NAME: attributes.id,\r\n    BANDWIDTH: attributes.bandwidth\r\n  }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\r\n\r\n  if (attributes.codecs) {\r\n    m3u8Attributes.CODECS = attributes.codecs;\r\n  }\r\n\r\n  return {\r\n    attributes: m3u8Attributes,\r\n    uri: '',\r\n    endList: attributes.type === 'static',\r\n    timeline: attributes.periodStart,\r\n    resolvedUri: attributes.baseUrl || '',\r\n    targetDuration: attributes.duration,\r\n    timelineStarts: attributes.timelineStarts,\r\n    discontinuityStarts: discontinuityStarts,\r\n    discontinuitySequence: discontinuitySequence,\r\n    mediaSequence: mediaSequence,\r\n    segments: segments\r\n  };\r\n};\r\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\r\n  if (sidxMapping === void 0) {\r\n    sidxMapping = {};\r\n  }\r\n\r\n  if (isAudioOnly === void 0) {\r\n    isAudioOnly = false;\r\n  }\r\n\r\n  var mainPlaylist;\r\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\r\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\r\n    var language = playlist.attributes.lang || '';\r\n    var label = playlist.attributes.label || 'main';\r\n\r\n    if (language && !playlist.attributes.label) {\r\n      var roleLabel = role ? \" (\" + role + \")\" : '';\r\n      label = \"\" + playlist.attributes.lang + roleLabel;\r\n    }\r\n\r\n    if (!a[label]) {\r\n      a[label] = {\r\n        language: language,\r\n        autoselect: true,\r\n        default: role === 'main',\r\n        playlists: [],\r\n        uri: ''\r\n      };\r\n    }\r\n\r\n    var formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\r\n    a[label].playlists.push(formatted);\r\n\r\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\r\n      mainPlaylist = playlist;\r\n      mainPlaylist.default = true;\r\n    }\r\n\r\n    return a;\r\n  }, {}); // if no playlists have role \"main\", mark the first as main\r\n\r\n  if (!mainPlaylist) {\r\n    var firstLabel = Object.keys(formattedPlaylists)[0];\r\n    formattedPlaylists[firstLabel].default = true;\r\n  }\r\n\r\n  return formattedPlaylists;\r\n};\r\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\r\n  if (sidxMapping === void 0) {\r\n    sidxMapping = {};\r\n  }\r\n\r\n  return playlists.reduce(function (a, playlist) {\r\n    var label = playlist.attributes.lang || 'text';\r\n\r\n    if (!a[label]) {\r\n      a[label] = {\r\n        language: label,\r\n        default: false,\r\n        autoselect: false,\r\n        playlists: [],\r\n        uri: ''\r\n      };\r\n    }\r\n\r\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\r\n    return a;\r\n  }, {});\r\n};\r\n\r\nvar organizeCaptionServices = function organizeCaptionServices(captionServices) {\r\n  return captionServices.reduce(function (svcObj, svc) {\r\n    if (!svc) {\r\n      return svcObj;\r\n    }\r\n\r\n    svc.forEach(function (service) {\r\n      var channel = service.channel,\r\n          language = service.language;\r\n      svcObj[language] = {\r\n        autoselect: false,\r\n        default: false,\r\n        instreamId: channel,\r\n        language: language\r\n      };\r\n\r\n      if (service.hasOwnProperty('aspectRatio')) {\r\n        svcObj[language].aspectRatio = service.aspectRatio;\r\n      }\r\n\r\n      if (service.hasOwnProperty('easyReader')) {\r\n        svcObj[language].easyReader = service.easyReader;\r\n      }\r\n\r\n      if (service.hasOwnProperty('3D')) {\r\n        svcObj[language]['3D'] = service['3D'];\r\n      }\r\n    });\r\n    return svcObj;\r\n  }, {});\r\n};\r\n\r\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\r\n  var _attributes2;\r\n\r\n  var attributes = _ref3.attributes,\r\n      segments = _ref3.segments,\r\n      sidx = _ref3.sidx,\r\n      discontinuityStarts = _ref3.discontinuityStarts;\r\n  var playlist = {\r\n    attributes: (_attributes2 = {\r\n      NAME: attributes.id,\r\n      AUDIO: 'audio',\r\n      SUBTITLES: 'subs',\r\n      RESOLUTION: {\r\n        width: attributes.width,\r\n        height: attributes.height\r\n      },\r\n      CODECS: attributes.codecs,\r\n      BANDWIDTH: attributes.bandwidth\r\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\r\n    uri: '',\r\n    endList: attributes.type === 'static',\r\n    timeline: attributes.periodStart,\r\n    resolvedUri: '',\r\n    targetDuration: attributes.duration,\r\n    discontinuityStarts: discontinuityStarts,\r\n    timelineStarts: attributes.timelineStarts,\r\n    segments: segments\r\n  };\r\n\r\n  if (attributes.frameRate) {\r\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\r\n  }\r\n\r\n  if (attributes.contentProtection) {\r\n    playlist.contentProtection = attributes.contentProtection;\r\n  }\r\n\r\n  if (sidx) {\r\n    playlist.sidx = sidx;\r\n  }\r\n\r\n  return playlist;\r\n};\r\n\r\nvar videoOnly = function videoOnly(_ref4) {\r\n  var attributes = _ref4.attributes;\r\n  return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\r\n};\r\n\r\nvar audioOnly = function audioOnly(_ref5) {\r\n  var attributes = _ref5.attributes;\r\n  return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\r\n};\r\n\r\nvar vttOnly = function vttOnly(_ref6) {\r\n  var attributes = _ref6.attributes;\r\n  return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\r\n};\r\n/**\r\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\r\n * be the same number.\r\n *\r\n * @typedef {Object} TimelineStart\r\n * @property {number} start - the start time of the timeline\r\n * @property {number} timeline - the timeline number\r\n */\r\n\r\n/**\r\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\r\n *\r\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\r\n * DASH specific attribute used in constructing segment URI's from templates. However, from\r\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\r\n * value, which should start at the original media sequence value (or 0) and increment by 1\r\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\r\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\r\n * from a 0 mediaSequence value and increment from there.\r\n *\r\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\r\n * debugging and making sense of the manifest.\r\n *\r\n * For live playlists, to account for values increasing in manifests when periods are\r\n * removed on refreshes, merging logic should be used to update the numbers to their\r\n * appropriate values (to ensure they're sequential and increasing).\r\n *\r\n * @param {Object[]} playlists - the playlists to update\r\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\r\n */\r\n\r\n\r\nvar addMediaSequenceValues = function addMediaSequenceValues(playlists, timelineStarts) {\r\n  // increment all segments sequentially\r\n  playlists.forEach(function (playlist) {\r\n    playlist.mediaSequence = 0;\r\n    playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref7) {\r\n      var timeline = _ref7.timeline;\r\n      return timeline === playlist.timeline;\r\n    });\r\n\r\n    if (!playlist.segments) {\r\n      return;\r\n    }\r\n\r\n    playlist.segments.forEach(function (segment, index) {\r\n      segment.number = index;\r\n    });\r\n  });\r\n};\r\n/**\r\n * Given a media group object, flattens all playlists within the media group into a single\r\n * array.\r\n *\r\n * @param {Object} mediaGroupObject - the media group object\r\n *\r\n * @return {Object[]}\r\n *         The media group playlists\r\n */\r\n\r\nvar flattenMediaGroupPlaylists = function flattenMediaGroupPlaylists(mediaGroupObject) {\r\n  if (!mediaGroupObject) {\r\n    return [];\r\n  }\r\n\r\n  return Object.keys(mediaGroupObject).reduce(function (acc, label) {\r\n    var labelContents = mediaGroupObject[label];\r\n    return acc.concat(labelContents.playlists);\r\n  }, []);\r\n};\r\nvar toM3u8 = function toM3u8(_ref8) {\r\n  var _mediaGroups;\r\n\r\n  var dashPlaylists = _ref8.dashPlaylists,\r\n      locations = _ref8.locations,\r\n      _ref8$sidxMapping = _ref8.sidxMapping,\r\n      sidxMapping = _ref8$sidxMapping === void 0 ? {} : _ref8$sidxMapping,\r\n      previousManifest = _ref8.previousManifest;\r\n\r\n  if (!dashPlaylists.length) {\r\n    return {};\r\n  } // grab all main manifest attributes\r\n\r\n\r\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\r\n      duration = _dashPlaylists$0$attr.sourceDuration,\r\n      type = _dashPlaylists$0$attr.type,\r\n      suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\r\n      minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\r\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\r\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\r\n  var vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\r\n  var captions = dashPlaylists.map(function (playlist) {\r\n    return playlist.attributes.captionServices;\r\n  }).filter(Boolean);\r\n  var manifest = {\r\n    allowCache: true,\r\n    discontinuityStarts: [],\r\n    segments: [],\r\n    endList: true,\r\n    mediaGroups: (_mediaGroups = {\r\n      AUDIO: {},\r\n      VIDEO: {}\r\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\r\n    uri: '',\r\n    duration: duration,\r\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\r\n  };\r\n\r\n  if (minimumUpdatePeriod >= 0) {\r\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\r\n  }\r\n\r\n  if (locations) {\r\n    manifest.locations = locations;\r\n  }\r\n\r\n  if (type === 'dynamic') {\r\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\r\n  }\r\n\r\n  var isAudioOnly = manifest.playlists.length === 0;\r\n  var organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\r\n  var organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\r\n  var formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\r\n  var playlistTimelineStarts = formattedPlaylists.map(function (_ref9) {\r\n    var timelineStarts = _ref9.timelineStarts;\r\n    return timelineStarts;\r\n  });\r\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\r\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\r\n\r\n  if (organizedAudioGroup) {\r\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\r\n  }\r\n\r\n  if (organizedVttGroup) {\r\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\r\n  }\r\n\r\n  if (captions.length) {\r\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\r\n  }\r\n\r\n  if (previousManifest) {\r\n    return positionManifestOnTimeline({\r\n      oldManifest: previousManifest,\r\n      newManifest: manifest\r\n    });\r\n  }\r\n\r\n  return manifest;\r\n};\r\n\r\n/**\r\n * Calculates the R (repetition) value for a live stream (for the final segment\r\n * in a manifest where the r value is negative 1)\r\n *\r\n * @param {Object} attributes\r\n *        Object containing all inherited attributes from parent elements with attribute\r\n *        names as keys\r\n * @param {number} time\r\n *        current time (typically the total time up until the final segment)\r\n * @param {number} duration\r\n *        duration property for the given <S />\r\n *\r\n * @return {number}\r\n *        R value to reach the end of the given period\r\n */\r\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\r\n  var NOW = attributes.NOW,\r\n      clientOffset = attributes.clientOffset,\r\n      availabilityStartTime = attributes.availabilityStartTime,\r\n      _attributes$timescale = attributes.timescale,\r\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\r\n      _attributes$periodSta = attributes.periodStart,\r\n      periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\r\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\r\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\r\n  var now = (NOW + clientOffset) / 1000;\r\n  var periodStartWC = availabilityStartTime + periodStart;\r\n  var periodEndWC = now + minimumUpdatePeriod;\r\n  var periodDuration = periodEndWC - periodStartWC;\r\n  return Math.ceil((periodDuration * timescale - time) / duration);\r\n};\r\n/**\r\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\r\n * timing and duration\r\n *\r\n * @param {Object} attributes\r\n *        Object containing all inherited attributes from parent elements with attribute\r\n *        names as keys\r\n * @param {Object[]} segmentTimeline\r\n *        List of objects representing the attributes of each S element contained within\r\n *\r\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\r\n *         List of Objects with segment timing and duration info\r\n */\r\n\r\n\r\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\r\n  var type = attributes.type,\r\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\r\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\r\n      _attributes$media = attributes.media,\r\n      media = _attributes$media === void 0 ? '' : _attributes$media,\r\n      sourceDuration = attributes.sourceDuration,\r\n      _attributes$timescale2 = attributes.timescale,\r\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\r\n      _attributes$startNumb = attributes.startNumber,\r\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\r\n      timeline = attributes.periodStart;\r\n  var segments = [];\r\n  var time = -1;\r\n\r\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\r\n    var S = segmentTimeline[sIndex];\r\n    var duration = S.d;\r\n    var repeat = S.r || 0;\r\n    var segmentTime = S.t || 0;\r\n\r\n    if (time < 0) {\r\n      // first segment\r\n      time = segmentTime;\r\n    }\r\n\r\n    if (segmentTime && segmentTime > time) {\r\n      // discontinuity\r\n      // TODO: How to handle this type of discontinuity\r\n      // timeline++ here would treat it like HLS discontuity and content would\r\n      // get appended without gap\r\n      // E.G.\r\n      //  <S t=\"0\" d=\"1\" />\r\n      //  <S d=\"1\" />\r\n      //  <S d=\"1\" />\r\n      //  <S t=\"5\" d=\"1\" />\r\n      // would have $Time$ values of [0, 1, 2, 5]\r\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\r\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\r\n      // does the value of sourceDuration consider this when calculating arbitrary\r\n      // negative @r repeat value?\r\n      // E.G. Same elements as above with this added at the end\r\n      //  <S d=\"1\" r=\"-1\" />\r\n      //  with a sourceDuration of 10\r\n      // Would the 2 gaps be included in the time duration calculations resulting in\r\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\r\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\r\n      time = segmentTime;\r\n    }\r\n\r\n    var count = void 0;\r\n\r\n    if (repeat < 0) {\r\n      var nextS = sIndex + 1;\r\n\r\n      if (nextS === segmentTimeline.length) {\r\n        // last segment\r\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\r\n          count = getLiveRValue(attributes, time, duration);\r\n        } else {\r\n          // TODO: This may be incorrect depending on conclusion of TODO above\r\n          count = (sourceDuration * timescale - time) / duration;\r\n        }\r\n      } else {\r\n        count = (segmentTimeline[nextS].t - time) / duration;\r\n      }\r\n    } else {\r\n      count = repeat + 1;\r\n    }\r\n\r\n    var end = startNumber + segments.length + count;\r\n    var number = startNumber + segments.length;\r\n\r\n    while (number < end) {\r\n      segments.push({\r\n        number: number,\r\n        duration: duration / timescale,\r\n        time: time,\r\n        timeline: timeline\r\n      });\r\n      time += duration;\r\n      number++;\r\n    }\r\n  }\r\n\r\n  return segments;\r\n};\r\n\r\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\r\n/**\r\n * Replaces template identifiers with corresponding values. To be used as the callback\r\n * for String.prototype.replace\r\n *\r\n * @name replaceCallback\r\n * @function\r\n * @param {string} match\r\n *        Entire match of identifier\r\n * @param {string} identifier\r\n *        Name of matched identifier\r\n * @param {string} format\r\n *        Format tag string. Its presence indicates that padding is expected\r\n * @param {string} width\r\n *        Desired length of the replaced value. Values less than this width shall be left\r\n *        zero padded\r\n * @return {string}\r\n *         Replacement for the matched identifier\r\n */\r\n\r\n/**\r\n * Returns a function to be used as a callback for String.prototype.replace to replace\r\n * template identifiers\r\n *\r\n * @param {Obect} values\r\n *        Object containing values that shall be used to replace known identifiers\r\n * @param {number} values.RepresentationID\r\n *        Value of the Representation@id attribute\r\n * @param {number} values.Number\r\n *        Number of the corresponding segment\r\n * @param {number} values.Bandwidth\r\n *        Value of the Representation@bandwidth attribute.\r\n * @param {number} values.Time\r\n *        Timestamp value of the corresponding segment\r\n * @return {replaceCallback}\r\n *         Callback to be used with String.prototype.replace to replace identifiers\r\n */\r\n\r\nvar identifierReplacement = function identifierReplacement(values) {\r\n  return function (match, identifier, format, width) {\r\n    if (match === '$$') {\r\n      // escape sequence\r\n      return '$';\r\n    }\r\n\r\n    if (typeof values[identifier] === 'undefined') {\r\n      return match;\r\n    }\r\n\r\n    var value = '' + values[identifier];\r\n\r\n    if (identifier === 'RepresentationID') {\r\n      // Format tag shall not be present with RepresentationID\r\n      return value;\r\n    }\r\n\r\n    if (!format) {\r\n      width = 1;\r\n    } else {\r\n      width = parseInt(width, 10);\r\n    }\r\n\r\n    if (value.length >= width) {\r\n      return value;\r\n    }\r\n\r\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\r\n  };\r\n};\r\n/**\r\n * Constructs a segment url from a template string\r\n *\r\n * @param {string} url\r\n *        Template string to construct url from\r\n * @param {Obect} values\r\n *        Object containing values that shall be used to replace known identifiers\r\n * @param {number} values.RepresentationID\r\n *        Value of the Representation@id attribute\r\n * @param {number} values.Number\r\n *        Number of the corresponding segment\r\n * @param {number} values.Bandwidth\r\n *        Value of the Representation@bandwidth attribute.\r\n * @param {number} values.Time\r\n *        Timestamp value of the corresponding segment\r\n * @return {string}\r\n *         Segment url with identifiers replaced\r\n */\r\n\r\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\r\n  return url.replace(identifierPattern, identifierReplacement(values));\r\n};\r\n/**\r\n * Generates a list of objects containing timing and duration information about each\r\n * segment needed to generate segment uris and the complete segment object\r\n *\r\n * @param {Object} attributes\r\n *        Object containing all inherited attributes from parent elements with attribute\r\n *        names as keys\r\n * @param {Object[]|undefined} segmentTimeline\r\n *        List of objects representing the attributes of each S element contained within\r\n *        the SegmentTimeline element\r\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\r\n *         List of Objects with segment timing and duration info\r\n */\r\n\r\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\r\n  if (!attributes.duration && !segmentTimeline) {\r\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\r\n    // one media segment\r\n    return [{\r\n      number: attributes.startNumber || 1,\r\n      duration: attributes.sourceDuration,\r\n      time: 0,\r\n      timeline: attributes.periodStart\r\n    }];\r\n  }\r\n\r\n  if (attributes.duration) {\r\n    return parseByDuration(attributes);\r\n  }\r\n\r\n  return parseByTimeline(attributes, segmentTimeline);\r\n};\r\n/**\r\n * Generates a list of segments using information provided by the SegmentTemplate element\r\n *\r\n * @param {Object} attributes\r\n *        Object containing all inherited attributes from parent elements with attribute\r\n *        names as keys\r\n * @param {Object[]|undefined} segmentTimeline\r\n *        List of objects representing the attributes of each S element contained within\r\n *        the SegmentTimeline element\r\n * @return {Object[]}\r\n *         List of segment objects\r\n */\r\n\r\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\r\n  var templateValues = {\r\n    RepresentationID: attributes.id,\r\n    Bandwidth: attributes.bandwidth || 0\r\n  };\r\n  var _attributes$initializ = attributes.initialization,\r\n      initialization = _attributes$initializ === void 0 ? {\r\n    sourceURL: '',\r\n    range: ''\r\n  } : _attributes$initializ;\r\n  var mapSegment = urlTypeToSegment({\r\n    baseUrl: attributes.baseUrl,\r\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\r\n    range: initialization.range\r\n  });\r\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\r\n  return segments.map(function (segment) {\r\n    templateValues.Number = segment.number;\r\n    templateValues.Time = segment.time;\r\n    var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\r\n    // - if timescale isn't present on any level, default to 1.\r\n\r\n    var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\r\n\r\n    var presentationTimeOffset = attributes.presentationTimeOffset || 0;\r\n    var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\r\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\r\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\r\n    var map = {\r\n      uri: uri,\r\n      timeline: segment.timeline,\r\n      duration: segment.duration,\r\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\r\n      map: mapSegment,\r\n      number: segment.number,\r\n      presentationTime: presentationTime\r\n    };\r\n    return map;\r\n  });\r\n};\r\n\r\n/**\r\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\r\n * to an object that matches the output of a segment in videojs/mpd-parser\r\n *\r\n * @param {Object} attributes\r\n *   Object containing all inherited attributes from parent elements with attribute\r\n *   names as keys\r\n * @param {Object} segmentUrl\r\n *   <SegmentURL> node to translate into a segment object\r\n * @return {Object} translated segment object\r\n */\r\n\r\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\r\n  var baseUrl = attributes.baseUrl,\r\n      _attributes$initializ = attributes.initialization,\r\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\r\n  var initSegment = urlTypeToSegment({\r\n    baseUrl: baseUrl,\r\n    source: initialization.sourceURL,\r\n    range: initialization.range\r\n  });\r\n  var segment = urlTypeToSegment({\r\n    baseUrl: baseUrl,\r\n    source: segmentUrl.media,\r\n    range: segmentUrl.mediaRange\r\n  });\r\n  segment.map = initSegment;\r\n  return segment;\r\n};\r\n/**\r\n * Generates a list of segments using information provided by the SegmentList element\r\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\r\n * node should be translated into segment.\r\n *\r\n * @param {Object} attributes\r\n *   Object containing all inherited attributes from parent elements with attribute\r\n *   names as keys\r\n * @param {Object[]|undefined} segmentTimeline\r\n *        List of objects representing the attributes of each S element contained within\r\n *        the SegmentTimeline element\r\n * @return {Object.<Array>} list of segments\r\n */\r\n\r\n\r\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\r\n  var duration = attributes.duration,\r\n      _attributes$segmentUr = attributes.segmentUrls,\r\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\r\n      periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\r\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\r\n\r\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\r\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\r\n  }\r\n\r\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\r\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\r\n  });\r\n  var segmentTimeInfo;\r\n\r\n  if (duration) {\r\n    segmentTimeInfo = parseByDuration(attributes);\r\n  }\r\n\r\n  if (segmentTimeline) {\r\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\r\n  }\r\n\r\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\r\n    if (segmentUrlMap[index]) {\r\n      var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\r\n      // - if timescale isn't present on any level, default to 1.\r\n\r\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\r\n\r\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\r\n      segment.timeline = segmentTime.timeline;\r\n      segment.duration = segmentTime.duration;\r\n      segment.number = segmentTime.number;\r\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\r\n      return segment;\r\n    } // Since we're mapping we should get rid of any blank segments (in case\r\n    // the given SegmentTimeline is handling for more elements than we have\r\n    // SegmentURLs for).\r\n\r\n  }).filter(function (segment) {\r\n    return segment;\r\n  });\r\n  return segments;\r\n};\r\n\r\nvar generateSegments = function generateSegments(_ref) {\r\n  var attributes = _ref.attributes,\r\n      segmentInfo = _ref.segmentInfo;\r\n  var segmentAttributes;\r\n  var segmentsFn;\r\n\r\n  if (segmentInfo.template) {\r\n    segmentsFn = segmentsFromTemplate;\r\n    segmentAttributes = merge(attributes, segmentInfo.template);\r\n  } else if (segmentInfo.base) {\r\n    segmentsFn = segmentsFromBase;\r\n    segmentAttributes = merge(attributes, segmentInfo.base);\r\n  } else if (segmentInfo.list) {\r\n    segmentsFn = segmentsFromList;\r\n    segmentAttributes = merge(attributes, segmentInfo.list);\r\n  }\r\n\r\n  var segmentsInfo = {\r\n    attributes: attributes\r\n  };\r\n\r\n  if (!segmentsFn) {\r\n    return segmentsInfo;\r\n  }\r\n\r\n  var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\r\n  // must be in seconds. Since we've generated the segment list, we no longer need\r\n  // @duration to be in @timescale units, so we can convert it here.\r\n\r\n  if (segmentAttributes.duration) {\r\n    var _segmentAttributes = segmentAttributes,\r\n        duration = _segmentAttributes.duration,\r\n        _segmentAttributes$ti = _segmentAttributes.timescale,\r\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\r\n    segmentAttributes.duration = duration / timescale;\r\n  } else if (segments.length) {\r\n    // if there is no @duration attribute, use the largest segment duration as\r\n    // as target duration\r\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\r\n      return Math.max(max, Math.ceil(segment.duration));\r\n    }, 0);\r\n  } else {\r\n    segmentAttributes.duration = 0;\r\n  }\r\n\r\n  segmentsInfo.attributes = segmentAttributes;\r\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\r\n\r\n  if (segmentInfo.base && segmentAttributes.indexRange) {\r\n    segmentsInfo.sidx = segments[0];\r\n    segmentsInfo.segments = [];\r\n  }\r\n\r\n  return segmentsInfo;\r\n};\r\nvar toPlaylists = function toPlaylists(representations) {\r\n  return representations.map(generateSegments);\r\n};\r\n\r\nvar findChildren = function findChildren(element, name) {\r\n  return from(element.childNodes).filter(function (_ref) {\r\n    var tagName = _ref.tagName;\r\n    return tagName === name;\r\n  });\r\n};\r\nvar getContent = function getContent(element) {\r\n  return element.textContent.trim();\r\n};\r\n\r\n/**\r\n * Converts the provided string that may contain a division operation to a number.\r\n *\r\n * @param {string} value - the provided string value\r\n *\r\n * @return {number} the parsed string value\r\n */\r\nvar parseDivisionValue = function parseDivisionValue(value) {\r\n  return parseFloat(value.split('/').reduce(function (prev, current) {\r\n    return prev / current;\r\n  }));\r\n};\r\n\r\nvar parseDuration = function parseDuration(str) {\r\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\r\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\r\n  var SECONDS_IN_DAY = 24 * 60 * 60;\r\n  var SECONDS_IN_HOUR = 60 * 60;\r\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\r\n\r\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\r\n  var match = durationRegex.exec(str);\r\n\r\n  if (!match) {\r\n    return 0;\r\n  }\r\n\r\n  var _match$slice = match.slice(1),\r\n      year = _match$slice[0],\r\n      month = _match$slice[1],\r\n      day = _match$slice[2],\r\n      hour = _match$slice[3],\r\n      minute = _match$slice[4],\r\n      second = _match$slice[5];\r\n\r\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\r\n};\r\nvar parseDate = function parseDate(str) {\r\n  // Date format without timezone according to ISO 8601\r\n  // YYY-MM-DDThh:mm:ss.ssssss\r\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\r\n  // expressed by ending with 'Z'\r\n\r\n  if (dateRegex.test(str)) {\r\n    str += 'Z';\r\n  }\r\n\r\n  return Date.parse(str);\r\n};\r\n\r\nvar parsers = {\r\n  /**\r\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\r\n   * as specified in ISO 8601\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The duration in seconds\r\n   */\r\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\r\n    return parseDuration(value);\r\n  },\r\n\r\n  /**\r\n   * Specifies the Segment availability start time for all Segments referred to in this\r\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\r\n   * time. Format is a date string as specified in ISO 8601\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The date as seconds from unix epoch\r\n   */\r\n  availabilityStartTime: function availabilityStartTime(value) {\r\n    return parseDate(value) / 1000;\r\n  },\r\n\r\n  /**\r\n   * Specifies the smallest period between potential changes to the MPD. Format is a\r\n   * duration string as specified in ISO 8601\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The duration in seconds\r\n   */\r\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\r\n    return parseDuration(value);\r\n  },\r\n\r\n  /**\r\n   * Specifies the suggested presentation delay. Format is a\r\n   * duration string as specified in ISO 8601\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The duration in seconds\r\n   */\r\n  suggestedPresentationDelay: function suggestedPresentationDelay(value) {\r\n    return parseDuration(value);\r\n  },\r\n\r\n  /**\r\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   *\r\n   * @return {string}\r\n   *         The type as a string\r\n   */\r\n  type: function type(value) {\r\n    return value;\r\n  },\r\n\r\n  /**\r\n   * Specifies the duration of the smallest time shifting buffer for any Representation\r\n   * in the MPD. Format is a duration string as specified in ISO 8601\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The duration in seconds\r\n   */\r\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\r\n    return parseDuration(value);\r\n  },\r\n\r\n  /**\r\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\r\n   * Format is a duration string as specified in ISO 8601\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The duration in seconds\r\n   */\r\n  start: function start(value) {\r\n    return parseDuration(value);\r\n  },\r\n\r\n  /**\r\n   * Specifies the width of the visual presentation\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed width\r\n   */\r\n  width: function width(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the height of the visual presentation\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed height\r\n   */\r\n  height: function height(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the bitrate of the representation\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed bandwidth\r\n   */\r\n  bandwidth: function bandwidth(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the frame rate of the representation\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed frame rate\r\n   */\r\n  frameRate: function frameRate(value) {\r\n    return parseDivisionValue(value);\r\n  },\r\n\r\n  /**\r\n   * Specifies the number of the first Media Segment in this Representation in the Period\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed number\r\n   */\r\n  startNumber: function startNumber(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the timescale in units per seconds\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed timescale\r\n   */\r\n  timescale: function timescale(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the presentationTimeOffset.\r\n   *\r\n   * @param {string} value\r\n   *        value of the attribute as a string\r\n   *\r\n   * @return {number}\r\n   *         The parsed presentationTimeOffset\r\n   */\r\n  presentationTimeOffset: function presentationTimeOffset(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the constant approximate Segment duration\r\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\r\n   *       specifies the duration of the Period. This attribute is currently not\r\n   *       supported by the rest of the parser, however we still check for it to prevent\r\n   *       errors.\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed duration\r\n   */\r\n  duration: function duration(value) {\r\n    var parsedValue = parseInt(value, 10);\r\n\r\n    if (isNaN(parsedValue)) {\r\n      return parseDuration(value);\r\n    }\r\n\r\n    return parsedValue;\r\n  },\r\n\r\n  /**\r\n   * Specifies the Segment duration, in units of the value of the @timescale.\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed duration\r\n   */\r\n  d: function d(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\r\n   * starts relative to the beginning of the Period\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed time\r\n   */\r\n  t: function t(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Specifies the repeat count of the number of following contiguous Segments with the\r\n   * same duration expressed by the value of @d\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {number}\r\n   *         The parsed number\r\n   */\r\n  r: function r(value) {\r\n    return parseInt(value, 10);\r\n  },\r\n\r\n  /**\r\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\r\n   * as a string\r\n   *\r\n   * @param {string} value\r\n   *        value of attribute as a string\r\n   * @return {string}\r\n   *         Unparsed value\r\n   */\r\n  DEFAULT: function DEFAULT(value) {\r\n    return value;\r\n  }\r\n};\r\n/**\r\n * Gets all the attributes and values of the provided node, parses attributes with known\r\n * types, and returns an object with attribute names mapped to values.\r\n *\r\n * @param {Node} el\r\n *        The node to parse attributes from\r\n * @return {Object}\r\n *         Object with all attributes of el parsed\r\n */\r\n\r\nvar parseAttributes = function parseAttributes(el) {\r\n  if (!(el && el.attributes)) {\r\n    return {};\r\n  }\r\n\r\n  return from(el.attributes).reduce(function (a, e) {\r\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\r\n    a[e.name] = parseFn(e.value);\r\n    return a;\r\n  }, {});\r\n};\r\n\r\nvar keySystemsMap = {\r\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\r\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\r\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\r\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\r\n};\r\n/**\r\n * Builds a list of urls that is the product of the reference urls and BaseURL values\r\n *\r\n * @param {string[]} referenceUrls\r\n *        List of reference urls to resolve to\r\n * @param {Node[]} baseUrlElements\r\n *        List of BaseURL nodes from the mpd\r\n * @return {string[]}\r\n *         List of resolved urls\r\n */\r\n\r\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\r\n  if (!baseUrlElements.length) {\r\n    return referenceUrls;\r\n  }\r\n\r\n  return flatten(referenceUrls.map(function (reference) {\r\n    return baseUrlElements.map(function (baseUrlElement) {\r\n      return resolveUrl(reference, getContent(baseUrlElement));\r\n    });\r\n  }));\r\n};\r\n/**\r\n * Contains all Segment information for its containing AdaptationSet\r\n *\r\n * @typedef {Object} SegmentInformation\r\n * @property {Object|undefined} template\r\n *           Contains the attributes for the SegmentTemplate node\r\n * @property {Object[]|undefined} segmentTimeline\r\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\r\n * @property {Object|undefined} list\r\n *           Contains the attributes for the SegmentList node\r\n * @property {Object|undefined} base\r\n *           Contains the attributes for the SegmentBase node\r\n */\r\n\r\n/**\r\n * Returns all available Segment information contained within the AdaptationSet node\r\n *\r\n * @param {Node} adaptationSet\r\n *        The AdaptationSet node to get Segment information from\r\n * @return {SegmentInformation}\r\n *         The Segment information contained within the provided AdaptationSet\r\n */\r\n\r\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\r\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\r\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\r\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\r\n    return merge({\r\n      tag: 'SegmentURL'\r\n    }, parseAttributes(s));\r\n  });\r\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\r\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\r\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\r\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\r\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\r\n  // @initialization and an <Initialization> node.  @initialization can be templated,\r\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\r\n  // both @initialization and an <Initialization> subelement we opt to override with\r\n  // the node, as this interaction is not defined in the spec.\r\n\r\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\r\n\r\n  if (template && segmentInitialization) {\r\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\r\n  } else if (template && template.initialization) {\r\n    // If it is @initialization we convert it to an object since this is the format that\r\n    // later functions will rely on for the initialization segment.  This is only valid\r\n    // for <SegmentTemplate>\r\n    template.initialization = {\r\n      sourceURL: template.initialization\r\n    };\r\n  }\r\n\r\n  var segmentInfo = {\r\n    template: template,\r\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\r\n      return parseAttributes(s);\r\n    }),\r\n    list: segmentList && merge(parseAttributes(segmentList), {\r\n      segmentUrls: segmentUrls,\r\n      initialization: parseAttributes(segmentInitialization)\r\n    }),\r\n    base: segmentBase && merge(parseAttributes(segmentBase), {\r\n      initialization: parseAttributes(segmentInitialization)\r\n    })\r\n  };\r\n  Object.keys(segmentInfo).forEach(function (key) {\r\n    if (!segmentInfo[key]) {\r\n      delete segmentInfo[key];\r\n    }\r\n  });\r\n  return segmentInfo;\r\n};\r\n/**\r\n * Contains Segment information and attributes needed to construct a Playlist object\r\n * from a Representation\r\n *\r\n * @typedef {Object} RepresentationInformation\r\n * @property {SegmentInformation} segmentInfo\r\n *           Segment information for this Representation\r\n * @property {Object} attributes\r\n *           Inherited attributes for this Representation\r\n */\r\n\r\n/**\r\n * Maps a Representation node to an object containing Segment information and attributes\r\n *\r\n * @name inheritBaseUrlsCallback\r\n * @function\r\n * @param {Node} representation\r\n *        Representation node from the mpd\r\n * @return {RepresentationInformation}\r\n *         Representation information needed to construct a Playlist object\r\n */\r\n\r\n/**\r\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\r\n * Segment information and attributes using inherited BaseURL nodes.\r\n *\r\n * @param {Object} adaptationSetAttributes\r\n *        Contains attributes inherited by the AdaptationSet\r\n * @param {string[]} adaptationSetBaseUrls\r\n *        Contains list of resolved base urls inherited by the AdaptationSet\r\n * @param {SegmentInformation} adaptationSetSegmentInfo\r\n *        Contains Segment information for the AdaptationSet\r\n * @return {inheritBaseUrlsCallback}\r\n *         Callback map function\r\n */\r\n\r\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\r\n  return function (representation) {\r\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\r\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\r\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\r\n    var representationSegmentInfo = getSegmentInformation(representation);\r\n    return repBaseUrls.map(function (baseUrl) {\r\n      return {\r\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\r\n        attributes: merge(attributes, {\r\n          baseUrl: baseUrl\r\n        })\r\n      };\r\n    });\r\n  };\r\n};\r\n/**\r\n * Tranforms a series of content protection nodes to\r\n * an object containing pssh data by key system\r\n *\r\n * @param {Node[]} contentProtectionNodes\r\n *        Content protection nodes\r\n * @return {Object}\r\n *        Object containing pssh data by key system\r\n */\r\n\r\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\r\n  return contentProtectionNodes.reduce(function (acc, node) {\r\n    var attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\r\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\r\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\r\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\r\n\r\n    if (attributes.schemeIdUri) {\r\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\r\n    }\r\n\r\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\r\n\r\n    if (keySystem) {\r\n      acc[keySystem] = {\r\n        attributes: attributes\r\n      };\r\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\r\n\r\n      if (psshNode) {\r\n        var pssh = getContent(psshNode);\r\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\r\n      }\r\n    }\r\n\r\n    return acc;\r\n  }, {});\r\n}; // defined in ANSI_SCTE 214-1 2016\r\n\r\n\r\nvar parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\r\n  // 608 captions\r\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\r\n    var values = typeof service.value !== 'string' ? [] : service.value.split(';');\r\n    return values.map(function (value) {\r\n      var channel;\r\n      var language; // default language to value\r\n\r\n      language = value;\r\n\r\n      if (/^CC\\d=/.test(value)) {\r\n        var _value$split = value.split('=');\r\n\r\n        channel = _value$split[0];\r\n        language = _value$split[1];\r\n      } else if (/^CC\\d$/.test(value)) {\r\n        channel = value;\r\n      }\r\n\r\n      return {\r\n        channel: channel,\r\n        language: language\r\n      };\r\n    });\r\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\r\n    var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\r\n\r\n    return _values.map(function (value) {\r\n      var flags = {\r\n        // service or channel number 1-63\r\n        'channel': undefined,\r\n        // language is a 3ALPHA per ISO 639.2/B\r\n        // field is required\r\n        'language': undefined,\r\n        // BIT 1/0 or ?\r\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\r\n        'aspectRatio': 1,\r\n        // BIT 1/0\r\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\r\n        // default 0, or off\r\n        'easyReader': 0,\r\n        // BIT 1/0\r\n        // If 3d metadata is present (CEA-708.1) then 1\r\n        // default 0\r\n        '3D': 0\r\n      };\r\n\r\n      if (/=/.test(value)) {\r\n        var _value$split2 = value.split('='),\r\n            channel = _value$split2[0],\r\n            _value$split2$ = _value$split2[1],\r\n            opts = _value$split2$ === void 0 ? '' : _value$split2$;\r\n\r\n        flags.channel = channel;\r\n        flags.language = value;\r\n        opts.split(',').forEach(function (opt) {\r\n          var _opt$split = opt.split(':'),\r\n              name = _opt$split[0],\r\n              val = _opt$split[1];\r\n\r\n          if (name === 'lang') {\r\n            flags.language = val; // er for easyReadery\r\n          } else if (name === 'er') {\r\n            flags.easyReader = Number(val); // war for wide aspect ratio\r\n          } else if (name === 'war') {\r\n            flags.aspectRatio = Number(val);\r\n          } else if (name === '3D') {\r\n            flags['3D'] = Number(val);\r\n          }\r\n        });\r\n      } else {\r\n        flags.language = value;\r\n      }\r\n\r\n      if (flags.channel) {\r\n        flags.channel = 'SERVICE' + flags.channel;\r\n      }\r\n\r\n      return flags;\r\n    });\r\n  }\r\n};\r\n/**\r\n * Maps an AdaptationSet node to a list of Representation information objects\r\n *\r\n * @name toRepresentationsCallback\r\n * @function\r\n * @param {Node} adaptationSet\r\n *        AdaptationSet node from the mpd\r\n * @return {RepresentationInformation[]}\r\n *         List of objects containing Representaion information\r\n */\r\n\r\n/**\r\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\r\n * Representation information objects\r\n *\r\n * @param {Object} periodAttributes\r\n *        Contains attributes inherited by the Period\r\n * @param {string[]} periodBaseUrls\r\n *        Contains list of resolved base urls inherited by the Period\r\n * @param {string[]} periodSegmentInfo\r\n *        Contains Segment Information at the period level\r\n * @return {toRepresentationsCallback}\r\n *         Callback map function\r\n */\r\n\r\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\r\n  return function (adaptationSet) {\r\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\r\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\r\n    var role = findChildren(adaptationSet, 'Role')[0];\r\n    var roleAttributes = {\r\n      role: parseAttributes(role)\r\n    };\r\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\r\n    var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\r\n    var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\r\n\r\n    if (captionServices) {\r\n      attrs = merge(attrs, {\r\n        captionServices: captionServices\r\n      });\r\n    }\r\n\r\n    var label = findChildren(adaptationSet, 'Label')[0];\r\n\r\n    if (label && label.childNodes.length) {\r\n      var labelVal = label.childNodes[0].nodeValue.trim();\r\n      attrs = merge(attrs, {\r\n        label: labelVal\r\n      });\r\n    }\r\n\r\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\r\n\r\n    if (Object.keys(contentProtection).length) {\r\n      attrs = merge(attrs, {\r\n        contentProtection: contentProtection\r\n      });\r\n    }\r\n\r\n    var segmentInfo = getSegmentInformation(adaptationSet);\r\n    var representations = findChildren(adaptationSet, 'Representation');\r\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\r\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\r\n  };\r\n};\r\n/**\r\n * Contains all period information for mapping nodes onto adaptation sets.\r\n *\r\n * @typedef {Object} PeriodInformation\r\n * @property {Node} period.node\r\n *           Period node from the mpd\r\n * @property {Object} period.attributes\r\n *           Parsed period attributes from node plus any added\r\n */\r\n\r\n/**\r\n * Maps a PeriodInformation object to a list of Representation information objects for all\r\n * AdaptationSet nodes contained within the Period.\r\n *\r\n * @name toAdaptationSetsCallback\r\n * @function\r\n * @param {PeriodInformation} period\r\n *        Period object containing necessary period information\r\n * @param {number} periodStart\r\n *        Start time of the Period within the mpd\r\n * @return {RepresentationInformation[]}\r\n *         List of objects containing Representaion information\r\n */\r\n\r\n/**\r\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\r\n * Representation information objects\r\n *\r\n * @param {Object} mpdAttributes\r\n *        Contains attributes inherited by the mpd\r\n * @param {string[]} mpdBaseUrls\r\n *        Contains list of resolved base urls inherited by the mpd\r\n * @return {toAdaptationSetsCallback}\r\n *         Callback map function\r\n */\r\n\r\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\r\n  return function (period, index) {\r\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\r\n    var periodAttributes = merge(mpdAttributes, {\r\n      periodStart: period.attributes.start\r\n    });\r\n\r\n    if (typeof period.attributes.duration === 'number') {\r\n      periodAttributes.periodDuration = period.attributes.duration;\r\n    }\r\n\r\n    var adaptationSets = findChildren(period.node, 'AdaptationSet');\r\n    var periodSegmentInfo = getSegmentInformation(period.node);\r\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\r\n  };\r\n};\r\n/**\r\n * Gets Period@start property for a given period.\r\n *\r\n * @param {Object} options\r\n *        Options object\r\n * @param {Object} options.attributes\r\n *        Period attributes\r\n * @param {Object} [options.priorPeriodAttributes]\r\n *        Prior period attributes (if prior period is available)\r\n * @param {string} options.mpdType\r\n *        The MPD@type these periods came from\r\n * @return {number|null}\r\n *         The period start, or null if it's an early available period or error\r\n */\r\n\r\nvar getPeriodStart = function getPeriodStart(_ref) {\r\n  var attributes = _ref.attributes,\r\n      priorPeriodAttributes = _ref.priorPeriodAttributes,\r\n      mpdType = _ref.mpdType;\r\n\r\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\r\n  //\r\n  // A period's start is the first period's start + time elapsed after playing all\r\n  // prior periods to this one. Periods continue one after the other in time (without\r\n  // gaps) until the end of the presentation.\r\n  //\r\n  // The value of Period@start should be:\r\n  // 1. if Period@start is present: value of Period@start\r\n  // 2. if previous period exists and it has @duration: previous Period@start +\r\n  //    previous Period@duration\r\n  // 3. if this is first period and MPD@type is 'static': 0\r\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\r\n  //    currently supported)\r\n  // (1)\r\n  if (typeof attributes.start === 'number') {\r\n    return attributes.start;\r\n  } // (2)\r\n\r\n\r\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\r\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\r\n  } // (3)\r\n\r\n\r\n  if (!priorPeriodAttributes && mpdType === 'static') {\r\n    return 0;\r\n  } // (4)\r\n  // There is currently no logic for calculating the Period@start value if there is\r\n  // no Period@start or prior Period@start and Period@duration available. This is not made\r\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\r\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\r\n  // be considered an early available period, or error, and null should suffice for both\r\n  // of those cases.\r\n\r\n\r\n  return null;\r\n};\r\n/**\r\n * Traverses the mpd xml tree to generate a list of Representation information objects\r\n * that have inherited attributes from parent nodes\r\n *\r\n * @param {Node} mpd\r\n *        The root node of the mpd\r\n * @param {Object} options\r\n *        Available options for inheritAttributes\r\n * @param {string} options.manifestUri\r\n *        The uri source of the mpd\r\n * @param {number} options.NOW\r\n *        Current time per DASH IOP.  Default is current time in ms since epoch\r\n * @param {number} options.clientOffset\r\n *        Client time difference from NOW (in milliseconds)\r\n * @return {RepresentationInformation[]}\r\n *         List of objects containing Representation information\r\n */\r\n\r\nvar inheritAttributes = function inheritAttributes(mpd, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options = options,\r\n      _options$manifestUri = _options.manifestUri,\r\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\r\n      _options$NOW = _options.NOW,\r\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\r\n      _options$clientOffset = _options.clientOffset,\r\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\r\n  var periodNodes = findChildren(mpd, 'Period');\r\n\r\n  if (!periodNodes.length) {\r\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\r\n  }\r\n\r\n  var locations = findChildren(mpd, 'Location');\r\n  var mpdAttributes = parseAttributes(mpd);\r\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\r\n\r\n  mpdAttributes.type = mpdAttributes.type || 'static';\r\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\r\n  mpdAttributes.NOW = NOW;\r\n  mpdAttributes.clientOffset = clientOffset;\r\n\r\n  if (locations.length) {\r\n    mpdAttributes.locations = locations.map(getContent);\r\n  }\r\n\r\n  var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\r\n  // adding properties that require looking at prior periods is to parse attributes and add\r\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\r\n  // may be better to refactor toAdaptationSets.\r\n\r\n  periodNodes.forEach(function (node, index) {\r\n    var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\r\n    // for this period.\r\n\r\n    var priorPeriod = periods[index - 1];\r\n    attributes.start = getPeriodStart({\r\n      attributes: attributes,\r\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\r\n      mpdType: mpdAttributes.type\r\n    });\r\n    periods.push({\r\n      node: node,\r\n      attributes: attributes\r\n    });\r\n  });\r\n  return {\r\n    locations: mpdAttributes.locations,\r\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\r\n  };\r\n};\r\n\r\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\r\n  if (manifestString === '') {\r\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\r\n  }\r\n\r\n  var parser = new DOMParser();\r\n  var xml;\r\n  var mpd;\r\n\r\n  try {\r\n    xml = parser.parseFromString(manifestString, 'application/xml');\r\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\r\n  } catch (e) {// ie 11 throwsw on invalid xml\r\n  }\r\n\r\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\r\n    throw new Error(errors.DASH_INVALID_XML);\r\n  }\r\n\r\n  return mpd;\r\n};\r\n\r\n/**\r\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\r\n *\r\n * @param {string} mpd\r\n *        XML string of the MPD manifest\r\n * @return {Object|null}\r\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\r\n */\r\n\r\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\r\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\r\n\r\n  if (!UTCTimingNode) {\r\n    return null;\r\n  }\r\n\r\n  var attributes = parseAttributes(UTCTimingNode);\r\n\r\n  switch (attributes.schemeIdUri) {\r\n    case 'urn:mpeg:dash:utc:http-head:2014':\r\n    case 'urn:mpeg:dash:utc:http-head:2012':\r\n      attributes.method = 'HEAD';\r\n      break;\r\n\r\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\r\n    case 'urn:mpeg:dash:utc:http-iso:2014':\r\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\r\n    case 'urn:mpeg:dash:utc:http-iso:2012':\r\n      attributes.method = 'GET';\r\n      break;\r\n\r\n    case 'urn:mpeg:dash:utc:direct:2014':\r\n    case 'urn:mpeg:dash:utc:direct:2012':\r\n      attributes.method = 'DIRECT';\r\n      attributes.value = Date.parse(attributes.value);\r\n      break;\r\n\r\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\r\n    case 'urn:mpeg:dash:utc:ntp:2014':\r\n    case 'urn:mpeg:dash:utc:sntp:2014':\r\n    default:\r\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\r\n  }\r\n\r\n  return attributes;\r\n};\r\n\r\nvar VERSION = version;\r\n/*\r\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\r\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\r\n *\r\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\r\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\r\n * updated to reflect its position relative to the prior manifest.\r\n *\r\n * @param {string} manifestString - the DASH manifest as a string\r\n * @param {options} [options] - any options\r\n *\r\n * @return {Object} the manifest object\r\n */\r\n\r\nvar parse = function parse(manifestString, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\r\n  var playlists = toPlaylists(parsedManifestInfo.representationInfo);\r\n  return toM3u8({\r\n    dashPlaylists: playlists,\r\n    locations: parsedManifestInfo.locations,\r\n    sidxMapping: options.sidxMapping,\r\n    previousManifest: options.previousManifest\r\n  });\r\n};\r\n/**\r\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\r\n *\r\n * @param {string} manifestString\r\n *        XML string of the MPD manifest\r\n * @return {Object|null}\r\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\r\n */\r\n\r\n\r\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\r\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\r\n};\r\n\r\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\r\n", "/**\r\n * Loops through all supported media groups in master and calls the provided\r\n * callback for each group\r\n *\r\n * @param {Object} master\r\n *        The parsed master manifest object\r\n * @param {string[]} groups\r\n *        The media groups to call the callback for\r\n * @param {Function} callback\r\n *        Callback to call for each media group\r\n */\r\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\r\n  groups.forEach(function (mediaType) {\r\n    for (var groupKey in master.mediaGroups[mediaType]) {\r\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\r\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\r\n        callback(mediaProperties, mediaType, groupKey, labelKey);\r\n      }\r\n    }\r\n  });\r\n};", "import { toUint8, bytesMatch } from './byte-helpers.js';\r\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\r\nexport var getId3Size = function getId3Size(bytes, offset) {\r\n  if (offset === void 0) {\r\n    offset = 0;\r\n  }\r\n\r\n  bytes = toUint8(bytes);\r\n  var flags = bytes[offset + 5];\r\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\r\n  var footerPresent = (flags & 16) >> 4;\r\n\r\n  if (footerPresent) {\r\n    return returnSize + 20;\r\n  }\r\n\r\n  return returnSize + 10;\r\n};\r\nexport var getId3Offset = function getId3Offset(bytes, offset) {\r\n  if (offset === void 0) {\r\n    offset = 0;\r\n  }\r\n\r\n  bytes = toUint8(bytes);\r\n\r\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\r\n    offset: offset\r\n  })) {\r\n    return offset;\r\n  }\r\n\r\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\r\n  // have multiple ID3 tag sections even though\r\n  // they should not.\r\n\r\n  return getId3Offset(bytes, offset);\r\n};", "export var OPUS_HEAD = new Uint8Array([// O, p, u, s\r\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\r\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\r\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\r\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\r\n\r\nexport var parseOpusHead = function parseOpusHead(bytes) {\r\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\r\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\r\n\r\n  var littleEndian = version !== 0;\r\n  var config = {\r\n    version: version,\r\n    channels: view.getUint8(1),\r\n    preSkip: view.getUint16(2, littleEndian),\r\n    sampleRate: view.getUint32(4, littleEndian),\r\n    outputGain: view.getUint16(8, littleEndian),\r\n    channelMappingFamily: view.getUint8(10)\r\n  };\r\n\r\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\r\n    config.streamCount = view.getUint8(11);\r\n    config.twoChannelStreamCount = view.getUint8(12);\r\n    config.channelMapping = [];\r\n\r\n    for (var c = 0; c < config.channels; c++) {\r\n      config.channelMapping.push(view.getUint8(13 + c));\r\n    }\r\n  }\r\n\r\n  return config;\r\n};\r\nexport var setOpusHead = function setOpusHead(config) {\r\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\r\n  var view = new DataView(new ArrayBuffer(size));\r\n  var littleEndian = config.version !== 0;\r\n  view.setUint8(0, config.version);\r\n  view.setUint8(1, config.channels);\r\n  view.setUint16(2, config.preSkip, littleEndian);\r\n  view.setUint32(4, config.sampleRate, littleEndian);\r\n  view.setUint16(8, config.outputGain, littleEndian);\r\n  view.setUint8(10, config.channelMappingFamily);\r\n\r\n  if (config.channelMappingFamily > 0) {\r\n    view.setUint8(11, config.streamCount);\r\n    config.channelMapping.foreach(function (cm, i) {\r\n      view.setUint8(12 + i, cm);\r\n    });\r\n  }\r\n\r\n  return new Uint8Array(view.buffer);\r\n};", "import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\r\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\r\nimport { parseOpusHead } from './opus-helpers.js';\r\n\r\nvar normalizePath = function normalizePath(path) {\r\n  if (typeof path === 'string') {\r\n    return stringToBytes(path);\r\n  }\r\n\r\n  if (typeof path === 'number') {\r\n    return path;\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nvar normalizePaths = function normalizePaths(paths) {\r\n  if (!Array.isArray(paths)) {\r\n    return [normalizePath(paths)];\r\n  }\r\n\r\n  return paths.map(function (p) {\r\n    return normalizePath(p);\r\n  });\r\n};\r\n\r\nvar DESCRIPTORS;\r\nexport var parseDescriptors = function parseDescriptors(bytes) {\r\n  bytes = toUint8(bytes);\r\n  var results = [];\r\n  var i = 0;\r\n\r\n  while (bytes.length > i) {\r\n    var tag = bytes[i];\r\n    var size = 0;\r\n    var headerSize = 0; // tag\r\n\r\n    headerSize++;\r\n    var byte = bytes[headerSize]; // first byte\r\n\r\n    headerSize++;\r\n\r\n    while (byte & 0x80) {\r\n      size = (byte & 0x7F) << 7;\r\n      byte = bytes[headerSize];\r\n      headerSize++;\r\n    }\r\n\r\n    size += byte & 0x7F;\r\n\r\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\r\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\r\n          id = _DESCRIPTORS$z.id,\r\n          parser = _DESCRIPTORS$z.parser;\r\n\r\n      if (tag === id) {\r\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\r\n        break;\r\n      }\r\n    }\r\n\r\n    i += size + headerSize;\r\n  }\r\n\r\n  return results;\r\n};\r\nDESCRIPTORS = [{\r\n  id: 0x03,\r\n  parser: function parser(bytes) {\r\n    var desc = {\r\n      tag: 0x03,\r\n      id: bytes[0] << 8 | bytes[1],\r\n      flags: bytes[2],\r\n      size: 3,\r\n      dependsOnEsId: 0,\r\n      ocrEsId: 0,\r\n      descriptors: [],\r\n      url: ''\r\n    }; // depends on es id\r\n\r\n    if (desc.flags & 0x80) {\r\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\r\n      desc.size += 2;\r\n    } // url\r\n\r\n\r\n    if (desc.flags & 0x40) {\r\n      var len = bytes[desc.size];\r\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\r\n      desc.size += len;\r\n    } // ocr es id\r\n\r\n\r\n    if (desc.flags & 0x20) {\r\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\r\n      desc.size += 2;\r\n    }\r\n\r\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\r\n    return desc;\r\n  }\r\n}, {\r\n  id: 0x04,\r\n  parser: function parser(bytes) {\r\n    // DecoderConfigDescriptor\r\n    var desc = {\r\n      tag: 0x04,\r\n      oti: bytes[0],\r\n      streamType: bytes[1],\r\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\r\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\r\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\r\n      descriptors: parseDescriptors(bytes.subarray(13))\r\n    };\r\n    return desc;\r\n  }\r\n}, {\r\n  id: 0x05,\r\n  parser: function parser(bytes) {\r\n    // DecoderSpecificInfo\r\n    return {\r\n      tag: 0x05,\r\n      bytes: bytes\r\n    };\r\n  }\r\n}, {\r\n  id: 0x06,\r\n  parser: function parser(bytes) {\r\n    // SLConfigDescriptor\r\n    return {\r\n      tag: 0x06,\r\n      bytes: bytes\r\n    };\r\n  }\r\n}];\r\n/**\r\n * find any number of boxes by name given a path to it in an iso bmff\r\n * such as mp4.\r\n *\r\n * @param {TypedArray} bytes\r\n *        bytes for the iso bmff to search for boxes in\r\n *\r\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\r\n *        An array of paths or a single path representing the name\r\n *        of boxes to search through in bytes. Paths may be\r\n *        uint8 (character codes) or strings.\r\n *\r\n * @param {boolean} [complete=false]\r\n *        Should we search only for complete boxes on the final path.\r\n *        This is very useful when you do not want to get back partial boxes\r\n *        in the case of streaming files.\r\n *\r\n * @return {Uint8Array[]}\r\n *         An array of the end paths that we found.\r\n */\r\n\r\nexport var findBox = function findBox(bytes, paths, complete) {\r\n  if (complete === void 0) {\r\n    complete = false;\r\n  }\r\n\r\n  paths = normalizePaths(paths);\r\n  bytes = toUint8(bytes);\r\n  var results = [];\r\n\r\n  if (!paths.length) {\r\n    // short-circuit the search for empty paths\r\n    return results;\r\n  }\r\n\r\n  var i = 0;\r\n\r\n  while (i < bytes.length) {\r\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\r\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\r\n\r\n    if (size === 0) {\r\n      break;\r\n    }\r\n\r\n    var end = i + size;\r\n\r\n    if (end > bytes.length) {\r\n      // this box is bigger than the number of bytes we have\r\n      // and complete is set, we cannot find any more boxes.\r\n      if (complete) {\r\n        break;\r\n      }\r\n\r\n      end = bytes.length;\r\n    }\r\n\r\n    var data = bytes.subarray(i + 8, end);\r\n\r\n    if (bytesMatch(type, paths[0])) {\r\n      if (paths.length === 1) {\r\n        // this is the end of the path and we've found the box we were\r\n        // looking for\r\n        results.push(data);\r\n      } else {\r\n        // recursively search for the next box along the path\r\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\r\n      }\r\n    }\r\n\r\n    i = end;\r\n  } // we've finished searching all of bytes\r\n\r\n\r\n  return results;\r\n};\r\n/**\r\n * Search for a single matching box by name in an iso bmff format like\r\n * mp4. This function is useful for finding codec boxes which\r\n * can be placed arbitrarily in sample descriptions depending\r\n * on the version of the file or file type.\r\n *\r\n * @param {TypedArray} bytes\r\n *        bytes for the iso bmff to search for boxes in\r\n *\r\n * @param {string|Uint8Array} name\r\n *        The name of the box to find.\r\n *\r\n * @return {Uint8Array[]}\r\n *         a subarray of bytes representing the name boxed we found.\r\n */\r\n\r\nexport var findNamedBox = function findNamedBox(bytes, name) {\r\n  name = normalizePath(name);\r\n\r\n  if (!name.length) {\r\n    // short-circuit the search for empty paths\r\n    return bytes.subarray(bytes.length);\r\n  }\r\n\r\n  var i = 0;\r\n\r\n  while (i < bytes.length) {\r\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\r\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\r\n      var end = size > 1 ? i + size : bytes.byteLength;\r\n      return bytes.subarray(i + 4, end);\r\n    }\r\n\r\n    i++;\r\n  } // we've finished searching all of bytes\r\n\r\n\r\n  return bytes.subarray(bytes.length);\r\n};\r\n\r\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\r\n  if (entrySize === void 0) {\r\n    entrySize = 4;\r\n  }\r\n\r\n  if (parseEntry === void 0) {\r\n    parseEntry = function parseEntry(d) {\r\n      return bytesToNumber(d);\r\n    };\r\n  }\r\n\r\n  var entries = [];\r\n\r\n  if (!data || !data.length) {\r\n    return entries;\r\n  }\r\n\r\n  var entryCount = bytesToNumber(data.subarray(4, 8));\r\n\r\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\r\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\r\n  }\r\n\r\n  return entries;\r\n};\r\n\r\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\r\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\r\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\r\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\r\n    return {\r\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\r\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\r\n    };\r\n  });\r\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\r\n    return {\r\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\r\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\r\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\r\n    };\r\n  });\r\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\r\n\r\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\r\n  var frames = [];\r\n\r\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\r\n    var samplesInChunk = void 0;\r\n\r\n    for (var i = 0; i < samplesToChunks.length; i++) {\r\n      var sampleToChunk = samplesToChunks[i];\r\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\r\n\r\n      if (isThisOne) {\r\n        samplesInChunk = sampleToChunk.samplesPerChunk;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var chunkOffset = chunkOffsets[chunkIndex];\r\n\r\n    for (var _i = 0; _i < samplesInChunk; _i++) {\r\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\r\n\r\n      var keyframe = !keySamples.length;\r\n\r\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\r\n        keyframe = true;\r\n      }\r\n\r\n      var frame = {\r\n        keyframe: keyframe,\r\n        start: chunkOffset,\r\n        end: chunkOffset + frameEnd\r\n      };\r\n\r\n      for (var k = 0; k < timeToSamples.length; k++) {\r\n        var _timeToSamples$k = timeToSamples[k],\r\n            sampleCount = _timeToSamples$k.sampleCount,\r\n            sampleDelta = _timeToSamples$k.sampleDelta;\r\n\r\n        if (frames.length <= sampleCount) {\r\n          // ms to ns\r\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\r\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\r\n          frame.duration = sampleDelta;\r\n          break;\r\n        }\r\n      }\r\n\r\n      frames.push(frame);\r\n      chunkOffset += frameEnd;\r\n    }\r\n  }\r\n\r\n  return frames;\r\n};\r\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\r\n  var codec = bytesToString(bytes.subarray(0, 4));\r\n\r\n  if (track.type === 'video') {\r\n    track.info = track.info || {};\r\n    track.info.width = bytes[28] << 8 | bytes[29];\r\n    track.info.height = bytes[30] << 8 | bytes[31];\r\n  } else if (track.type === 'audio') {\r\n    track.info = track.info || {};\r\n    track.info.channels = bytes[20] << 8 | bytes[21];\r\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\r\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\r\n  }\r\n\r\n  if (codec === 'avc1') {\r\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\r\n\r\n    codec += \".\" + getAvcCodec(avcC);\r\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\r\n\r\n    /* {\r\n      configurationVersion: avcC[0],\r\n      profile: avcC[1],\r\n      profileCompatibility: avcC[2],\r\n      level: avcC[3],\r\n      lengthSizeMinusOne: avcC[4] & 0x3\r\n    };\r\n     let spsNalUnitCount = avcC[5] & 0x1F;\r\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\r\n     // past spsNalUnitCount\r\n    let offset = 6;\r\n     while (spsNalUnitCount--) {\r\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\r\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\r\n       offset += nalLen + 2;\r\n    }\r\n    let ppsNalUnitCount = avcC[offset];\r\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\r\n     // past ppsNalUnitCount\r\n    offset += 1;\r\n     while (ppsNalUnitCount--) {\r\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\r\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\r\n       offset += nalLen + 2;\r\n    }*/\r\n    // HEVCDecoderConfigurationRecord\r\n  } else if (codec === 'hvc1' || codec === 'hev1') {\r\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\r\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\r\n    var esds = findNamedBox(bytes, 'esds');\r\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\r\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\r\n      var tag = _ref.tag;\r\n      return tag === 0x04;\r\n    })[0];\r\n\r\n    if (decoderConfig) {\r\n      // most codecs do not have a further '.'\r\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\r\n      codec += '.' + toHexString(decoderConfig.oti);\r\n\r\n      if (decoderConfig.oti === 0x40) {\r\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\r\n      } else if (decoderConfig.oti === 0x20) {\r\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\r\n      } else if (decoderConfig.oti === 0xdd) {\r\n        codec = 'vorbis';\r\n      }\r\n    } else if (track.type === 'audio') {\r\n      codec += '.40.2';\r\n    } else {\r\n      codec += '.20.9';\r\n    }\r\n  } else if (codec === 'av01') {\r\n    // AV1DecoderConfigurationRecord\r\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\r\n  } else if (codec === 'vp09') {\r\n    // VPCodecConfigurationRecord\r\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\r\n\r\n    var profile = vpcC[0];\r\n    var level = vpcC[1];\r\n    var bitDepth = vpcC[2] >> 4;\r\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\r\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\r\n    var colourPrimaries = vpcC[3];\r\n    var transferCharacteristics = vpcC[4];\r\n    var matrixCoefficients = vpcC[5];\r\n    codec += \".\" + padStart(profile, 2, '0');\r\n    codec += \".\" + padStart(level, 2, '0');\r\n    codec += \".\" + padStart(bitDepth, 2, '0');\r\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\r\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\r\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\r\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\r\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\r\n  } else if (codec === 'theo') {\r\n    codec = 'theora';\r\n  } else if (codec === 'spex') {\r\n    codec = 'speex';\r\n  } else if (codec === '.mp3') {\r\n    codec = 'mp4a.40.34';\r\n  } else if (codec === 'msVo') {\r\n    codec = 'vorbis';\r\n  } else if (codec === 'Opus') {\r\n    codec = 'opus';\r\n    var dOps = findNamedBox(bytes, 'dOps');\r\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\r\n    // Firefox requires a codecDelay for opus playback\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\r\n\r\n    track.info.codecDelay = 6500000;\r\n  } else {\r\n    codec = codec.toLowerCase();\r\n  }\r\n  /* eslint-enable */\r\n  // flac, ac-3, ec-3, opus\r\n\r\n\r\n  track.codec = codec;\r\n};\r\nexport var parseTracks = function parseTracks(bytes, frameTable) {\r\n  if (frameTable === void 0) {\r\n    frameTable = true;\r\n  }\r\n\r\n  bytes = toUint8(bytes);\r\n  var traks = findBox(bytes, ['moov', 'trak'], true);\r\n  var tracks = [];\r\n  traks.forEach(function (trak) {\r\n    var track = {\r\n      bytes: trak\r\n    };\r\n    var mdia = findBox(trak, ['mdia'])[0];\r\n    var hdlr = findBox(mdia, ['hdlr'])[0];\r\n    var trakType = bytesToString(hdlr.subarray(8, 12));\r\n\r\n    if (trakType === 'soun') {\r\n      track.type = 'audio';\r\n    } else if (trakType === 'vide') {\r\n      track.type = 'video';\r\n    } else {\r\n      track.type = trakType;\r\n    }\r\n\r\n    var tkhd = findBox(trak, ['tkhd'])[0];\r\n\r\n    if (tkhd) {\r\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\r\n      var tkhdVersion = view.getUint8(0);\r\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\r\n    }\r\n\r\n    var mdhd = findBox(mdia, ['mdhd'])[0];\r\n\r\n    if (mdhd) {\r\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\r\n      var version = mdhd[0];\r\n      var index = version === 0 ? 12 : 20;\r\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\r\n    }\r\n\r\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\r\n    var stsd = findBox(stbl, ['stsd'])[0];\r\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\r\n    var offset = 8; // add codec and codec info\r\n\r\n    while (descriptionCount--) {\r\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\r\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\r\n      addSampleDescription(track, sampleDescriptor);\r\n      offset += 4 + len;\r\n    }\r\n\r\n    if (frameTable) {\r\n      track.frameTable = buildFrameTable(stbl, track.timescale);\r\n    } // codec has no sub parameters\r\n\r\n\r\n    tracks.push(track);\r\n  });\r\n  return tracks;\r\n};\r\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\r\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\r\n\r\n  if (!mvhd || !mvhd.length) {\r\n    return;\r\n  }\r\n\r\n  var info = {}; // ms to ns\r\n  // mvhd v1 has 8 byte duration and other fields too\r\n\r\n  if (mvhd[0] === 1) {\r\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\r\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\r\n  } else {\r\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\r\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\r\n  }\r\n\r\n  info.bytes = mvhd;\r\n  return info;\r\n};", "import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\r\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\r\n// https://matroska-org.github.io/libebml/specs.html\r\n// https://www.matroska.org/technical/elements.html\r\n// https://www.webmproject.org/docs/container/\r\n\r\nexport var EBML_TAGS = {\r\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\r\n  DocType: toUint8([0x42, 0x82]),\r\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\r\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\r\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\r\n  Track: toUint8([0xAE]),\r\n  TrackNumber: toUint8([0xd7]),\r\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\r\n  TrackEntry: toUint8([0xAE]),\r\n  TrackType: toUint8([0x83]),\r\n  FlagDefault: toUint8([0x88]),\r\n  CodecID: toUint8([0x86]),\r\n  CodecPrivate: toUint8([0x63, 0xA2]),\r\n  VideoTrack: toUint8([0xe0]),\r\n  AudioTrack: toUint8([0xe1]),\r\n  // Not used yet, but will be used for live webm/mkv\r\n  // see https://www.matroska.org/technical/basics.html#block-structure\r\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\r\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\r\n  Timestamp: toUint8([0xE7]),\r\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\r\n  BlockGroup: toUint8([0xA0]),\r\n  BlockDuration: toUint8([0x9B]),\r\n  Block: toUint8([0xA1]),\r\n  SimpleBlock: toUint8([0xA3])\r\n};\r\n/**\r\n * This is a simple table to determine the length\r\n * of things in ebml. The length is one based (starts at 1,\r\n * rather than zero) and for every zero bit before a one bit\r\n * we add one to length. We also need this table because in some\r\n * case we have to xor all the length bits from another value.\r\n */\r\n\r\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\r\n\r\nvar getLength = function getLength(byte) {\r\n  var len = 1;\r\n\r\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\r\n    if (byte & LENGTH_TABLE[i]) {\r\n      break;\r\n    }\r\n\r\n    len++;\r\n  }\r\n\r\n  return len;\r\n}; // length in ebml is stored in the first 4 to 8 bits\r\n// of the first byte. 4 for the id length and 8 for the\r\n// data size length. Length is measured by converting the number to binary\r\n// then 1 + the number of zeros before a 1 is encountered starting\r\n// from the left.\r\n\r\n\r\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\r\n  if (removeLength === void 0) {\r\n    removeLength = true;\r\n  }\r\n\r\n  if (signed === void 0) {\r\n    signed = false;\r\n  }\r\n\r\n  var length = getLength(bytes[offset]);\r\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\r\n  // as they will be modified below to remove the dataSizeLen bits and we do not\r\n  // want to modify the original data. normally we could just call slice on\r\n  // uint8array but ie 11 does not support that...\r\n\r\n  if (removeLength) {\r\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\r\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\r\n  }\r\n\r\n  return {\r\n    length: length,\r\n    value: bytesToNumber(valueBytes, {\r\n      signed: signed\r\n    }),\r\n    bytes: valueBytes\r\n  };\r\n};\r\n\r\nvar normalizePath = function normalizePath(path) {\r\n  if (typeof path === 'string') {\r\n    return path.match(/.{1,2}/g).map(function (p) {\r\n      return normalizePath(p);\r\n    });\r\n  }\r\n\r\n  if (typeof path === 'number') {\r\n    return numberToBytes(path);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nvar normalizePaths = function normalizePaths(paths) {\r\n  if (!Array.isArray(paths)) {\r\n    return [normalizePath(paths)];\r\n  }\r\n\r\n  return paths.map(function (p) {\r\n    return normalizePath(p);\r\n  });\r\n};\r\n\r\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\r\n  if (offset >= bytes.length) {\r\n    return bytes.length;\r\n  }\r\n\r\n  var innerid = getvint(bytes, offset, false);\r\n\r\n  if (bytesMatch(id.bytes, innerid.bytes)) {\r\n    return offset;\r\n  }\r\n\r\n  var dataHeader = getvint(bytes, offset + innerid.length);\r\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\r\n};\r\n/**\r\n * Notes on the EBLM format.\r\n *\r\n * EBLM uses \"vints\" tags. Every vint tag contains\r\n * two parts\r\n *\r\n * 1. The length from the first byte. You get this by\r\n *    converting the byte to binary and counting the zeros\r\n *    before a 1. Then you add 1 to that. Examples\r\n *    00011111 = length 4 because there are 3 zeros before a 1.\r\n *    00100000 = length 3 because there are 2 zeros before a 1.\r\n *    00000011 = length 7 because there are 6 zeros before a 1.\r\n *\r\n * 2. The bits used for length are removed from the first byte\r\n *    Then all the bytes are merged into a value. NOTE: this\r\n *    is not the case for id ebml tags as there id includes\r\n *    length bits.\r\n *\r\n */\r\n\r\n\r\nexport var findEbml = function findEbml(bytes, paths) {\r\n  paths = normalizePaths(paths);\r\n  bytes = toUint8(bytes);\r\n  var results = [];\r\n\r\n  if (!paths.length) {\r\n    return results;\r\n  }\r\n\r\n  var i = 0;\r\n\r\n  while (i < bytes.length) {\r\n    var id = getvint(bytes, i, false);\r\n    var dataHeader = getvint(bytes, i + id.length);\r\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\r\n\r\n    if (dataHeader.value === 0x7f) {\r\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\r\n\r\n      if (dataHeader.value !== bytes.length) {\r\n        dataHeader.value -= dataStart;\r\n      }\r\n    }\r\n\r\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\r\n    var data = bytes.subarray(dataStart, dataEnd);\r\n\r\n    if (bytesMatch(paths[0], id.bytes)) {\r\n      if (paths.length === 1) {\r\n        // this is the end of the paths and we've found the tag we were\r\n        // looking for\r\n        results.push(data);\r\n      } else {\r\n        // recursively search for the next tag inside of the data\r\n        // of this one\r\n        results = results.concat(findEbml(data, paths.slice(1)));\r\n      }\r\n    }\r\n\r\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\r\n\r\n    i += totalLength;\r\n  }\r\n\r\n  return results;\r\n}; // see https://www.matroska.org/technical/basics.html#block-structure\r\n\r\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\r\n  var duration;\r\n\r\n  if (type === 'group') {\r\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\r\n\r\n    if (duration) {\r\n      duration = bytesToNumber(duration);\r\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\r\n    }\r\n\r\n    block = findEbml(block, [EBML_TAGS.Block])[0];\r\n    type = 'block'; // treat data as a block after this point\r\n  }\r\n\r\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\r\n  var trackNumber = getvint(block, 0);\r\n  var timestamp = dv.getInt16(trackNumber.length, false);\r\n  var flags = block[trackNumber.length + 2];\r\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\r\n\r\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\r\n\r\n  var parsed = {\r\n    duration: duration,\r\n    trackNumber: trackNumber.value,\r\n    keyframe: type === 'simple' && flags >> 7 === 1,\r\n    invisible: (flags & 0x08) >> 3 === 1,\r\n    lacing: (flags & 0x06) >> 1,\r\n    discardable: type === 'simple' && (flags & 0x01) === 1,\r\n    frames: [],\r\n    pts: ptsdts,\r\n    dts: ptsdts,\r\n    timestamp: timestamp\r\n  };\r\n\r\n  if (!parsed.lacing) {\r\n    parsed.frames.push(data);\r\n    return parsed;\r\n  }\r\n\r\n  var numberOfFrames = data[0] + 1;\r\n  var frameSizes = [];\r\n  var offset = 1; // Fixed\r\n\r\n  if (parsed.lacing === 2) {\r\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\r\n\r\n    for (var i = 0; i < numberOfFrames; i++) {\r\n      frameSizes.push(sizeOfFrame);\r\n    }\r\n  } // xiph\r\n\r\n\r\n  if (parsed.lacing === 1) {\r\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\r\n      var size = 0;\r\n\r\n      do {\r\n        size += data[offset];\r\n        offset++;\r\n      } while (data[offset - 1] === 0xFF);\r\n\r\n      frameSizes.push(size);\r\n    }\r\n  } // ebml\r\n\r\n\r\n  if (parsed.lacing === 3) {\r\n    // first vint is unsinged\r\n    // after that vints are singed and\r\n    // based on a compounding size\r\n    var _size = 0;\r\n\r\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\r\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\r\n      _size += vint.value;\r\n      frameSizes.push(_size);\r\n      offset += vint.length;\r\n    }\r\n  }\r\n\r\n  frameSizes.forEach(function (size) {\r\n    parsed.frames.push(data.subarray(offset, offset + size));\r\n    offset += size;\r\n  });\r\n  return parsed;\r\n}; // VP9 Codec Feature Metadata (CodecPrivate)\r\n// https://www.webmproject.org/docs/container/\r\n\r\nvar parseVp9Private = function parseVp9Private(bytes) {\r\n  var i = 0;\r\n  var params = {};\r\n\r\n  while (i < bytes.length) {\r\n    var id = bytes[i] & 0x7f;\r\n    var len = bytes[i + 1];\r\n    var val = void 0;\r\n\r\n    if (len === 1) {\r\n      val = bytes[i + 2];\r\n    } else {\r\n      val = bytes.subarray(i + 2, i + 2 + len);\r\n    }\r\n\r\n    if (id === 1) {\r\n      params.profile = val;\r\n    } else if (id === 2) {\r\n      params.level = val;\r\n    } else if (id === 3) {\r\n      params.bitDepth = val;\r\n    } else if (id === 4) {\r\n      params.chromaSubsampling = val;\r\n    } else {\r\n      params[id] = val;\r\n    }\r\n\r\n    i += 2 + len;\r\n  }\r\n\r\n  return params;\r\n};\r\n\r\nexport var parseTracks = function parseTracks(bytes) {\r\n  bytes = toUint8(bytes);\r\n  var decodedTracks = [];\r\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\r\n\r\n  if (!tracks.length) {\r\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\r\n  }\r\n\r\n  if (!tracks.length) {\r\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\r\n  }\r\n\r\n  if (!tracks.length) {\r\n    return decodedTracks;\r\n  }\r\n\r\n  tracks.forEach(function (track) {\r\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\r\n\r\n    if (!trackType || !trackType.length) {\r\n      return;\r\n    } // 1 is video, 2 is audio, 17 is subtitle\r\n    // other values are unimportant in this context\r\n\r\n\r\n    if (trackType[0] === 1) {\r\n      trackType = 'video';\r\n    } else if (trackType[0] === 2) {\r\n      trackType = 'audio';\r\n    } else if (trackType[0] === 17) {\r\n      trackType = 'subtitle';\r\n    } else {\r\n      return;\r\n    } // todo parse language\r\n\r\n\r\n    var decodedTrack = {\r\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\r\n      type: trackType,\r\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\r\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\r\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\r\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\r\n      rawData: track\r\n    };\r\n    var codec = '';\r\n\r\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\r\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\r\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\r\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\r\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\r\n      if (decodedTrack.codecPrivate) {\r\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\r\n      } else {\r\n        codec = 'mp4v.20.9';\r\n      }\r\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\r\n      codec = 'theora';\r\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\r\n      codec = 'vp8';\r\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\r\n      if (decodedTrack.codecPrivate) {\r\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\r\n            profile = _parseVp9Private.profile,\r\n            level = _parseVp9Private.level,\r\n            bitDepth = _parseVp9Private.bitDepth,\r\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\r\n\r\n        codec = 'vp09.';\r\n        codec += padStart(profile, 2, '0') + \".\";\r\n        codec += padStart(level, 2, '0') + \".\";\r\n        codec += padStart(bitDepth, 2, '0') + \".\";\r\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\r\n\r\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\r\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\r\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\r\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\r\n\r\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\r\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\r\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\r\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\r\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\r\n        }\r\n      } else {\r\n        codec = 'vp9';\r\n      }\r\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\r\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\r\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\r\n      codec = 'alac';\r\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\r\n      codec = 'mp2';\r\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\r\n      codec = 'mp3';\r\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\r\n      if (decodedTrack.codecPrivate) {\r\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\r\n      } else {\r\n        codec = 'mp4a.40.2';\r\n      }\r\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\r\n      codec = 'ac-3';\r\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\r\n      codec = 'pcm';\r\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\r\n      codec = 'speex';\r\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\r\n      codec = 'ec-3';\r\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\r\n      codec = 'vorbis';\r\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\r\n      codec = 'flac';\r\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\r\n      codec = 'opus';\r\n    }\r\n\r\n    decodedTrack.codec = codec;\r\n    decodedTracks.push(decodedTrack);\r\n  });\r\n  return decodedTracks.sort(function (a, b) {\r\n    return a.number - b.number;\r\n  });\r\n};\r\nexport var parseData = function parseData(data, tracks) {\r\n  var allBlocks = [];\r\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\r\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\r\n\r\n  if (timestampScale && timestampScale.length) {\r\n    timestampScale = bytesToNumber(timestampScale);\r\n  } else {\r\n    timestampScale = 1000000;\r\n  }\r\n\r\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\r\n\r\n  if (!tracks) {\r\n    tracks = parseTracks(segment);\r\n  }\r\n\r\n  clusters.forEach(function (cluster, ci) {\r\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\r\n      return {\r\n        type: 'simple',\r\n        data: b\r\n      };\r\n    });\r\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\r\n      return {\r\n        type: 'group',\r\n        data: b\r\n      };\r\n    });\r\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\r\n\r\n    if (timestamp && timestamp.length) {\r\n      timestamp = bytesToNumber(timestamp);\r\n    } // get all blocks then sort them into the correct order\r\n\r\n\r\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\r\n      return a.data.byteOffset - b.data.byteOffset;\r\n    });\r\n    blocks.forEach(function (block, bi) {\r\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\r\n      allBlocks.push(decoded);\r\n    });\r\n  });\r\n  return {\r\n    tracks: tracks,\r\n    blocks: allBlocks\r\n  };\r\n};", "import { bytesMatch, toUint8 } from './byte-helpers.js';\r\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\r\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\r\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\r\n/**\r\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\r\n * Sequence Payload\"\r\n *\r\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\r\n * unit\r\n * @return {Uint8Array} the RBSP without any Emulation\r\n * Prevention Bytes\r\n */\r\n\r\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\r\n  var positions = [];\r\n  var i = 1; // Find all `Emulation Prevention Bytes`\r\n\r\n  while (i < bytes.length - 2) {\r\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\r\n      positions.push(i + 2);\r\n      i++;\r\n    }\r\n\r\n    i++;\r\n  } // If no Emulation Prevention Bytes were found just return the original\r\n  // array\r\n\r\n\r\n  if (positions.length === 0) {\r\n    return bytes;\r\n  } // Create a new array to hold the NAL unit data\r\n\r\n\r\n  var newLength = bytes.length - positions.length;\r\n  var newData = new Uint8Array(newLength);\r\n  var sourceIndex = 0;\r\n\r\n  for (i = 0; i < newLength; sourceIndex++, i++) {\r\n    if (sourceIndex === positions[0]) {\r\n      // Skip this byte\r\n      sourceIndex++; // Remove this position index\r\n\r\n      positions.shift();\r\n    }\r\n\r\n    newData[i] = bytes[sourceIndex];\r\n  }\r\n\r\n  return newData;\r\n};\r\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\r\n  if (nalLimit === void 0) {\r\n    nalLimit = Infinity;\r\n  }\r\n\r\n  bytes = toUint8(bytes);\r\n  types = [].concat(types);\r\n  var i = 0;\r\n  var nalStart;\r\n  var nalsFound = 0; // keep searching until:\r\n  // we reach the end of bytes\r\n  // we reach the maximum number of nals they want to seach\r\n  // NOTE: that we disregard nalLimit when we have found the start\r\n  // of the nal we want so that we can find the end of the nal we want.\r\n\r\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\r\n    var nalOffset = void 0;\r\n\r\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\r\n      nalOffset = 4;\r\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\r\n      nalOffset = 3;\r\n    } // we are unsynced,\r\n    // find the next nal unit\r\n\r\n\r\n    if (!nalOffset) {\r\n      i++;\r\n      continue;\r\n    }\r\n\r\n    nalsFound++;\r\n\r\n    if (nalStart) {\r\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\r\n    }\r\n\r\n    var nalType = void 0;\r\n\r\n    if (dataType === 'h264') {\r\n      nalType = bytes[i + nalOffset] & 0x1f;\r\n    } else if (dataType === 'h265') {\r\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\r\n    }\r\n\r\n    if (types.indexOf(nalType) !== -1) {\r\n      nalStart = i + nalOffset;\r\n    } // nal header is 1 length for h264, and 2 for h265\r\n\r\n\r\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\r\n  }\r\n\r\n  return bytes.subarray(0, 0);\r\n};\r\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\r\n  return findNal(bytes, 'h264', type, nalLimit);\r\n};\r\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\r\n  return findNal(bytes, 'h265', type, nalLimit);\r\n};", "import { toUint8, bytesMatch } from './byte-helpers.js';\r\nimport { findBox } from './mp4-helpers.js';\r\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\r\nimport { getId3Offset } from './id3-helpers.js';\r\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\r\nvar CONSTANTS = {\r\n  // \"webm\" string literal in hex\r\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\r\n  // \"matroska\" string literal in hex\r\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\r\n  // \"fLaC\" string literal in hex\r\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\r\n  // \"OggS\" string literal in hex\r\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\r\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\r\n  // of ac-3\r\n  'ac3': toUint8([0x0b, 0x77]),\r\n  // \"RIFF\" string literal in hex used for wav and avi\r\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\r\n  // \"AVI\" string literal in hex\r\n  'avi': toUint8([0x41, 0x56, 0x49]),\r\n  // \"WAVE\" string literal in hex\r\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\r\n  // \"ftyp3g\" string literal in hex\r\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\r\n  // \"ftyp\" string literal in hex\r\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\r\n  // \"styp\" string literal in hex\r\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\r\n  // \"ftypqt\" string literal in hex\r\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\r\n  // moov string literal in hex\r\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\r\n  // moof string literal in hex\r\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\r\n};\r\nvar _isLikely = {\r\n  aac: function aac(bytes) {\r\n    var offset = getId3Offset(bytes);\r\n    return bytesMatch(bytes, [0xFF, 0x10], {\r\n      offset: offset,\r\n      mask: [0xFF, 0x16]\r\n    });\r\n  },\r\n  mp3: function mp3(bytes) {\r\n    var offset = getId3Offset(bytes);\r\n    return bytesMatch(bytes, [0xFF, 0x02], {\r\n      offset: offset,\r\n      mask: [0xFF, 0x06]\r\n    });\r\n  },\r\n  webm: function webm(bytes) {\r\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\r\n\r\n    return bytesMatch(docType, CONSTANTS.webm);\r\n  },\r\n  mkv: function mkv(bytes) {\r\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\r\n\r\n    return bytesMatch(docType, CONSTANTS.matroska);\r\n  },\r\n  mp4: function mp4(bytes) {\r\n    // if this file is another base media file format, it is not mp4\r\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\r\n      return false;\r\n    } // if this file starts with a ftyp or styp box its mp4\r\n\r\n\r\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\r\n      offset: 4\r\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\r\n      offset: 4\r\n    })) {\r\n      return true;\r\n    } // if this file starts with a moof/moov box its mp4\r\n\r\n\r\n    if (bytesMatch(bytes, CONSTANTS.moof, {\r\n      offset: 4\r\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\r\n      offset: 4\r\n    })) {\r\n      return true;\r\n    }\r\n  },\r\n  mov: function mov(bytes) {\r\n    return bytesMatch(bytes, CONSTANTS.mov, {\r\n      offset: 4\r\n    });\r\n  },\r\n  '3gp': function gp(bytes) {\r\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\r\n      offset: 4\r\n    });\r\n  },\r\n  ac3: function ac3(bytes) {\r\n    var offset = getId3Offset(bytes);\r\n    return bytesMatch(bytes, CONSTANTS.ac3, {\r\n      offset: offset\r\n    });\r\n  },\r\n  ts: function ts(bytes) {\r\n    if (bytes.length < 189 && bytes.length >= 1) {\r\n      return bytes[0] === 0x47;\r\n    }\r\n\r\n    var i = 0; // check the first 376 bytes for two matching sync bytes\r\n\r\n    while (i + 188 < bytes.length && i < 188) {\r\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\r\n        return true;\r\n      }\r\n\r\n      i += 1;\r\n    }\r\n\r\n    return false;\r\n  },\r\n  flac: function flac(bytes) {\r\n    var offset = getId3Offset(bytes);\r\n    return bytesMatch(bytes, CONSTANTS.flac, {\r\n      offset: offset\r\n    });\r\n  },\r\n  ogg: function ogg(bytes) {\r\n    return bytesMatch(bytes, CONSTANTS.ogg);\r\n  },\r\n  avi: function avi(bytes) {\r\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\r\n      offset: 8\r\n    });\r\n  },\r\n  wav: function wav(bytes) {\r\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\r\n      offset: 8\r\n    });\r\n  },\r\n  'h264': function h264(bytes) {\r\n    // find seq_parameter_set_rbsp\r\n    return findH264Nal(bytes, 7, 3).length;\r\n  },\r\n  'h265': function h265(bytes) {\r\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\r\n    return findH265Nal(bytes, [32, 33], 3).length;\r\n  }\r\n}; // get all the isLikely functions\r\n// but make sure 'ts' is above h264 and h265\r\n// but below everything else as it is the least specific\r\n\r\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\r\n.filter(function (t) {\r\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\r\n}) // add it back to the bottom\r\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\r\n\r\nisLikelyTypes.forEach(function (type) {\r\n  var isLikelyFn = _isLikely[type];\r\n\r\n  _isLikely[type] = function (bytes) {\r\n    return isLikelyFn(toUint8(bytes));\r\n  };\r\n}); // export after wrapping\r\n\r\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\r\n// https://en.wikipedia.org/wiki/List_of_file_signatures\r\n\r\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\r\n  bytes = toUint8(bytes);\r\n\r\n  for (var i = 0; i < isLikelyTypes.length; i++) {\r\n    var type = isLikelyTypes[i];\r\n\r\n    if (isLikely[type](bytes)) {\r\n      return type;\r\n    }\r\n  }\r\n\r\n  return '';\r\n}; // fmp4 is not a container\r\n\r\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\r\n  return findBox(bytes, ['moof']).length > 0;\r\n};", "export default function _getPrototypeOf(o) {\r\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\r\n    return o.__proto__ || Object.getPrototypeOf(o);\r\n  };\r\n  return _getPrototypeOf(o);\r\n}", "export default function _isNativeFunction(fn) {\r\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\r\n}", "import getPrototypeOf from \"./getPrototypeOf.js\";\r\nimport setPrototypeOf from \"./setPrototypeOf.js\";\r\nimport isNativeFunction from \"./isNativeFunction.js\";\r\nimport construct from \"./construct.js\";\r\nexport default function _wrapNativeSuper(Class) {\r\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\r\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\r\n    if (Class === null || !isNativeFunction(Class)) return Class;\r\n    if (typeof Class !== \"function\") {\r\n      throw new TypeError(\"Super expression must either be null or a function\");\r\n    }\r\n    if (typeof _cache !== \"undefined\") {\r\n      if (_cache.has(Class)) return _cache.get(Class);\r\n      _cache.set(Class, Wrapper);\r\n    }\r\n    function Wrapper() {\r\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\r\n    }\r\n    Wrapper.prototype = Object.create(Class.prototype, {\r\n      constructor: {\r\n        value: Wrapper,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n    return setPrototypeOf(Wrapper, Class);\r\n  };\r\n  return _wrapNativeSuper(Class);\r\n}", "import videojs from 'video.js'\nimport type { VideoJsPlayerOptions } from 'video.js'\nimport type { VideoJsPlayer } from './type'\n\ntype PropType<T = any> = { (): T }\ntype InferPropType<T> = T extends PropType<infer V> ? V : T\n\nconst prop = <T>(options: {\n  type: PropType<T>\n  default?: any\n  onChange?: (player: VideoJsPlayer, newValue: T, oldValue?: T) => any\n  onEvent?: (player: VideoJsPlayer, callback: (newValue: T) => void) => any\n}) => options\n\n// Standard <video> Element Options\n// https://videojs.com/guides/options/#standard\nconst videoProps = {\n  src: prop({\n    type: String,\n    onChange: (player, src) => player.src(src)\n  }),\n  width: prop({\n    type: Number,\n    onChange: (player, width) => player.width(width),\n    onEvent: (player, cb) => {\n      player.on(['playerresize', 'resize'], () => cb(player.width()))\n    }\n  }),\n  height: prop({\n    type: Number,\n    onChange: (player, height) => player.height(height),\n    onEvent: (player, cb) => {\n      player.on(['playerresize', 'resize'], () => cb(player.height()))\n    }\n  }),\n  preload: prop({\n    type: String as PropType<'auto' | 'metadata' | 'none'>,\n    // https://github.com/videojs/video.js/blob/main/src/js/player.js#L3696\n    onChange: (player, preload) => player.preload(preload as any)\n  }),\n  loop: prop({\n    type: Boolean,\n    onChange: (player, loop) => player.loop(loop)\n  }),\n  muted: prop({\n    type: Boolean,\n    onChange: (player, muted) => player.muted(muted),\n    onEvent: (player, cb) => player.on('volumechange', () => cb(player.muted()))\n  }),\n  poster: prop({\n    type: String,\n    onChange: (player, poster) => player.poster(poster),\n    onEvent: (player, cb) => player.on('posterchange', () => cb(player.poster()))\n  }),\n  controls: prop({\n    type: Boolean,\n    onChange: (player, controls) => player.controls(controls),\n    onEvent: (player, cb) => {\n      player.on('controlsenabled', () => cb(true))\n      player.on('controlsdisabled', () => cb(false))\n    }\n  }),\n  // https://videojs.com/guides/options/#autoplay\n  autoplay: prop({\n    type: [Boolean, String] as unknown as PropType<boolean | 'muted' | 'play' | 'any'>,\n    onChange: (player, autoplay) => player.autoplay(autoplay)\n  }),\n  // https://github.com/videojs/video.js/blob/main/src/js/player.js#L793\n  // Support both crossOrigin and crossorigin to reduce confusion and issues around the name.\n  crossorigin: prop({\n    type: String,\n    onChange: (player, value) => player.crossOrigin(value as any)\n  }),\n  crossOrigin: prop({\n    type: String,\n    onChange: (player, value) => player.crossOrigin(value as any)\n  }),\n  playsinline: prop({\n    type: Boolean,\n    onChange: (player, value) => player.playsinline(value)\n  }),\n  playsInline: prop({\n    type: Boolean,\n    onChange: (player, value) => player.playsinline(value)\n  })\n}\n\n// Video.js specific Options\n// https://videojs.com/guides/options/#videojs-specific-options\nconst videoJsProps = {\n  id: prop({ type: String }),\n  sources: prop({\n    type: Array as PropType<NonNullable<VideoJsPlayerOptions['sources']>>,\n    onChange: (player, sources) => player.src(sources)\n  }),\n  tracks: prop({\n    type: Array as PropType<NonNullable<VideoJsPlayerOptions['tracks']>>,\n    onChange: (player, newTracks) => {\n      // https://github.com/videojs/videojs-playlist/blob/main/src/play-item.js\n      const oldTracks = player.remoteTextTracks()\n      // This uses a `while` loop rather than `forEach` because the `TextTrackList` object is a live DOM list (not an array).\n      let index = oldTracks?.length || 0\n      while (index--) {\n        player.removeRemoteTextTrack(oldTracks[index] as any as HTMLTrackElement)\n      }\n      // Add new text tracks.\n      player.ready(() => {\n        newTracks.forEach((track) => player.addRemoteTextTrack(track, false))\n      })\n    }\n  }),\n  textTrackSettings: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['textTrackSettings']>>,\n    onChange: (player, value) => (player as any).textTrackSettings.options(value)\n  }),\n  language: prop({\n    type: String,\n    onChange: (player, language) => player.language(language),\n    onEvent: (player, cb) => player.on('languagechange', () => cb(player.language()))\n  }),\n  // https://videojs.com/guides/options/#languages\n  // https://videojs.com/guides/languages/\n  // https://docs.videojs.com/module-videojs-videojs.html#.addLanguage\n  languages: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['languages']>>\n  }),\n  playbackRates: prop({\n    type: Array as PropType<NonNullable<VideoJsPlayerOptions['playbackRates']>>,\n    onChange: (player, newRates) => player.playbackRates(newRates ?? []),\n    onEvent: (player, cb) => {\n      player.on('playbackrateschange', () => cb(player.playbackRates()))\n    }\n  }),\n  audioOnlyMode: prop({\n    type: Boolean,\n    onChange: (player, value) => player.audioOnlyMode(value)\n  }),\n  audioPosterMode: prop({\n    type: Boolean,\n    onChange: (player, value) => player.audioPosterMode(value)\n  }),\n  responsive: prop({\n    type: Boolean,\n    onChange: (player, value) => player.responsive(value)\n  }),\n  breakpoints: prop({\n    type: Object as PropType<Partial<videojs.Breakpoint>>,\n    onChange: (player, value) => player.breakpoints(value)\n  }),\n  fluid: prop({\n    type: Boolean,\n    onChange: (player, value) => player.fluid(value)\n  }),\n  // https://docs.videojs.com/player#fill\n  fill: prop({\n    type: Boolean,\n    onChange: (player, value) => player.fill(value)\n  }),\n  aspectRatio: prop({\n    type: String,\n    onChange: (player, ratio) => player.aspectRatio(ratio)\n  }),\n  // https://videojs.com/guides/options/#fullscreen\n  fullscreen: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['fullscreen']>>\n  }),\n  // https://videojs.com/guides/options/#liveui\n  liveui: prop({ type: Boolean }),\n  // https://videojs.com/guides/options/#livetrackertrackingthreshold\n  liveTracker: prop({\n    type: Object as PropType<\n      Partial<{\n        trackingThreshold: number\n        liveTolerance: number\n        [key: string]: any\n      }>\n    >\n  }),\n  disablePictureInPicture: prop({\n    type: Boolean,\n    onChange: (player, value) => player.disablePictureInPicture(value)\n  }),\n  notSupportedMessage: prop({ type: String }),\n  normalizeAutoplay: prop({ type: Boolean }),\n  noUITitleAttributes: prop({ type: Boolean }),\n  preferFullWindow: prop({ type: Boolean }),\n  suppressNotSupportedError: prop({ type: Boolean }),\n  techCanOverridePoster: prop({ type: Boolean }),\n  reportTouchActivity: prop({ type: Boolean }),\n  techOrder: prop({ type: Array as PropType<Array<string>> }),\n  // https://videojs.com/guides/options/#inactivitytimeout\n  inactivityTimeout: prop({ type: Number }),\n  userActions: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['userActions']>>\n  }),\n  // https://videojs.com/guides/options/#plugins\n  // https://videojs.com/guides/plugins/\n  plugins: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['plugins']>>\n  }),\n  restoreEl: prop({ type: [Boolean, Object] as unknown as PropType<boolean | Element> }),\n  'vtt.js': prop({ type: String })\n}\n\n// Video.js component Options\n// https://videojs.com/guides/options/#component-options\nconst videoJsComponentProps = {\n  children: prop({\n    type: [Array, Object] as unknown as PropType<NonNullable<VideoJsPlayerOptions['children']>>\n  }),\n  // https://videojs.com/guides/options/#controlbarremainingtimedisplaydisplaynegative\n  controlBar: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['controlBar']>>,\n    onChange: (player, value) => player.controlBar.options(value)\n  })\n}\n\n// Video.js tech Options\n// https://videojs.com/guides/options/#tech-options\nconst videoJsTechProps = {\n  html5: prop({\n    type: Object as PropType<\n      Partial<{\n        vhs: any\n        nativeControlsForTouch: boolean\n        nativeAudioTracks: boolean\n        nativeTextTracks: boolean\n        nativeVideoTracks: boolean\n        preloadTextTracks: boolean\n      }>\n    >\n  })\n}\n\n// Framework component Options\nconst componentProps = {\n  volume: prop({\n    type: Number,\n    onChange: (player, volume) => player.volume(volume),\n    onEvent: (player, cb) => player.on('volumechange', () => cb(player.volume()))\n  }),\n  playbackRate: prop({\n    type: Number,\n    onChange(player, rate) {\n      // When playbackRate changes, sync the value to defaultPlaybackRate to\n      // ensure that the last saved playbackRate is automatically read when the video changes source.\n      player.playbackRate(rate)\n      player.defaultPlaybackRate(rate)\n    },\n    onEvent(player, callback) {\n      player.on('ratechange', () => {\n        callback(player.playbackRate())\n      })\n    }\n  }),\n  // Fallback for video.js options\n  options: prop({\n    type: Object as PropType<VideoJsPlayerOptions>\n  })\n}\n\nexport const propsConfig = {\n  ...videoProps,\n  ...videoJsProps,\n  ...videoJsComponentProps,\n  ...videoJsTechProps,\n  ...componentProps\n} as const\n\nexport type PropsConfig = typeof propsConfig\nexport type PropKey = keyof PropsConfig\nexport type Props = {\n  [K in PropKey]?: InferPropType<typeof propsConfig[K]['type']>\n}\n\nexport const propKeys = Object.keys(propsConfig) as Array<PropKey>\n", "// https://www.w3.org/2010/05/video/mediaevents.html\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#events\n// https://github.com/videojs/video.js/blob/main/src/js/tech/html5.js#L1204\nconst html5EventsMap = {\n  loadstart: 'onLoadStart',\n  suspend: 'onSuspend',\n  abort: 'onAbort',\n  error: 'onError',\n  emptied: 'onEmptied',\n  stalled: 'onStalled',\n  loadedmetadata: 'onLoadedMetadata',\n  loadeddata: 'onLoadedData',\n  canplay: 'onCanPlay',\n  canplaythrough: 'onCanPlayThrough',\n  playing: 'onPlaying',\n  waiting: 'onWaiting',\n  seeking: 'onSeeking',\n  seeked: 'onSeeked',\n  ended: 'onEnded',\n  durationchange: 'onDurationChange',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  play: 'onPlay',\n  pause: 'onpause',\n  ratechange: 'onRateChange',\n  resize: 'onResize',\n  volumechange: 'onVolumeChange'\n} as const\n\n// https://docs.videojs.com/player#event\nconst videoJsEventsMap = {\n  posterchange: 'onPosterChange',\n  languagechange: 'onLanguageChange',\n  fullscreenchange: 'onFullscreenChange',\n  playbackrateschange: 'onPlaybackRatesChange',\n  controlsdisabled: 'onControlsDisabled',\n  controlsenabled: 'onControlsEnabled',\n  enterFullWindow: 'onEnterFullWindow',\n  exitFullWindow: 'onExitFullWindow',\n  enterpictureinpicture: 'onEnterPictureInPicture',\n  leavepictureinpicture: 'onLeavePictureInPicture',\n  // https://docs.videojs.com/player#event:sourceset\n  sourceset: 'onSourceSet',\n  texttrackchange: 'onTextTrackChange',\n  textdata: 'onTextData',\n  useractive: 'onUserActive',\n  userinactive: 'onUserInactive',\n  usingcustomcontrols: 'onUsingCustomControls',\n  usingnativecontrols: 'onUsingNativeControls',\n  dispose: 'onDispose'\n} as const\n\nconst videoJsPluginEventsMap = {\n  beforepluginsetup: 'onBeforePluginSetup',\n  pluginsetup: 'onPluginSetup'\n  // pluginsetup:$name\n} as const\n\nconst videoJsComponentEventsMap = {\n  componentresize: 'onComponentResize',\n  playerresize: 'onPlayerResize',\n  ready: 'onReady',\n  tap: 'onTap'\n} as const\n\nexport const eventsMap = {\n  ...html5EventsMap,\n  ...videoJsEventsMap,\n  ...videoJsPluginEventsMap,\n  ...videoJsComponentEventsMap\n} as const\n\nexport type EventMap = typeof eventsMap\nexport type EventKey = keyof EventMap\nexport const events = Object.keys(eventsMap) as Array<EventKey>\n\nexport const camelCaseEvents = Object.values(eventsMap)\nexport type CamelCaseEventKey = typeof camelCaseEvents[number]\n", "import videoJs, { VideoJsPlayerOptions } from 'video.js'\nimport { propsConfig, Props, PropKey } from './props'\nimport { events, EventKey } from './events'\nimport type { VideoJsPlayer } from './type'\n\n/**\n * Transform `string` className to `array`.\n * @link https://github.com/videojs/video.js/pull/7798\n * @link https://github.com/videojs/video.js/issues/7685\n * @description ```\n *  input: \" test-a    test-b   test-c  \"\n *  output: [\"test-a\", \"test-b\", \"test-c\"]\n * ```\n */\nconst standardizeClass = (className: string | void) => {\n  const trimmed = className?.trim().replace(/\\s+/g, ' ')\n  return trimmed ? trimmed.split(' ') ?? [] : []\n}\n\nexport interface CreatePlayerOptions {\n  props: Props\n  element: HTMLElement\n  className?: string\n  onEvent(eventName: EventKey, payload: Event): void\n}\n\nexport type PlayerResult = ReturnType<typeof createPlayer>\nexport const createPlayer = ({ props, element, className, onEvent }: CreatePlayerOptions) => {\n  // Exclude fallback options.\n  const { options: fallbackOptions = {}, ...optProps } = props\n\n  // Exclude undefined value.\n  const propOptions: Omit<Props, 'options'> = {}\n  const optPropKeys = Object.keys(optProps) as Array<keyof typeof optProps>\n  optPropKeys.forEach((key) => {\n    const value = optProps[key]\n    if (value !== undefined) {\n      // @ts-ignore\n      propOptions[key] = value\n    }\n  })\n\n  // Merge fallback options & exclude component options.\n  const { volume, playbackRate, ...initOptions } = {\n    ...propOptions,\n    ...fallbackOptions\n  }\n\n  // Merge some confusing prop names.\n  const videoJsOptions = {\n    ...initOptions,\n    // https://videojs.com/guides/options/#restoreel\n    // Since the dispose > restore element side effect of Video.js occurs after the component has been unmounted,\n    // a DOM retention error will occur if true, so it cannot be set to true.\n    // restoreEl: initOptions.restoreEl ?? false,\n    // Video.js only supports the `playsinline` property.\n    playsinline: initOptions.playsinline ?? initOptions.playsInline\n  }\n\n  // https://videojs.com/guides/embeds/\n  // https://videojs.com/guides/react/\n  // MARK: Player div ingest\n  // There are three ways to initialize a player, the \"Player div ingest\" type is the most suitable in a component scenario\n  // because it generates the least amount of DOM side effects,\n  // and this way it can fully utilize the existing div outer container and video elements without changing the DOM structure.\n  // The problem is that the Video.js player, when instantiated, reads the className property of the video element as the className of the outer container,\n  // but the component needs to satisfy the user's need to \"be able to use the className to specify the style from the moment the component is rendered\".\n  // So we need to assume that only the className specified by the user through the component is needed for style control,\n  // while the basic \"video-js\" - like className is another internal className with a specific side effect and used only for initializing the player.\n  // So we need to distinguish the className into innerClassName, which is controlled internally by the component and remains unchanged,\n  // and userClassName, which will be applied to the container element at times like init and change.\n  // The reason why userClassName cannot be used directly as className for video elements is that it may cause unintended style side effects,\n  // such as misalignment or recursive styles, due to the different DOM hierarchy.\n  // MARK: RawHTML\n  // A better solution may exist to create the player with a freshly created video element while maintaining a mounted identifier,\n  // and when the player is instantiated, return the instantiated DOM entirely through the component,\n  // but this relies on the framework supporting a RawHTML - like API - https://github.com/ reactjs/rfcs/pull/129\n  // Custom controls capabilities can be implemented through the Video.js Component - https://videojs.com/guides/react/\n  const player = videoJs(element, videoJsOptions, function () {\n    // Stringing video.js events to vue emits.\n    events.forEach((eventKey) => {\n      this.on(eventKey, (payload) => {\n        onEvent(eventKey, payload)\n      })\n    })\n\n    // init src\n    if (initOptions.src && !initOptions.sources) {\n      this.src(initOptions.src)\n    }\n\n    // init volume\n    if (volume && Number.isFinite(volume)) {\n      this.volume(volume)\n    }\n\n    // init playbackRate\n    // https://github.com/videojs/video.js/issues/5128\n    // https://github.com/videojs/video.js/issues/2516\n    // https://github.com/videojs/videojs-playlist/issues/158\n    // https://github.com/sampotts/plyr/blob/master/src/js/plyr.js#L677\n    // https://github.com/bytedance/xgplayer/blob/master/packages/xgplayer/src/skin/controls/playbackRate.js#L30\n    if (playbackRate && Number.isFinite(playbackRate)) {\n      // Video always reads defaultPlaybackRate as the initial playbackRate when switching video sources.\n      this.defaultPlaybackRate(playbackRate)\n      // Ensures that all synchronization code has been executed by the time playbackRate is executed.\n      setTimeout(() => {\n        this.playbackRate(playbackRate)\n      }, 0)\n    }\n  }) as VideoJsPlayer\n\n  // The component needs to be initialized with the initial className of the container element to\n  // avoid flickering of the style caused by applying the className after the player has been instantiated.\n  // There are two separate times when initClassName is consumed.\n  // 1. when the component is first rendered, before the player is instantiated,\n  // the className should act on the root container of the component's original element,\n  // which allows the user to control the style before the component is mounted.\n  // 2. Before the component is mounted, `addClass(initClassName)` should be applied to the player immediately after the player is created,\n  // as Video.js does not support such an option for className, so we have to do this,\n  // and currently the synchronization feature of the browser ensures that the user\n  // does not perceive the \"init(component) > remove(createPlayer) > add(player.addClass)\" replacement process for className.\n  if (className) {\n    standardizeClass(className).map((name) => player.addClass(name))\n  }\n\n  // Set new class names to Video.js container element.\n  const updateClassNames = (oldClassName: string | void, newClassName: string | void) => {\n    standardizeClass(oldClassName).map((name) => player.removeClass(name))\n    standardizeClass(newClassName).map((name) => player.addClass(name))\n  }\n\n  // Set new options to Video.js config.\n  const updateOptions = (options: VideoJsPlayerOptions) => {\n    player.options?.(options ?? {})\n  }\n\n  // Set new prop value to Video.js config.\n  const updatePropOption = <K extends PropKey>(key: K, value: Props[K]) => {\n    updateOptions({ [key]: value })\n    propsConfig[key]?.onChange?.(player, value as never)\n  }\n\n  const disposePlayer = () => player.dispose()\n\n  return {\n    player,\n    dispose: disposePlayer,\n    updateClassNames,\n    updateOptions,\n    updatePropOption\n  }\n}\n", "import type { VideoJsPlayer as Player } from './type'\n\n// https://videojs.com/advanced/\n// https://github.com/videojs/videojs.com/blob/main/src/components/HomeComponents/AdvancedExample/mediaProperties.js\n// https://github.com/videojs/videojs.com/blob/main/src/components/HomeComponents/AdvancedExample/MediaPropertyItem.jsx\nconst StateConfig = {\n  // autoplay: { getter: (player: P) => player.autoplay() }, // ✘\n  // loop: { getter: (player: P) => player.loop() }, // ✘\n  // preload: { getter: (player: P) => player.preload() }, // ✘\n  // playsInline: { getter: (player: P) => player.playsinline() }, // ✘\n  // crossOrigin: { getter: (player: P) => player.crossOrigin() }, // ✘\n  src: {\n    getter: (player: Player) => player.src()\n  },\n  currentSrc: {\n    getter: (player: Player) => player.currentSrc()\n  },\n  currentSource: {\n    getter: (player: Player) => player.currentSource()\n  },\n  width: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.width()\n  },\n  height: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.height()\n  },\n  currentWidth: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.currentWidth()\n  },\n  currentHeight: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.currentHeight()\n  },\n  videoWidth: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.videoWidth()\n  },\n  videoHeight: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.videoHeight()\n  },\n  controls: {\n    events: ['controlsdisabled', 'controlsenabled'],\n    getter: (player: Player) => player.controls()\n  },\n  volume: {\n    events: ['volumechange'],\n    getter: (player: Player) => player.volume()\n  },\n  muted: {\n    events: ['volumechange'],\n    getter: (player: Player) => player.muted()\n  },\n  poster: {\n    events: ['posterchange'],\n    getter: (player: Player) => player.poster()\n  },\n  seeking: {\n    events: ['seeking'],\n    getter: (player: Player) => player.seeking()\n  },\n  paused: {\n    events: ['pause', 'play', 'playing'],\n    getter: (player: Player) => player.paused()\n  },\n  ended: {\n    events: ['ended', 'play'],\n    getter: (player: Player) => player.ended()\n  },\n  currentTime: {\n    events: ['timeupdate'],\n    getter: (player: Player) => player.currentTime()\n  },\n  duration: {\n    events: ['durationchange'],\n    getter: (player: Player) => player.duration()\n  },\n  playbackRate: {\n    events: ['ratechange'],\n    getter: (player: Player) => player.playbackRate()\n  },\n  playbackRates: {\n    events: ['playbackrateschange'],\n    getter: (player: Player) => player.playbackRates()\n  },\n  isFullscreen: {\n    events: ['fullscreenchange'],\n    getter: (player: Player) => player.isFullscreen()\n  },\n  isInPictureInPicture: {\n    events: ['enterpictureinpicture', 'leavepictureinpicture'],\n    getter: (player: Player) => player.isInPictureInPicture()\n  },\n  isLive: {\n    getter: (player: Player) => player.liveTracker?.isLive()\n  },\n  language: {\n    events: ['languagechange'],\n    getter: (player: Player) => player.language()\n  },\n  userActive: {\n    events: ['useractive', 'userinactive'],\n    getter: (player: Player) => player.userActive()\n  },\n  readyState: {\n    events: ['loadeddata'],\n    getter: (player: Player) => player.readyState()\n  },\n  networkState: {\n    events: ['loadeddata', 'error'],\n    getter: (player: Player) => player.networkState()\n  },\n  error: {\n    events: ['loadeddata', 'error'],\n    getter: (player: Player) => player.error()\n  },\n  buffered: {\n    events: ['progress'],\n    getter: (player: Player) => player.buffered()\n  },\n  bufferedPercent: {\n    events: ['progress'],\n    getter: (player: Player) => player.bufferedPercent()\n  },\n  played: {\n    events: ['timeupdate'],\n    getter: (player: Player) => player.played()\n  },\n  seekable: {\n    events: ['progress', 'seeked'],\n    getter: (player: Player) => player.seekable()\n  },\n  audioTracks: {\n    getter: (player: Player) => player.audioTracks?.()\n  },\n  videoTracks: {\n    getter: (player: any) => player.videoTracks?.()\n  },\n  textTracks: {\n    getter: (player: Player) => player.textTracks?.()\n  }\n}\n\ntype PlayerBastState = {\n  [K in keyof typeof StateConfig]: ReturnType<typeof StateConfig[K]['getter']>\n}\nexport interface PlayerState extends PlayerBastState {\n  playing: boolean\n  waiting: boolean\n}\n\nexport interface CreatePlayerStateOptions {\n  onInit: (state: PlayerState) => void\n  onUpdate: <K extends keyof PlayerState>(key: K, value: PlayerState[K], state: PlayerState) => void\n}\n\nexport const createPlayerState = (player: Player, options: CreatePlayerStateOptions) => {\n  const keys = Object.keys(StateConfig) as Array<keyof typeof StateConfig>\n  const state = keys.reduce(\n    (result, key) => ({ ...result, [key]: StateConfig[key].getter(player) }),\n    { playing: false, waiting: false } as PlayerState\n  )\n\n  // update state\n  const updateState = (key: keyof PlayerState, value: any) => {\n    state[key] = value as never\n    options.onUpdate(key, value, { ...state })\n  }\n\n  // playing state https://github.com/videojs/video.js/issues/181\n  // un-loop: play > playing > pause > ended\n  // loop: play > playing > [ended > restart] waiting > playing\n  player.on(['pause', 'ended'], () => {\n    updateState('playing', false)\n  })\n  player.on(['play', 'playing'], () => {\n    updateState('playing', true)\n  })\n\n  // https://github.com/videojs/video.js/blob/75ea699273d659593d95429d185865fb6e49cb93/src/js/player.js#L1743\n  player.on('waiting', () => {\n    updateState('waiting', true)\n    const timeWhenWaiting = player.currentTime()\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== player.currentTime()) {\n        updateState('waiting', false)\n        player.off('timeupdate', timeUpdateListener)\n      }\n    }\n    player.on('timeupdate', timeUpdateListener)\n  })\n\n  keys.forEach((key) => {\n    const target = StateConfig[key]\n    const baseEvents = ['loadstart', 'loadedmetadata']\n    player.on(baseEvents.concat((target as any).events ?? []), () => {\n      updateState(key, target.getter(player))\n    })\n  })\n\n  // init state\n  options.onInit({ ...state })\n}\n", "import type { PropsConfig, PropKey, EventKey, VideoJsPlayer } from '../../../player'\nimport { propsConfig, propKeys, events } from '../../../player'\n\nconst twoWayPropKeys = propKeys.filter((key) => Boolean(propsConfig[key].onEvent))\nconst getPropUpdateEventName = (key: PropKey) => `update:${key}`\n\n// Convert all supported Video.js configuration changes to two-way binding events.\nexport const bindPropUpdateEvent = (options: {\n  player: VideoJsPlayer\n  onEvent: (key: EventKey, value: any) => void\n}) => {\n  twoWayPropKeys.forEach((key) => {\n    propsConfig[key]?.onEvent?.(options.player, (newValue: unknown) => {\n      options.onEvent(getPropUpdateEventName(key) as EventKey, newValue)\n    })\n  })\n}\n\n// Add two-way binding events to all props that have onEvent.\n// The event type information is missing here, but it is necessary.\nexport const normalizedEvents = [\n  ...events,\n  ...twoWayPropKeys.map(getPropUpdateEventName)\n] as typeof events\n\n// Set the default value of all Boolean type's props to undefined.\n// https://vuejs.org/guide/components/props.html#boolean-casting\nexport const normalizedProps = propKeys.reduce((result, key) => {\n  const prop = propsConfig[key]\n  const types = Array.isArray(prop.type) ? prop.type : [prop.type]\n  const newProp = { ...prop }\n  if (types.includes(Boolean)) {\n    newProp.default = void 0\n  }\n\n  return { ...result, [key]: newProp }\n}, {} as PropsConfig)\n", "import { defineComponent, onMounted, onBeforeUnmount, h, normalizeClass } from 'vue'\nimport { shallowRef, ref, computed, readonly, watch, toRaw, DeepReadonly, PropType } from 'vue'\nimport { createPlayer, createPlayerState, propKeys } from '../../../player'\nimport { PlayerState, PlayerResult } from '../../../player'\nimport { normalizedProps, normalizedEvents, bindPropUpdateEvent } from './helper'\n\nconst MOUNTED_EVENT_NAME = 'mounted'\nconst UNMOUNTED_EVENT_NAME = 'unmounted'\n\nexport default defineComponent({\n  name: 'VueVideoPlayer',\n  props: { ...normalizedProps, class: [String, Object, Array] as PropType<unknown> },\n  emits: [...normalizedEvents, MOUNTED_EVENT_NAME, UNMOUNTED_EVENT_NAME],\n  // https://github.com/vuejs/rfcs/pull/192\n  // https://github.com/vuejs/core/pull/2693\n  // slots: Object as () => { player: VideoJsPlayer; state: DeepReadonly<PlayerState> },\n  setup(props, context) {\n    const { class: initClassName, ...rawProps } = toRaw(props)\n    const mounted = shallowRef(false)\n    const videoElement = shallowRef<HTMLVideoElement | null>(null)\n    const playerResult = shallowRef<PlayerResult | null>(null)\n    const videoJsPlayer = computed(() => {\n      return playerResult.value ? playerResult.value.player : null\n    })\n\n    const state = ref<PlayerState | null>(null)\n    const readOnlyState = computed<DeepReadonly<PlayerState> | null>(() => {\n      return state.value ? readonly(state.value) : null\n    })\n\n    onMounted(() => {\n      // Create player.\n      const playerRes = createPlayer({\n        element: videoElement.value!,\n        props: rawProps,\n        onEvent: context.emit\n      })\n\n      // Sync Video.js config change to update:prop event.\n      bindPropUpdateEvent({\n        player: playerRes.player,\n        onEvent: context.emit\n      })\n\n      // Sync Vue class name to Video.js container.\n      watch(\n        () => props.class,\n        (newClassName, oldClassName) => {\n          const ocn = normalizeClass(oldClassName)\n          const ncn = normalizeClass(newClassName)\n          playerRes.updateClassNames(ocn, ncn)\n        },\n        { immediate: true }\n      )\n\n      // Sync fallback options to Video.js config.\n      watch(\n        () => props.options,\n        (newOptions) => playerRes.updateOptions(newOptions ?? {}),\n        { deep: true }\n      )\n\n      // Sync component props to Video.js config.\n      propKeys\n        .filter((key) => key !== 'options')\n        .forEach((key) => {\n          watch(\n            () => props[key],\n            (newValue) => playerRes.updatePropOption(key, newValue),\n            { deep: true }\n          )\n        })\n\n      // Create player state.\n      createPlayerState(playerRes.player, {\n        onInit(initState) {\n          state.value = initState\n        },\n        onUpdate(key, value) {\n          if (state.value) {\n            state.value[key] = value\n          }\n        }\n      })\n\n      // Emit mounted event.\n      playerResult.value = playerRes\n      mounted.value = true\n      context.emit(MOUNTED_EVENT_NAME, {\n        video: videoElement.value,\n        player: videoJsPlayer.value,\n        state: readOnlyState.value\n      })\n    })\n\n    onBeforeUnmount(() => {\n      if (playerResult.value) {\n        playerResult.value.dispose()\n        playerResult.value = null\n        state.value = null\n        context.emit(UNMOUNTED_EVENT_NAME)\n      }\n    })\n\n    return () => {\n      return h('div', { 'data-vjs-player': '', class: normalizeClass(initClassName) }, [\n        h('video', {\n          class: ['video-js', 'v-video-player'],\n          ref: videoElement\n        }),\n        mounted.value &&\n          context.slots.default?.({\n            video: videoElement.value!,\n            player: videoJsPlayer.value!,\n            state: readOnlyState.value!\n          })\n      ])\n    }\n  }\n})\n", "import type { Plugin } from 'vue'\nimport Component from './component'\n\nexport type {\n  Props as VideoPlayerProps,\n  EventKey as VideoPlayerEvents,\n  PlayerState as VideoPlayerState\n} from '../../../player'\n\nexport const VideoPlayer = Component\nexport const install: Plugin = (app) => {\n  app.component('VideoPlayer', Component)\n  app.component(Component.name, Component)\n}\n\nexport default {\n  VideoPlayer: Component,\n  install\n}\n"],
  "mappings": "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Q;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,IAER,KAAQ;AAAA,EAEV;AAEA,MAAI,kBAAkB,SAASgM,iBAAgB,MA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",
  "names": ["keyCode", "_extends", "toString", "window", "httpResponseHandler", "callback", "type", "window", "_extends", "parseHeaders", "noop", "callback", "body", "document", "h", "m", "f", "k", "v", "callback", "ts", "input", "cue", "window", "unescape", "current", "type", "t", "nodeStack", "i", "text", "height", "width", "y", "b", "axis", "bestPosition", "WebVTT", "cues", "self", "line", "window", "URLToolkit", "assign", "_extends", "t", "version", "callback", "remove", "isTextNode", "hasDoctypeChildThatIsNotChild", "node", "start", "v", "getTextContent", "parse", "a", "k", "end", "start", "m", "f", "t", "value", "DOMParser", "sax", "start", "require_lib", "parseSidx", "ONE_SECOND_IN_TS", "import_window", "self", "_setPrototypeOf", "o", "p", "_construct", "Parent", "args", "Class", "resolveUrl", "window", "URLToolkit", "Stream", "on", "type", "off", "trigger", "import_window", "atob", "window", "LineStream", "parseByterange", "attributeSeparator", "parseAttributes", "ParseStream", "dataParser", "mapFn", "camelCase", "camelCaseKeys", "setHoldBack", "Parser", "self", "noop", "version", "byterange", "start", "part", "r", "import_window", "translateLegacyCodec", "parseCodecs", "type", "codecsFromDefault", "isAudioCodec", "isTextCodec", "getMimeForCodec", "type", "browserSupportsCodec", "window", "muxerSupportsCodec", "simpleTypeFromSourceType", "type", "import_window", "countBits", "countBytes", "isArrayBufferView", "isTypedArray", "toUint8", "window", "b", "bytesToNumber", "numberToBytes", "bytesToString", "stringToBytes", "concatTypedArrays", "b", "bytesMatch", "import_window", "forEachMediaGroup", "callback", "isObject", "merge", "values", "k", "range", "start", "flatten", "y", "from", "findIndexes", "findIndex", "union", "urlTypeToSegment", "window", "byteRangeToString", "parseEndNumber", "duration", "timescale", "availabilityStartTime", "minimumUpdatePeriod", "timeShiftBufferDepth", "toSegments", "startNumber", "parseByDuration", "type", "segmentsFromBase", "r", "getUniqueTimelineStarts", "b", "findPlaylistWithName", "getMediaGroupPlaylists", "updateMediaSequenceForPlaylist", "updateSequenceNumbers", "positionManifestOnTimeline", "generateSidxKey", "mergeDiscontiguousPlaylists", "addSidxSegmentsToPlaylist", "addSidxSegmentsToPlaylists", "formatAudioPlaylist", "isAudioOnly", "formatVttPlaylist", "organizeAudioPlaylists", "organizeVttPlaylists", "organizeCaptionServices", "formatVideoPlaylist", "videoOnly", "audioOnly", "vttOnly", "addMediaSequenceValues", "flattenMediaGroupPlaylists", "toM3u8", "suggestedPresentationDelay", "getLiveRValue", "parseByTimeline", "S", "identifierReplacement", "width", "constructTemplateUrl", "parseTemplateInfo", "segmentsFromTemplate", "presentationTimeOffset", "SegmentURLToSegmentObject", "segmentsFromList", "generateSegments", "toPlaylists", "findChildren", "getContent", "parseDivisionValue", "parseDuration", "parseDate", "parseAttributes", "buildBaseUrls", "getSegmentInformation", "inheritBaseUrls", "generateKeySystemInformation", "parseCaptionServiceMetadata", "toRepresentations", "toAdaptationSets", "getPeriodStart", "inheritAttributes", "stringToMpdXml", "parser", "parseUTCTimingScheme", "parse", "parseUTCTiming", "getId3Size", "getId3Offset", "normalizePath", "normalizePaths", "parseDescriptors", "z", "parser", "findBox", "type", "getLength", "getvint", "normalizePath", "normalizePaths", "getInfinityDataSize", "findEbml", "discardEmulationPreventionBytes", "findNal", "findH264Nal", "type", "findH265Nal", "t", "type", "detectContainerForBytes", "isLikelyFmp4MediaSegment", "_getPrototypeOf", "o", "_wrapNativeSuper", "Class", "hooks", "type", "hook", "removeHook", "hookOnce", "wrapper", "document", "LogByTypeFactory", "log", "window$1", "keys", "isObject", "version", "k", "width", "height", "transform", "values", "autoSetup", "createStyleElement", "setTextContent", "FakeWeakMap", "set", "get", "callback", "supportsPassive", "m", "removeType", "t", "func", "bind", "throttle", "throttled", "debounce", "cancel", "debounced", "self", "objName", "isEvented", "addEventedCallback", "isValidEventType", "validateTarget", "validateEventType", "validateListener", "normalizeListenArgs", "listen", "on", "removeListenerOnDispose", "removeRemoverOnTargetDispose", "one", "any", "toLowerCase", "w", "titleCaseEquals", "MapSham", "SetSham", "Component", "handleAdd", "Tech", "keycode", "noTap", "touchEnd", "setTimeout", "clearTimeout", "Player", "start", "duration", "trackToJson_", "textTracksToJson", "jsonToTextTracks", "ModalDialog", "createEl", "closeable", "TrackList", "AudioTrackList", "disableOthers", "VideoTrackList", "TextTrackList", "HtmlTrackElementList", "TextTrackCueList", "defineProp", "Track", "_loop", "key", "parseUrl", "getAbsoluteURL", "getFileExtension", "isCrossOrigin", "parseCues", "parser", "errors", "loadTrack", "XHR", "TextTrack", "disposeHandler", "AudioTrack", "VideoTrack", "HTMLTrackElement", "ready", "reset", "trackListChanges", "vtt", "handleAddTrack", "handleRemoveTrack", "updateDisplay", "textTracksChanges", "canPlayType", "getMimetype", "findMimetype", "s", "filterSource", "MediaLoader", "j", "ClickableComponent", "PosterImage", "TextTrackDisplay", "updateDisplayHandler", "track", "LoadingSpinner", "Button", "BigPlayButton", "playFocus", "CloseButton", "PlayToggle", "defaultImplementation", "h", "TimeDisplay", "CurrentTimeDisplay", "DurationDisplay", "updateContent", "TimeDivider", "RemainingTimeDisplay", "LiveDisplay", "SeekToLive", "clamp", "Slider", "percentify", "LoadProgressBar", "TimeTooltip", "PlayProgressBar", "MouseTimeDisplay", "SeekBar", "ProgressControl", "PictureInPictureToggle", "FullscreenToggle", "checkVolumeSupport", "VolumeLevel", "VolumeLevelTooltip", "MouseVolumeLevelDisplay", "VolumeBar", "VolumeControl", "checkMuteSupport", "MuteToggle", "VolumePanel", "Menu", "MenuButton", "handleClick", "TrackButton", "MenuItem", "TextTrackMenuItem", "changeHandler", "selectedLanguageChangeHandler", "OffTextTrackMenuItem", "TextTrackButton", "ChaptersTrackMenuItem", "ChaptersButton", "DescriptionsButton", "SubtitlesButton", "CaptionSettingsMenuItem", "CaptionsButton", "SubsCapsMenuItem", "SubsCapsButton", "AudioTrackMenuItem", "AudioTrackButton", "PlaybackRateMenuItem", "PlaybackRateMenuButton", "Spacer", "CustomControlSpacer", "ControlBar", "ErrorDisplay", "v", "TextTrackSettings", "ResizeManager", "LiveTracker", "seekable", "sourcesetLoad", "getDescriptor", "getInnerHTMLDescriptor", "firstSourceWatch", "appendWrapper", "getSrcDescriptor", "setupSourceset", "defineLazyProperty", "Html5", "takeMetadataTrackSnapshot", "restoreTrackMode", "removeOldTracks", "setLoadstartFired", "triggerLoadstart", "checkProgress", "endFn", "beginFn", "noop", "r", "resolveMuted", "restoreMuted", "updateSourceCaches", "timeUpdateListener", "buffered", "excludeElement", "findFirstPassingTechSourcePair", "flip", "b", "finder", "retry", "stopListeningForErrors", "triggerSuppressedError", "handleMouseMove", "handleMouseDown", "handleMouseUpAndMouseLeave", "safeParseTuple", "pluginExists", "getPlugin", "markPluginAsActive", "triggerSetupEvent", "createBasicPlugin", "basicPluginWrapper", "createPluginFactory", "Plugin", "trigger$1", "extend", "subClass", "normalizeId", "resolveUrl", "resolveManifestRedirect", "logger", "filterRanges", "findRange", "findNextRange", "findGaps", "bufferIntersection", "printableRange", "range", "timeUntilRebuffer", "timeRangesToArray", "isRangeDifferent", "lastBufferedEnd", "timeAheadOf", "segmentDurationWithParts", "getPartsAndSegments", "getLastParts", "getKnownPartCount", "liveEdgeDelay", "backwardDuration", "forwardDuration", "intervalDuration", "sumDurations", "playlistEnd", "getMediaInfoForTime", "isBlacklisted", "isIncompatible", "isEnabled", "isDisabled", "isAes", "hasAttribute", "estimateSegmentRequestTime", "bandwidth", "isLowestEnabledRendition", "playlistMatch", "someAudioVariant", "AUDIO", "isAudioOnly", "i", "found", "createPlaylistID", "groupID", "parseManifest", "forEachMediaGroup", "setupMediaPlaylist", "setupMediaPlaylists", "resolveMediaGroupUris", "masterForMedia", "addPropertiesToMaster", "p", "addLLHLSQueryDirectives", "updateSegment", "updateSegments", "resolveSegmentUris", "getAllSegments", "isPlaylistUnchanged", "refreshDelay", "PlaylistLoader", "callbackWrapper", "xhrFactory", "byterangeStr", "segmentXhrHeaders", "textRange", "formatHexString", "formatAsciiString", "createTransferableMessage", "initSegmentId", "segmentKeyId", "hexDump", "tagDump", "textRanges", "playerTimeToProgramTime", "originalSegmentVideoDuration", "findSegmentForProgramTime", "findSegmentForPlayerTime", "getOffsetFromTimestamp", "verifyProgramDateTimeTags", "getProgramTime", "seekToProgramTime", "seekedCallback", "callbackOnCompleted", "containerRequest", "endRequestAndCallback", "progressListener", "request", "EventTarget", "dashPlaylistUnchanged", "dashGroupId", "parseMasterXml", "removeOldMediaGroupLabels", "updateMaster", "equivalentSidx", "compareSidxEntry", "filterChangedSidxMappings", "DashPlaylistLoader", "fin", "parseSidx", "createMediaUpdateTimeout", "stringToArrayBuffer", "browserWorkerPolyFill", "createObjectURL", "factory", "getWorkerString", "Stream", "getUint64", "box", "dinf", "esds", "ftyp", "hdlr", "mdat", "mdhd", "mdia", "mfhd", "minf", "moof", "moov", "mvex", "mvhd", "sdtp", "stbl", "stsd", "videoSample", "audioSample", "tkhd", "traf", "trak", "trex", "trunHeader", "videoTrun", "audioTrun", "trun", "groupNalsIntoFrames", "groupFramesIntoGops", "extendFirstKeyFrame", "createDefaultSample", "sampleForFrame", "generateSampleTable", "concatenateNalData", "generateSampleTableForFrame", "concatenateNalDataForFrame", "zeroFill", "makeTable", "silence_1", "secondsToVideoTs", "secondsToAudioTs", "videoTsToSeconds", "audioTsToSeconds", "audioTsToVideoTs", "videoTsToAudioTs", "metadataTsToSeconds", "sumFrameByteLengths", "prefixWithSilence", "trimAdtsFramesByEarliestDts", "concatenateFrameData", "collectDtsInfo", "clearDtsInfo", "calculateTrackBaseMediaDecodeTime", "parseSei", "parseUserData", "parseCaptionPackets", "discardEmulationPreventionBytes", "CaptionStream", "get708CharFromCode", "within708TextBlock", "Cea708Window", "Cea708Service", "stream", "win", "Cea708Stream", "getCharFromCode", "createDisplayBuffer", "Cea608Stream", "text", "format", "handleRollover", "TimestampRolloverStream", "percentEncode", "parseUtf8", "parseIso88591", "parseSyncSafeInteger", "d", "parsePat", "parsePmt", "parsePsi", "parsePes", "flushStream", "ExpGolomb", "H264Stream", "skipScalingList", "readSequenceParameterSet", "h264", "parseId3TagSize", "getId3Offset", "isLikelyAacData", "parseAdtsSize", "parseType", "parseSampleRate", "parseAacTimestamp", "utils", "aac", "retriggerForStream", "addPipelineLogRetriggers", "transmuxer", "arrayEquals", "generateSegmentTimingInfo", "gop", "metadataStream", "toUnsigned", "toHexString", "findBox", "tfdt", "parseSampleFlags", "tfhd", "mapToSample", "findSeiNals", "parseSamples", "parseCaptionNals", "parseEmbeddedCaptions", "timescale", "CaptionParser", "captionStream", "result", "startTime", "compositionStartTime", "getVideoTrackIds", "getTimescaleFromMediaHeader", "getTracks", "parsePid", "parsePayloadUnitStartIndicator", "parseAdaptionField", "parsePesType", "parsePesTime", "parseNalUnitType", "videoPacketContainsKeyFrame", "ONE_SECOND_IN_TS", "parsePsi_", "parseAudioPes_", "parseVideoPes_", "adjustTimestamp_", "inspectAac_", "inspectTs_", "inspect", "wireTransmuxerEvents", "MessageHandlers", "timestampOffset", "endTimeline", "handleData_", "handleDone_", "handleGopInfo_", "processTransmux", "handleMessage", "dequeue", "processAction", "enqueueAction", "transmux", "createTransmuxer", "workerCallback", "listenForEndEvent", "abortAll", "getRequestStats", "getProgressStats", "handleErrors", "handleKeyResponse", "parseInitSegment", "handleInitSegmentResponse", "handleSegmentResponse", "transmuxAndNotify", "isMuxed", "finish", "handleSegmentBytes", "finishLoading", "decrypt", "decryptionHandler", "decryptSegment", "waitForCompletion", "segmentFinish", "handleLoadEnd", "handleProgress", "mediaSegmentRequest", "getCodecs", "isMaat", "unwrapCodecList", "codecCount", "codecsForPlaylist", "representationToString", "safeGetComputedStyle", "stableSort", "comparePlaylistBandwidth", "comparePlaylistResolution", "simpleSelector", "lastBandwidthSelector", "movingAverageBandwidthSelector", "minRebufferMaxBandwidthSelector", "lowestBitrateCompatibleVariantSelector", "concatSegments", "createCaptionsTrackIfNotExists", "addCaptionData", "deprecateOldCue", "addMetadata", "createMetadataTrackIfNotExists", "removeCuesFromTrack", "removeDuplicateCuesFromTrack", "gopsSafeToAlignWith", "updateGopBuffer", "removeGopBuffer", "shallowEqual", "getSyncSegmentCandidate", "finite", "illegalMediaSwitch", "safeBackBufferTrimTime", "segmentInfoString", "timingInfoPropertyForMedia", "timestampOffsetForSegment", "shouldWaitForTimelineChange", "mediaDuration", "segmentTooLong", "getTroublesomeSegmentDurationMessage", "SegmentLoader", "abort", "endOfStream", "remove", "done", "removeFinished", "toTitleCase", "nextQueueIndexOfType", "shiftQueue", "cleanupBuffer", "inSourceBuffers", "onError", "pushQueue", "onUpdateend", "SourceUpdater", "addSourceBuffer", "removeSourceBuffer", "changeType", "appendBuffer", "updating", "uint8ToUtf8", "NoVttJsError", "VTTSegmentLoader", "checkTimestampOffset", "findAdCue", "updateAdCues", "run", "z", "SyncController", "TimelineChangeController", "from", "require", "_setPrototypeOf", "o", "_inheritsLoose", "off", "trigger", "precompute", "AES", "b2", "AsyncStream", "ntoh", "Decrypter", "isArrayBufferView", "BigInt", "audioTrackKind_", "stopLoaders", "startLoaders", "onGroupChanged", "activeTrack", "activeGroup", "onGroupChanging", "onTrackChanged", "SUBTITLES", "groupMatch", "getActiveGroup", "mediaTypes", "setupMediaGroups", "onAudioTrackChanged", "createMediaTypes", "sumLoaderStat", "shouldSwitchToMedia", "MasterPlaylistController", "updateCodecs", "excludeUntil", "logFn", "supportFunction", "enableFunction", "Representation", "renditionSelectionMixin", "PlaybackWatcher", "playHandler", "canPlayHandler", "waitingHandler", "cancelTimerHandler", "setSeekingHandlers", "initPlugin", "loadedMetadataHandler", "setSource", "errorHandler", "cleanupEvents", "reinitPlugin", "reloadSourceOnError", "handleVhsMediaChange", "handleVhsLoadedMetadata", "emeKeySystems", "getAllPsshKeySystemsOptions", "waitForKeySessionCreation", "setupEmeOptions", "getVhsLocalStorage", "updateVhsLocalStorage", "expandDataUri", "VhsHandler", "version$5", "supportsNativeMediaSources", "const", "videoProps", "src", "type", "String", "onChange", "player", "width", "Number", "onEvent", "cb", "on", "height", "preload", "loop", "Boolean", "muted", "poster", "controls", "autoplay", "crossorigin", "value", "crossOrigin", "playsinline", "playsInline", "videoJsProps", "id", "sources", "Array", "tracks", "newTracks", "oldTracks", "remoteTextTracks", "index", "length", "removeRemoteTextTrack", "ready", "forEach", "track", "addRemoteTextTrack", "textTrackSettings", "Object", "options", "language", "languages", "playbackRates", "newRates", "audioOnlyMode", "audioPosterMode", "responsive", "breakpoints", "fluid", "fill", "aspectRatio", "ratio", "fullscreen", "liveui", "liveTracker", "disablePictureInPicture", "notSupportedMessage", "normalizeAutoplay", "noUITitleAttributes", "preferFullWindow", "suppressNotSupportedError", "techCanOverridePoster", "reportTouchActivity", "techOrder", "inactivityTimeout", "userActions", "plugins", "restoreEl", "videoJsComponentProps", "children", "controlBar", "videoJsTechProps", "html5", "componentProps", "volume", "playbackRate", "rate", "defaultPlaybackRate", "callback", "propsConfig", "propKeys", "keys", "eventsMap", "assign", "loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange", "posterchange", "languagechange", "fullscreenchange", "playbackrateschange", "controlsdisabled", "controlsenabled", "enterFullWindow", "exitFullWindow", "enterpictureinpicture", "leavepictureinpicture", "sourceset", "texttrackchange", "textdata", "useractive", "userinactive", "usingcustomcontrols", "usingnativecontrols", "dispose", "beforepluginsetup", "pluginsetup", "componentresize", "playerresize", "tap", "events", "values", "standardizeClass", "className", "trimmed", "trim", "replace", "_a", "split", "StateConfig", "getter", "currentSrc", "currentSource", "currentWidth", "currentHeight", "videoWidth", "videoHeight", "paused", "currentTime", "duration", "isFullscreen", "isInPictureInPicture", "isLive", "userActive", "readyState", "networkState", "buffered", "bufferedPercent", "played", "seekable", "audioTracks", "call", "videoTracks", "textTracks", "twoWayPropKeys", "filter", "key", "getPropUpdateEventName", "normalizedEvents", "concat", "map", "normalizedProps", "reduce", "result", "prop", "types", "isArray", "newProp", "includes", "default", "obj", "Component", "defineComponent", "name", "props", "class", "emits", "setup", "context", "toRaw", "initClassName", "rawProps", "__rest", "mounted", "shallowRef", "videoElement", "playerResult", "videoJsPlayer", "computed", "state", "ref", "readOnlyState", "readonly", "onMounted", "playerRes", "n", "element", "fallbackOptions", "optProps", "propOptions", "_b", "initOptions", "videoJsOptions", "videoJs", "e", "eventKey", "this", "payload", "isFinite", "setTimeout", "addClass", "updateOptions", "oldClassName", "newClassName", "removeClass", "emit", "newValue", "watch", "ocn", "normalizeClass", "ncn", "updateClassNames", "immediate", "newOptions", "deep", "updatePropOption", "updateState", "onUpdate", "timeWhenWaiting", "timeUpdateListener", "off", "target", "onInit", "initState", "video", "onBeforeUnmount", "h", "slots", "VideoPlayer", "install", "app", "component"]
}
